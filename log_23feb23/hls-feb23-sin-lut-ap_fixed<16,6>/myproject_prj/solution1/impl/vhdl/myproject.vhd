-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (255 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.339000,HLS_SYN_LAT=8,HLS_SYN_TPT=1,HLS_SYN_MEM=34,HLS_SYN_DSP=74,HLS_SYN_FF=14475,HLS_SYN_LUT=25651,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv26_3FCB400 : STD_LOGIC_VECTOR (25 downto 0) := "11111111001011010000000000";
    constant ap_const_lv26_3E4EC00 : STD_LOGIC_VECTOR (25 downto 0) := "11111001001110110000000000";
    constant ap_const_lv26_3E72000 : STD_LOGIC_VECTOR (25 downto 0) := "11111001110010000000000000";
    constant ap_const_lv26_3EE5C00 : STD_LOGIC_VECTOR (25 downto 0) := "11111011100101110000000000";
    constant ap_const_lv36_D20 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000110100100000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv16_FD36 : STD_LOGIC_VECTOR (15 downto 0) := "1111110100110110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv56_125D : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000001001001011101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv56_9CE : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000100111001110";
    constant ap_const_lv26_C5C00 : STD_LOGIC_VECTOR (25 downto 0) := "00000011000101110000000000";
    constant ap_const_lv16_5E4 : STD_LOGIC_VECTOR (15 downto 0) := "0000010111100100";
    constant ap_const_lv17_1FC53 : STD_LOGIC_VECTOR (16 downto 0) := "11111110001010011";
    constant ap_const_lv13_1A82 : STD_LOGIC_VECTOR (12 downto 0) := "1101010000010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv39_1BC00000 : STD_LOGIC_VECTOR (38 downto 0) := "000000000011011110000000000000000000000";
    constant ap_const_lv17_FA5 : STD_LOGIC_VECTOR (16 downto 0) := "00000111110100101";
    constant ap_const_lv22_3EB400 : STD_LOGIC_VECTOR (21 downto 0) := "1111101011010000000000";
    constant ap_const_lv28_FC48800 : STD_LOGIC_VECTOR (27 downto 0) := "1111110001001000100000000000";
    constant ap_const_lv46_3F0D40000000 : STD_LOGIC_VECTOR (45 downto 0) := "1111110000110101000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv14_E8 : STD_LOGIC_VECTOR (13 downto 0) := "00000011101000";
    constant ap_const_lv50_0 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv56_FC9F0000000000 : STD_LOGIC_VECTOR (55 downto 0) := "11111100100111110000000000000000000000000000000000000000";
    constant ap_const_lv46_3F5800000000 : STD_LOGIC_VECTOR (45 downto 0) := "1111110101100000000000000000000000000000000000";
    constant ap_const_lv46_3F2600000000 : STD_LOGIC_VECTOR (45 downto 0) := "1111110010011000000000000000000000000000000000";
    constant ap_const_lv26_3FFFD81 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110000001";
    constant ap_const_lv26_3BB : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110111011";
    constant ap_const_lv26_100000 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_const_lv27_28D : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001010001101";
    constant ap_const_lv27_100000 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_const_lv26_D20 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000110100100000";
    constant ap_const_lv26_1A40 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001101001000000";
    constant ap_const_lv26_3F7C400 : STD_LOGIC_VECTOR (25 downto 0) := "11111101111100010000000000";
    constant ap_const_lv25_F1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011110001";
    constant ap_const_lv26_3FFFCE2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110011100010";
    constant ap_const_lv26_31E : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100011110";
    constant ap_const_lv24_FDF000 : STD_LOGIC_VECTOR (23 downto 0) := "111111011111000000000000";
    constant ap_const_lv13_1C4D : STD_LOGIC_VECTOR (12 downto 0) := "1110001001101";
    constant ap_const_lv22_137 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100110111";
    constant ap_const_lv27_227 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000100111";
    constant ap_const_lv24_62 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001100010";
    constant ap_const_lv25_1FFFEE6 : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111011100110";
    constant ap_const_lv21_B7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010110111";
    constant ap_const_lv21_1FB400 : STD_LOGIC_VECTOR (20 downto 0) := "111111011010000000000";
    constant ap_const_lv26_234 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000110100";
    constant ap_const_lv23_228 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000101000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (255 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_fu_424_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_1489 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_1489_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_1489_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_1489_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_1489_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_11_fu_434_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_11_reg_1496 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_11_reg_1496_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln728_fu_444_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_reg_1504 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_1_fu_448_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1511 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1511_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1511_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1511_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1511_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1511_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln727_fu_458_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln727_reg_1519 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln_reg_1524 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1529 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1529_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1529_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1529_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1529_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1529_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1535 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1535_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1535_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1535_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1535_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln728_1_fu_499_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1548 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1548_pp0_iter1_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1548_pp0_iter2_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1548_pp0_iter3_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1548_pp0_iter4_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1548_pp0_iter5_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1548_pp0_iter6_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_4_fu_1310_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_4_reg_1554 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_9_fu_1316_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_reg_1560 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1322_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_27_reg_1565 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_1_fu_1330_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_reg_1570 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_5_fu_629_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_5_reg_1575 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_5_reg_1575_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_5_reg_1575_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_5_reg_1575_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1336_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_17_reg_1580 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln708_s_reg_1585 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_14_fu_680_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_14_reg_1590 : STD_LOGIC_VECTOR (50 downto 0);
    signal trunc_ln708_14_reg_1595 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_1600 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_fu_736_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_6_reg_1605 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln708_11_reg_1610 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_13_reg_1615 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_1_fu_1372_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_1_reg_1620 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_5_reg_1625 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_5_reg_1625_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_8_reg_1630 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_2_reg_1635 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_2_reg_1635_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_2_reg_1635_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_s_reg_1640 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_2_reg_1645 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_6_reg_1650 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_28_reg_1655 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_7_reg_1660 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_fu_1385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_reg_1665 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1391_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_3_reg_1671 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1399_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_2_reg_1676 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1407_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_38_reg_1681 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_6_reg_1686 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_6_reg_1686_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_5_fu_1415_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_5_reg_1693 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1421_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_15_reg_1698 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_9_reg_1703 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_1_reg_1708 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_44_fu_896_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_44_reg_1713 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_8_reg_1718 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_7_reg_1723 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln700_fu_938_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln700_reg_1728 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln1192_fu_957_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_reg_1733 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_4_fu_975_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_4_reg_1738 : STD_LOGIC_VECTOR (49 downto 0);
    signal sub_ln1192_1_fu_1007_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal sub_ln1192_1_reg_1743 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1436_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_20_reg_1748 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_24_fu_1049_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_24_reg_1753 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_9_reg_1758 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_23_fu_1455_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_23_reg_1763 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_49_fu_1065_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_49_reg_1768 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln700_1_fu_1077_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal mul_ln700_1_reg_1773 : STD_LOGIC_VECTOR (65 downto 0);
    signal mul_ln1192_3_fu_1089_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal mul_ln1192_3_reg_1778 : STD_LOGIC_VECTOR (55 downto 0);
    signal add_ln1192_17_fu_1121_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1192_17_reg_1783 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_8_reg_1788 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_10_reg_1793 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1474_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_16_reg_1798 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_0_reg_1803 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call96 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call96 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call96 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call96 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call96 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call96 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call96 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call96 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call96 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp28 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call202 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call202 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call202 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call202 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call202 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call202 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call202 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call202 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call202 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp34 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call31 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call31 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call31 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call31 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call31 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call31 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call31 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp38 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call69 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call69 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call69 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call69 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call69 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call69 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call69 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call69 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call69 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp41 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call79 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call79 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call79 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call79 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call79 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call79 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call79 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call79 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call79 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp48 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call115 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call115 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call115 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call115 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call115 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call115 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call115 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call115 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call115 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp52 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call104 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call104 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call104 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call104 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call104 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call104 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call104 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call104 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call104 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp84 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call157 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call157 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call157 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call157 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call157 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call157 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call157 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call157 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call157 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp89 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call169 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call169 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call169 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call169 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call169 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call169 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call169 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call169 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call169 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp90 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call182 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call182 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call182 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call182 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call182 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call182 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call182 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call182 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call182 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp92 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call220 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call220 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call220 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call220 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call220 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call220 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call220 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call220 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call220 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp99 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call49 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call49 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call49 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call49 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call49 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call49 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call49 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call49 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call49 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp101 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call196 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call196 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call196 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call196 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call196 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call196 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call196 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call196 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call196 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp116 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call216 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call216 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call216 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call216 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call216 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call216 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call216 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call216 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call216 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp118 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call147 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call147 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call147 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call147 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call147 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call147 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call147 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call147 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call147 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp130 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call231 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call231 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call231 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call231 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call231 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call231 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call231 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call231 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call231 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp138 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call63 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call63 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call63 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call63 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call63 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call63 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call63 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call63 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call63 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp148 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_1301_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_8_fu_503_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1118_1_fu_513_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_7_fu_521_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_30_fu_542_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal lhs_V_1_fu_462_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_28_fu_548_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal lhs_V_3_fu_571_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_8_fu_578_p2 : STD_LOGIC_VECTOR (25 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1192_8_fu_578_p2 : signal is "no";
    signal rhs_V_1_fu_583_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln1192_fu_590_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_37_fu_596_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_40_fu_613_p2 : STD_LOGIC_VECTOR (25 downto 0);
    attribute use_dsp48 of ret_V_40_fu_613_p2 : signal is "no";
    signal mul_ln700_2_fu_635_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln700_3_fu_1346_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1_fu_641_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln700_2_fu_635_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln728_4_fu_1352_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_5_fu_654_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln700_fu_648_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_43_fu_661_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_14_fu_680_p0 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_6_fu_677_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_14_fu_680_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1358_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_fu_701_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1192_fu_701_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_2_fu_707_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_fu_701_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_33_fu_714_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_6_fu_736_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1116_3_fu_733_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_6_fu_736_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_21_fu_1365_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_24_fu_765_p0 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_24_fu_765_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal r_V_19_fu_787_p0 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_19_fu_787_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal grp_fu_1378_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_35_fu_807_p2 : STD_LOGIC_VECTOR (25 downto 0);
    attribute use_dsp48 of ret_V_35_fu_807_p2 : signal is "no";
    signal lhs_V_fu_828_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_831_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_fu_848_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_fu_851_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_2_fu_873_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_8_fu_880_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_7_fu_870_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_6_fu_864_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_1_fu_908_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln1118_fu_915_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln_fu_901_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln1193_fu_919_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_1_fu_925_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln700_fu_938_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln700_fu_938_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1192_3_fu_947_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_2_fu_944_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_34_fu_951_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_12_fu_963_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 of ret_V_12_fu_963_p2 : signal is "no";
    signal r_V_4_fu_975_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_4_fu_975_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_5_fu_990_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_5_fu_990_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln728_fu_1429_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal lhs_V_4_fu_996_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln1192_10_fu_1003_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1192_5_fu_990_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal lhs_V_6_fu_1022_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_9_fu_1033_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_17_fu_1040_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1446_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_46_fu_1044_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of ret_V_46_fu_1044_p2 : signal is "no";
    signal sext_ln703_4_fu_1058_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_5_fu_1062_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln700_1_fu_1077_p0 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln700_1_fu_1077_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1192_3_fu_1089_p0 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln1192_3_fu_1089_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_1_fu_1461_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_2_fu_1095_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln728_2_fu_1467_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_1110_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal rhs_V_3_fu_1117_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1192_16_fu_1102_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1192_7_fu_1133_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_7_fu_1133_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1192_7_fu_1133_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ret_V_47_fu_1139_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln1253_fu_1155_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_22_fu_1158_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_11_fu_1167_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln703_6_fu_1179_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_30_fu_1182_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_4_fu_1192_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal rhs_V_fu_1200_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal ret_V_36_fu_1204_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal ret_V_39_fu_1220_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal mul_ln728_3_fu_1482_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_10_fu_1239_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal rhs_V_4_fu_1246_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1192_19_fu_1250_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ret_V_42_fu_1255_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1192_9_fu_1278_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln1192_9_fu_1278_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_9_fu_1278_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ret_V_50_fu_1284_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1301_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1192_4_fu_1310_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_4_fu_1310_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_9_fu_1316_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_8_fu_538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_1316_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1322_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1322_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_1_fu_1330_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_fu_1330_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1336_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1336_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln700_3_fu_1346_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln700_3_fu_1346_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_4_fu_1352_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_4_fu_1352_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1358_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1358_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1358_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_21_fu_1365_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1192_1_fu_1372_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1378_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1378_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1391_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_fu_845_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1391_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1391_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1399_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1407_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1407_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_5_fu_1415_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1421_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1421_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln728_fu_1429_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1436_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1436_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1446_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_12_fu_1013_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1446_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_23_fu_1455_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_5_fu_1055_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_23_fu_1455_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_1_fu_1461_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_1_fu_1461_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_2_fu_1467_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_3_fu_1482_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sin_lut_ap_fixed_16_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mac_muladd_16s_11s_26ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mac_muladd_16s_11ns_22ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_ama_submuladd_16s_16s_11ns_22ns_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_mul_mul_16s_13ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_14ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_16s_16s_21s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_9ns_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mul_mul_16s_11s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_16s_11ns_26s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_17s_17s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mac_muladd_12s_12s_19s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_am_addmul_12s_11s_13s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_12s_10ns_22ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_16s_11ns_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_am_addmul_12s_16s_8ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_16s_10s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_ama_addmuladd_12s_12s_9ns_16s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mac_muladd_12s_12s_27s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_mul_12s_12s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_16s_11ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_12s_11ns_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_am_addmul_23s_24s_14s_39_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (22 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;



begin
    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_ce,
        input_V => trunc_ln_reg_1524,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_ce,
        input_V => p_Val2_s_reg_1489,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_ce,
        input_V => p_Val2_1_reg_1511_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_ce,
        input_V => trunc_ln708_s_reg_1585,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_ce,
        input_V => trunc_ln708_14_reg_1595,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_ce,
        input_V => trunc_ln708_1_reg_1600,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_ce,
        input_V => trunc_ln708_13_reg_1615,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_ce,
        input_V => trunc_ln708_8_reg_1630,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_ce,
        input_V => trunc_ln708_2_reg_1645,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_return);

    myproject_mac_muladd_16s_11s_26ns_26_1_1_U11 : component myproject_mac_muladd_16s_11s_26ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_11_fu_434_p4,
        din1 => grp_fu_1301_p1,
        din2 => lhs_V_1_fu_462_p3,
        dout => grp_fu_1301_p3);

    myproject_mul_mul_16s_16s_26_1_1_U12 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1192_4_fu_1310_p0,
        din1 => mul_ln1192_4_fu_1310_p1,
        dout => mul_ln1192_4_fu_1310_p2);

    myproject_mul_mul_16s_16s_32_1_1_U13 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_9_fu_1316_p0,
        din1 => r_V_9_fu_1316_p1,
        dout => r_V_9_fu_1316_p2);

    myproject_mac_muladd_16s_11ns_22ns_26_1_1_U14 : component myproject_mac_muladd_16s_11ns_22ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        din2_WIDTH => 22,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_1_fu_448_p4,
        din1 => grp_fu_1322_p1,
        din2 => grp_fu_1322_p2,
        dout => grp_fu_1322_p3);

    myproject_mul_mul_16s_16s_32_1_1_U15 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_1_fu_1330_p0,
        din1 => r_V_1_fu_1330_p1,
        dout => r_V_1_fu_1330_p2);

    myproject_ama_submuladd_16s_16s_11ns_22ns_27_1_1_U16 : component myproject_ama_submuladd_16s_16s_11ns_22ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 11,
        din3_WIDTH => 22,
        dout_WIDTH => 27)
    port map (
        din0 => p_Val2_1_reg_1511,
        din1 => p_Val2_11_reg_1496,
        din2 => grp_fu_1336_p2,
        din3 => grp_fu_1336_p3,
        dout => grp_fu_1336_p4);

    myproject_mul_mul_16s_13ns_26_1_1_U17 : component myproject_mul_mul_16s_13ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln700_3_fu_1346_p0,
        din1 => mul_ln700_3_fu_1346_p1,
        dout => mul_ln700_3_fu_1346_p2);

    myproject_mul_mul_16s_14ns_26_1_1_U18 : component myproject_mul_mul_16s_14ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln728_4_fu_1352_p0,
        din1 => mul_ln728_4_fu_1352_p1,
        dout => mul_ln728_4_fu_1352_p2);

    myproject_mac_muladd_16s_16s_21s_26_1_1_U19 : component myproject_mac_muladd_16s_16s_21s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1358_p0,
        din1 => grp_fu_1358_p1,
        din2 => grp_fu_1358_p2,
        dout => grp_fu_1358_p3);

    myproject_mul_mul_16s_9ns_25_1_1_U20 : component myproject_mul_mul_16s_9ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        din0 => p_Val2_3_reg_1535_pp0_iter1_reg,
        din1 => r_V_21_fu_1365_p1,
        dout => r_V_21_fu_1365_p2);

    myproject_mul_mul_16s_11s_26_1_1_U21 : component myproject_mul_mul_16s_11s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_3_reg_1535_pp0_iter2_reg,
        din1 => mul_ln1192_1_fu_1372_p1,
        dout => mul_ln1192_1_fu_1372_p2);

    myproject_mac_muladd_16s_11ns_26s_26_1_1_U22 : component myproject_mac_muladd_16s_11ns_26s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1378_p0,
        din1 => grp_fu_1378_p1,
        din2 => mul_ln1192_1_reg_1620,
        dout => grp_fu_1378_p3);

    myproject_mul_mul_17s_17s_32_1_1_U23 : component myproject_mul_mul_17s_17s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        dout_WIDTH => 32)
    port map (
        din0 => ret_V_fu_831_p2,
        din1 => ret_V_fu_831_p2,
        dout => mul_ln1118_fu_1385_p2);

    myproject_mac_muladd_12s_12s_19s_24_1_1_U24 : component myproject_mac_muladd_12s_12s_19s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 19,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_1391_p0,
        din1 => grp_fu_1391_p1,
        din2 => grp_fu_1391_p2,
        dout => grp_fu_1391_p3);

    myproject_am_addmul_12s_11s_13s_26_1_1_U25 : component myproject_am_addmul_12s_11s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 11,
        din2_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_s_28_reg_1655,
        din1 => grp_fu_1399_p1,
        din2 => ret_V_8_fu_851_p2,
        dout => grp_fu_1399_p3);

    myproject_mac_muladd_12s_10ns_22ns_22_1_1_U26 : component myproject_mac_muladd_12s_10ns_22ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => p_5_reg_1625_pp0_iter4_reg,
        din1 => grp_fu_1407_p1,
        din2 => grp_fu_1407_p2,
        dout => grp_fu_1407_p3);

    myproject_mul_mul_16s_11ns_27_1_1_U27 : component myproject_mul_mul_16s_11ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 27)
    port map (
        din0 => p_Val2_3_reg_1535_pp0_iter4_reg,
        din1 => r_V_5_fu_1415_p1,
        dout => r_V_5_fu_1415_p2);

    myproject_am_addmul_12s_16s_8ns_24_1_1_U28 : component myproject_am_addmul_12s_16s_8ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 16,
        din2_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => p_7_reg_1660,
        din1 => grp_fu_1421_p1,
        din2 => grp_fu_1421_p2,
        dout => grp_fu_1421_p3);

    myproject_mul_mul_16s_10s_25_1_1_U29 : component myproject_mul_mul_16s_10s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 25)
    port map (
        din0 => p_Val2_1_reg_1511_pp0_iter5_reg,
        din1 => mul_ln728_fu_1429_p1,
        dout => mul_ln728_fu_1429_p2);

    myproject_ama_addmuladd_12s_12s_9ns_16s_21_1_1_U30 : component myproject_ama_addmuladd_12s_12s_9ns_16s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 9,
        din3_WIDTH => 16,
        dout_WIDTH => 21)
    port map (
        din0 => p_1_reg_1708,
        din1 => p_9_reg_1703,
        din2 => grp_fu_1436_p2,
        din3 => grp_fu_1436_p3,
        dout => grp_fu_1436_p4);

    myproject_mac_muladd_12s_12s_27s_28_1_1_U31 : component myproject_mac_muladd_12s_12s_27s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 27,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_1446_p0,
        din1 => grp_fu_1446_p1,
        din2 => lhs_V_6_fu_1022_p3,
        dout => grp_fu_1446_p3);

    myproject_mul_mul_12s_12s_24_1_1_U32 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_23_fu_1455_p0,
        din1 => r_V_23_fu_1455_p1,
        dout => r_V_23_fu_1455_p2);

    myproject_mul_mul_16s_11ns_26_1_1_U33 : component myproject_mul_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln728_1_fu_1461_p0,
        din1 => mul_ln728_1_fu_1461_p1,
        dout => mul_ln728_1_fu_1461_p2);

    myproject_mul_mul_12s_11ns_23_1_1_U34 : component myproject_mul_mul_12s_11ns_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 11,
        dout_WIDTH => 23)
    port map (
        din0 => p_6_reg_1686_pp0_iter6_reg,
        din1 => mul_ln728_2_fu_1467_p1,
        dout => mul_ln728_2_fu_1467_p2);

    myproject_am_addmul_23s_24s_14s_39_1_1_U35 : component myproject_am_addmul_23s_24s_14s_39_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 23,
        din1_WIDTH => 24,
        din2_WIDTH => 14,
        dout_WIDTH => 39)
    port map (
        din0 => tmp_11_fu_1167_p3,
        din1 => r_V_23_reg_1763,
        din2 => ret_V_30_fu_1182_p2,
        dout => grp_fu_1474_p3);

    myproject_mul_mul_12s_11ns_23_1_1_U36 : component myproject_mul_mul_12s_11ns_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 11,
        dout_WIDTH => 23)
    port map (
        din0 => p_8_reg_1788,
        din1 => mul_ln728_3_fu_1482_p1,
        dout => mul_ln728_3_fu_1482_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv256_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_17_reg_1783 <= add_ln1192_17_fu_1121_p2;
                add_ln1192_reg_1733 <= add_ln1192_fu_957_p2;
                lhs_V_5_reg_1575_pp0_iter2_reg <= lhs_V_5_reg_1575;
                lhs_V_5_reg_1575_pp0_iter3_reg <= lhs_V_5_reg_1575_pp0_iter2_reg;
                lhs_V_5_reg_1575_pp0_iter4_reg <= lhs_V_5_reg_1575_pp0_iter3_reg;
                mul_ln1118_reg_1665 <= mul_ln1118_fu_1385_p2;
                mul_ln1192_1_reg_1620 <= mul_ln1192_1_fu_1372_p2;
                mul_ln1192_3_reg_1778 <= mul_ln1192_3_fu_1089_p2;
                mul_ln700_1_reg_1773 <= mul_ln700_1_fu_1077_p2;
                mul_ln700_reg_1728 <= mul_ln700_fu_938_p2;
                p_0_reg_1803 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_return;
                p_1_reg_1708 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_return;
                p_2_reg_1635 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_return;
                p_2_reg_1635_pp0_iter4_reg <= p_2_reg_1635;
                p_2_reg_1635_pp0_iter5_reg <= p_2_reg_1635_pp0_iter4_reg;
                p_5_reg_1625 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_return;
                p_5_reg_1625_pp0_iter4_reg <= p_5_reg_1625;
                p_6_reg_1686 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_return;
                p_6_reg_1686_pp0_iter6_reg <= p_6_reg_1686;
                p_7_reg_1660 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_return;
                p_8_reg_1788 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_return;
                p_9_reg_1703 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_return;
                p_Val2_1_reg_1511_pp0_iter2_reg <= p_Val2_1_reg_1511_pp0_iter1_reg;
                p_Val2_1_reg_1511_pp0_iter3_reg <= p_Val2_1_reg_1511_pp0_iter2_reg;
                p_Val2_1_reg_1511_pp0_iter4_reg <= p_Val2_1_reg_1511_pp0_iter3_reg;
                p_Val2_1_reg_1511_pp0_iter5_reg <= p_Val2_1_reg_1511_pp0_iter4_reg;
                p_Val2_2_reg_1529_pp0_iter2_reg <= p_Val2_2_reg_1529_pp0_iter1_reg;
                p_Val2_2_reg_1529_pp0_iter3_reg <= p_Val2_2_reg_1529_pp0_iter2_reg;
                p_Val2_2_reg_1529_pp0_iter4_reg <= p_Val2_2_reg_1529_pp0_iter3_reg;
                p_Val2_2_reg_1529_pp0_iter5_reg <= p_Val2_2_reg_1529_pp0_iter4_reg;
                p_Val2_3_reg_1535_pp0_iter2_reg <= p_Val2_3_reg_1535_pp0_iter1_reg;
                p_Val2_3_reg_1535_pp0_iter3_reg <= p_Val2_3_reg_1535_pp0_iter2_reg;
                p_Val2_3_reg_1535_pp0_iter4_reg <= p_Val2_3_reg_1535_pp0_iter3_reg;
                p_Val2_6_reg_1650 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_return;
                p_Val2_7_reg_1723 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_return;
                p_Val2_8_reg_1718 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_return;
                p_Val2_9_reg_1758 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_return;
                p_Val2_s_28_reg_1655 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_return;
                p_Val2_s_reg_1489_pp0_iter2_reg <= p_Val2_s_reg_1489_pp0_iter1_reg;
                p_Val2_s_reg_1489_pp0_iter3_reg <= p_Val2_s_reg_1489_pp0_iter2_reg;
                p_Val2_s_reg_1489_pp0_iter4_reg <= p_Val2_s_reg_1489_pp0_iter3_reg;
                p_s_reg_1640 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_return;
                r_V_23_reg_1763 <= r_V_23_fu_1455_p2;
                r_V_4_reg_1738 <= r_V_4_fu_975_p2;
                r_V_5_reg_1693 <= r_V_5_fu_1415_p2;
                r_V_6_reg_1605 <= r_V_6_fu_736_p2;
                ret_V_24_reg_1753 <= ret_V_24_fu_1049_p2;
                ret_V_44_reg_1713 <= ret_V_44_fu_896_p2;
                ret_V_49_reg_1768 <= ret_V_49_fu_1065_p2;
                sext_ln728_1_reg_1548_pp0_iter2_reg <= sext_ln728_1_reg_1548_pp0_iter1_reg;
                sext_ln728_1_reg_1548_pp0_iter3_reg <= sext_ln728_1_reg_1548_pp0_iter2_reg;
                sext_ln728_1_reg_1548_pp0_iter4_reg <= sext_ln728_1_reg_1548_pp0_iter3_reg;
                sext_ln728_1_reg_1548_pp0_iter5_reg <= sext_ln728_1_reg_1548_pp0_iter4_reg;
                sext_ln728_1_reg_1548_pp0_iter6_reg <= sext_ln728_1_reg_1548_pp0_iter5_reg;
                sub_ln1192_1_reg_1743 <= sub_ln1192_1_fu_1007_p2;
                trunc_ln708_10_reg_1793 <= ret_V_47_fu_1139_p2(45 downto 30);
                trunc_ln708_11_reg_1610 <= r_V_21_fu_1365_p2(24 downto 10);
                trunc_ln708_13_reg_1615 <= r_V_24_fu_765_p2(55 downto 40);
                trunc_ln708_1_reg_1600 <= ret_V_33_fu_714_p2(35 downto 20);
                trunc_ln708_2_reg_1645 <= ret_V_35_fu_807_p2(25 downto 10);
                trunc_ln708_8_reg_1630 <= r_V_19_fu_787_p2(55 downto 40);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lhs_V_5_reg_1575 <= lhs_V_5_fu_629_p1;
                mul_ln1192_4_reg_1554 <= mul_ln1192_4_fu_1310_p2;
                p_Val2_11_reg_1496 <= x_V_in_sig(63 downto 48);
                p_Val2_11_reg_1496_pp0_iter1_reg <= p_Val2_11_reg_1496;
                p_Val2_1_reg_1511 <= x_V_in_sig(239 downto 224);
                p_Val2_1_reg_1511_pp0_iter1_reg <= p_Val2_1_reg_1511;
                p_Val2_2_reg_1529 <= x_V_in_sig(79 downto 64);
                p_Val2_2_reg_1529_pp0_iter1_reg <= p_Val2_2_reg_1529;
                p_Val2_3_reg_1535 <= x_V_in_sig(255 downto 240);
                p_Val2_3_reg_1535_pp0_iter1_reg <= p_Val2_3_reg_1535;
                p_Val2_s_reg_1489 <= x_V_in_sig(47 downto 32);
                p_Val2_s_reg_1489_pp0_iter1_reg <= p_Val2_s_reg_1489;
                r_V_14_reg_1590 <= r_V_14_fu_680_p2;
                r_V_1_reg_1570 <= r_V_1_fu_1330_p2;
                r_V_9_reg_1560 <= r_V_9_fu_1316_p2;
                sext_ln727_reg_1519 <= sext_ln727_fu_458_p1;
                sext_ln728_1_reg_1548 <= sext_ln728_1_fu_499_p1;
                sext_ln728_1_reg_1548_pp0_iter1_reg <= sext_ln728_1_reg_1548;
                sext_ln728_reg_1504 <= sext_ln728_fu_444_p1;
                trunc_ln708_14_reg_1595 <= grp_fu_1358_p3(25 downto 10);
                trunc_ln708_s_reg_1585 <= ret_V_43_fu_661_p2(35 downto 20);
                trunc_ln_reg_1524 <= grp_fu_1301_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                r_V_16_reg_1798 <= grp_fu_1474_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                r_V_2_reg_1676 <= grp_fu_1399_p3;
                ret_V_15_reg_1698 <= grp_fu_1421_p3;
                ret_V_38_reg_1681 <= grp_fu_1407_p3;
                ret_V_3_reg_1671 <= grp_fu_1391_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_17_reg_1580 <= grp_fu_1336_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ret_V_20_reg_1748 <= grp_fu_1436_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_27_reg_1565 <= grp_fu_1322_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_16_fu_1102_p2 <= std_logic_vector(unsigned(rhs_V_2_fu_1095_p3) + unsigned(sub_ln1192_1_reg_1743));
    add_ln1192_17_fu_1121_p2 <= std_logic_vector(signed(rhs_V_3_fu_1117_p1) + signed(add_ln1192_16_fu_1102_p2));
    add_ln1192_19_fu_1250_p2 <= std_logic_vector(signed(rhs_V_4_fu_1246_p1) + signed(add_ln1192_17_reg_1783));
    add_ln1192_28_fu_548_p2 <= std_logic_vector(unsigned(add_ln1192_30_fu_542_p2) + unsigned(lhs_V_1_fu_462_p3));
    add_ln1192_30_fu_542_p2 <= std_logic_vector(unsigned(trunc_ln1118_1_fu_513_p3) + unsigned(ap_const_lv26_3E4EC00));
    add_ln1192_7_fu_521_p2 <= std_logic_vector(unsigned(trunc_ln1118_1_fu_513_p3) + unsigned(ap_const_lv26_3FCB400));
    add_ln1192_8_fu_578_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_571_p3) + unsigned(mul_ln1192_4_reg_1554));
    add_ln1192_fu_957_p2 <= std_logic_vector(unsigned(ret_V_34_fu_951_p2) + unsigned(ap_const_lv17_FA5));
    add_ln700_fu_648_p2 <= std_logic_vector(unsigned(shl_ln1_fu_641_p3) + unsigned(mul_ln700_2_fu_635_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp101_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp101 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp116_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp116 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp118_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp118 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp130_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp130 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp138_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp138 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp148_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp148 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp28_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp28 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp34_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp34 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp38_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp38 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp41_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp41 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp48_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp48 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp52_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp52 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp84_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp84 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp89_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp89 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp90_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp90 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp92_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp92 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp99_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp99 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call104_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call104 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call115_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call115 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call147_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call147 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call157_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call157 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call169_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call169 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call182_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call182 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call196_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call196 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call202_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call202 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call216_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call216 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call220_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call220 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call231_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call231 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call31_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call31 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call49_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call49 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call63_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call63 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call69_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call69 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call79_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call79 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call96_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call96 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call147 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call220 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call147 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call220 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call147 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call220 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call147 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call220 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call147 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call220 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call147 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call220 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call147 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call220 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call147 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call220 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to7)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to7 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1301_p1 <= ap_const_lv26_3FFFD81(11 - 1 downto 0);
    grp_fu_1322_p1 <= ap_const_lv26_3BB(11 - 1 downto 0);
    grp_fu_1322_p2 <= ap_const_lv26_100000(22 - 1 downto 0);
    grp_fu_1336_p2 <= ap_const_lv27_28D(11 - 1 downto 0);
    grp_fu_1336_p3 <= ap_const_lv27_100000(22 - 1 downto 0);
    grp_fu_1358_p0 <= sext_ln728_reg_1504(16 - 1 downto 0);
    grp_fu_1358_p1 <= sext_ln728_reg_1504(16 - 1 downto 0);
    grp_fu_1358_p2 <= ap_const_lv26_3F7C400(21 - 1 downto 0);
    grp_fu_1378_p0 <= sext_ln728_1_reg_1548_pp0_iter3_reg(16 - 1 downto 0);
    grp_fu_1378_p1 <= ap_const_lv26_31E(11 - 1 downto 0);
    grp_fu_1391_p0 <= sext_ln1116_fu_845_p1(12 - 1 downto 0);
    grp_fu_1391_p1 <= sext_ln1116_fu_845_p1(12 - 1 downto 0);
    grp_fu_1391_p2 <= ap_const_lv24_FDF000(19 - 1 downto 0);
    grp_fu_1399_p1 <= ap_const_lv13_1C4D(11 - 1 downto 0);
    grp_fu_1407_p1 <= ap_const_lv22_137(10 - 1 downto 0);
    grp_fu_1407_p2 <= std_logic_vector(signed(sext_ln1118_8_fu_880_p1) + signed(sext_ln1118_7_fu_870_p1));
    grp_fu_1421_p1 <= rhs_V_6_fu_864_p1(16 - 1 downto 0);
    grp_fu_1421_p2 <= ap_const_lv24_62(8 - 1 downto 0);
    grp_fu_1436_p2 <= ap_const_lv21_B7(9 - 1 downto 0);
    grp_fu_1436_p3 <= ap_const_lv21_1FB400(16 - 1 downto 0);
    grp_fu_1446_p0 <= sext_ln1118_12_fu_1013_p1(12 - 1 downto 0);
    grp_fu_1446_p1 <= sext_ln1118_12_fu_1013_p1(12 - 1 downto 0);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp28) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_271_input_V <= add_ln1192_7_fu_521_p2(25 downto 10);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp34)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_280_input_V <= add_ln1192_28_fu_548_p2(25 downto 10);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp38) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_289_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp41)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp41) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_298_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp48)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp48) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_ap_start_reg;
    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_307_input_V <= ret_V_37_fu_596_p2(25 downto 10);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp52)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp52) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_ap_start_reg;
    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_316_input_V <= ret_V_40_fu_613_p2(25 downto 10);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp84)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp84) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_325_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp89)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp89) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_ap_start_reg;
    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_334_input_V <= std_logic_vector(signed(p_Val2_11_reg_1496_pp0_iter1_reg) + signed(ap_const_lv16_FD36));

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp90)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp90) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_343_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp92)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp92) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_ap_start_reg;
    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_352_input_V <= std_logic_vector(signed(p_Val2_11_reg_1496_pp0_iter1_reg) + signed(p_Val2_3_reg_1535_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp99)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp99) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_361_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp101) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp116)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp116) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_ap_start_reg;
        grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_379_input_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_11_reg_1610),16));


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp118) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp130)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp130) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_397_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp138)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp138) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_ap_start_reg;
    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_406_input_V <= std_logic_vector(signed(p_Val2_1_reg_1511_pp0_iter3_reg) + signed(ap_const_lv16_5E4));

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp148)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp148) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_start_reg;
    lhs_V_1_fu_462_p3 <= (p_Val2_1_fu_448_p4 & ap_const_lv10_0);
    lhs_V_2_fu_707_p3 <= (p_Val2_3_reg_1535_pp0_iter1_reg & ap_const_lv20_0);
    lhs_V_3_fu_571_p3 <= (p_Val2_3_reg_1535 & ap_const_lv10_0);
    lhs_V_4_fu_996_p3 <= (mul_ln728_fu_1429_p2 & ap_const_lv20_0);
        lhs_V_5_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1511),17));

    lhs_V_6_fu_1022_p3 <= (ret_V_44_reg_1713 & ap_const_lv10_0);
        lhs_V_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1489_pp0_iter4_reg),17));

    mul_ln1192_1_fu_1372_p1 <= ap_const_lv26_3FFFCE2(11 - 1 downto 0);
    mul_ln1192_3_fu_1089_p0 <= r_V_4_reg_1738(48 - 1 downto 0);
    mul_ln1192_3_fu_1089_p1 <= p_6_reg_1686_pp0_iter6_reg;
    mul_ln1192_3_fu_1089_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_3_fu_1089_p0) * signed(mul_ln1192_3_fu_1089_p1))), 56));
    mul_ln1192_4_fu_1310_p0 <= sext_ln728_1_fu_499_p1(16 - 1 downto 0);
    mul_ln1192_4_fu_1310_p1 <= sext_ln728_1_fu_499_p1(16 - 1 downto 0);
    mul_ln1192_5_fu_990_p0 <= ret_V_15_reg_1698;
    mul_ln1192_5_fu_990_p1 <= r_V_5_reg_1693;
    mul_ln1192_5_fu_990_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_5_fu_990_p0) * signed(mul_ln1192_5_fu_990_p1))), 46));
    mul_ln1192_7_fu_1133_p0 <= ret_V_24_reg_1753;
    mul_ln1192_7_fu_1133_p1 <= ret_V_20_reg_1748;
    mul_ln1192_7_fu_1133_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_7_fu_1133_p0) * signed(mul_ln1192_7_fu_1133_p1))), 46));
    mul_ln1192_9_fu_1278_p0 <= r_V_16_reg_1798;
    mul_ln1192_9_fu_1278_p1 <= p_0_reg_1803;
    mul_ln1192_9_fu_1278_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_9_fu_1278_p0) * signed(mul_ln1192_9_fu_1278_p1))), 46));
    mul_ln1192_fu_701_p0 <= r_V_1_reg_1570;
    mul_ln1192_fu_701_p1 <= p_Val2_s_reg_1489_pp0_iter1_reg;
    mul_ln1192_fu_701_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_701_p0) * signed(mul_ln1192_fu_701_p1))), 36));
    mul_ln700_1_fu_1077_p0 <= mul_ln700_reg_1728;
    mul_ln700_1_fu_1077_p1 <= add_ln1192_reg_1733;
    mul_ln700_1_fu_1077_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_1077_p0) * signed(mul_ln700_1_fu_1077_p1))), 66));
    mul_ln700_2_fu_635_p0 <= r_V_9_reg_1560;
    mul_ln700_2_fu_635_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_2_fu_635_p0) * signed('0' &ap_const_lv36_D20))), 36));
    mul_ln700_3_fu_1346_p0 <= sext_ln727_reg_1519(16 - 1 downto 0);
    mul_ln700_3_fu_1346_p1 <= ap_const_lv26_D20(13 - 1 downto 0);
    mul_ln700_fu_938_p0 <= ret_V_1_fu_925_p2;
    mul_ln700_fu_938_p1 <= ret_V_3_reg_1671;
    mul_ln700_fu_938_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_fu_938_p0) * signed(mul_ln700_fu_938_p1))), 62));
    mul_ln728_1_fu_1461_p0 <= sext_ln728_1_reg_1548_pp0_iter6_reg(16 - 1 downto 0);
    mul_ln728_1_fu_1461_p1 <= ap_const_lv26_234(11 - 1 downto 0);
    mul_ln728_2_fu_1467_p1 <= ap_const_lv23_228(11 - 1 downto 0);
    mul_ln728_3_fu_1482_p1 <= ap_const_lv23_228(11 - 1 downto 0);
    mul_ln728_4_fu_1352_p0 <= sext_ln728_reg_1504(16 - 1 downto 0);
    mul_ln728_4_fu_1352_p1 <= ap_const_lv26_1A40(14 - 1 downto 0);
    mul_ln728_fu_1429_p1 <= ap_const_lv25_1FFFEE6(10 - 1 downto 0);
    p_Val2_11_fu_434_p4 <= x_V_in_sig(63 downto 48);
    p_Val2_1_fu_448_p4 <= x_V_in_sig(239 downto 224);
    p_Val2_s_fu_424_p4 <= x_V_in_sig(47 downto 32);
    r_V_14_fu_680_p0 <= sext_ln1116_6_fu_677_p1(26 - 1 downto 0);
    r_V_14_fu_680_p1 <= sext_ln1116_6_fu_677_p1(26 - 1 downto 0);
    r_V_14_fu_680_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_14_fu_680_p0) * signed(r_V_14_fu_680_p1))), 51));
    r_V_19_fu_787_p0 <= r_V_6_reg_1605;
    r_V_19_fu_787_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_19_fu_787_p0) * signed('0' &ap_const_lv56_9CE))), 56));
    r_V_1_fu_1330_p0 <= r_V_fu_568_p1(16 - 1 downto 0);
    r_V_1_fu_1330_p1 <= r_V_fu_568_p1(16 - 1 downto 0);
    r_V_21_fu_1365_p1 <= ap_const_lv25_F1(9 - 1 downto 0);
    r_V_22_fu_1158_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1253_fu_1155_p1));
    r_V_23_fu_1455_p0 <= sext_ln1116_5_fu_1055_p1(12 - 1 downto 0);
    r_V_23_fu_1455_p1 <= sext_ln1116_5_fu_1055_p1(12 - 1 downto 0);
    r_V_24_fu_765_p0 <= r_V_14_reg_1590;
    r_V_24_fu_765_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_24_fu_765_p0) * signed('0' &ap_const_lv56_125D))), 56));
    r_V_4_fu_975_p0 <= ret_V_12_fu_963_p2;
    r_V_4_fu_975_p1 <= r_V_2_reg_1676;
    r_V_4_fu_975_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(std_logic_vector(signed(r_V_4_fu_975_p0) * signed(r_V_4_fu_975_p1))), 50));
    r_V_5_fu_1415_p1 <= ap_const_lv27_227(11 - 1 downto 0);
    r_V_6_fu_736_p0 <= sext_ln1116_3_fu_733_p1(27 - 1 downto 0);
    r_V_6_fu_736_p1 <= sext_ln1116_3_fu_733_p1(27 - 1 downto 0);
    r_V_6_fu_736_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_fu_736_p0) * signed(r_V_6_fu_736_p1))), 52));
        r_V_8_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_448_p4),32));

    r_V_9_fu_1316_p0 <= r_V_8_fu_538_p1(16 - 1 downto 0);
    r_V_9_fu_1316_p1 <= r_V_8_fu_538_p1(16 - 1 downto 0);
        r_V_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1529),32));

    ret_V_12_fu_963_p2 <= std_logic_vector(signed(ret_V_38_reg_1681) + signed(ap_const_lv22_3EB400));
    ret_V_1_fu_925_p2 <= std_logic_vector(unsigned(sub_ln1193_fu_919_p2) + unsigned(ap_const_lv39_1BC00000));
    ret_V_24_fu_1049_p2 <= std_logic_vector(unsigned(ret_V_46_fu_1044_p2) + unsigned(ap_const_lv28_FC48800));
    ret_V_30_fu_1182_p2 <= std_logic_vector(signed(sext_ln703_6_fu_1179_p1) + signed(ap_const_lv14_E8));
    ret_V_33_fu_714_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_707_p3) + unsigned(mul_ln1192_fu_701_p2));
    ret_V_34_fu_951_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_947_p1) - signed(sext_ln1192_2_fu_944_p1));
    ret_V_35_fu_807_p2 <= std_logic_vector(signed(grp_fu_1378_p3) + signed(ap_const_lv26_C5C00));
    ret_V_36_fu_1204_p2 <= std_logic_vector(unsigned(mul_ln700_1_reg_1773) - unsigned(rhs_V_fu_1200_p1));
    ret_V_37_fu_596_p2 <= std_logic_vector(unsigned(sub_ln1192_fu_590_p2) + unsigned(ap_const_lv26_3E72000));
    ret_V_39_fu_1220_p2 <= std_logic_vector(unsigned(mul_ln1192_3_reg_1778) + unsigned(ap_const_lv56_FC9F0000000000));
    ret_V_40_fu_613_p2 <= std_logic_vector(signed(mul_ln1192_4_reg_1554) + signed(ap_const_lv26_3EE5C00));
    ret_V_42_fu_1255_p2 <= std_logic_vector(unsigned(add_ln1192_19_fu_1250_p2) + unsigned(ap_const_lv46_3F5800000000));
    ret_V_43_fu_661_p2 <= std_logic_vector(unsigned(rhs_V_5_fu_654_p3) + unsigned(add_ln700_fu_648_p2));
    ret_V_44_fu_896_p2 <= std_logic_vector(signed(rhs_V_6_fu_864_p1) + signed(lhs_V_5_reg_1575_pp0_iter4_reg));
    ret_V_46_fu_1044_p2 <= std_logic_vector(signed(sext_ln1192_17_fu_1040_p1) + signed(grp_fu_1446_p3));
    ret_V_47_fu_1139_p2 <= std_logic_vector(unsigned(mul_ln1192_7_fu_1133_p2) + unsigned(ap_const_lv46_3F0D40000000));
    ret_V_49_fu_1065_p2 <= std_logic_vector(signed(sext_ln703_4_fu_1058_p1) - signed(sext_ln703_5_fu_1062_p1));
    ret_V_50_fu_1284_p2 <= std_logic_vector(unsigned(mul_ln1192_9_fu_1278_p2) + unsigned(ap_const_lv46_3F2600000000));
    ret_V_8_fu_851_p2 <= std_logic_vector(signed(sext_ln703_fu_848_p1) + signed(ap_const_lv13_1A82));
    ret_V_fu_831_p2 <= std_logic_vector(signed(lhs_V_fu_828_p1) + signed(ap_const_lv17_1FC53));
    rhs_V_1_fu_583_p3 <= (p_Val2_11_reg_1496 & ap_const_lv10_0);
    rhs_V_2_fu_1095_p3 <= (mul_ln728_1_fu_1461_p2 & ap_const_lv20_0);
        rhs_V_3_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1110_p3),46));

        rhs_V_4_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_1239_p3),46));

    rhs_V_5_fu_654_p3 <= (mul_ln728_4_fu_1352_p2 & ap_const_lv10_0);
        rhs_V_6_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1535_pp0_iter4_reg),17));

        rhs_V_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_1192_p3),66));

        sext_ln1116_3_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_17_reg_1580),52));

        sext_ln1116_5_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1635_pp0_iter5_reg),24));

        sext_ln1116_6_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_27_reg_1565),51));

        sext_ln1116_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_s_reg_1640),24));

        sext_ln1118_12_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1686),24));

        sext_ln1118_7_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1535_pp0_iter4_reg),22));

        sext_ln1118_8_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_873_p3),22));

        sext_ln1118_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_908_p3),39));

        sext_ln1192_10_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_4_fu_996_p3),46));

        sext_ln1192_17_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_1033_p3),28));

        sext_ln1192_2_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1529_pp0_iter5_reg),17));

        sext_ln1192_3_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_370_ap_return),17));

        sext_ln1253_fu_1155_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1758),13));

        sext_ln703_4_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_388_ap_return),13));

        sext_ln703_5_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1723),13));

        sext_ln703_6_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_49_reg_1768),14));

        sext_ln703_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_reg_1650),13));

        sext_ln727_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_448_p4),26));

        sext_ln728_1_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_424_p4),26));

        sext_ln728_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_11_fu_434_p4),26));

    shl_ln1118_1_fu_908_p3 <= (mul_ln1118_reg_1665 & ap_const_lv1_0);
    shl_ln1118_2_fu_873_p3 <= (p_Val2_3_reg_1535_pp0_iter4_reg & ap_const_lv5_0);
    shl_ln1_fu_641_p3 <= (mul_ln700_3_fu_1346_p2 & ap_const_lv10_0);
    shl_ln_fu_901_p3 <= (mul_ln1118_reg_1665 & ap_const_lv7_0);
    sub_ln1192_1_fu_1007_p2 <= std_logic_vector(signed(sext_ln1192_10_fu_1003_p1) - signed(mul_ln1192_5_fu_990_p2));
    sub_ln1192_fu_590_p2 <= std_logic_vector(unsigned(add_ln1192_8_fu_578_p2) - unsigned(rhs_V_1_fu_583_p3));
    sub_ln1193_fu_919_p2 <= std_logic_vector(signed(sext_ln1118_fu_915_p1) - signed(shl_ln_fu_901_p3));
    tmp_10_fu_1239_p3 <= (mul_ln728_3_fu_1482_p2 & ap_const_lv20_0);
    tmp_11_fu_1167_p3 <= (r_V_22_fu_1158_p2 & ap_const_lv10_0);
    tmp_4_fu_1192_p3 <= (grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_415_ap_return & ap_const_lv50_0);
    tmp_8_fu_503_p4 <= x_V_in_sig(62 downto 48);
    tmp_9_fu_1033_p3 <= (p_Val2_8_reg_1718 & ap_const_lv10_0);
    tmp_fu_1110_p3 <= (mul_ln728_2_fu_1467_p2 & ap_const_lv20_0);
    trunc_ln1118_1_fu_513_p3 <= (tmp_8_fu_503_p4 & ap_const_lv11_0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_36_fu_1204_p2(65 downto 50);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= ret_V_39_fu_1220_p2(55 downto 40);

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= ret_V_42_fu_1255_p2(45 downto 30);

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_10_reg_1793;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= ret_V_50_fu_1284_p2(45 downto 30);

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
