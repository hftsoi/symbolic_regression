-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (159 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.326000,HLS_SYN_LAT=11,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=55,HLS_SYN_FF=7218,HLS_SYN_LUT=27807,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv160_lc_1 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv14_C0 : STD_LOGIC_VECTOR (13 downto 0) := "00000011000000";
    constant ap_const_lv14_3E70 : STD_LOGIC_VECTOR (13 downto 0) := "11111001110000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_3FC0 : STD_LOGIC_VECTOR (13 downto 0) := "11111111000000";
    constant ap_const_lv14_3EE0 : STD_LOGIC_VECTOR (13 downto 0) := "11111011100000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv15_100 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_const_lv14_34 : STD_LOGIC_VECTOR (13 downto 0) := "00000000110100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv14_3E40 : STD_LOGIC_VECTOR (13 downto 0) := "11111001000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv10_3F4 : STD_LOGIC_VECTOR (9 downto 0) := "1111110100";
    constant ap_const_lv10_17 : STD_LOGIC_VECTOR (9 downto 0) := "0000010111";
    constant ap_const_lv11_3E : STD_LOGIC_VECTOR (10 downto 0) := "00000111110";
    constant ap_const_lv7_6A : STD_LOGIC_VECTOR (6 downto 0) := "1101010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv22_3F5000 : STD_LOGIC_VECTOR (21 downto 0) := "1111110101000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv16_FC40 : STD_LOGIC_VECTOR (15 downto 0) := "1111110001000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv18_34 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000110100";
    constant ap_const_lv14_3F70 : STD_LOGIC_VECTOR (13 downto 0) := "11111101110000";
    constant ap_const_lv26_27 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000100111";
    constant ap_const_lv18_690 : STD_LOGIC_VECTOR (17 downto 0) := "000000011010010000";
    constant ap_const_lv26_49 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001001001";
    constant ap_const_lv11_7F1 : STD_LOGIC_VECTOR (10 downto 0) := "11111110001";
    constant ap_const_lv20_600 : STD_LOGIC_VECTOR (19 downto 0) := "00000000011000000000";
    constant ap_const_lv12_FD0 : STD_LOGIC_VECTOR (11 downto 0) := "111111010000";
    constant ap_const_lv7_71 : STD_LOGIC_VECTOR (6 downto 0) := "1110001";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv22_3F0000 : STD_LOGIC_VECTOR (21 downto 0) := "1111110000000000000000";
    constant ap_const_lv25_1F20000 : STD_LOGIC_VECTOR (24 downto 0) := "1111100100000000000000000";
    constant ap_const_lv22_3F2000 : STD_LOGIC_VECTOR (21 downto 0) := "1111110010000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (159 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_fu_330_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1415_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_14_fu_340_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_14_reg_1423 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_14_reg_1423_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_fu_372_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1430_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_reg_1443_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_fu_417_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_reg_1449_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2_reg_1457 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_4_reg_1462 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_7_reg_1472 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_fu_1258_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_reg_1477 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1264_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln700_reg_1482 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_4_fu_1272_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_4_reg_1497 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_13_reg_1502 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_1_reg_1507 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_8_reg_1512 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_s_reg_1517 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_12_reg_1522 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_generic_sincos_10_6_s_fu_245_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_reg_1542 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_250_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_5_reg_1547 : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_5_reg_1547_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_5_reg_1547_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_255_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_22_reg_1552 : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_22_reg_1552_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_260_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_13_reg_1557 : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_13_reg_1557_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1316_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_1_reg_1562 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1324_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_3_reg_1567 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_generic_sincos_10_6_s_fu_265_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_18_reg_1572 : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_18_reg_1572_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_270_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_19_reg_1577 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_275_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_20_reg_1582 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_280_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_6_reg_1587 : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_6_reg_1587_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_6_reg_1587_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_285_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_7_reg_1594 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_290_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_24_reg_1599 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln700_fu_1332_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln700_reg_1604 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln1192_fu_883_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_reg_1609 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1338_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_3_reg_1614 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_9_reg_1619 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_9_reg_1619_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_20_fu_1052_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1192_20_reg_1624 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_20_fu_1099_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_20_reg_1629 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1366_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_22_reg_1634 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_43_fu_1136_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_43_reg_1639 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln708_3_reg_1644 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1374_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_4_reg_1649 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln708_6_reg_1654 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_19_fu_1391_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_19_reg_1659 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_generic_sincos_10_6_s_fu_325_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal outsin_V_16_reg_1664 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_245_in_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_generic_sincos_10_6_s_fu_245_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call27 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call27 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call27 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call27 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call27 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call27 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call27 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call27 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call27 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call27 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp24 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_250_in_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_generic_sincos_10_6_s_fu_250_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call88 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call88 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call88 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call88 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call88 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call88 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call88 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call88 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call88 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call88 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call88 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call88 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp49 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_255_in_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_generic_sincos_10_6_s_fu_255_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call193 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call193 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call193 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call193 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call193 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call193 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call193 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call193 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call193 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call193 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call193 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call193 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp79 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_260_in_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_generic_sincos_10_6_s_fu_260_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call199 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call199 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call199 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call199 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call199 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call199 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call199 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call199 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call199 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call199 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call199 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call199 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp83 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_265_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call62 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call62 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call62 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call62 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call62 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call62 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call62 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call62 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call62 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call62 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call62 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call62 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp101 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_270_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call68 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call68 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call68 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call68 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call68 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call68 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call68 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call68 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call68 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call68 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call68 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call68 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp102 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_275_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call78 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call78 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call78 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call78 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call78 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call78 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call78 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call78 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call78 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call78 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call78 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call78 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp103 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_280_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call95 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call95 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call95 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call95 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call95 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call95 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call95 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call95 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call95 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call95 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call95 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call95 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp105 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_285_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call110 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call110 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call110 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call110 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call110 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call110 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call110 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call110 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call110 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call110 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call110 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call110 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp106 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_290_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call216 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call216 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call216 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call216 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call216 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call216 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call216 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call216 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call216 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call216 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call216 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call216 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp116 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_295_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_295_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call43 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call43 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call43 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call43 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call43 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call43 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call43 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call43 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call43 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call43 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp118 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_300_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_300_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call143 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call143 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call143 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call143 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call143 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call143 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call143 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call143 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call143 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call143 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call143 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call143 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp125 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_305_in_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_generic_sincos_10_6_s_fu_305_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_305_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call151 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call151 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call151 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call151 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call151 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call151 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call151 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call151 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call151 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call151 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call151 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call151 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp127 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_310_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_310_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call163 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call163 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call163 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call163 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call163 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call163 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call163 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call163 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call163 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call163 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call163 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call163 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp128 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_315_in_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_generic_sincos_10_6_s_fu_315_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_315_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call178 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call178 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call178 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call178 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call178 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call178 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call178 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call178 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call178 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call178 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call178 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call178 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp130 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_320_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_generic_sincos_10_6_s_fu_320_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call212 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call212 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call212 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call212 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call212 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call212 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call212 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call212 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call212 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call212 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call212 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call212 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp133 : BOOLEAN;
    signal grp_generic_sincos_10_6_s_fu_325_in_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_generic_sincos_10_6_s_fu_325_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call226 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call226 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call226 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call226 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call226 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call226 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call226 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call226 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call226 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call226 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call226 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call226 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp152 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln_fu_354_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_3_fu_362_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_2_fu_350_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_1_fu_382_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_20_fu_366_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_27_fu_390_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_2_fu_435_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_3_fu_443_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_3_fu_427_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_4_fu_461_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_3_fu_453_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_4_fu_469_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1192_fu_447_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1192_1_fu_473_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_4_fu_479_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_30_fu_485_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_7_fu_505_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_6_fu_501_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_7_fu_505_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_7_fu_505_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_9_fu_511_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_1_fu_517_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1192_2_fu_525_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_32_fu_531_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_fu_547_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_s_fu_557_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_7_fu_565_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_34_fu_586_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_s_fu_606_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_1_fu_618_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_13_fu_626_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_12_fu_614_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_5_fu_640_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_15_fu_648_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_24_fu_634_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_25_fu_652_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_3_fu_658_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_4_fu_662_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_35_fu_666_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1192_14_fu_672_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln700_2_fu_686_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_18_fu_682_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln700_2_fu_686_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln700_4_fu_692_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln700_4_fu_692_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_20_fu_706_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_11_fu_582_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_30_fu_710_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_10_fu_716_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1192_30_fu_731_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_27_fu_737_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_21_fu_754_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_14_fu_630_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_33_fu_758_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1192_29_fu_764_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1278_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_fu_792_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_4_fu_786_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_fu_792_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1287_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_26_fu_1296_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1302_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_34_fu_1310_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1192_2_fu_873_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1192_1_fu_870_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_29_fu_877_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_fu_892_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_8_fu_895_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1118_7_fu_908_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_10_fu_915_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_6_fu_925_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_23_fu_919_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_4_fu_939_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_2_fu_951_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_10_fu_958_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1346_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_3_fu_967_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_11_fu_974_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_16_fu_962_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1192_16_fu_962_p2 : signal is "no";
    signal rhs_V_4_fu_984_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_12_fu_992_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_17_fu_978_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_18_fu_996_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_36_fu_1002_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_27_fu_1018_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_28_fu_1030_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_17_fu_1026_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1192_22_fu_1042_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1192_13_fu_1048_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_19_fu_1038_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_fu_889_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_5_fu_1058_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_38_fu_1061_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_6_fu_1070_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_8_fu_1082_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln728_2_fu_1090_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1357_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_40_fu_1094_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of ret_V_40_fu_1094_p2 : signal is "no";
    signal r_V_13_fu_1105_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_31_fu_1108_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_7_fu_1117_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_8_fu_1129_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal rhs_V_9_fu_1133_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln700_1_fu_1145_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_fu_1150_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln700_1_fu_1145_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln728_fu_1157_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_31_fu_1161_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_22_fu_1177_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1382_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln703_11_fu_1206_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_25_fu_1209_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1397_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_fu_1228_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1406_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_fu_1258_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_16_fu_678_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_fu_1258_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1264_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1264_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1264_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_4_fu_1272_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_22_fu_770_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_4_fu_1272_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1278_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1278_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1278_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1287_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1287_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_26_fu_1296_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1302_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_34_fu_1310_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1316_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1316_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1324_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_fu_861_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1324_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1324_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1338_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1346_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1357_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_10_fu_1067_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1357_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1366_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_15_fu_1114_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1366_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1374_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1382_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1397_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1406_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to10 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component generic_sincos_10_6_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        in_V : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_mul_mul_15s_15s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_18s_7ns_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_10s_10s_9s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_muladd_18s_10s_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_26s_7ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_10s_12ns_18s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_26s_8ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_ama_addmulsub_10s_5s_12ns_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_muladd_6s_6s_7s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mul_mul_20s_12s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_am_addmul_6s_5s_7s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_ama_addmulsub_10s_6s_13s_21s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_muladd_6s_6s_15s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mac_muladd_6s_6s_11s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_am_addmul_8s_6s_14s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mac_muladd_16s_9s_17s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_12s_8s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_muladd_23s_6s_21s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (22 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mac_muladd_20s_6s_17s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;



begin
    grp_generic_sincos_10_6_s_fu_245 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => grp_generic_sincos_10_6_s_fu_245_in_V,
        ap_return => grp_generic_sincos_10_6_s_fu_245_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_245_ap_ce);

    grp_generic_sincos_10_6_s_fu_250 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => grp_generic_sincos_10_6_s_fu_250_in_V,
        ap_return => grp_generic_sincos_10_6_s_fu_250_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_250_ap_ce);

    grp_generic_sincos_10_6_s_fu_255 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => grp_generic_sincos_10_6_s_fu_255_in_V,
        ap_return => grp_generic_sincos_10_6_s_fu_255_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_255_ap_ce);

    grp_generic_sincos_10_6_s_fu_260 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => grp_generic_sincos_10_6_s_fu_260_in_V,
        ap_return => grp_generic_sincos_10_6_s_fu_260_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_260_ap_ce);

    grp_generic_sincos_10_6_s_fu_265 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => trunc_ln708_2_reg_1457,
        ap_return => grp_generic_sincos_10_6_s_fu_265_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_265_ap_ce);

    grp_generic_sincos_10_6_s_fu_270 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => p_Val2_s_reg_1415,
        ap_return => grp_generic_sincos_10_6_s_fu_270_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_270_ap_ce);

    grp_generic_sincos_10_6_s_fu_275 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => trunc_ln708_4_reg_1462,
        ap_return => grp_generic_sincos_10_6_s_fu_275_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_275_ap_ce);

    grp_generic_sincos_10_6_s_fu_280 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => p_Val2_1_reg_1430,
        ap_return => grp_generic_sincos_10_6_s_fu_280_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_280_ap_ce);

    grp_generic_sincos_10_6_s_fu_285 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => trunc_ln708_7_reg_1472,
        ap_return => grp_generic_sincos_10_6_s_fu_285_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_285_ap_ce);

    grp_generic_sincos_10_6_s_fu_290 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => trunc_ln708_13_reg_1502,
        ap_return => grp_generic_sincos_10_6_s_fu_290_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_290_ap_ce);

    grp_generic_sincos_10_6_s_fu_295 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => trunc_ln708_1_reg_1507,
        ap_return => grp_generic_sincos_10_6_s_fu_295_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_295_ap_ce);

    grp_generic_sincos_10_6_s_fu_300 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => trunc_ln708_8_reg_1512,
        ap_return => grp_generic_sincos_10_6_s_fu_300_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_300_ap_ce);

    grp_generic_sincos_10_6_s_fu_305 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => grp_generic_sincos_10_6_s_fu_305_in_V,
        ap_return => grp_generic_sincos_10_6_s_fu_305_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_305_ap_ce);

    grp_generic_sincos_10_6_s_fu_310 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => trunc_ln708_s_reg_1517,
        ap_return => grp_generic_sincos_10_6_s_fu_310_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_310_ap_ce);

    grp_generic_sincos_10_6_s_fu_315 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => grp_generic_sincos_10_6_s_fu_315_in_V,
        ap_return => grp_generic_sincos_10_6_s_fu_315_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_315_ap_ce);

    grp_generic_sincos_10_6_s_fu_320 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => trunc_ln708_12_reg_1522,
        ap_return => grp_generic_sincos_10_6_s_fu_320_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_320_ap_ce);

    grp_generic_sincos_10_6_s_fu_325 : component generic_sincos_10_6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_V => grp_generic_sincos_10_6_s_fu_325_in_V,
        ap_return => grp_generic_sincos_10_6_s_fu_325_ap_return,
        ap_ce => grp_generic_sincos_10_6_s_fu_325_ap_ce);

    myproject_mul_mul_15s_15s_26_1_1_U7 : component myproject_mul_mul_15s_15s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1118_fu_1258_p0,
        din1 => mul_ln1118_fu_1258_p1,
        dout => mul_ln1118_fu_1258_p2);

    myproject_mac_muladd_18s_7ns_18ns_18_1_1_U8 : component myproject_mac_muladd_18s_7ns_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 7,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1264_p0,
        din1 => grp_fu_1264_p1,
        din2 => grp_fu_1264_p2,
        dout => grp_fu_1264_p3);

    myproject_mul_mul_15s_15s_26_1_1_U9 : component myproject_mul_mul_15s_15s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1118_4_fu_1272_p0,
        din1 => mul_ln1118_4_fu_1272_p1,
        dout => mul_ln1118_4_fu_1272_p2);

    myproject_mac_muladd_10s_10s_9s_14_1_1_U10 : component myproject_mac_muladd_10s_10s_9s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 9,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1278_p0,
        din1 => grp_fu_1278_p1,
        din2 => grp_fu_1278_p2,
        dout => grp_fu_1278_p3);

    myproject_mac_muladd_18s_10s_18ns_18_1_1_U11 : component myproject_mac_muladd_18s_10s_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 10,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1287_p0,
        din1 => p_Val2_s_reg_1415,
        din2 => grp_fu_1287_p2,
        dout => grp_fu_1287_p3);

    myproject_mul_mul_26s_7ns_26_1_1_U12 : component myproject_mul_mul_26s_7ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 7,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1118_reg_1477,
        din1 => r_V_26_fu_1296_p1,
        dout => r_V_26_fu_1296_p2);

    myproject_mac_muladd_10s_12ns_18s_18_1_1_U13 : component myproject_mac_muladd_10s_12ns_18s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => p_Val2_14_reg_1423,
        din1 => grp_fu_1302_p1,
        din2 => add_ln700_reg_1482,
        dout => grp_fu_1302_p3);

    myproject_mul_mul_26s_8ns_26_1_1_U14 : component myproject_mul_mul_26s_8ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 8,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1118_4_reg_1497,
        din1 => r_V_34_fu_1310_p1,
        dout => r_V_34_fu_1310_p2);

    myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U15 : component myproject_ama_addmulsub_10s_5s_12ns_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 5,
        din2_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        din0 => p_Val2_s_reg_1415_pp0_iter7_reg,
        din1 => grp_fu_1316_p1,
        din2 => grp_fu_1316_p2,
        dout => grp_fu_1316_p3);

    myproject_mac_muladd_6s_6s_7s_12_1_1_U16 : component myproject_mac_muladd_6s_6s_7s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 7,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1324_p0,
        din1 => grp_fu_1324_p1,
        din2 => grp_fu_1324_p2,
        dout => grp_fu_1324_p3);

    myproject_mul_mul_20s_12s_30_1_1_U17 : component myproject_mul_mul_20s_12s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 12,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_1_reg_1562,
        din1 => ret_V_3_reg_1567,
        dout => mul_ln700_fu_1332_p2);

    myproject_am_addmul_6s_5s_7s_14_1_1_U18 : component myproject_am_addmul_6s_5s_7s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 5,
        din2_WIDTH => 7,
        dout_WIDTH => 14)
    port map (
        din0 => outsin_V_20_reg_1582,
        din1 => grp_fu_1338_p1,
        din2 => ret_V_8_fu_895_p2,
        dout => grp_fu_1338_p3);

    myproject_ama_addmulsub_10s_6s_13s_21s_22_1_1_U19 : component myproject_ama_addmulsub_10s_6s_13s_21s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 6,
        din2_WIDTH => 13,
        din3_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1346_p0,
        din1 => outsin_V_7_reg_1594,
        din2 => r_V_6_fu_925_p3,
        din3 => lhs_V_4_fu_939_p3,
        dout => grp_fu_1346_p4);

    myproject_mac_muladd_6s_6s_15s_16_1_1_U20 : component myproject_mac_muladd_6s_6s_15s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 15,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1357_p0,
        din1 => grp_fu_1357_p1,
        din2 => lhs_V_6_fu_1070_p3,
        dout => grp_fu_1357_p3);

    myproject_mac_muladd_6s_6s_11s_12_1_1_U21 : component myproject_mac_muladd_6s_6s_11s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1366_p0,
        din1 => grp_fu_1366_p1,
        din2 => lhs_V_7_fu_1117_p3,
        dout => grp_fu_1366_p3);

    myproject_am_addmul_8s_6s_14s_23_1_1_U22 : component myproject_am_addmul_8s_6s_14s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 14,
        dout_WIDTH => 23)
    port map (
        din0 => r_V_22_fu_1177_p3,
        din1 => grp_fu_1374_p1,
        din2 => r_V_3_reg_1614,
        dout => grp_fu_1374_p3);

    myproject_mac_muladd_16s_9s_17s_22_1_1_U23 : component myproject_mac_muladd_16s_9s_17s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 17,
        dout_WIDTH => 22)
    port map (
        din0 => ret_V_20_reg_1629,
        din1 => add_ln1192_20_reg_1624,
        din2 => grp_fu_1382_p2,
        dout => grp_fu_1382_p3);

    myproject_mul_mul_12s_8s_20_1_1_U24 : component myproject_mul_mul_12s_8s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 20)
    port map (
        din0 => ret_V_22_reg_1634,
        din1 => ret_V_25_fu_1209_p2,
        dout => r_V_19_fu_1391_p2);

    myproject_mac_muladd_23s_6s_21s_25_1_1_U25 : component myproject_mac_muladd_23s_6s_21s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 23,
        din1_WIDTH => 6,
        din2_WIDTH => 21,
        dout_WIDTH => 25)
    port map (
        din0 => r_V_4_reg_1649,
        din1 => outsin_V_6_reg_1587_pp0_iter10_reg,
        din2 => grp_fu_1397_p2,
        dout => grp_fu_1397_p3);

    myproject_mac_muladd_20s_6s_17s_22_1_1_U26 : component myproject_mac_muladd_20s_6s_17s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 6,
        din2_WIDTH => 17,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_19_reg_1659,
        din1 => outsin_V_16_reg_1664,
        din2 => grp_fu_1406_p2,
        dout => grp_fu_1406_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv160_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    add_ln1192_20_reg_1624(8 downto 1) <= add_ln1192_20_fu_1052_p2(8 downto 1);
                add_ln1192_reg_1609 <= add_ln1192_fu_883_p2;
                mul_ln700_reg_1604 <= mul_ln700_fu_1332_p2;
                outsin_V_13_reg_1557 <= grp_generic_sincos_10_6_s_fu_260_ap_return;
                outsin_V_13_reg_1557_pp0_iter8_reg <= outsin_V_13_reg_1557;
                outsin_V_16_reg_1664 <= grp_generic_sincos_10_6_s_fu_325_ap_return;
                outsin_V_18_reg_1572 <= grp_generic_sincos_10_6_s_fu_265_ap_return;
                outsin_V_18_reg_1572_pp0_iter9_reg <= outsin_V_18_reg_1572;
                outsin_V_19_reg_1577 <= grp_generic_sincos_10_6_s_fu_270_ap_return;
                outsin_V_20_reg_1582 <= grp_generic_sincos_10_6_s_fu_275_ap_return;
                outsin_V_22_reg_1552 <= grp_generic_sincos_10_6_s_fu_255_ap_return;
                outsin_V_22_reg_1552_pp0_iter8_reg <= outsin_V_22_reg_1552;
                outsin_V_24_reg_1599 <= grp_generic_sincos_10_6_s_fu_290_ap_return;
                outsin_V_5_reg_1547 <= grp_generic_sincos_10_6_s_fu_250_ap_return;
                outsin_V_5_reg_1547_pp0_iter8_reg <= outsin_V_5_reg_1547;
                outsin_V_5_reg_1547_pp0_iter9_reg <= outsin_V_5_reg_1547_pp0_iter8_reg;
                outsin_V_6_reg_1587 <= grp_generic_sincos_10_6_s_fu_280_ap_return;
                outsin_V_6_reg_1587_pp0_iter10_reg <= outsin_V_6_reg_1587_pp0_iter9_reg;
                outsin_V_6_reg_1587_pp0_iter9_reg <= outsin_V_6_reg_1587;
                outsin_V_7_reg_1594 <= grp_generic_sincos_10_6_s_fu_285_ap_return;
                outsin_V_reg_1542 <= grp_generic_sincos_10_6_s_fu_245_ap_return;
                p_Val2_1_reg_1430_pp0_iter2_reg <= p_Val2_1_reg_1430_pp0_iter1_reg;
                p_Val2_1_reg_1430_pp0_iter3_reg <= p_Val2_1_reg_1430_pp0_iter2_reg;
                p_Val2_1_reg_1430_pp0_iter4_reg <= p_Val2_1_reg_1430_pp0_iter3_reg;
                p_Val2_1_reg_1430_pp0_iter5_reg <= p_Val2_1_reg_1430_pp0_iter4_reg;
                p_Val2_1_reg_1430_pp0_iter6_reg <= p_Val2_1_reg_1430_pp0_iter5_reg;
                p_Val2_1_reg_1430_pp0_iter7_reg <= p_Val2_1_reg_1430_pp0_iter6_reg;
                p_Val2_1_reg_1430_pp0_iter8_reg <= p_Val2_1_reg_1430_pp0_iter7_reg;
                p_Val2_5_reg_1443_pp0_iter2_reg <= p_Val2_5_reg_1443_pp0_iter1_reg;
                p_Val2_5_reg_1443_pp0_iter3_reg <= p_Val2_5_reg_1443_pp0_iter2_reg;
                p_Val2_5_reg_1443_pp0_iter4_reg <= p_Val2_5_reg_1443_pp0_iter3_reg;
                p_Val2_5_reg_1443_pp0_iter5_reg <= p_Val2_5_reg_1443_pp0_iter4_reg;
                p_Val2_5_reg_1443_pp0_iter6_reg <= p_Val2_5_reg_1443_pp0_iter5_reg;
                p_Val2_5_reg_1443_pp0_iter7_reg <= p_Val2_5_reg_1443_pp0_iter6_reg;
                p_Val2_5_reg_1443_pp0_iter8_reg <= p_Val2_5_reg_1443_pp0_iter7_reg;
                p_Val2_6_reg_1449_pp0_iter2_reg <= p_Val2_6_reg_1449_pp0_iter1_reg;
                p_Val2_6_reg_1449_pp0_iter3_reg <= p_Val2_6_reg_1449_pp0_iter2_reg;
                p_Val2_6_reg_1449_pp0_iter4_reg <= p_Val2_6_reg_1449_pp0_iter3_reg;
                p_Val2_6_reg_1449_pp0_iter5_reg <= p_Val2_6_reg_1449_pp0_iter4_reg;
                p_Val2_6_reg_1449_pp0_iter6_reg <= p_Val2_6_reg_1449_pp0_iter5_reg;
                p_Val2_6_reg_1449_pp0_iter7_reg <= p_Val2_6_reg_1449_pp0_iter6_reg;
                p_Val2_6_reg_1449_pp0_iter8_reg <= p_Val2_6_reg_1449_pp0_iter7_reg;
                p_Val2_s_reg_1415_pp0_iter2_reg <= p_Val2_s_reg_1415_pp0_iter1_reg;
                p_Val2_s_reg_1415_pp0_iter3_reg <= p_Val2_s_reg_1415_pp0_iter2_reg;
                p_Val2_s_reg_1415_pp0_iter4_reg <= p_Val2_s_reg_1415_pp0_iter3_reg;
                p_Val2_s_reg_1415_pp0_iter5_reg <= p_Val2_s_reg_1415_pp0_iter4_reg;
                p_Val2_s_reg_1415_pp0_iter6_reg <= p_Val2_s_reg_1415_pp0_iter5_reg;
                p_Val2_s_reg_1415_pp0_iter7_reg <= p_Val2_s_reg_1415_pp0_iter6_reg;
                p_Val2_s_reg_1415_pp0_iter8_reg <= p_Val2_s_reg_1415_pp0_iter7_reg;
                r_V_19_reg_1659 <= r_V_19_fu_1391_p2;
                ret_V_20_reg_1629 <= ret_V_20_fu_1099_p2;
                ret_V_43_reg_1639 <= ret_V_43_fu_1136_p2;
                trunc_ln708_3_reg_1644 <= ret_V_31_fu_1161_p2(29 downto 20);
                trunc_ln708_6_reg_1654 <= grp_fu_1382_p3(21 downto 12);
                trunc_ln708_9_reg_1619 <= ret_V_36_fu_1002_p2(21 downto 12);
                trunc_ln708_9_reg_1619_pp0_iter10_reg <= trunc_ln708_9_reg_1619;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln700_reg_1482 <= grp_fu_1264_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_4_reg_1497 <= mul_ln1118_4_fu_1272_p2;
                mul_ln1118_reg_1477 <= mul_ln1118_fu_1258_p2;
                p_Val2_14_reg_1423 <= x_V_in_sig(39 downto 30);
                p_Val2_14_reg_1423_pp0_iter1_reg <= p_Val2_14_reg_1423;
                p_Val2_1_reg_1430 <= x_V_in_sig(149 downto 140);
                p_Val2_1_reg_1430_pp0_iter1_reg <= p_Val2_1_reg_1430;
                p_Val2_5_reg_1443 <= x_V_in_sig(49 downto 40);
                p_Val2_5_reg_1443_pp0_iter1_reg <= p_Val2_5_reg_1443;
                p_Val2_6_reg_1449 <= x_V_in_sig(159 downto 150);
                p_Val2_6_reg_1449_pp0_iter1_reg <= p_Val2_6_reg_1449;
                p_Val2_s_reg_1415 <= x_V_in_sig(29 downto 20);
                p_Val2_s_reg_1415_pp0_iter1_reg <= p_Val2_s_reg_1415;
                trunc_ln708_12_reg_1522 <= r_V_34_fu_1310_p2(25 downto 16);
                trunc_ln708_13_reg_1502 <= grp_fu_1278_p3(13 downto 4);
                trunc_ln708_1_reg_1507 <= grp_fu_1287_p3(17 downto 8);
                trunc_ln708_2_reg_1457 <= ret_V_30_fu_485_p2(13 downto 4);
                trunc_ln708_4_reg_1462 <= ret_V_32_fu_531_p2(13 downto 4);
                trunc_ln708_7_reg_1472 <= ret_V_34_fu_586_p2(13 downto 4);
                trunc_ln708_8_reg_1512 <= r_V_26_fu_1296_p2(25 downto 16);
                trunc_ln708_s_reg_1517 <= grp_fu_1302_p3(17 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
                r_V_3_reg_1614 <= grp_fu_1338_p3;
                ret_V_22_reg_1634 <= grp_fu_1366_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                r_V_4_reg_1649 <= grp_fu_1374_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                ret_V_1_reg_1562 <= grp_fu_1316_p3;
                ret_V_3_reg_1567 <= grp_fu_1324_p3;
            end if;
        end if;
    end process;
    add_ln1192_20_reg_1624(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_14_fu_672_p2 <= std_logic_vector(unsigned(ret_V_35_fu_666_p2) + unsigned(ap_const_lv15_100));
    add_ln1192_16_fu_962_p2 <= std_logic_vector(signed(sext_ln1192_10_fu_958_p1) + signed(grp_fu_1346_p4));
    add_ln1192_17_fu_978_p2 <= std_logic_vector(signed(sext_ln1192_11_fu_974_p1) + signed(add_ln1192_16_fu_962_p2));
    add_ln1192_18_fu_996_p2 <= std_logic_vector(signed(sext_ln1192_12_fu_992_p1) + signed(add_ln1192_17_fu_978_p2));
    add_ln1192_20_fu_1052_p2 <= std_logic_vector(signed(sext_ln1192_13_fu_1048_p1) + signed(sext_ln1118_19_fu_1038_p1));
    add_ln1192_22_fu_1042_p2 <= std_logic_vector(signed(sext_ln1118_17_fu_1026_p1) + signed(ap_const_lv8_F0));
    add_ln1192_27_fu_737_p2 <= std_logic_vector(unsigned(add_ln1192_30_fu_731_p2) + unsigned(lhs_V_1_fu_382_p3));
    add_ln1192_29_fu_764_p2 <= std_logic_vector(unsigned(r_V_33_fu_758_p2) + unsigned(ap_const_lv15_100));
    add_ln1192_30_fu_731_p2 <= std_logic_vector(unsigned(r_V_s_fu_557_p3) + unsigned(ap_const_lv14_3E40));
    add_ln1192_4_fu_479_p2 <= std_logic_vector(unsigned(sub_ln1192_fu_447_p2) + unsigned(sub_ln1192_1_fu_473_p2));
    add_ln1192_7_fu_565_p2 <= std_logic_vector(unsigned(r_V_s_fu_557_p3) + unsigned(ap_const_lv14_3FC0));
    add_ln1192_9_fu_511_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_427_p3) + unsigned(mul_ln1192_7_fu_505_p2));
    add_ln1192_fu_883_p2 <= std_logic_vector(unsigned(ret_V_29_fu_877_p2) + unsigned(ap_const_lv11_3E));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp101_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp101 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp102_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp102 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp103_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp103 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp105_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp105 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp106_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp106 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp116_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp116 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp118_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp118 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp125_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp125 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp127_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp127 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp128_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp128 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp130_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp130 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp133_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp133 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp152_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp152 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp24_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp24 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp49_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp49 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp79_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp79 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp83_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp83 <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call110_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call110 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call143_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call143 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call151_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call151 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call163_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call163 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call178_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call178 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call193_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call193 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call199_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call199 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call212_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call212 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call216_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call216 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call226_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call226 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call27_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call27 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call43_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call43 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call62_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call62 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call68_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call68 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call78_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call78 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call88_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call88 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call95_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call95 <= ((x_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call143 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call212 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call216 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call226 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call95 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to10_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to10 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to10)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to10 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1264_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_2_fu_686_p0) * signed(mul_ln700_2_fu_686_p1))), 18));
    grp_fu_1264_p1 <= ap_const_lv18_34(7 - 1 downto 0);
    grp_fu_1264_p2 <= (mul_ln700_4_fu_692_p2 & ap_const_lv4_0);
    grp_fu_1278_p0 <= sext_ln1118_2_fu_350_p1(10 - 1 downto 0);
    grp_fu_1278_p1 <= sext_ln1118_2_fu_350_p1(10 - 1 downto 0);
    grp_fu_1278_p2 <= ap_const_lv14_3F70(9 - 1 downto 0);
    grp_fu_1287_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_792_p0) * signed(mul_ln1192_fu_792_p1))), 18));
    grp_fu_1287_p2 <= (p_Val2_6_reg_1449 & ap_const_lv8_0);
    grp_fu_1302_p1 <= ap_const_lv18_690(12 - 1 downto 0);
    grp_fu_1316_p1 <= ap_const_lv11_7F1(5 - 1 downto 0);
    grp_fu_1316_p2 <= ap_const_lv20_600(12 - 1 downto 0);
    grp_fu_1324_p0 <= r_V_fu_861_p1(6 - 1 downto 0);
    grp_fu_1324_p1 <= r_V_fu_861_p1(6 - 1 downto 0);
    grp_fu_1324_p2 <= ap_const_lv12_FD0(7 - 1 downto 0);
    grp_fu_1338_p1 <= ap_const_lv7_71(5 - 1 downto 0);
    grp_fu_1346_p0 <= rhs_V_6_fu_889_p1(10 - 1 downto 0);
    grp_fu_1357_p0 <= r_V_10_fu_1067_p1(6 - 1 downto 0);
    grp_fu_1357_p1 <= r_V_10_fu_1067_p1(6 - 1 downto 0);
    grp_fu_1366_p0 <= r_V_15_fu_1114_p1(6 - 1 downto 0);
    grp_fu_1366_p1 <= r_V_15_fu_1114_p1(6 - 1 downto 0);
    grp_fu_1374_p1 <= ap_const_lv9_1E0(6 - 1 downto 0);
    grp_fu_1382_p2 <= ap_const_lv22_3F0000(17 - 1 downto 0);
    grp_fu_1397_p2 <= ap_const_lv25_1F20000(21 - 1 downto 0);
    grp_fu_1406_p2 <= ap_const_lv22_3F2000(17 - 1 downto 0);

    grp_generic_sincos_10_6_s_fu_245_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp24)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp24) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_245_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_245_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_generic_sincos_10_6_s_fu_245_in_V <= ret_V_27_fu_390_p2(13 downto 4);

    grp_generic_sincos_10_6_s_fu_250_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp49)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp49) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_250_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_250_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_generic_sincos_10_6_s_fu_250_in_V <= add_ln1192_7_fu_565_p2(13 downto 4);

    grp_generic_sincos_10_6_s_fu_255_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp79)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp79) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_255_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_255_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_generic_sincos_10_6_s_fu_255_in_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_10_fu_716_p4),10));


    grp_generic_sincos_10_6_s_fu_260_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp83)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp83) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_260_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_260_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_generic_sincos_10_6_s_fu_260_in_V <= add_ln1192_27_fu_737_p2(13 downto 4);

    grp_generic_sincos_10_6_s_fu_265_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp101) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_265_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_265_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_270_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp102)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_270_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_270_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_275_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp103)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp103) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_275_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_275_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_280_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp105)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp105) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_280_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_280_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_285_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp106)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp106) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_285_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_285_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_290_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp116)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp116) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_290_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_290_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_295_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp118) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_295_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_295_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_300_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp125)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp125) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_300_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_300_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_305_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp127)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp127) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_305_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_305_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_generic_sincos_10_6_s_fu_305_in_V <= std_logic_vector(signed(p_Val2_14_reg_1423_pp0_iter1_reg) + signed(ap_const_lv10_3F4));

    grp_generic_sincos_10_6_s_fu_310_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp128)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp128) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_310_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_310_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_315_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp130)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp130) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_315_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_315_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_generic_sincos_10_6_s_fu_315_in_V <= std_logic_vector(signed(p_Val2_14_reg_1423_pp0_iter1_reg) + signed(p_Val2_6_reg_1449_pp0_iter1_reg));

    grp_generic_sincos_10_6_s_fu_320_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp133)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp133) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_320_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_320_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_generic_sincos_10_6_s_fu_325_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp152) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_generic_sincos_10_6_s_fu_325_ap_ce <= ap_const_logic_1;
        else 
            grp_generic_sincos_10_6_s_fu_325_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_generic_sincos_10_6_s_fu_325_in_V <= std_logic_vector(signed(p_Val2_1_reg_1430_pp0_iter2_reg) + signed(ap_const_lv10_17));
    lhs_V_1_fu_382_p3 <= (p_Val2_1_fu_372_p4 & ap_const_lv4_0);
    lhs_V_3_fu_427_p3 <= (p_Val2_6_fu_417_p4 & ap_const_lv4_0);
    lhs_V_4_fu_939_p3 <= (r_V_23_fu_919_p2 & ap_const_lv8_0);
        lhs_V_5_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1430_pp0_iter8_reg),11));

    lhs_V_6_fu_1070_p3 <= (ret_V_38_fu_1061_p2 & ap_const_lv4_0);
    lhs_V_7_fu_1117_p3 <= (r_V_31_fu_1108_p2 & ap_const_lv4_0);
        lhs_V_8_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_generic_sincos_10_6_s_fu_320_ap_return),7));

    mul_ln1118_4_fu_1272_p0 <= sext_ln1118_22_fu_770_p1(15 - 1 downto 0);
    mul_ln1118_4_fu_1272_p1 <= sext_ln1118_22_fu_770_p1(15 - 1 downto 0);
    mul_ln1118_fu_1258_p0 <= sext_ln1118_16_fu_678_p1(15 - 1 downto 0);
    mul_ln1118_fu_1258_p1 <= sext_ln1118_16_fu_678_p1(15 - 1 downto 0);
    mul_ln1192_7_fu_505_p0 <= sext_ln1118_6_fu_501_p1(10 - 1 downto 0);
    mul_ln1192_7_fu_505_p1 <= sext_ln1118_6_fu_501_p1(10 - 1 downto 0);
    mul_ln1192_7_fu_505_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_7_fu_505_p0) * signed(mul_ln1192_7_fu_505_p1))), 14));
    mul_ln1192_fu_792_p0 <= sext_ln1118_4_fu_786_p1(10 - 1 downto 0);
    mul_ln1192_fu_792_p1 <= sext_ln1118_4_fu_786_p1(10 - 1 downto 0);
    mul_ln700_1_fu_1145_p1 <= add_ln1192_reg_1609;
    mul_ln700_1_fu_1145_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_reg_1604) * signed(mul_ln700_1_fu_1145_p1))), 30));
    mul_ln700_2_fu_686_p0 <= sext_ln1118_18_fu_682_p1(10 - 1 downto 0);
    mul_ln700_2_fu_686_p1 <= sext_ln1118_18_fu_682_p1(10 - 1 downto 0);
    mul_ln700_4_fu_692_p0 <= p_Val2_1_fu_372_p4;
    mul_ln700_4_fu_692_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_4_fu_692_p0) * signed('0' &ap_const_lv14_34))), 14));
    p_Val2_14_fu_340_p4 <= x_V_in_sig(39 downto 30);
    p_Val2_1_fu_372_p4 <= x_V_in_sig(149 downto 140);
    p_Val2_6_fu_417_p4 <= x_V_in_sig(159 downto 150);
    p_Val2_s_fu_330_p4 <= x_V_in_sig(29 downto 20);
        r_V_10_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outsin_V_6_reg_1587),12));

        r_V_13_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outsin_V_22_reg_1552_pp0_iter8_reg),7));

        r_V_15_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outsin_V_13_reg_1557_pp0_iter8_reg),12));

    r_V_20_fu_366_p2 <= std_logic_vector(signed(sext_ln1118_3_fu_362_p1) + signed(sext_ln1118_2_fu_350_p1));
    r_V_22_fu_1177_p3 <= (outsin_V_5_reg_1547_pp0_iter9_reg & ap_const_lv2_0);
    r_V_23_fu_919_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_10_fu_915_p1));
    r_V_24_fu_634_p2 <= std_logic_vector(signed(sext_ln1118_13_fu_626_p1) + signed(sext_ln1118_12_fu_614_p1));
    r_V_25_fu_652_p2 <= std_logic_vector(signed(sext_ln1118_15_fu_648_p1) + signed(sext_ln1118_3_fu_362_p1));
    r_V_26_fu_1296_p1 <= ap_const_lv26_27(7 - 1 downto 0);
    r_V_27_fu_1018_p3 <= (grp_generic_sincos_10_6_s_fu_305_ap_return & ap_const_lv1_0);
    r_V_28_fu_1030_p3 <= (grp_generic_sincos_10_6_s_fu_310_ap_return & ap_const_lv1_0);
    r_V_30_fu_710_p2 <= std_logic_vector(signed(sext_ln1118_20_fu_706_p1) - signed(sext_ln1118_11_fu_582_p1));
    r_V_31_fu_1108_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(r_V_13_fu_1105_p1));
    r_V_33_fu_758_p2 <= std_logic_vector(signed(sext_ln1118_21_fu_754_p1) - signed(sext_ln1118_14_fu_630_p1));
    r_V_34_fu_1310_p1 <= ap_const_lv26_49(8 - 1 downto 0);
    r_V_6_fu_925_p3 <= (p_Val2_6_reg_1449_pp0_iter8_reg & ap_const_lv3_0);
        r_V_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outsin_V_reg_1542),12));

    r_V_s_fu_557_p3 <= (tmp_8_fu_547_p4 & ap_const_lv5_0);
    ret_V_20_fu_1099_p2 <= std_logic_vector(unsigned(ret_V_40_fu_1094_p2) + unsigned(ap_const_lv16_FC40));
    ret_V_25_fu_1209_p2 <= std_logic_vector(signed(sext_ln703_11_fu_1206_p1) + signed(ap_const_lv8_3));
    ret_V_27_fu_390_p2 <= std_logic_vector(signed(lhs_V_1_fu_382_p3) - signed(r_V_20_fu_366_p2));
    ret_V_29_fu_877_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_873_p1) - signed(sext_ln1192_1_fu_870_p1));
    ret_V_30_fu_485_p2 <= std_logic_vector(unsigned(add_ln1192_4_fu_479_p2) + unsigned(ap_const_lv14_C0));
    ret_V_31_fu_1161_p2 <= std_logic_vector(unsigned(mul_ln700_1_fu_1145_p2) - unsigned(sext_ln728_fu_1157_p1));
    ret_V_32_fu_531_p2 <= std_logic_vector(unsigned(sub_ln1192_2_fu_525_p2) + unsigned(ap_const_lv14_3E70));
    ret_V_34_fu_586_p2 <= std_logic_vector(unsigned(mul_ln1192_7_fu_505_p2) + unsigned(ap_const_lv14_3EE0));
    ret_V_35_fu_666_p2 <= std_logic_vector(signed(sext_ln703_3_fu_658_p1) - signed(sext_ln703_4_fu_662_p1));
    ret_V_36_fu_1002_p2 <= std_logic_vector(unsigned(add_ln1192_18_fu_996_p2) + unsigned(ap_const_lv22_3F5000));
    ret_V_38_fu_1061_p2 <= std_logic_vector(signed(rhs_V_6_fu_889_p1) + signed(lhs_V_5_fu_1058_p1));
    ret_V_40_fu_1094_p2 <= std_logic_vector(signed(sext_ln728_2_fu_1090_p1) + signed(grp_fu_1357_p3));
    ret_V_43_fu_1136_p2 <= std_logic_vector(signed(lhs_V_8_fu_1129_p1) - signed(rhs_V_9_fu_1133_p1));
    ret_V_8_fu_895_p2 <= std_logic_vector(signed(sext_ln703_fu_892_p1) + signed(ap_const_lv7_6A));
    rhs_V_1_fu_517_p3 <= (p_Val2_14_fu_340_p4 & ap_const_lv4_0);
    rhs_V_2_fu_951_p3 <= (p_Val2_s_reg_1415_pp0_iter8_reg & ap_const_lv11_0);
    rhs_V_3_fu_967_p3 <= (outsin_V_6_reg_1587 & ap_const_lv11_0);
    rhs_V_4_fu_984_p3 <= (grp_generic_sincos_10_6_s_fu_300_ap_return & ap_const_lv11_0);
        rhs_V_6_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_reg_1449_pp0_iter8_reg),11));

    rhs_V_8_fu_1082_p3 <= (grp_generic_sincos_10_6_s_fu_315_ap_return & ap_const_lv4_0);
        rhs_V_9_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outsin_V_24_reg_1599),7));

    rhs_V_fu_1150_p3 <= (outsin_V_18_reg_1572_pp0_iter9_reg & ap_const_lv20_0);
        sext_ln1118_10_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_908_p3),13));

        sext_ln1118_11_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_fu_417_p4),13));

        sext_ln1118_12_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_606_p3),14));

        sext_ln1118_13_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_618_p3),14));

        sext_ln1118_14_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_618_p3),15));

        sext_ln1118_15_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_640_p3),14));

        sext_ln1118_16_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_14_fu_672_p2),26));

        sext_ln1118_17_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_27_fu_1018_p3),8));

        sext_ln1118_18_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_372_p4),18));

        sext_ln1118_19_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_28_fu_1030_p3),9));

        sext_ln1118_20_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_435_p3),13));

        sext_ln1118_21_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_1_fu_382_p3),15));

        sext_ln1118_22_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_29_fu_764_p2),26));

        sext_ln1118_2_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_14_fu_340_p4),14));

        sext_ln1118_3_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_354_p3),14));

        sext_ln1118_4_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1443),18));

        sext_ln1118_6_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_330_p4),14));

        sext_ln1192_10_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_951_p3),22));

        sext_ln1192_11_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_967_p3),22));

        sext_ln1192_12_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_4_fu_984_p3),22));

        sext_ln1192_13_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_22_fu_1042_p2),9));

        sext_ln1192_1_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1443_pp0_iter8_reg),11));

        sext_ln1192_2_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_generic_sincos_10_6_s_fu_295_ap_return),11));

        sext_ln1192_3_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_435_p3),14));

        sext_ln1192_4_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_461_p3),14));

        sext_ln703_11_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_43_reg_1639),8));

        sext_ln703_3_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_24_fu_634_p2),15));

        sext_ln703_4_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_25_fu_652_p2),15));

        sext_ln703_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outsin_V_19_reg_1577),7));

        sext_ln728_2_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_8_fu_1082_p3),16));

        sext_ln728_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_1150_p3),30));

    shl_ln1118_1_fu_618_p3 <= (p_Val2_1_fu_372_p4 & ap_const_lv1_0);
    shl_ln1118_2_fu_435_p3 <= (p_Val2_6_fu_417_p4 & ap_const_lv2_0);
    shl_ln1118_3_fu_453_p3 <= (p_Val2_s_fu_330_p4 & ap_const_lv4_0);
    shl_ln1118_4_fu_461_p3 <= (p_Val2_s_fu_330_p4 & ap_const_lv2_0);
    shl_ln1118_5_fu_640_p3 <= (p_Val2_14_fu_340_p4 & ap_const_lv1_0);
    shl_ln1118_7_fu_908_p3 <= (p_Val2_1_reg_1430_pp0_iter8_reg & ap_const_lv2_0);
    shl_ln1118_s_fu_606_p3 <= (p_Val2_1_fu_372_p4 & ap_const_lv3_0);
    shl_ln_fu_354_p3 <= (p_Val2_14_fu_340_p4 & ap_const_lv3_0);
    sub_ln1192_1_fu_473_p2 <= std_logic_vector(unsigned(shl_ln1118_3_fu_453_p3) - unsigned(sext_ln1192_4_fu_469_p1));
    sub_ln1192_2_fu_525_p2 <= std_logic_vector(unsigned(add_ln1192_9_fu_511_p2) - unsigned(rhs_V_1_fu_517_p3));
    sub_ln1192_fu_447_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_443_p1) - signed(lhs_V_3_fu_427_p3));
    tmp_8_fu_547_p4 <= x_V_in_sig(38 downto 30);
    tmp_fu_1228_p4 <= grp_fu_1397_p3(24 downto 16);
    trunc_ln708_10_fu_716_p4 <= r_V_30_fu_710_p2(12 downto 4);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln708_3_reg_1644;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_1_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1228_p4),10));


    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1619_pp0_iter10_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_6_reg_1654;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= grp_fu_1406_p3(21 downto 12);

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
