// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generic_sincos_8_6_s (
        ap_clk,
        ap_rst,
        in_V,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] in_V;
output  [3:0] ap_return;
input   ap_ce;

reg[3:0] ap_return;

wire   [0:0] sign0_V_fu_71_p2;
reg   [0:0] sign0_V_reg_282;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] sign0_V_reg_282_pp0_iter1_reg;
reg   [0:0] sign0_V_reg_282_pp0_iter2_reg;
reg   [0:0] sign0_V_reg_282_pp0_iter3_reg;
reg   [0:0] sign0_V_reg_282_pp0_iter4_reg;
reg   [0:0] sign0_V_reg_282_pp0_iter5_reg;
wire   [7:0] p_Val2_s_fu_83_p3;
reg   [7:0] p_Val2_s_reg_287;
reg   [5:0] ret_V_reg_292;
reg   [1:0] k_V_reg_297;
wire   [0:0] icmp_ln879_fu_136_p2;
reg   [0:0] icmp_ln879_reg_304;
reg   [0:0] icmp_ln879_reg_304_pp0_iter2_reg;
reg   [0:0] icmp_ln879_reg_304_pp0_iter3_reg;
reg   [0:0] icmp_ln879_reg_304_pp0_iter4_reg;
wire   [8:0] z_V_1_fu_185_p3;
reg   [8:0] z_V_1_reg_309;
wire   [0:0] icmp_ln879_1_fu_193_p2;
reg   [0:0] icmp_ln879_1_reg_314;
reg   [0:0] icmp_ln879_1_reg_314_pp0_iter2_reg;
reg   [0:0] icmp_ln879_1_reg_314_pp0_iter3_reg;
reg   [0:0] icmp_ln879_1_reg_314_pp0_iter4_reg;
wire   [3:0] p_Val2_47_fu_245_p3;
reg   [3:0] p_Val2_47_reg_320;
wire   [9:0] grp_cordic_circ_apfixed_10_3_0_s_fu_66_ap_return;
reg    grp_cordic_circ_apfixed_10_3_0_s_fu_66_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call24;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call24;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call24;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call24;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call24;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call24;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call24;
wire    ap_block_pp0_stage0_11001_ignoreCallOp33;
wire    ap_block_pp0_stage0;
wire   [7:0] inabs_V_fu_77_p2;
wire   [22:0] r_V_25_fu_264_p2;
wire   [14:0] lhs_V_fu_116_p3;
wire   [16:0] grp_fu_272_p3;
wire   [8:0] p_Val2_44_fu_127_p4;
wire   [7:0] trunc_ln708_s_fu_145_p4;
wire   [9:0] rhs_V_10_fu_141_p1;
wire   [9:0] ret_V_47_fu_158_p2;
wire   [0:0] icmp_ln251_fu_174_p2;
wire   [0:0] or_ln251_fu_179_p2;
wire   [8:0] trunc_ln708_14_fu_164_p4;
wire   [8:0] z_V_fu_154_p1;
wire   [10:0] zext_ln703_fu_208_p1;
wire   [10:0] sub_ln1253_fu_212_p2;
wire   [3:0] trunc_ln_fu_198_p4;
wire   [3:0] trunc_ln708_15_fu_218_p4;
wire   [0:0] xor_ln879_fu_235_p2;
wire   [0:0] and_ln879_fu_240_p2;
wire   [3:0] select_ln879_fu_228_p3;
wire   [3:0] sub_ln703_fu_253_p2;
wire   [7:0] r_V_25_fu_264_p0;
wire   [15:0] r_V_25_fu_264_p1;
wire   [5:0] grp_fu_272_p0;
wire   [10:0] grp_fu_272_p1;
wire   [14:0] grp_fu_272_p2;
wire   [3:0] p_Val2_48_fu_258_p3;
reg    ap_ce_reg;
reg   [7:0] in_V_int_reg;
reg   [3:0] ap_return_int_reg;
wire   [15:0] grp_fu_272_p00;
wire   [16:0] grp_fu_272_p20;
wire   [22:0] r_V_25_fu_264_p00;

cordic_circ_apfixed_10_3_0_s grp_cordic_circ_apfixed_10_3_0_s_fu_66(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .z_V_read(z_V_1_reg_309),
    .ap_return(grp_cordic_circ_apfixed_10_3_0_s_fu_66_ap_return),
    .ap_ce(grp_cordic_circ_apfixed_10_3_0_s_fu_66_ap_ce)
);

myproject_mul_mul_8ns_16ns_23_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
myproject_mul_mul_8ns_16ns_23_1_0_U2(
    .din0(r_V_25_fu_264_p0),
    .din1(r_V_25_fu_264_p1),
    .dout(r_V_25_fu_264_p2)
);

myproject_mac_mulsub_6ns_11ns_15ns_17_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 17 ))
myproject_mac_mulsub_6ns_11ns_15ns_17_1_0_U3(
    .din0(grp_fu_272_p0),
    .din1(grp_fu_272_p1),
    .din2(grp_fu_272_p2),
    .dout(grp_fu_272_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= p_Val2_48_fu_258_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        icmp_ln879_1_reg_314 <= icmp_ln879_1_fu_193_p2;
        icmp_ln879_1_reg_314_pp0_iter2_reg <= icmp_ln879_1_reg_314;
        icmp_ln879_1_reg_314_pp0_iter3_reg <= icmp_ln879_1_reg_314_pp0_iter2_reg;
        icmp_ln879_1_reg_314_pp0_iter4_reg <= icmp_ln879_1_reg_314_pp0_iter3_reg;
        icmp_ln879_reg_304 <= icmp_ln879_fu_136_p2;
        icmp_ln879_reg_304_pp0_iter2_reg <= icmp_ln879_reg_304;
        icmp_ln879_reg_304_pp0_iter3_reg <= icmp_ln879_reg_304_pp0_iter2_reg;
        icmp_ln879_reg_304_pp0_iter4_reg <= icmp_ln879_reg_304_pp0_iter3_reg;
        k_V_reg_297 <= {{r_V_25_fu_264_p2[18:17]}};
        p_Val2_47_reg_320 <= p_Val2_47_fu_245_p3;
        p_Val2_s_reg_287 <= p_Val2_s_fu_83_p3;
        ret_V_reg_292 <= {{r_V_25_fu_264_p2[22:17]}};
        sign0_V_reg_282 <= sign0_V_fu_71_p2;
        sign0_V_reg_282_pp0_iter1_reg <= sign0_V_reg_282;
        sign0_V_reg_282_pp0_iter2_reg <= sign0_V_reg_282_pp0_iter1_reg;
        sign0_V_reg_282_pp0_iter3_reg <= sign0_V_reg_282_pp0_iter2_reg;
        sign0_V_reg_282_pp0_iter4_reg <= sign0_V_reg_282_pp0_iter3_reg;
        sign0_V_reg_282_pp0_iter5_reg <= sign0_V_reg_282_pp0_iter4_reg;
        z_V_1_reg_309 <= z_V_1_fu_185_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        in_V_int_reg <= in_V;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = p_Val2_48_fu_258_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp33) & (1'b1 == ap_ce_reg))) begin
        grp_cordic_circ_apfixed_10_3_0_s_fu_66_ap_ce = 1'b1;
    end else begin
        grp_cordic_circ_apfixed_10_3_0_s_fu_66_ap_ce = 1'b0;
    end
end

assign and_ln879_fu_240_p2 = (xor_ln879_fu_235_p2 & icmp_ln879_reg_304_pp0_iter4_reg);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp33 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign grp_fu_272_p0 = grp_fu_272_p00;

assign grp_fu_272_p00 = ret_V_reg_292;

assign grp_fu_272_p1 = 16'd804;

assign grp_fu_272_p2 = grp_fu_272_p20;

assign grp_fu_272_p20 = lhs_V_fu_116_p3;

assign icmp_ln251_fu_174_p2 = ((k_V_reg_297 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_193_p2 = ((k_V_reg_297 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_136_p2 = ((k_V_reg_297 == 2'd1) ? 1'b1 : 1'b0);

assign inabs_V_fu_77_p2 = (8'd0 - in_V_int_reg);

assign lhs_V_fu_116_p3 = {{p_Val2_s_reg_287}, {7'd0}};

assign or_ln251_fu_179_p2 = (icmp_ln879_fu_136_p2 | icmp_ln251_fu_174_p2);

assign p_Val2_44_fu_127_p4 = {{grp_fu_272_p3[9:1]}};

assign p_Val2_47_fu_245_p3 = ((and_ln879_fu_240_p2[0:0] === 1'b1) ? trunc_ln_fu_198_p4 : select_ln879_fu_228_p3);

assign p_Val2_48_fu_258_p3 = ((sign0_V_reg_282_pp0_iter5_reg[0:0] === 1'b1) ? p_Val2_47_reg_320 : sub_ln703_fu_253_p2);

assign p_Val2_s_fu_83_p3 = ((sign0_V_fu_71_p2[0:0] === 1'b1) ? in_V_int_reg : inabs_V_fu_77_p2);

assign r_V_25_fu_264_p0 = r_V_25_fu_264_p00;

assign r_V_25_fu_264_p00 = p_Val2_s_fu_83_p3;

assign r_V_25_fu_264_p1 = 23'd20860;

assign ret_V_47_fu_158_p2 = (10'd402 - rhs_V_10_fu_141_p1);

assign rhs_V_10_fu_141_p1 = p_Val2_44_fu_127_p4;

assign select_ln879_fu_228_p3 = ((icmp_ln879_1_reg_314_pp0_iter4_reg[0:0] === 1'b1) ? trunc_ln_fu_198_p4 : trunc_ln708_15_fu_218_p4);

assign sign0_V_fu_71_p2 = (($signed(in_V_int_reg) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign sub_ln1253_fu_212_p2 = (11'd0 - zext_ln703_fu_208_p1);

assign sub_ln703_fu_253_p2 = (4'd0 - p_Val2_47_reg_320);

assign trunc_ln708_14_fu_164_p4 = {{ret_V_47_fu_158_p2[9:1]}};

assign trunc_ln708_15_fu_218_p4 = {{sub_ln1253_fu_212_p2[8:5]}};

assign trunc_ln708_s_fu_145_p4 = {{grp_fu_272_p3[9:2]}};

assign trunc_ln_fu_198_p4 = {{grp_cordic_circ_apfixed_10_3_0_s_fu_66_ap_return[8:5]}};

assign xor_ln879_fu_235_p2 = (icmp_ln879_1_reg_314_pp0_iter4_reg ^ 1'd1);

assign z_V_1_fu_185_p3 = ((or_ln251_fu_179_p2[0:0] === 1'b1) ? trunc_ln708_14_fu_164_p4 : z_V_fu_154_p1);

assign z_V_fu_154_p1 = trunc_ln708_s_fu_145_p4;

assign zext_ln703_fu_208_p1 = grp_cordic_circ_apfixed_10_3_0_s_fu_66_ap_return;

endmodule //generic_sincos_8_6_s
