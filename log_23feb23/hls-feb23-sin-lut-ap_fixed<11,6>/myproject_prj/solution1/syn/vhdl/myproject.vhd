-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (175 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (10 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (10 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (10 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (10 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (10 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.339000,HLS_SYN_LAT=8,HLS_SYN_TPT=1,HLS_SYN_MEM=34,HLS_SYN_DSP=47,HLS_SYN_FF=13264,HLS_SYN_LUT=24354,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv176_lc_1 : STD_LOGIC_VECTOR (175 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011010";
    constant ap_const_lv32_A4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_A5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100101";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv16_FF20 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100100000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv17_400 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv16_F920 : STD_LOGIC_VECTOR (15 downto 0) := "1111100100100000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_300 : STD_LOGIC_VECTOR (15 downto 0) := "0000001100000000";
    constant ap_const_lv16_F9C0 : STD_LOGIC_VECTOR (15 downto 0) := "1111100111000000";
    constant ap_const_lv16_FB80 : STD_LOGIC_VECTOR (15 downto 0) := "1111101110000000";
    constant ap_const_lv31_4E : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001001110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv11_7E9 : STD_LOGIC_VECTOR (10 downto 0) := "11111101001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv31_92 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010010010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_2F : STD_LOGIC_VECTOR (10 downto 0) := "00000101111";
    constant ap_const_lv8_E2 : STD_LOGIC_VECTOR (7 downto 0) := "11100010";
    constant ap_const_lv12_FA0 : STD_LOGIC_VECTOR (11 downto 0) := "111110100000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv26_3F58000 : STD_LOGIC_VECTOR (25 downto 0) := "11111101011000000000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv8_E0 : STD_LOGIC_VECTOR (7 downto 0) := "11100000";
    constant ap_const_lv18_3F120 : STD_LOGIC_VECTOR (17 downto 0) := "111111000100100000";
    constant ap_const_lv24_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv24_3400 : STD_LOGIC_VECTOR (23 downto 0) := "000000000011010000000000";
    constant ap_const_lv12_7D : STD_LOGIC_VECTOR (11 downto 0) := "000001111101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv31_7E400000 : STD_LOGIC_VECTOR (30 downto 0) := "1111110010000000000000000000000";
    constant ap_const_lv16_69 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001101001";
    constant ap_const_lv16_1D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011101";
    constant ap_const_lv16_400 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_const_lv16_FFED : STD_LOGIC_VECTOR (15 downto 0) := "1111111111101101";
    constant ap_const_lv21_69 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001101001";
    constant ap_const_lv16_D2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000011010010";
    constant ap_const_lv16_FDE0 : STD_LOGIC_VECTOR (15 downto 0) := "1111110111100000";
    constant ap_const_lv12_FE2 : STD_LOGIC_VECTOR (11 downto 0) := "111111100010";
    constant ap_const_lv14_3F60 : STD_LOGIC_VECTOR (13 downto 0) := "11111101100000";
    constant ap_const_lv8_D4 : STD_LOGIC_VECTOR (7 downto 0) := "11010100";
    constant ap_const_lv26_3F08000 : STD_LOGIC_VECTOR (25 downto 0) := "11111100001000000000000000";
    constant ap_const_lv26_3F20000 : STD_LOGIC_VECTOR (25 downto 0) := "11111100100000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (175 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (175 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_reg_1652 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_reg_1652_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_reg_1652_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_reg_1652_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_reg_1652_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_reg_1652_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_11_reg_1663 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_11_reg_1663_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_fu_428_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_reg_1673 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_reg_1673_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_reg_1673_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_reg_1673_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_reg_1673_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_1_reg_1673_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_reg_1684 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_reg_1684_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_reg_1684_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_reg_1684_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_reg_1684_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_reg_1684_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_2_reg_1684_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_3_reg_1690 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_3_reg_1690_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_3_reg_1690_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_3_reg_1690_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_3_reg_1690_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_3_reg_1690_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_9_reg_1704 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln700_2_fu_1487_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln700_2_reg_1709 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln700_4_fu_1493_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln700_4_reg_1714 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1499_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_22_reg_1719 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_reg_1724 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_2_fu_495_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2_reg_1729 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2_reg_1729_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2_reg_1729_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2_reg_1729_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2_reg_1729_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_9_fu_1516_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_9_reg_1734 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_fu_1522_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln1118_reg_1740 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln708_s_reg_1745 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_4_fu_1543_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln1118_4_reg_1750 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln708_14_reg_1755 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1192_fu_1558_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1192_reg_1760 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln708_8_reg_1765 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_13_reg_1770 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_1_reg_1775 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_5_reg_1780 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_5_reg_1780_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_2_reg_1786 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_2_reg_1786_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_2_reg_1786_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_s_reg_1791 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_5_reg_1796 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_5_reg_1796_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_5_reg_1796_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_6_reg_1801 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_s_26_reg_1806 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_6_reg_1811 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_6_reg_1811_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_6_reg_1811_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1192_12_fu_931_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_12_reg_1819 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_9_reg_1824 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_1_reg_1830 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_8_reg_1836 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_9_reg_1841 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_9_reg_1841_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_7_reg_1846 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1572_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_1_reg_1851 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1578_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_3_reg_1857 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1586_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_reg_1862 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_9_fu_992_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_9_reg_1867 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_9_reg_1872 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_9_reg_1872_pp0_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_25_fu_1228_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_25_reg_1877 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_19_fu_1271_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_19_reg_1882 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_43_fu_1284_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_43_reg_1887 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln700_fu_1614_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln700_reg_1892 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln1192_fu_1332_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_reg_1897 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_2_fu_1620_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1192_2_reg_1902 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln708_10_reg_1907 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1635_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_7_reg_1912 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0_reg_1917 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call88 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call88 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call88 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call88 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call88 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call88 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call88 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call88 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call88 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp33 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call231 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call231 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call231 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call231 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call231 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call231 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call231 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call231 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call231 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp60 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call27 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call27 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call27 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call27 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call27 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call27 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call27 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp66 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call63 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call63 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call63 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call63 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call63 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call63 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call63 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call63 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call63 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp80 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call69 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call69 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call69 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call69 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call69 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call69 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call69 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call69 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call69 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp81 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call78 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call78 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call78 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call78 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call78 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call78 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call78 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call78 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call78 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp87 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call100 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call100 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call100 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call100 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call100 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call100 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call100 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call100 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call100 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp89 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call120 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call120 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call120 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call120 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call120 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call120 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call120 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call120 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call120 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp93 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call177 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call177 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call177 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call177 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call177 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call177 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call177 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call177 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call177 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp97 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call191 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call191 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call191 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call191 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call191 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call191 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call191 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call191 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call191 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp98 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call210 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call210 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call210 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call210 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call210 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call210 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call210 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call210 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call210 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp100 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call225 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call225 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call225 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call225 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call225 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call225 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call225 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call225 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call225 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp105 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call248 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call248 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call248 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call248 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call248 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call248 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call248 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call248 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call248 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp109 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call165 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call165 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call165 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call165 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call165 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call165 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call165 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call165 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call165 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp122 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call244 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call244 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call244 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call244 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call244 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call244 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call244 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call244 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call244 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp128 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call43 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call43 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call43 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call43 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call43 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call43 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call43 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp131 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_input_V : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call259 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call259 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call259 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call259 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call259 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call259 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call259 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call259 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call259 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp147 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_1507_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_s_fu_498_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_7_fu_505_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_s_fu_522_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_7_fu_533_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_20_fu_529_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_21_fu_540_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_9_fu_550_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_10_fu_561_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_22_fu_557_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_23_fu_568_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_27_fu_544_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_28_fu_572_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_3_fu_578_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_4_fu_582_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_35_fu_586_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_15_fu_592_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln728_fu_1536_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1528_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_5_fu_609_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_37_fu_616_p2 : STD_LOGIC_VECTOR (20 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_37_fu_616_p2 : signal is "no";
    signal lhs_V_1_fu_479_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_32_fu_631_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_28_fu_637_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1549_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_1_fu_676_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_3_fu_683_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_3_fu_669_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_3_fu_700_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_2_fu_693_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_4_fu_707_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_1_fu_711_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_fu_687_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_4_fu_717_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_30_fu_723_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_8_fu_740_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of add_ln1192_8_fu_740_p2 : signal is "no";
    signal rhs_V_1_fu_745_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_2_fu_752_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_32_fu_758_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_34_fu_778_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of ret_V_34_fu_778_p2 : signal is "no";
    signal r_V_29_fu_794_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1118_32_fu_820_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_10_fu_775_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_32_fu_824_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_11_fu_830_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_35_fu_845_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1564_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_6_fu_888_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_12_fu_895_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_9_fu_885_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_13_fu_905_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_909_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_909_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_14_fu_917_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_13_fu_905_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_24_fu_921_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_23_fu_899_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_15_fu_927_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_1_fu_949_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_10_fu_952_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_965_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_4_fu_962_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_5_fu_972_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_21_fu_976_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_6_fu_943_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_6_fu_982_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_13_fu_986_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_4_fu_998_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_7_fu_1005_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_5_fu_1018_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_22_fu_1009_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lhs_V_4_fu_1032_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1118_8_fu_1044_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_16_fu_1051_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_25_fu_1055_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1594_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_2_fu_1060_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_2_fu_1079_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_18_fu_1076_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_19_fu_1086_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_26_fu_1090_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_1096_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_17_fu_1068_p2 : STD_LOGIC_VECTOR (25 downto 0);
    attribute use_dsp48 of add_ln1192_17_fu_1068_p2 : signal is "no";
    signal rhs_V_3_fu_1104_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_25_fu_1114_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_1118_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_1118_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_25_fu_1114_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_26_fu_1126_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_30_fu_1130_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_10_fu_1136_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_18_fu_1108_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_4_fu_1144_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_19_fu_1148_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_36_fu_1154_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_4_fu_1173_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_1187_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1192_12_fu_1194_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_28_fu_1180_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_22_fu_1198_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_27_fu_1170_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1192_23_fu_1208_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_30_fu_1184_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1192_16_fu_1214_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1192_24_fu_1218_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1192_13_fu_1204_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1192_17_fu_1224_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_5_fu_1234_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_38_fu_1237_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_6_fu_1243_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_1255_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1605_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1192_19_fu_1262_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_40_fu_1266_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of ret_V_40_fu_1266_p2 : signal is "no";
    signal sext_ln703_7_fu_1277_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_8_fu_1281_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1193_fu_1290_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1193_1_fu_1295_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1193_fu_1301_p2 : STD_LOGIC_VECTOR (23 downto 0);
    attribute use_dsp48 of add_ln1193_fu_1301_p2 : signal is "no";
    signal ret_V_1_fu_1306_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1192_2_fu_1322_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_1_fu_1319_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_29_fu_1326_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1626_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1253_fu_1359_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_34_fu_1371_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_2_fu_1368_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_34_fu_1371_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_34_fu_1371_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_33_fu_1362_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1381_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_9_fu_1393_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_25_fu_1396_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_1_fu_1409_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_1414_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln700_1_fu_1409_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal rhs_V_fu_1421_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_31_fu_1425_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_3_fu_1448_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1192_3_fu_1448_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_3_fu_1448_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_33_fu_1454_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1643_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln700_2_fu_1487_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_29_fu_472_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln700_2_fu_1487_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln700_4_fu_1493_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_2_fu_468_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln700_4_fu_1493_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1499_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1499_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1499_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1507_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln728_fu_476_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1507_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1192_9_fu_1516_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1192_9_fu_1516_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_fu_1522_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_24_fu_598_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln1118_fu_1522_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1528_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1528_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln728_fu_1536_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_fu_1536_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1118_4_fu_1543_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_34_fu_654_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln1118_4_fu_1543_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1549_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1549_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1549_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1192_fu_1558_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_fu_666_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1192_fu_1558_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1564_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1572_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1578_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_fu_940_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1578_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1578_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1586_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1605_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_17_fu_1073_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1605_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1626_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1643_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sin_lut_ap_fixed_11_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component myproject_mul_mul_11s_11s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mul_mul_11s_8ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mac_muladd_11s_6ns_12ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mac_muladd_11s_6s_16ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_11s_11s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_17s_17s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component myproject_mac_muladd_21s_8ns_21ns_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mul_mul_11s_9ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component myproject_mac_muladd_11s_11s_11s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mac_muladd_11s_21s_21ns_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_am_addmul_11s_6s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mac_muladd_7s_7s_9s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_am_addmul_7s_7s_8s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_ama_addmulsub_11s_15s_14s_25s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        din3 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_7s_7s_17s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_14s_24s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_mul_mul_12s_16s_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component myproject_mac_muladd_11s_18s_21s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_am_addmul_14s_13s_9s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mac_muladd_7s_24s_21s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_ce,
        input_V => trunc_ln_reg_1724,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_ce,
        input_V => p_Val2_s_reg_1652_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_ce,
        input_V => p_Val2_1_reg_1673_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_ce,
        input_V => trunc_ln708_s_reg_1745,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_ce,
        input_V => trunc_ln708_14_reg_1755,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_ce,
        input_V => trunc_ln708_8_reg_1765,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_ce,
        input_V => trunc_ln708_13_reg_1770,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_ce,
        input_V => trunc_ln708_1_reg_1775,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_return);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399 : component sin_lut_ap_fixed_11_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start,
        ap_done => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_ce,
        input_V => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_input_V,
        ap_return => grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_return);

    myproject_mul_mul_11s_11s_21_1_1_U11 : component myproject_mul_mul_11s_11s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln700_2_fu_1487_p0,
        din1 => mul_ln700_2_fu_1487_p1,
        dout => mul_ln700_2_fu_1487_p2);

    myproject_mul_mul_11s_8ns_16_1_1_U12 : component myproject_mul_mul_11s_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln700_4_fu_1493_p0,
        din1 => mul_ln700_4_fu_1493_p1,
        dout => mul_ln700_4_fu_1493_p2);

    myproject_mac_muladd_11s_6ns_12ns_16_1_1_U13 : component myproject_mac_muladd_11s_6ns_12ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        din2_WIDTH => 12,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1499_p0,
        din1 => grp_fu_1499_p1,
        din2 => grp_fu_1499_p2,
        dout => grp_fu_1499_p3);

    myproject_mac_muladd_11s_6s_16ns_16_1_1_U14 : component myproject_mac_muladd_11s_6s_16ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1507_p0,
        din1 => grp_fu_1507_p1,
        din2 => lhs_V_1_fu_479_p3,
        dout => grp_fu_1507_p3);

    myproject_mul_mul_11s_11s_16_1_1_U15 : component myproject_mul_mul_11s_11s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1192_9_fu_1516_p0,
        din1 => mul_ln1192_9_fu_1516_p1,
        dout => mul_ln1192_9_fu_1516_p2);

    myproject_mul_mul_17s_17s_31_1_1_U16 : component myproject_mul_mul_17s_17s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln1118_fu_1522_p0,
        din1 => mul_ln1118_fu_1522_p1,
        dout => mul_ln1118_fu_1522_p2);

    myproject_mac_muladd_21s_8ns_21ns_21_1_1_U17 : component myproject_mac_muladd_21s_8ns_21ns_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln700_2_reg_1709,
        din1 => grp_fu_1528_p1,
        din2 => grp_fu_1528_p2,
        dout => grp_fu_1528_p3);

    myproject_mul_mul_11s_9ns_16_1_1_U18 : component myproject_mul_mul_11s_9ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 9,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln728_fu_1536_p0,
        din1 => mul_ln728_fu_1536_p1,
        dout => mul_ln728_fu_1536_p2);

    myproject_mul_mul_16s_16s_31_1_1_U19 : component myproject_mul_mul_16s_16s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        din0 => mul_ln1118_4_fu_1543_p0,
        din1 => mul_ln1118_4_fu_1543_p1,
        dout => mul_ln1118_4_fu_1543_p2);

    myproject_mac_muladd_11s_11s_11s_16_1_1_U20 : component myproject_mac_muladd_11s_11s_11s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1549_p0,
        din1 => grp_fu_1549_p1,
        din2 => grp_fu_1549_p2,
        dout => grp_fu_1549_p3);

    myproject_mul_mul_11s_11s_21_1_1_U21 : component myproject_mul_mul_11s_11s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1192_fu_1558_p0,
        din1 => mul_ln1192_fu_1558_p1,
        dout => mul_ln1192_fu_1558_p2);

    myproject_mac_muladd_11s_21s_21ns_21_1_1_U22 : component myproject_mac_muladd_11s_21s_21ns_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 21,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => p_Val2_s_reg_1652_pp0_iter2_reg,
        din1 => mul_ln1192_reg_1760,
        din2 => grp_fu_1564_p2,
        dout => grp_fu_1564_p3);

    myproject_am_addmul_11s_6s_24_1_1_U23 : component myproject_am_addmul_11s_6s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 24)
    port map (
        din0 => p_Val2_s_reg_1652_pp0_iter5_reg,
        din1 => grp_fu_1572_p1,
        dout => grp_fu_1572_p2);

    myproject_mac_muladd_7s_7s_9s_14_1_1_U24 : component myproject_mac_muladd_7s_7s_9s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 9,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1578_p0,
        din1 => grp_fu_1578_p1,
        din2 => grp_fu_1578_p2,
        dout => grp_fu_1578_p3);

    myproject_am_addmul_7s_7s_8s_16_1_1_U25 : component myproject_am_addmul_7s_7s_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => p_Val2_6_reg_1801,
        din1 => grp_fu_1586_p1,
        din2 => ret_V_10_fu_952_p2,
        dout => grp_fu_1586_p3);

    myproject_ama_addmulsub_11s_15s_14s_25s_26_1_1_U26 : component myproject_ama_addmulsub_11s_15s_14s_25s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 15,
        din2_WIDTH => 14,
        din3_WIDTH => 25,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_3_reg_1690_pp0_iter5_reg,
        din1 => shl_ln1118_5_fu_1018_p3,
        din2 => add_ln1192_12_reg_1819,
        din3 => lhs_V_4_fu_1032_p3,
        dout => grp_fu_1594_p4);

    myproject_mac_muladd_7s_7s_17s_18_1_1_U27 : component myproject_mac_muladd_7s_7s_17s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1605_p0,
        din1 => grp_fu_1605_p1,
        din2 => lhs_V_6_fu_1243_p3,
        dout => grp_fu_1605_p3);

    myproject_mul_mul_14s_24s_36_1_1_U28 : component myproject_mul_mul_14s_24s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 24,
        dout_WIDTH => 36)
    port map (
        din0 => ret_V_3_reg_1857,
        din1 => ret_V_1_fu_1306_p2,
        dout => mul_ln700_fu_1614_p2);

    myproject_mul_mul_12s_16s_29_1_1_U29 : component myproject_mul_mul_12s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => add_ln1192_9_reg_1867,
        din1 => r_V_3_reg_1862,
        dout => mul_ln1192_2_fu_1620_p2);

    myproject_mac_muladd_11s_18s_21s_26_1_1_U30 : component myproject_mac_muladd_11s_18s_21s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 18,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => add_ln1192_25_reg_1877,
        din1 => ret_V_19_reg_1882,
        din2 => grp_fu_1626_p2,
        dout => grp_fu_1626_p3);

    myproject_am_addmul_14s_13s_9s_24_1_1_U31 : component myproject_am_addmul_14s_13s_9s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 13,
        din2_WIDTH => 9,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_34_fu_1371_p2,
        din1 => tmp_11_fu_1381_p3,
        din2 => ret_V_25_fu_1396_p2,
        dout => grp_fu_1635_p3);

    myproject_mac_muladd_7s_24s_21s_26_1_1_U32 : component myproject_mac_muladd_7s_24s_21s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 24,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => p_0_reg_1917,
        din1 => mul_ln1192_7_reg_1912,
        din2 => grp_fu_1643_p2,
        dout => grp_fu_1643_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv176_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_12_reg_1819 <= add_ln1192_12_fu_931_p2;
                add_ln1192_25_reg_1877 <= add_ln1192_25_fu_1228_p2;
                add_ln1192_9_reg_1867 <= add_ln1192_9_fu_992_p2;
                add_ln1192_reg_1897 <= add_ln1192_fu_1332_p2;
                mul_ln1192_2_reg_1902 <= mul_ln1192_2_fu_1620_p2;
                mul_ln1192_reg_1760 <= mul_ln1192_fu_1558_p2;
                mul_ln700_reg_1892 <= mul_ln700_fu_1614_p2;
                p_0_reg_1917 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_return;
                p_1_reg_1830 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_return;
                p_2_reg_1786 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_return;
                p_2_reg_1786_pp0_iter5_reg <= p_2_reg_1786;
                p_2_reg_1786_pp0_iter6_reg <= p_2_reg_1786_pp0_iter5_reg;
                p_5_reg_1780 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_return;
                p_5_reg_1780_pp0_iter5_reg <= p_5_reg_1780;
                p_6_reg_1811 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_return;
                p_6_reg_1811_pp0_iter6_reg <= p_6_reg_1811;
                p_6_reg_1811_pp0_iter7_reg <= p_6_reg_1811_pp0_iter6_reg;
                p_9_reg_1824 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_return;
                p_Val2_1_reg_1673_pp0_iter2_reg <= p_Val2_1_reg_1673_pp0_iter1_reg;
                p_Val2_1_reg_1673_pp0_iter3_reg <= p_Val2_1_reg_1673_pp0_iter2_reg;
                p_Val2_1_reg_1673_pp0_iter4_reg <= p_Val2_1_reg_1673_pp0_iter3_reg;
                p_Val2_1_reg_1673_pp0_iter5_reg <= p_Val2_1_reg_1673_pp0_iter4_reg;
                p_Val2_2_reg_1684_pp0_iter2_reg <= p_Val2_2_reg_1684_pp0_iter1_reg;
                p_Val2_2_reg_1684_pp0_iter3_reg <= p_Val2_2_reg_1684_pp0_iter2_reg;
                p_Val2_2_reg_1684_pp0_iter4_reg <= p_Val2_2_reg_1684_pp0_iter3_reg;
                p_Val2_2_reg_1684_pp0_iter5_reg <= p_Val2_2_reg_1684_pp0_iter4_reg;
                p_Val2_2_reg_1684_pp0_iter6_reg <= p_Val2_2_reg_1684_pp0_iter5_reg;
                p_Val2_3_reg_1690_pp0_iter2_reg <= p_Val2_3_reg_1690_pp0_iter1_reg;
                p_Val2_3_reg_1690_pp0_iter3_reg <= p_Val2_3_reg_1690_pp0_iter2_reg;
                p_Val2_3_reg_1690_pp0_iter4_reg <= p_Val2_3_reg_1690_pp0_iter3_reg;
                p_Val2_3_reg_1690_pp0_iter5_reg <= p_Val2_3_reg_1690_pp0_iter4_reg;
                p_Val2_5_reg_1796 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_return;
                p_Val2_5_reg_1796_pp0_iter6_reg <= p_Val2_5_reg_1796;
                p_Val2_5_reg_1796_pp0_iter7_reg <= p_Val2_5_reg_1796_pp0_iter6_reg;
                p_Val2_6_reg_1801 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_return;
                p_Val2_7_reg_1846 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_return;
                p_Val2_8_reg_1836 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_return;
                p_Val2_9_reg_1841 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_return;
                p_Val2_9_reg_1841_pp0_iter6_reg <= p_Val2_9_reg_1841;
                p_Val2_s_26_reg_1806 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_return;
                p_Val2_s_reg_1652_pp0_iter2_reg <= p_Val2_s_reg_1652_pp0_iter1_reg;
                p_Val2_s_reg_1652_pp0_iter3_reg <= p_Val2_s_reg_1652_pp0_iter2_reg;
                p_Val2_s_reg_1652_pp0_iter4_reg <= p_Val2_s_reg_1652_pp0_iter3_reg;
                p_Val2_s_reg_1652_pp0_iter5_reg <= p_Val2_s_reg_1652_pp0_iter4_reg;
                p_s_reg_1791 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_return;
                ret_V_19_reg_1882 <= ret_V_19_fu_1271_p2;
                ret_V_43_reg_1887 <= ret_V_43_fu_1284_p2;
                sext_ln1118_2_reg_1729_pp0_iter2_reg <= sext_ln1118_2_reg_1729;
                sext_ln1118_2_reg_1729_pp0_iter3_reg <= sext_ln1118_2_reg_1729_pp0_iter2_reg;
                sext_ln1118_2_reg_1729_pp0_iter4_reg <= sext_ln1118_2_reg_1729_pp0_iter3_reg;
                sext_ln1118_2_reg_1729_pp0_iter5_reg <= sext_ln1118_2_reg_1729_pp0_iter4_reg;
                trunc_ln708_10_reg_1907 <= grp_fu_1626_p3(25 downto 15);
                trunc_ln708_13_reg_1770 <= r_V_35_fu_845_p2(30 downto 20);
                trunc_ln708_1_reg_1775 <= grp_fu_1564_p3(20 downto 10);
                trunc_ln708_8_reg_1765 <= r_V_29_fu_794_p2(30 downto 20);
                trunc_ln708_9_reg_1872 <= ret_V_36_fu_1154_p2(25 downto 15);
                trunc_ln708_9_reg_1872_pp0_iter7_reg <= trunc_ln708_9_reg_1872;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_4_reg_1750 <= mul_ln1118_4_fu_1543_p2;
                mul_ln1118_reg_1740 <= mul_ln1118_fu_1522_p2;
                mul_ln1192_9_reg_1734 <= mul_ln1192_9_fu_1516_p2;
                mul_ln700_2_reg_1709 <= mul_ln700_2_fu_1487_p2;
                mul_ln700_4_reg_1714 <= mul_ln700_4_fu_1493_p2;
                p_Val2_11_reg_1663 <= x_V_in_sig(43 downto 33);
                p_Val2_11_reg_1663_pp0_iter1_reg <= p_Val2_11_reg_1663;
                p_Val2_1_reg_1673 <= x_V_in_sig(164 downto 154);
                p_Val2_1_reg_1673_pp0_iter1_reg <= p_Val2_1_reg_1673;
                p_Val2_2_reg_1684 <= x_V_in_sig(54 downto 44);
                p_Val2_2_reg_1684_pp0_iter1_reg <= p_Val2_2_reg_1684;
                p_Val2_3_reg_1690 <= x_V_in_sig(175 downto 165);
                p_Val2_3_reg_1690_pp0_iter1_reg <= p_Val2_3_reg_1690;
                p_Val2_s_reg_1652 <= x_V_in_sig(32 downto 22);
                p_Val2_s_reg_1652_pp0_iter1_reg <= p_Val2_s_reg_1652;
                sext_ln1118_2_reg_1729 <= sext_ln1118_2_fu_495_p1;
                tmp_9_reg_1704 <= x_V_in_sig(42 downto 33);
                trunc_ln708_14_reg_1755 <= grp_fu_1549_p3(15 downto 5);
                trunc_ln708_s_reg_1745 <= ret_V_37_fu_616_p2(20 downto 10);
                trunc_ln_reg_1724 <= grp_fu_1507_p3(15 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                mul_ln1192_7_reg_1912 <= grp_fu_1635_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                r_V_1_reg_1851 <= grp_fu_1572_p2;
                r_V_3_reg_1862 <= grp_fu_1586_p3;
                ret_V_3_reg_1857 <= grp_fu_1578_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_22_reg_1719 <= grp_fu_1499_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_12_fu_931_p2 <= std_logic_vector(unsigned(r_V_23_fu_899_p2) + unsigned(sext_ln1118_15_fu_927_p1));
    add_ln1192_13_fu_986_p2 <= std_logic_vector(signed(rhs_V_6_fu_943_p1) + signed(ap_const_lv12_FA0));
    add_ln1192_15_fu_592_p2 <= std_logic_vector(unsigned(ret_V_35_fu_586_p2) + unsigned(ap_const_lv17_400));
    add_ln1192_17_fu_1068_p2 <= std_logic_vector(signed(grp_fu_1594_p4) + signed(rhs_V_2_fu_1060_p3));
    add_ln1192_18_fu_1108_p2 <= std_logic_vector(unsigned(add_ln1192_17_fu_1068_p2) + unsigned(rhs_V_3_fu_1104_p1));
    add_ln1192_19_fu_1148_p2 <= std_logic_vector(unsigned(add_ln1192_18_fu_1108_p2) + unsigned(rhs_V_4_fu_1144_p1));
    add_ln1192_22_fu_1198_p2 <= std_logic_vector(signed(sext_ln1192_12_fu_1194_p1) + signed(sext_ln1118_28_fu_1180_p1));
    add_ln1192_23_fu_1208_p2 <= std_logic_vector(signed(sext_ln1118_27_fu_1170_p1) + signed(ap_const_lv8_E0));
    add_ln1192_24_fu_1218_p2 <= std_logic_vector(signed(sext_ln1118_30_fu_1184_p1) + signed(sext_ln1192_16_fu_1214_p1));
    add_ln1192_25_fu_1228_p2 <= std_logic_vector(signed(sext_ln1192_13_fu_1204_p1) + signed(sext_ln1192_17_fu_1224_p1));
    add_ln1192_28_fu_637_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_479_p3) + unsigned(add_ln1192_32_fu_631_p2));
    add_ln1192_32_fu_631_p2 <= std_logic_vector(unsigned(r_V_s_fu_498_p3) + unsigned(ap_const_lv16_F920));
    add_ln1192_4_fu_717_p2 <= std_logic_vector(unsigned(sub_ln1192_1_fu_711_p2) + unsigned(sub_ln1192_fu_687_p2));
    add_ln1192_7_fu_505_p2 <= std_logic_vector(unsigned(r_V_s_fu_498_p3) + unsigned(ap_const_lv16_FF20));
    add_ln1192_8_fu_740_p2 <= std_logic_vector(signed(mul_ln1192_9_reg_1734) + signed(lhs_V_3_fu_669_p3));
    add_ln1192_9_fu_992_p2 <= std_logic_vector(signed(sext_ln1118_6_fu_982_p1) + signed(add_ln1192_13_fu_986_p2));
    add_ln1192_fu_1332_p2 <= std_logic_vector(unsigned(ret_V_29_fu_1326_p2) + unsigned(ap_const_lv12_7D));
    add_ln1193_fu_1301_p2 <= std_logic_vector(signed(r_V_1_reg_1851) + signed(sub_ln1193_1_fu_1295_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp100_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp100 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp105_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp105 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp109_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp109 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp122_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp122 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp128_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp128 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp131_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp131 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp147_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp147 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp33_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp33 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp60_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp60 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp66_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp66 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp80_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp80 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp81_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp81 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp87_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp87 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp89_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp89 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp93_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp93 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp97_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp97 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp98_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp98 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call100_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call100 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call120_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call120 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call165_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call165 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call177_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call177 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call191_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call191 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call210_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call210 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call225_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call225 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call231_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call231 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call244_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call244 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call248_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call248 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call259_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call259 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call27_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call27 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call43_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call43 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call63_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call63 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call69_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call69 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call78_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call78 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call88_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call88 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call259 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call259 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call259 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call259 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call259 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call259 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call259 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call191 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call210 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call225 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call248 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call259 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to7)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to7 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1499_p0 <= sext_ln703_2_fu_468_p1(11 - 1 downto 0);
    grp_fu_1499_p1 <= ap_const_lv16_1D(6 - 1 downto 0);
    grp_fu_1499_p2 <= ap_const_lv16_400(12 - 1 downto 0);
    grp_fu_1507_p0 <= sext_ln728_fu_476_p1(11 - 1 downto 0);
    grp_fu_1507_p1 <= ap_const_lv16_FFED(6 - 1 downto 0);
    grp_fu_1528_p1 <= ap_const_lv21_69(8 - 1 downto 0);
    grp_fu_1528_p2 <= (mul_ln700_4_reg_1714 & ap_const_lv5_0);
    grp_fu_1549_p0 <= sext_ln728_fu_476_p1(11 - 1 downto 0);
    grp_fu_1549_p1 <= sext_ln728_fu_476_p1(11 - 1 downto 0);
    grp_fu_1549_p2 <= ap_const_lv16_FDE0(11 - 1 downto 0);
    grp_fu_1564_p2 <= (p_Val2_3_reg_1690_pp0_iter2_reg & ap_const_lv10_0);
    grp_fu_1572_p1 <= ap_const_lv12_FE2(6 - 1 downto 0);
    grp_fu_1578_p0 <= sext_ln1116_fu_940_p1(7 - 1 downto 0);
    grp_fu_1578_p1 <= sext_ln1116_fu_940_p1(7 - 1 downto 0);
    grp_fu_1578_p2 <= ap_const_lv14_3F60(9 - 1 downto 0);
    grp_fu_1586_p1 <= ap_const_lv8_D4(7 - 1 downto 0);
    grp_fu_1605_p0 <= sext_ln1118_17_fu_1073_p1(7 - 1 downto 0);
    grp_fu_1605_p1 <= sext_ln1118_17_fu_1073_p1(7 - 1 downto 0);
    grp_fu_1626_p2 <= ap_const_lv26_3F08000(21 - 1 downto 0);
    grp_fu_1643_p2 <= ap_const_lv26_3F20000(21 - 1 downto 0);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp33)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp33) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_ap_start_reg;
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_255_input_V <= add_ln1192_7_fu_505_p2(15 downto 5);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp60)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp60) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_ap_start_reg;
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_264_input_V <= add_ln1192_28_fu_637_p2(15 downto 5);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp66)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp66) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_273_ap_start_reg;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp80)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp80) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_ap_start_reg;
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_282_input_V <= ret_V_30_fu_723_p2(15 downto 5);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp81)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp81) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_291_ap_start_reg;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp87)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp87) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_ap_start_reg;
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_300_input_V <= ret_V_32_fu_758_p2(15 downto 5);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp89)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp89) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_309_ap_start_reg;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp93)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp93) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_start_reg;
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_input_V <= ret_V_34_fu_778_p2(15 downto 5);

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp97)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp97) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_ap_start_reg;
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_327_input_V <= std_logic_vector(signed(p_Val2_11_reg_1663_pp0_iter1_reg) + signed(ap_const_lv11_7E9));

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp98) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_336_ap_start_reg;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp100)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_ap_start_reg;
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_345_input_V <= std_logic_vector(signed(p_Val2_3_reg_1690_pp0_iter1_reg) + signed(p_Val2_11_reg_1663_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp105)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp105) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_ap_start_reg;
        grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_354_input_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_11_fu_830_p4),11));


    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp109)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp109) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_363_ap_start_reg;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp122) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_start_reg;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp128)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp128) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_start_reg;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp131)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp131) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_start_reg;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp147)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp147) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_ap_start_reg;
    grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_399_input_V <= std_logic_vector(signed(p_Val2_1_reg_1673_pp0_iter3_reg) + signed(ap_const_lv11_2F));
    lhs_V_1_fu_479_p3 <= (p_Val2_1_reg_1673 & ap_const_lv5_0);
    lhs_V_3_fu_669_p3 <= (p_Val2_3_reg_1690_pp0_iter1_reg & ap_const_lv5_0);
    lhs_V_4_fu_1032_p3 <= (r_V_22_fu_1009_p2 & ap_const_lv10_0);
        lhs_V_5_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1673_pp0_iter5_reg),12));

    lhs_V_6_fu_1243_p3 <= (ret_V_38_fu_1237_p2 & ap_const_lv5_0);
    mul_ln1118_4_fu_1543_p0 <= sext_ln1118_34_fu_654_p1(16 - 1 downto 0);
    mul_ln1118_4_fu_1543_p1 <= sext_ln1118_34_fu_654_p1(16 - 1 downto 0);
    mul_ln1118_fu_1522_p0 <= sext_ln1118_24_fu_598_p1(17 - 1 downto 0);
    mul_ln1118_fu_1522_p1 <= sext_ln1118_24_fu_598_p1(17 - 1 downto 0);
    mul_ln1192_3_fu_1448_p0 <= p_6_reg_1811_pp0_iter7_reg;
    mul_ln1192_3_fu_1448_p1 <= mul_ln1192_2_reg_1902(28 - 1 downto 0);
    mul_ln1192_3_fu_1448_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_3_fu_1448_p0) * signed(mul_ln1192_3_fu_1448_p1))), 31));
    mul_ln1192_9_fu_1516_p0 <= sext_ln1118_2_fu_495_p1(11 - 1 downto 0);
    mul_ln1192_9_fu_1516_p1 <= sext_ln1118_2_fu_495_p1(11 - 1 downto 0);
    mul_ln1192_fu_1558_p0 <= sext_ln1118_fu_666_p1(11 - 1 downto 0);
    mul_ln1192_fu_1558_p1 <= sext_ln1118_fu_666_p1(11 - 1 downto 0);
    mul_ln700_1_fu_1409_p0 <= add_ln1192_reg_1897;
    mul_ln700_1_fu_1409_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_1409_p0) * signed(mul_ln700_reg_1892))), 36));
    mul_ln700_2_fu_1487_p0 <= sext_ln1118_29_fu_472_p1(11 - 1 downto 0);
    mul_ln700_2_fu_1487_p1 <= sext_ln1118_29_fu_472_p1(11 - 1 downto 0);
    mul_ln700_4_fu_1493_p0 <= sext_ln703_2_fu_468_p1(11 - 1 downto 0);
    mul_ln700_4_fu_1493_p1 <= ap_const_lv16_69(8 - 1 downto 0);
    mul_ln728_fu_1536_p0 <= sext_ln728_fu_476_p1(11 - 1 downto 0);
    mul_ln728_fu_1536_p1 <= ap_const_lv16_D2(9 - 1 downto 0);
    p_Val2_1_fu_428_p4 <= x_V_in_sig(164 downto 154);
    r_V_21_fu_976_p2 <= std_logic_vector(signed(sext_ln1118_4_fu_962_p1) + signed(sext_ln1118_5_fu_972_p1));
    r_V_22_fu_1009_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(sext_ln1118_7_fu_1005_p1));
    r_V_23_fu_899_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_895_p1) - signed(sext_ln1118_9_fu_885_p1));
    r_V_24_fu_921_p2 <= std_logic_vector(signed(sext_ln1118_14_fu_917_p1) - signed(sext_ln1118_13_fu_905_p1));
    r_V_25_fu_1055_p2 <= std_logic_vector(signed(sext_ln1118_2_reg_1729_pp0_iter5_reg) + signed(sext_ln1118_16_fu_1051_p1));
    r_V_26_fu_1090_p2 <= std_logic_vector(signed(sext_ln1118_18_fu_1076_p1) + signed(sext_ln1118_19_fu_1086_p1));
    r_V_27_fu_544_p2 <= std_logic_vector(signed(sext_ln1118_20_fu_529_p1) + signed(sext_ln1118_21_fu_540_p1));
    r_V_28_fu_572_p2 <= std_logic_vector(signed(sext_ln1118_22_fu_557_p1) + signed(sext_ln1118_23_fu_568_p1));
    r_V_29_fu_794_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_reg_1740) * signed('0' &ap_const_lv31_4E))), 31));
    r_V_30_fu_1130_p2 <= std_logic_vector(signed(sext_ln1118_25_fu_1114_p1) + signed(sext_ln1118_26_fu_1126_p1));
    r_V_32_fu_824_p2 <= std_logic_vector(signed(sext_ln1118_32_fu_820_p1) - signed(sext_ln1118_10_fu_775_p1));
    r_V_33_fu_1362_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(sext_ln1253_fu_1359_p1));
    r_V_34_fu_1371_p0 <= sext_ln1116_2_fu_1368_p1(7 - 1 downto 0);
    r_V_34_fu_1371_p1 <= sext_ln1116_2_fu_1368_p1(7 - 1 downto 0);
    r_V_34_fu_1371_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_34_fu_1371_p0) * signed(r_V_34_fu_1371_p1))), 14));
    r_V_35_fu_845_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_4_reg_1750) * signed('0' &ap_const_lv31_92))), 31));
    r_V_s_fu_498_p3 <= (tmp_9_reg_1704 & ap_const_lv6_0);
    ret_V_10_fu_952_p2 <= std_logic_vector(signed(sext_ln703_1_fu_949_p1) + signed(ap_const_lv8_E2));
    ret_V_19_fu_1271_p2 <= std_logic_vector(unsigned(ret_V_40_fu_1266_p2) + unsigned(ap_const_lv18_3F120));
    ret_V_1_fu_1306_p2 <= std_logic_vector(unsigned(add_ln1193_fu_1301_p2) + unsigned(ap_const_lv24_3400));
    ret_V_25_fu_1396_p2 <= std_logic_vector(signed(sext_ln703_9_fu_1393_p1) + signed(ap_const_lv9_7));
    ret_V_29_fu_1326_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_1322_p1) - signed(sext_ln1192_1_fu_1319_p1));
    ret_V_30_fu_723_p2 <= std_logic_vector(unsigned(add_ln1192_4_fu_717_p2) + unsigned(ap_const_lv16_300));
    ret_V_31_fu_1425_p2 <= std_logic_vector(unsigned(mul_ln700_1_fu_1409_p2) - unsigned(rhs_V_fu_1421_p1));
    ret_V_32_fu_758_p2 <= std_logic_vector(unsigned(sub_ln1192_2_fu_752_p2) + unsigned(ap_const_lv16_F9C0));
    ret_V_33_fu_1454_p2 <= std_logic_vector(unsigned(mul_ln1192_3_fu_1448_p2) + unsigned(ap_const_lv31_7E400000));
    ret_V_34_fu_778_p2 <= std_logic_vector(signed(mul_ln1192_9_reg_1734) + signed(ap_const_lv16_FB80));
    ret_V_35_fu_586_p2 <= std_logic_vector(signed(sext_ln703_3_fu_578_p1) - signed(sext_ln703_4_fu_582_p1));
    ret_V_36_fu_1154_p2 <= std_logic_vector(unsigned(add_ln1192_19_fu_1148_p2) + unsigned(ap_const_lv26_3F58000));
    ret_V_37_fu_616_p2 <= std_logic_vector(signed(grp_fu_1528_p3) + signed(rhs_V_5_fu_609_p3));
    ret_V_38_fu_1237_p2 <= std_logic_vector(signed(lhs_V_5_fu_1234_p1) + signed(rhs_V_6_fu_943_p1));
    ret_V_40_fu_1266_p2 <= std_logic_vector(signed(grp_fu_1605_p3) + signed(sext_ln1192_19_fu_1262_p1));
    ret_V_43_fu_1284_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1277_p1) - signed(sext_ln703_8_fu_1281_p1));
    rhs_V_1_fu_745_p3 <= (p_Val2_11_reg_1663_pp0_iter1_reg & ap_const_lv5_0);
    rhs_V_2_fu_1060_p3 <= (r_V_25_fu_1055_p2 & ap_const_lv10_0);
        rhs_V_3_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1096_p3),26));

        rhs_V_4_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_1136_p3),26));

    rhs_V_5_fu_609_p3 <= (mul_ln728_fu_1536_p2 & ap_const_lv5_0);
        rhs_V_6_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1690_pp0_iter5_reg),12));

        rhs_V_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_1414_p3),36));

        sext_ln1116_2_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1786_pp0_iter6_reg),14));

        sext_ln1116_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_s_reg_1791),14));

        sext_ln1118_10_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1690_pp0_iter1_reg),15));

        sext_ln1118_12_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_888_p3),14));

    sext_ln1118_13_fu_905_p0 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_return;
        sext_ln1118_13_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_13_fu_905_p0),10));

        sext_ln1118_14_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_909_p3),10));

        sext_ln1118_15_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_24_fu_921_p2),14));

        sext_ln1118_16_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_1044_p3),16));

        sext_ln1118_17_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1811),14));

        sext_ln1118_18_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1811),12));

        sext_ln1118_19_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_1079_p3),12));

        sext_ln1118_20_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_522_p3),16));

        sext_ln1118_21_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_533_p3),16));

        sext_ln1118_22_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_9_fu_550_p3),16));

        sext_ln1118_23_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_10_fu_561_p3),16));

        sext_ln1118_24_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_15_fu_592_p2),31));

    sext_ln1118_25_fu_1114_p0 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_return;
        sext_ln1118_25_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_25_fu_1114_p0),12));

        sext_ln1118_26_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_1118_p3),12));

        sext_ln1118_27_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_9_reg_1824),8));

        sext_ln1118_28_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_1173_p3),10));

        sext_ln1118_29_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_428_p4),21));

        sext_ln1118_2_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1652),16));

        sext_ln1118_30_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_reg_1830),9));

        sext_ln1118_32_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_676_p3),15));

        sext_ln1118_34_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_22_reg_1719),31));

        sext_ln1118_4_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_5_reg_1780_pp0_iter5_reg),11));

        sext_ln1118_5_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_965_p3),11));

        sext_ln1118_6_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_21_fu_976_p2),12));

        sext_ln1118_7_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_998_p3),15));

        sext_ln1118_9_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1690_pp0_iter4_reg),14));

        sext_ln1118_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1684_pp0_iter1_reg),21));

        sext_ln1192_12_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_1187_p3),10));

        sext_ln1192_13_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_22_fu_1198_p2),11));

        sext_ln1192_16_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_23_fu_1208_p2),9));

        sext_ln1192_17_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_24_fu_1218_p2),11));

        sext_ln1192_19_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_1255_p3),18));

        sext_ln1192_1_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1684_pp0_iter6_reg),12));

        sext_ln1192_2_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_390_ap_return),12));

        sext_ln1192_3_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_676_p3),16));

        sext_ln1192_4_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_700_p3),16));

        sext_ln1253_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1841_pp0_iter6_reg),8));

        sext_ln703_1_fu_949_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_26_reg_1806),8));

        sext_ln703_2_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_428_p4),16));

        sext_ln703_3_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_27_fu_544_p2),17));

        sext_ln703_4_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_28_fu_572_p2),17));

        sext_ln703_7_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_381_ap_return),8));

        sext_ln703_8_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1846),8));

        sext_ln703_9_fu_1393_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_43_reg_1887),9));

        sext_ln728_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_11_reg_1663),16));

    shl_ln1118_10_fu_561_p3 <= (p_Val2_11_reg_1663 & ap_const_lv2_0);
    shl_ln1118_1_fu_676_p3 <= (p_Val2_3_reg_1690_pp0_iter1_reg & ap_const_lv3_0);
    shl_ln1118_2_fu_693_p3 <= (p_Val2_s_reg_1652_pp0_iter1_reg & ap_const_lv5_0);
    shl_ln1118_3_fu_700_p3 <= (p_Val2_s_reg_1652_pp0_iter1_reg & ap_const_lv3_0);
    shl_ln1118_4_fu_998_p3 <= (p_Val2_1_reg_1673_pp0_iter5_reg & ap_const_lv3_0);
    shl_ln1118_5_fu_1018_p3 <= (p_Val2_3_reg_1690_pp0_iter5_reg & ap_const_lv4_0);
    shl_ln1118_6_fu_888_p3 <= (p_Val2_3_reg_1690_pp0_iter4_reg & ap_const_lv2_0);
    shl_ln1118_7_fu_533_p3 <= (p_Val2_1_reg_1673 & ap_const_lv2_0);
    shl_ln1118_8_fu_1044_p3 <= (p_Val2_s_reg_1652_pp0_iter5_reg & ap_const_lv4_0);
    shl_ln1118_9_fu_550_p3 <= (p_Val2_11_reg_1663 & ap_const_lv4_0);
    shl_ln1118_s_fu_522_p3 <= (p_Val2_1_reg_1673 & ap_const_lv4_0);
    shl_ln1193_fu_1290_p2 <= std_logic_vector(shift_left(unsigned(r_V_1_reg_1851),to_integer(unsigned('0' & ap_const_lv24_2(24-1 downto 0)))));
    sub_ln1192_1_fu_711_p2 <= std_logic_vector(unsigned(shl_ln1118_2_fu_693_p3) - unsigned(sext_ln1192_4_fu_707_p1));
    sub_ln1192_2_fu_752_p2 <= std_logic_vector(unsigned(add_ln1192_8_fu_740_p2) - unsigned(rhs_V_1_fu_745_p3));
    sub_ln1192_fu_687_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_683_p1) - signed(lhs_V_3_fu_669_p3));
    sub_ln1193_1_fu_1295_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(shl_ln1193_fu_1290_p2));
    tmp_10_fu_1136_p3 <= (r_V_30_fu_1130_p2 & ap_const_lv10_0);
    tmp_11_fu_1381_p3 <= (r_V_33_fu_1362_p2 & ap_const_lv5_0);
    tmp_1_fu_909_p1 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_318_ap_return;
    tmp_1_fu_909_p3 <= (tmp_1_fu_909_p1 & ap_const_lv2_0);
    tmp_2_fu_1079_p3 <= (p_6_reg_1811 & ap_const_lv4_0);
    tmp_3_fu_1118_p1 <= grp_sin_lut_ap_fixed_11_6_5_3_0_s_fu_372_ap_return;
    tmp_3_fu_1118_p3 <= (tmp_3_fu_1118_p1 & ap_const_lv4_0);
    tmp_4_fu_1173_p3 <= (p_9_reg_1824 & ap_const_lv2_0);
    tmp_5_fu_1187_p3 <= (p_1_reg_1830 & ap_const_lv2_0);
    tmp_6_fu_1255_p3 <= (p_Val2_8_reg_1836 & ap_const_lv5_0);
    tmp_7_fu_1414_p3 <= (p_Val2_5_reg_1796_pp0_iter7_reg & ap_const_lv25_0);
    tmp_fu_1096_p3 <= (r_V_26_fu_1090_p2 & ap_const_lv10_0);
    tmp_s_fu_965_p3 <= (p_5_reg_1780_pp0_iter5_reg & ap_const_lv3_0);
    trunc_ln708_11_fu_830_p4 <= r_V_32_fu_824_p2(14 downto 5);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_31_fu_1425_p2(35 downto 25);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= ret_V_33_fu_1454_p2(30 downto 20);

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1872_pp0_iter7_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_10_reg_1907;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= grp_fu_1643_p3(25 downto 15);

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
