-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (191 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.009437,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=17,HLS_SYN_DSP=35,HLS_SYN_FF=1464,HLS_SYN_LUT=2414,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv192_lc_1 : STD_LOGIC_VECTOR (191 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_B3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_B4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110100";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv18_3EE40 : STD_LOGIC_VECTOR (17 downto 0) := "111110111001000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_3E700 : STD_LOGIC_VECTOR (17 downto 0) := "111110011100000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv18_3FC80 : STD_LOGIC_VECTOR (17 downto 0) := "111111110010000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv19_1000 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv18_3E4C0 : STD_LOGIC_VECTOR (17 downto 0) := "111110010011000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv36_9C : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000010011100";
    constant ap_const_lv12_FD3 : STD_LOGIC_VECTOR (11 downto 0) := "111111010011";
    constant ap_const_lv36_125 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000100100101";
    constant ap_const_lv27_1B000 : STD_LOGIC_VECTOR (26 downto 0) := "000000000011011000000000000";
    constant ap_const_lv18_C40 : STD_LOGIC_VECTOR (17 downto 0) := "000000110001000000";
    constant ap_const_lv8_C4 : STD_LOGIC_VECTOR (7 downto 0) := "11000100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv12_5E : STD_LOGIC_VECTOR (11 downto 0) := "000001011110";
    constant ap_const_lv13_FA : STD_LOGIC_VECTOR (12 downto 0) := "0000011111010";
    constant ap_const_lv14_3E80 : STD_LOGIC_VECTOR (13 downto 0) := "11111010000000";
    constant ap_const_lv30_3F580000 : STD_LOGIC_VECTOR (29 downto 0) := "111111010110000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv20_FC480 : STD_LOGIC_VECTOR (19 downto 0) := "11111100010010000000";
    constant ap_const_lv34_3C9000000 : STD_LOGIC_VECTOR (33 downto 0) := "1111001001000000000000000000000000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_E : STD_LOGIC_VECTOR (8 downto 0) := "000001110";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv18_D2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000011010010";
    constant ap_const_lv18_3B : STD_LOGIC_VECTOR (17 downto 0) := "000000000000111011";
    constant ap_const_lv18_1000 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_const_lv18_3FFD9 : STD_LOGIC_VECTOR (17 downto 0) := "111111111111011001";
    constant ap_const_lv24_D2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000011010010";
    constant ap_const_lv18_1A4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000110100100";
    constant ap_const_lv18_3F7C0 : STD_LOGIC_VECTOR (17 downto 0) := "111111011111000000";
    constant ap_const_lv18_31 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000110001";
    constant ap_const_lv13_1FC5 : STD_LOGIC_VECTOR (12 downto 0) := "1111111000101";
    constant ap_const_lv14_3DC0 : STD_LOGIC_VECTOR (13 downto 0) := "11110111000000";
    constant ap_const_lv18_3FFCF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111001111";
    constant ap_const_lv9_1A8 : STD_LOGIC_VECTOR (8 downto 0) := "110101000";
    constant ap_const_lv13_13 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010011";
    constant ap_const_lv18_23 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100011";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv12_F80 : STD_LOGIC_VECTOR (11 downto 0) := "111110000000";
    constant ap_const_lv30_3F0C0000 : STD_LOGIC_VECTOR (29 downto 0) := "111111000011000000000000000000";
    constant ap_const_lv29_1F240000 : STD_LOGIC_VECTOR (28 downto 0) := "11111001001000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (191 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (191 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_fu_394_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1603 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1603_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1603_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_reg_1610 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_reg_1610_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_fu_414_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_1620 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_1620_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_1620_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_reg_1632 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_reg_1632_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_reg_1632_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_reg_1632_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_5_fu_434_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_5_reg_1638 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_5_reg_1638_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_5_reg_1638_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_1_fu_444_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_1_reg_1651 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_1_reg_1651_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_1_reg_1651_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_8_fu_456_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1192_8_fu_456_p2 : signal is "no";
    signal add_ln1192_8_reg_1657 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_reg_1662 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_7_reg_1667 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_17_fu_1406_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_17_reg_1672 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln700_3_fu_1412_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln700_3_reg_1677 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1418_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_25_reg_1682 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln_reg_1687 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_4_fu_1435_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_4_reg_1692 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_fu_1441_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1118_reg_1697 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln708_s_reg_1702 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_5_fu_1462_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1118_5_reg_1707 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln708_13_reg_1712 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_1_reg_1717 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_2_fu_1485_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_2_reg_1722 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_operator_s_fu_275_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_s_22_reg_1727 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_operator_s_fu_282_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_5_reg_1732 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_27_fu_756_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_27_reg_1737 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_8_reg_1742 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_operator_s_fu_296_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_2_reg_1747 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_2_reg_1747_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_2_reg_1747_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln708_12_reg_1752 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_1_fu_826_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_1_reg_1757 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1498_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_3_reg_1762 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_2_reg_1767 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1514_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_6_reg_1772 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1522_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_36_reg_1777 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_operator_s_fu_317_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_6_reg_1782 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_6_reg_1782_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1192_18_fu_1033_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln1192_18_reg_1787 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1547_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_18_reg_1792 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1557_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_43_reg_1797 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_operator_s_fu_338_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_32_reg_1802 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_operator_s_fu_345_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_43_reg_1807 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln700_fu_1565_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln700_reg_1812 : STD_LOGIC_VECTOR (40 downto 0);
    signal add_ln1192_fu_1128_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_reg_1817 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1192_3_fu_1571_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1192_3_reg_1822 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_9_reg_1827 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_9_reg_1827_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_6_reg_1832 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_6_reg_1832_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_operator_s_fu_366_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_37_reg_1837 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_47_fu_1254_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_47_reg_1842 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_operator_s_fu_380_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0_reg_1847 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0_reg_1847_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln700_1_fu_1266_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_ln700_1_reg_1852 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_operator_s_fu_387_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_10_reg_1857 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_1862 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1586_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln1192_9_reg_1867 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_operator_s_fu_275_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_275_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_275_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_275_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_275_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_275_n_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call76 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call76 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call76 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call76 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call76 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call76 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call76 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp38 : BOOLEAN;
    signal grp_operator_s_fu_282_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_282_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_282_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_282_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_282_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_282_n_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call90 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call90 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call90 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call90 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call90 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call90 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call90 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp42 : BOOLEAN;
    signal grp_operator_s_fu_289_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_289_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_289_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_289_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_289_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_289_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call120 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call120 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call120 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call120 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call120 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call120 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call120 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp43 : BOOLEAN;
    signal grp_operator_s_fu_296_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_296_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_296_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_296_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_296_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_296_n_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call227 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call227 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call227 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call227 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call227 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call227 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call227 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp70 : BOOLEAN;
    signal grp_operator_s_fu_303_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_303_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_303_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_303_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_303_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_303_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call29 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call29 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call29 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call29 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call29 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call29 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call29 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp76 : BOOLEAN;
    signal grp_operator_s_fu_310_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_310_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_310_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_310_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_310_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_310_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call66 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call66 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call66 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call66 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call66 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call66 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call66 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp83 : BOOLEAN;
    signal grp_operator_s_fu_317_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_317_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_317_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_317_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_317_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call101 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call101 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call101 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call101 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call101 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call101 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call101 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp86 : BOOLEAN;
    signal grp_operator_s_fu_324_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_324_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_324_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_324_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_324_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_324_n_V : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_operator_s_fu_324_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call179 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call179 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call179 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call179 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call179 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call179 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call179 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp96 : BOOLEAN;
    signal grp_operator_s_fu_331_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_331_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_331_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_331_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_331_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_331_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call190 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call190 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call190 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call190 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call190 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call190 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call190 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp97 : BOOLEAN;
    signal grp_operator_s_fu_338_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_338_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_338_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_338_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_338_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_338_n_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call205 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call205 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call205 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call205 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call205 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call205 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call205 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp99 : BOOLEAN;
    signal grp_operator_s_fu_345_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_345_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_345_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_345_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_345_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call244 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call244 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call244 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call244 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call244 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call244 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call244 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp103 : BOOLEAN;
    signal grp_operator_s_fu_352_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_352_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_352_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_352_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_352_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_352_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call46 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call46 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call46 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call46 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call46 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call46 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call46 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp118 : BOOLEAN;
    signal grp_operator_s_fu_359_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_359_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_359_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_359_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_359_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_359_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call166 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call166 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call166 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call166 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call166 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call166 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call166 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp172 : BOOLEAN;
    signal grp_operator_s_fu_366_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_366_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_366_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_366_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_366_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_366_n_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call221 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call221 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call221 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call221 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call221 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call221 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call221 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp195 : BOOLEAN;
    signal grp_operator_s_fu_373_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_373_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_373_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_373_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_373_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_373_ap_return : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call240 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call240 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call240 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call240 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call240 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call240 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call240 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp196 : BOOLEAN;
    signal grp_operator_s_fu_380_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_380_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_380_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_380_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_380_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_380_n_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call255 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call255 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call255 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call255 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call255 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call255 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call255 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp199 : BOOLEAN;
    signal grp_operator_s_fu_387_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_387_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_387_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_387_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_387_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call60 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call60 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call60 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call60 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call60 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call60 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call60 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp208 : BOOLEAN;
    signal grp_operator_s_fu_275_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_282_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_289_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_296_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_303_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_310_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_317_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_324_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_331_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_338_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_345_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_352_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_359_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_366_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_373_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_380_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_387_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mul_ln1192_6_fu_1398_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_3_fu_448_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_38_fu_471_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of ret_V_38_fu_471_p2 : signal is "no";
    signal grp_fu_1426_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_1_fu_516_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1192_fu_523_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_35_fu_528_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_s_fu_545_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_7_fu_552_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln1118_7_fu_569_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_8_fu_580_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_15_fu_576_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_16_fu_587_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln1118_9_fu_597_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_s_fu_608_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_17_fu_604_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_18_fu_615_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_29_fu_591_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_30_fu_619_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_5_fu_625_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_6_fu_629_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_39_fu_633_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1192_15_fu_639_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_1_fu_1455_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1447_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_V_5_fu_656_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_41_fu_663_p2 : STD_LOGIC_VECTOR (23 downto 0);
    attribute use_dsp48 of ret_V_41_fu_663_p2 : signal is "no";
    signal lhs_V_1_fu_497_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_30_fu_678_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_28_fu_684_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1468_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1477_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_s_fu_732_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_744_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_8_fu_740_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_9_fu_752_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_31_fu_762_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_37_fu_788_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1490_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln1193_fu_809_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_fu_806_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_shl_fu_812_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln1193_fu_820_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1506_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_33_fu_842_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of ret_V_33_fu_842_p2 : signal is "no";
    signal sext_ln703_1_fu_861_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_10_fu_864_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_24_fu_877_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_899_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_5_fu_906_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1118_fu_910_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln727_fu_832_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_1_fu_922_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_2_fu_933_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_7_fu_940_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_4_fu_888_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_26_fu_944_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_10_fu_950_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_12_fu_953_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_25_fu_916_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_4_fu_963_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln728_fu_1541_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1530_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal rhs_V_2_fu_975_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln1118_11_fu_987_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_991_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_991_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_1003_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_fu_1003_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_12_fu_999_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_13_fu_1011_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_28_fu_1015_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_4_fu_1021_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_17_fu_982_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 of add_ln1192_17_fu_982_p2 : signal is "no";
    signal rhs_V_3_fu_1029_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_5_fu_1047_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_6_fu_1050_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_42_fu_1053_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_6_fu_1059_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_3_fu_1071_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_23_fu_1078_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_2_fu_874_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_34_fu_1082_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_10_fu_1088_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1192_2_fu_1118_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_1_fu_1115_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_32_fu_1122_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_12_fu_1134_p2 : STD_LOGIC_VECTOR (13 downto 0);
    attribute use_dsp48 of ret_V_12_fu_1134_p2 : signal is "no";
    signal tmp_6_fu_1146_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_1158_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_20_fu_1154_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_21_fu_1166_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_32_fu_1170_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_1176_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal rhs_V_4_fu_1184_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln1192_19_fu_1188_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_40_fu_1193_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_10_fu_1209_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_16_fu_1216_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_44_fu_1220_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 of ret_V_44_fu_1220_p2 : signal is "no";
    signal ret_V_22_fu_1225_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1577_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln703_10_fu_1247_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_11_fu_1251_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln700_1_fu_1266_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln700_1_fu_1266_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1192_4_fu_1278_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1192_4_fu_1278_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln1192_4_fu_1278_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ret_V_37_fu_1284_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1253_fu_1300_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_36_fu_1312_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_3_fu_1309_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_36_fu_1312_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_36_fu_1312_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_35_fu_1303_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1322_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_12_fu_1334_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_28_fu_1337_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_1347_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal rhs_V_fu_1354_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal ret_V_34_fu_1358_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1594_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_12_fu_1384_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1192_6_fu_1398_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_6_fu_1398_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_17_fu_1406_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_16_fu_486_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_17_fu_1406_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln700_3_fu_1412_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_3_fu_1412_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_4_fu_490_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1418_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1418_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1418_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1426_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1426_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_fu_494_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_4_fu_1435_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_3_fu_513_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_4_fu_1435_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_fu_1441_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_19_fu_645_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1118_fu_1441_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1447_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1447_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln728_1_fu_1455_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_1_fu_1455_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_5_fu_1462_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_25_fu_701_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1118_5_fu_1462_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1468_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1468_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1468_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1477_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_2_fu_1485_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1192_2_fu_1485_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1490_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1498_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_fu_835_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1498_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1498_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1506_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1514_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln728_fu_1541_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_fu_1541_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1547_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1547_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1557_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_11_fu_987_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1557_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1577_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1594_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1594_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component operator_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        n_V : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component myproject_mul_mul_12s_12s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_12s_12s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_9ns_12s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_7ns_12s_14ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_7s_12s_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_19s_19s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_mac_muladd_9ns_24s_24ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_10ns_12s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_18s_18s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_mac_muladd_12s_12s_13s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_12s_24s_24ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_7ns_12s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_am_addmul_7s_12s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_7s_7s_11s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_muladd_7s_12s_18s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_am_addmul_8s_7s_8s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_mac_muladd_13s_7s_13s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_ama_addmulsub_17s_13s_16s_29s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_ama_addmuladd_7s_7s_5ns_8s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mac_muladd_7s_7s_19s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mul_mul_14s_27s_41_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component myproject_mul_mul_17s_14s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mac_muladd_12s_20s_25s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_am_addmul_14s_14s_9s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mac_muladd_7s_24s_25s_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;



begin
    grp_operator_s_fu_275 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_275_ap_start,
        ap_done => grp_operator_s_fu_275_ap_done,
        ap_idle => grp_operator_s_fu_275_ap_idle,
        ap_ready => grp_operator_s_fu_275_ap_ready,
        ap_ce => grp_operator_s_fu_275_ap_ce,
        n_V => grp_operator_s_fu_275_n_V,
        ap_return => grp_operator_s_fu_275_ap_return);

    grp_operator_s_fu_282 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_282_ap_start,
        ap_done => grp_operator_s_fu_282_ap_done,
        ap_idle => grp_operator_s_fu_282_ap_idle,
        ap_ready => grp_operator_s_fu_282_ap_ready,
        ap_ce => grp_operator_s_fu_282_ap_ce,
        n_V => grp_operator_s_fu_282_n_V,
        ap_return => grp_operator_s_fu_282_ap_return);

    grp_operator_s_fu_289 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_289_ap_start,
        ap_done => grp_operator_s_fu_289_ap_done,
        ap_idle => grp_operator_s_fu_289_ap_idle,
        ap_ready => grp_operator_s_fu_289_ap_ready,
        ap_ce => grp_operator_s_fu_289_ap_ce,
        n_V => trunc_ln708_7_reg_1667,
        ap_return => grp_operator_s_fu_289_ap_return);

    grp_operator_s_fu_296 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_296_ap_start,
        ap_done => grp_operator_s_fu_296_ap_done,
        ap_idle => grp_operator_s_fu_296_ap_idle,
        ap_ready => grp_operator_s_fu_296_ap_ready,
        ap_ce => grp_operator_s_fu_296_ap_ce,
        n_V => grp_operator_s_fu_296_n_V,
        ap_return => grp_operator_s_fu_296_ap_return);

    grp_operator_s_fu_303 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_303_ap_start,
        ap_done => grp_operator_s_fu_303_ap_done,
        ap_idle => grp_operator_s_fu_303_ap_idle,
        ap_ready => grp_operator_s_fu_303_ap_ready,
        ap_ce => grp_operator_s_fu_303_ap_ce,
        n_V => trunc_ln_reg_1687,
        ap_return => grp_operator_s_fu_303_ap_return);

    grp_operator_s_fu_310 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_310_ap_start,
        ap_done => grp_operator_s_fu_310_ap_done,
        ap_idle => grp_operator_s_fu_310_ap_idle,
        ap_ready => grp_operator_s_fu_310_ap_ready,
        ap_ce => grp_operator_s_fu_310_ap_ce,
        n_V => p_Val2_s_reg_1603_pp0_iter1_reg,
        ap_return => grp_operator_s_fu_310_ap_return);

    grp_operator_s_fu_317 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_317_ap_start,
        ap_done => grp_operator_s_fu_317_ap_done,
        ap_idle => grp_operator_s_fu_317_ap_idle,
        ap_ready => grp_operator_s_fu_317_ap_ready,
        ap_ce => grp_operator_s_fu_317_ap_ce,
        n_V => p_Val2_1_reg_1620_pp0_iter1_reg,
        ap_return => grp_operator_s_fu_317_ap_return);

    grp_operator_s_fu_324 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_324_ap_start,
        ap_done => grp_operator_s_fu_324_ap_done,
        ap_idle => grp_operator_s_fu_324_ap_idle,
        ap_ready => grp_operator_s_fu_324_ap_ready,
        ap_ce => grp_operator_s_fu_324_ap_ce,
        n_V => grp_operator_s_fu_324_n_V,
        ap_return => grp_operator_s_fu_324_ap_return);

    grp_operator_s_fu_331 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_331_ap_start,
        ap_done => grp_operator_s_fu_331_ap_done,
        ap_idle => grp_operator_s_fu_331_ap_idle,
        ap_ready => grp_operator_s_fu_331_ap_ready,
        ap_ce => grp_operator_s_fu_331_ap_ce,
        n_V => trunc_ln708_s_reg_1702,
        ap_return => grp_operator_s_fu_331_ap_return);

    grp_operator_s_fu_338 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_338_ap_start,
        ap_done => grp_operator_s_fu_338_ap_done,
        ap_idle => grp_operator_s_fu_338_ap_idle,
        ap_ready => grp_operator_s_fu_338_ap_ready,
        ap_ce => grp_operator_s_fu_338_ap_ce,
        n_V => grp_operator_s_fu_338_n_V,
        ap_return => grp_operator_s_fu_338_ap_return);

    grp_operator_s_fu_345 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_345_ap_start,
        ap_done => grp_operator_s_fu_345_ap_done,
        ap_idle => grp_operator_s_fu_345_ap_idle,
        ap_ready => grp_operator_s_fu_345_ap_ready,
        ap_ce => grp_operator_s_fu_345_ap_ce,
        n_V => trunc_ln708_13_reg_1712,
        ap_return => grp_operator_s_fu_345_ap_return);

    grp_operator_s_fu_352 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_352_ap_start,
        ap_done => grp_operator_s_fu_352_ap_done,
        ap_idle => grp_operator_s_fu_352_ap_idle,
        ap_ready => grp_operator_s_fu_352_ap_ready,
        ap_ce => grp_operator_s_fu_352_ap_ce,
        n_V => trunc_ln708_1_reg_1717,
        ap_return => grp_operator_s_fu_352_ap_return);

    grp_operator_s_fu_359 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_359_ap_start,
        ap_done => grp_operator_s_fu_359_ap_done,
        ap_idle => grp_operator_s_fu_359_ap_idle,
        ap_ready => grp_operator_s_fu_359_ap_ready,
        ap_ce => grp_operator_s_fu_359_ap_ce,
        n_V => trunc_ln708_8_reg_1742,
        ap_return => grp_operator_s_fu_359_ap_return);

    grp_operator_s_fu_366 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_366_ap_start,
        ap_done => grp_operator_s_fu_366_ap_done,
        ap_idle => grp_operator_s_fu_366_ap_idle,
        ap_ready => grp_operator_s_fu_366_ap_ready,
        ap_ce => grp_operator_s_fu_366_ap_ce,
        n_V => grp_operator_s_fu_366_n_V,
        ap_return => grp_operator_s_fu_366_ap_return);

    grp_operator_s_fu_373 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_373_ap_start,
        ap_done => grp_operator_s_fu_373_ap_done,
        ap_idle => grp_operator_s_fu_373_ap_idle,
        ap_ready => grp_operator_s_fu_373_ap_ready,
        ap_ce => grp_operator_s_fu_373_ap_ce,
        n_V => trunc_ln708_12_reg_1752,
        ap_return => grp_operator_s_fu_373_ap_return);

    grp_operator_s_fu_380 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_380_ap_start,
        ap_done => grp_operator_s_fu_380_ap_done,
        ap_idle => grp_operator_s_fu_380_ap_idle,
        ap_ready => grp_operator_s_fu_380_ap_ready,
        ap_ce => grp_operator_s_fu_380_ap_ce,
        n_V => grp_operator_s_fu_380_n_V,
        ap_return => grp_operator_s_fu_380_ap_return);

    grp_operator_s_fu_387 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_387_ap_start,
        ap_done => grp_operator_s_fu_387_ap_done,
        ap_idle => grp_operator_s_fu_387_ap_idle,
        ap_ready => grp_operator_s_fu_387_ap_ready,
        ap_ce => grp_operator_s_fu_387_ap_ce,
        n_V => trunc_ln708_2_reg_1767,
        ap_return => grp_operator_s_fu_387_ap_return);

    myproject_mul_mul_12s_12s_18_1_1_U3 : component myproject_mul_mul_12s_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln1192_6_fu_1398_p0,
        din1 => mul_ln1192_6_fu_1398_p1,
        dout => mul_ln1192_6_fu_1398_p2);

    myproject_mul_mul_12s_12s_24_1_1_U4 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_17_fu_1406_p0,
        din1 => r_V_17_fu_1406_p1,
        dout => r_V_17_fu_1406_p2);

    myproject_mul_mul_9ns_12s_18_1_1_U5 : component myproject_mul_mul_9ns_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln700_3_fu_1412_p0,
        din1 => mul_ln700_3_fu_1412_p1,
        dout => mul_ln700_3_fu_1412_p2);

    myproject_mac_muladd_7ns_12s_14ns_18_1_1_U6 : component myproject_mac_muladd_7ns_12s_14ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        din2_WIDTH => 14,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1418_p0,
        din1 => grp_fu_1418_p1,
        din2 => grp_fu_1418_p2,
        dout => grp_fu_1418_p3);

    myproject_mac_muladd_7s_12s_18ns_18_1_1_U7 : component myproject_mac_muladd_7s_12s_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1426_p0,
        din1 => grp_fu_1426_p1,
        din2 => lhs_V_1_fu_497_p3,
        dout => grp_fu_1426_p3);

    myproject_mul_mul_12s_12s_24_1_1_U8 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_4_fu_1435_p0,
        din1 => r_V_4_fu_1435_p1,
        dout => r_V_4_fu_1435_p2);

    myproject_mul_mul_19s_19s_36_1_1_U9 : component myproject_mul_mul_19s_19s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 19,
        dout_WIDTH => 36)
    port map (
        din0 => mul_ln1118_fu_1441_p0,
        din1 => mul_ln1118_fu_1441_p1,
        dout => mul_ln1118_fu_1441_p2);

    myproject_mac_muladd_9ns_24s_24ns_24_1_1_U10 : component myproject_mac_muladd_9ns_24s_24ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_1447_p0,
        din1 => r_V_17_reg_1672,
        din2 => grp_fu_1447_p2,
        dout => grp_fu_1447_p3);

    myproject_mul_mul_10ns_12s_18_1_1_U11 : component myproject_mul_mul_10ns_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln728_1_fu_1455_p0,
        din1 => mul_ln728_1_fu_1455_p1,
        dout => mul_ln728_1_fu_1455_p2);

    myproject_mul_mul_18s_18s_36_1_1_U12 : component myproject_mul_mul_18s_18s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        din0 => mul_ln1118_5_fu_1462_p0,
        din1 => mul_ln1118_5_fu_1462_p1,
        dout => mul_ln1118_5_fu_1462_p2);

    myproject_mac_muladd_12s_12s_13s_18_1_1_U13 : component myproject_mac_muladd_12s_12s_13s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 13,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1468_p0,
        din1 => grp_fu_1468_p1,
        din2 => grp_fu_1468_p2,
        dout => grp_fu_1468_p3);

    myproject_mac_muladd_12s_24s_24ns_24_1_1_U14 : component myproject_mac_muladd_12s_24s_24ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        din0 => p_Val2_s_reg_1603_pp0_iter1_reg,
        din1 => r_V_4_reg_1692,
        din2 => grp_fu_1477_p2,
        dout => grp_fu_1477_p3);

    myproject_mul_mul_7ns_12s_18_1_1_U15 : component myproject_mul_mul_7ns_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln1192_2_fu_1485_p0,
        din1 => mul_ln1192_2_fu_1485_p1,
        dout => mul_ln1192_2_fu_1485_p2);

    myproject_am_addmul_7s_12s_26_1_1_U16 : component myproject_am_addmul_7s_12s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1490_p0,
        din1 => p_Val2_s_reg_1603_pp0_iter2_reg,
        dout => grp_fu_1490_p2);

    myproject_mac_muladd_7s_7s_11s_14_1_1_U17 : component myproject_mac_muladd_7s_7s_11s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 11,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1498_p0,
        din1 => grp_fu_1498_p1,
        din2 => grp_fu_1498_p2,
        dout => grp_fu_1498_p3);

    myproject_mac_muladd_7s_12s_18s_18_1_1_U18 : component myproject_mac_muladd_7s_12s_18s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1506_p0,
        din1 => p_Val2_5_reg_1638_pp0_iter2_reg,
        din2 => mul_ln1192_2_reg_1722,
        dout => grp_fu_1506_p3);

    myproject_am_addmul_8s_7s_8s_17_1_1_U19 : component myproject_am_addmul_8s_7s_8s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        din2_WIDTH => 8,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_1514_p0,
        din1 => grp_operator_s_fu_310_ap_return,
        din2 => ret_V_10_fu_864_p2,
        dout => grp_fu_1514_p3);

    myproject_mac_muladd_13s_7s_13s_14_1_1_U20 : component myproject_mac_muladd_13s_7s_13s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 7,
        din2_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => ap_const_lv13_13,
        din1 => p_5_reg_1732,
        din2 => r_V_24_fu_877_p3,
        dout => grp_fu_1522_p3);

    myproject_ama_addmulsub_17s_13s_16s_29s_30_1_1_U21 : component myproject_ama_addmulsub_17s_13s_16s_29s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 13,
        din2_WIDTH => 16,
        din3_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => shl_ln1118_1_fu_922_p3,
        din1 => r_V_24_fu_877_p3,
        din2 => add_ln1192_12_fu_953_p2,
        din3 => lhs_V_4_fu_963_p3,
        dout => grp_fu_1530_p4);

    myproject_mul_mul_7ns_12s_18_1_1_U22 : component myproject_mul_mul_7ns_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln728_fu_1541_p0,
        din1 => mul_ln728_fu_1541_p1,
        dout => mul_ln728_fu_1541_p2);

    myproject_ama_addmuladd_7s_7s_5ns_8s_12_1_1_U23 : component myproject_ama_addmuladd_7s_7s_5ns_8s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 5,
        din3_WIDTH => 8,
        dout_WIDTH => 12)
    port map (
        din0 => grp_operator_s_fu_324_ap_return,
        din1 => grp_operator_s_fu_331_ap_return,
        din2 => grp_fu_1547_p2,
        din3 => grp_fu_1547_p3,
        dout => grp_fu_1547_p4);

    myproject_mac_muladd_7s_7s_19s_20_1_1_U24 : component myproject_mac_muladd_7s_7s_19s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_1557_p0,
        din1 => grp_fu_1557_p1,
        din2 => lhs_V_6_fu_1059_p3,
        dout => grp_fu_1557_p3);

    myproject_mul_mul_14s_27s_41_1_1_U25 : component myproject_mul_mul_14s_27s_41_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 27,
        dout_WIDTH => 41)
    port map (
        din0 => ret_V_3_reg_1762,
        din1 => ret_V_1_reg_1757,
        dout => mul_ln700_fu_1565_p2);

    myproject_mul_mul_17s_14s_32_1_1_U26 : component myproject_mul_mul_17s_14s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 14,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_6_reg_1772,
        din1 => ret_V_12_fu_1134_p2,
        dout => mul_ln1192_3_fu_1571_p2);

    myproject_mac_muladd_12s_20s_25s_30_1_1_U27 : component myproject_mac_muladd_12s_20s_25s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 20,
        din2_WIDTH => 25,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_18_reg_1792,
        din1 => ret_V_22_fu_1225_p2,
        din2 => grp_fu_1577_p2,
        dout => grp_fu_1577_p3);

    myproject_am_addmul_14s_14s_9s_25_1_1_U28 : component myproject_am_addmul_14s_14s_9s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        din0 => r_V_36_fu_1312_p2,
        din1 => tmp_11_fu_1322_p3,
        din2 => ret_V_28_fu_1337_p2,
        dout => grp_fu_1586_p3);

    myproject_mac_muladd_7s_24s_25s_29_1_1_U29 : component myproject_mac_muladd_7s_24s_25s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 24,
        din2_WIDTH => 25,
        dout_WIDTH => 29)
    port map (
        din0 => p_0_reg_1847_pp0_iter5_reg,
        din1 => grp_fu_1594_p1,
        din2 => grp_fu_1594_p2,
        dout => grp_fu_1594_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_275_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_275_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_275_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_275_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_275_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_282_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_282_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_282_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_282_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_282_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_289_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_289_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_289_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_289_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_289_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_296_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_296_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_296_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_296_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_296_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_303_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_303_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_303_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_303_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_303_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_310_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_310_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_310_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_310_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_310_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_317_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_317_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_317_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_317_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_317_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_324_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_324_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_324_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_324_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_324_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_331_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_331_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_331_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_331_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_331_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_338_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_338_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_338_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_338_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_338_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_345_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_345_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_345_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_345_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_345_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_352_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_352_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_352_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_352_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_352_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_359_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_359_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_359_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_359_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_359_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_366_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_366_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_366_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_366_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_366_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_373_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_373_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_373_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_373_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_373_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_380_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_380_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_380_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_380_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_380_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_387_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_387_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_operator_s_fu_387_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_387_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_387_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv192_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_18_reg_1787 <= add_ln1192_18_fu_1033_p2;
                add_ln1192_reg_1817 <= add_ln1192_fu_1128_p2;
                mul_ln1192_2_reg_1722 <= mul_ln1192_2_fu_1485_p2;
                mul_ln1192_3_reg_1822 <= mul_ln1192_3_fu_1571_p2;
                mul_ln700_1_reg_1852 <= mul_ln700_1_fu_1266_p2;
                mul_ln700_reg_1812 <= mul_ln700_fu_1565_p2;
                p_0_reg_1847 <= grp_operator_s_fu_380_ap_return;
                p_0_reg_1847_pp0_iter5_reg <= p_0_reg_1847;
                p_2_reg_1747 <= grp_operator_s_fu_296_ap_return;
                p_2_reg_1747_pp0_iter3_reg <= p_2_reg_1747;
                p_2_reg_1747_pp0_iter4_reg <= p_2_reg_1747_pp0_iter3_reg;
                p_5_reg_1732 <= grp_operator_s_fu_282_ap_return;
                p_6_reg_1782 <= grp_operator_s_fu_317_ap_return;
                p_6_reg_1782_pp0_iter4_reg <= p_6_reg_1782;
                p_Val2_10_reg_1857 <= grp_operator_s_fu_387_ap_return;
                p_Val2_1_reg_1620_pp0_iter2_reg <= p_Val2_1_reg_1620_pp0_iter1_reg;
                p_Val2_32_reg_1802 <= grp_operator_s_fu_338_ap_return;
                p_Val2_37_reg_1837 <= grp_operator_s_fu_366_ap_return;
                p_Val2_43_reg_1807 <= grp_operator_s_fu_345_ap_return;
                p_Val2_4_reg_1632_pp0_iter2_reg <= p_Val2_4_reg_1632_pp0_iter1_reg;
                p_Val2_4_reg_1632_pp0_iter3_reg <= p_Val2_4_reg_1632_pp0_iter2_reg;
                p_Val2_5_reg_1638_pp0_iter2_reg <= p_Val2_5_reg_1638_pp0_iter1_reg;
                p_Val2_s_22_reg_1727 <= grp_operator_s_fu_275_ap_return;
                p_Val2_s_reg_1603_pp0_iter2_reg <= p_Val2_s_reg_1603_pp0_iter1_reg;
                    r_V_27_reg_1737(10 downto 1) <= r_V_27_fu_756_p2(10 downto 1);
                ret_V_1_reg_1757 <= ret_V_1_fu_826_p2;
                ret_V_47_reg_1842 <= ret_V_47_fu_1254_p2;
                sext_ln728_1_reg_1651_pp0_iter2_reg <= sext_ln728_1_reg_1651_pp0_iter1_reg;
                tmp_reg_1862 <= ret_V_37_fu_1284_p2(33 downto 24);
                trunc_ln708_12_reg_1752 <= r_V_37_fu_788_p2(35 downto 24);
                trunc_ln708_1_reg_1717 <= grp_fu_1477_p3(23 downto 12);
                trunc_ln708_2_reg_1767 <= ret_V_33_fu_842_p2(17 downto 6);
                trunc_ln708_6_reg_1832 <= grp_fu_1577_p3(29 downto 18);
                trunc_ln708_6_reg_1832_pp0_iter5_reg <= trunc_ln708_6_reg_1832;
                trunc_ln708_8_reg_1742 <= r_V_31_fu_762_p2(35 downto 24);
                trunc_ln708_9_reg_1827 <= ret_V_40_fu_1193_p2(29 downto 18);
                trunc_ln708_9_reg_1827_pp0_iter5_reg <= trunc_ln708_9_reg_1827;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln1192_8_reg_1657 <= add_ln1192_8_fu_456_p2;
                mul_ln1118_5_reg_1707 <= mul_ln1118_5_fu_1462_p2;
                mul_ln1118_reg_1697 <= mul_ln1118_fu_1441_p2;
                mul_ln700_3_reg_1677 <= mul_ln700_3_fu_1412_p2;
                p_Val2_1_reg_1620 <= x_V_in_sig(179 downto 168);
                p_Val2_1_reg_1620_pp0_iter1_reg <= p_Val2_1_reg_1620;
                p_Val2_2_reg_1610 <= x_V_in_sig(47 downto 36);
                p_Val2_2_reg_1610_pp0_iter1_reg <= p_Val2_2_reg_1610;
                p_Val2_4_reg_1632 <= x_V_in_sig(59 downto 48);
                p_Val2_4_reg_1632_pp0_iter1_reg <= p_Val2_4_reg_1632;
                p_Val2_5_reg_1638 <= x_V_in_sig(191 downto 180);
                p_Val2_5_reg_1638_pp0_iter1_reg <= p_Val2_5_reg_1638;
                p_Val2_s_reg_1603 <= x_V_in_sig(35 downto 24);
                p_Val2_s_reg_1603_pp0_iter1_reg <= p_Val2_s_reg_1603;
                r_V_17_reg_1672 <= r_V_17_fu_1406_p2;
                r_V_4_reg_1692 <= r_V_4_fu_1435_p2;
                sext_ln728_1_reg_1651 <= sext_ln728_1_fu_444_p1;
                sext_ln728_1_reg_1651_pp0_iter1_reg <= sext_ln728_1_reg_1651;
                tmp_9_reg_1662 <= x_V_in_sig(46 downto 36);
                trunc_ln708_13_reg_1712 <= grp_fu_1468_p3(17 downto 6);
                trunc_ln708_7_reg_1667 <= ret_V_38_fu_471_p2(17 downto 6);
                trunc_ln708_s_reg_1702 <= ret_V_41_fu_663_p2(23 downto 12);
                trunc_ln_reg_1687 <= grp_fu_1426_p3(17 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                mul_ln1192_9_reg_1867 <= grp_fu_1586_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                r_V_6_reg_1772 <= grp_fu_1514_p3;
                ret_V_18_reg_1792 <= grp_fu_1547_p4;
                ret_V_36_reg_1777 <= grp_fu_1522_p3;
                ret_V_3_reg_1762 <= grp_fu_1498_p3;
                ret_V_43_reg_1797 <= grp_fu_1557_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_25_reg_1682 <= grp_fu_1418_p3;
            end if;
        end if;
    end process;
    r_V_27_reg_1737(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_12_fu_953_p2 <= std_logic_vector(unsigned(r_V_26_fu_944_p2) + unsigned(sext_ln1118_10_fu_950_p1));
    add_ln1192_15_fu_639_p2 <= std_logic_vector(unsigned(ap_const_lv19_1000) + unsigned(ret_V_39_fu_633_p2));
    add_ln1192_17_fu_982_p2 <= std_logic_vector(signed(grp_fu_1530_p4) + signed(rhs_V_2_fu_975_p3));
    add_ln1192_18_fu_1033_p2 <= std_logic_vector(unsigned(add_ln1192_17_fu_982_p2) + unsigned(rhs_V_3_fu_1029_p1));
    add_ln1192_19_fu_1188_p2 <= std_logic_vector(unsigned(add_ln1192_18_reg_1787) + unsigned(rhs_V_4_fu_1184_p1));
    add_ln1192_28_fu_684_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_497_p3) + unsigned(add_ln1192_30_fu_678_p2));
    add_ln1192_30_fu_678_p2 <= std_logic_vector(signed(ap_const_lv18_3E4C0) + signed(r_V_s_fu_545_p3));
    add_ln1192_7_fu_552_p2 <= std_logic_vector(signed(ap_const_lv18_3FC80) + signed(r_V_s_fu_545_p3));
    add_ln1192_8_fu_456_p2 <= std_logic_vector(signed(mul_ln1192_6_fu_1398_p2) + signed(lhs_V_3_fu_448_p3));
    add_ln1192_fu_1128_p2 <= std_logic_vector(unsigned(ap_const_lv13_FA) + unsigned(ret_V_32_fu_1122_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp103_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp103 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp118_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp118 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp172_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp172 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp195_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp195 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp196_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp196 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp199_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp199 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp208_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp208 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp38_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp38 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp42_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp42 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp43_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp43 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp70_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp70 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp76_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp76 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp83_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp83 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp86_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp86 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp96_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp96 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp97_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp97 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp99_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp99 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call101_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call101 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call120_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call120 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call166_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call166 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call179_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call179 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call190_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call190 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call205_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call205 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call221_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call221 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call227_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call227 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call240_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call240 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call244_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call244 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call255_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call255 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call29_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call29 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call46_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call46 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call60_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call60 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call66_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call66 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call76_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call76 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call90_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call90 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call166 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call179 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call190 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call205 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call240 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call90 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call166 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call179 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call190 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call205 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call240 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call90 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call166 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call179 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call190 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call205 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call240 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call90 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call166 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call179 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call190 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call205 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call240 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call90 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call166 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call179 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call190 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call205 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call240 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call90 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call120 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call166 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call179 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call190 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call205 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call240 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call244 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call90 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1418_p0 <= ap_const_lv18_3B(7 - 1 downto 0);
    grp_fu_1418_p1 <= sext_ln703_4_fu_490_p1(12 - 1 downto 0);
    grp_fu_1418_p2 <= ap_const_lv18_1000(14 - 1 downto 0);
    grp_fu_1426_p0 <= ap_const_lv18_3FFD9(7 - 1 downto 0);
    grp_fu_1426_p1 <= sext_ln728_fu_494_p1(12 - 1 downto 0);
    grp_fu_1447_p0 <= ap_const_lv24_D2(9 - 1 downto 0);
    grp_fu_1447_p2 <= (mul_ln700_3_reg_1677 & ap_const_lv6_0);
    grp_fu_1468_p0 <= sext_ln728_fu_494_p1(12 - 1 downto 0);
    grp_fu_1468_p1 <= sext_ln728_fu_494_p1(12 - 1 downto 0);
    grp_fu_1468_p2 <= ap_const_lv18_3F7C0(13 - 1 downto 0);
    grp_fu_1477_p2 <= (p_Val2_5_reg_1638_pp0_iter1_reg & ap_const_lv12_0);
    grp_fu_1490_p0 <= ap_const_lv13_1FC5(7 - 1 downto 0);
    grp_fu_1498_p0 <= sext_ln1116_fu_835_p1(7 - 1 downto 0);
    grp_fu_1498_p1 <= sext_ln1116_fu_835_p1(7 - 1 downto 0);
    grp_fu_1498_p2 <= ap_const_lv14_3DC0(11 - 1 downto 0);
    grp_fu_1506_p0 <= ap_const_lv18_3FFCF(7 - 1 downto 0);
    grp_fu_1514_p0 <= ap_const_lv9_1A8(8 - 1 downto 0);
    grp_fu_1547_p2 <= ap_const_lv12_B(5 - 1 downto 0);
    grp_fu_1547_p3 <= ap_const_lv12_F80(8 - 1 downto 0);
    grp_fu_1557_p0 <= sext_ln1118_11_fu_987_p1(7 - 1 downto 0);
    grp_fu_1557_p1 <= sext_ln1118_11_fu_987_p1(7 - 1 downto 0);
    grp_fu_1577_p2 <= ap_const_lv30_3F0C0000(25 - 1 downto 0);
    grp_fu_1594_p1 <= mul_ln1192_9_reg_1867(24 - 1 downto 0);
    grp_fu_1594_p2 <= ap_const_lv29_1F240000(25 - 1 downto 0);

    grp_operator_s_fu_275_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp38) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_275_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_275_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_275_ap_start <= grp_operator_s_fu_275_ap_start_reg;
    grp_operator_s_fu_275_n_V <= ret_V_35_fu_528_p2(17 downto 6);

    grp_operator_s_fu_282_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp42)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp42) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_282_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_282_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_282_ap_start <= grp_operator_s_fu_282_ap_start_reg;
    grp_operator_s_fu_282_n_V <= add_ln1192_7_fu_552_p2(17 downto 6);

    grp_operator_s_fu_289_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp43)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp43) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_289_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_289_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_289_ap_start <= grp_operator_s_fu_289_ap_start_reg;

    grp_operator_s_fu_296_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp70)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp70) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_296_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_296_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_296_ap_start <= grp_operator_s_fu_296_ap_start_reg;
    grp_operator_s_fu_296_n_V <= add_ln1192_28_fu_684_p2(17 downto 6);

    grp_operator_s_fu_303_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp76)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp76) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_303_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_303_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_303_ap_start <= grp_operator_s_fu_303_ap_start_reg;

    grp_operator_s_fu_310_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp83)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp83) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_310_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_310_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_310_ap_start <= grp_operator_s_fu_310_ap_start_reg;

    grp_operator_s_fu_317_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp86)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp86) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_317_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_317_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_317_ap_start <= grp_operator_s_fu_317_ap_start_reg;

    grp_operator_s_fu_324_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp96)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp96) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_324_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_324_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_324_ap_start <= grp_operator_s_fu_324_ap_start_reg;
    grp_operator_s_fu_324_n_V <= std_logic_vector(signed(ap_const_lv12_FD3) + signed(p_Val2_2_reg_1610_pp0_iter1_reg));

    grp_operator_s_fu_331_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp97)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp97) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_331_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_331_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_331_ap_start <= grp_operator_s_fu_331_ap_start_reg;

    grp_operator_s_fu_338_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp99)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp99) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_338_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_338_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_338_ap_start <= grp_operator_s_fu_338_ap_start_reg;
    grp_operator_s_fu_338_n_V <= std_logic_vector(signed(p_Val2_5_reg_1638_pp0_iter1_reg) + signed(p_Val2_2_reg_1610_pp0_iter1_reg));

    grp_operator_s_fu_345_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp103)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp103) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_345_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_345_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_345_ap_start <= grp_operator_s_fu_345_ap_start_reg;

    grp_operator_s_fu_352_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp118) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_352_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_352_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_352_ap_start <= grp_operator_s_fu_352_ap_start_reg;

    grp_operator_s_fu_359_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp172)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp172) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_359_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_359_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_359_ap_start <= grp_operator_s_fu_359_ap_start_reg;

    grp_operator_s_fu_366_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp195)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp195) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_366_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_366_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_366_ap_start <= grp_operator_s_fu_366_ap_start_reg;
        grp_operator_s_fu_366_n_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_10_fu_1088_p4),12));


    grp_operator_s_fu_373_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp196)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp196) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_373_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_373_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_373_ap_start <= grp_operator_s_fu_373_ap_start_reg;

    grp_operator_s_fu_380_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp199)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp199) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_380_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_380_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_380_ap_start <= grp_operator_s_fu_380_ap_start_reg;
    grp_operator_s_fu_380_n_V <= std_logic_vector(unsigned(ap_const_lv12_5E) + unsigned(p_Val2_1_reg_1620_pp0_iter2_reg));

    grp_operator_s_fu_387_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp208)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp208) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_387_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_387_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_387_ap_start <= grp_operator_s_fu_387_ap_start_reg;
    lhs_V_1_fu_497_p3 <= (p_Val2_1_reg_1620 & ap_const_lv6_0);
    lhs_V_3_fu_448_p3 <= (p_Val2_5_fu_434_p4 & ap_const_lv6_0);
    lhs_V_4_fu_963_p3 <= (r_V_25_fu_916_p2 & ap_const_lv12_0);
        lhs_V_5_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1620_pp0_iter2_reg),13));

    lhs_V_6_fu_1059_p3 <= (ret_V_42_fu_1053_p2 & ap_const_lv6_0);
    mul_ln1118_5_fu_1462_p0 <= sext_ln1118_25_fu_701_p1(18 - 1 downto 0);
    mul_ln1118_5_fu_1462_p1 <= sext_ln1118_25_fu_701_p1(18 - 1 downto 0);
    mul_ln1118_fu_1441_p0 <= sext_ln1118_19_fu_645_p1(19 - 1 downto 0);
    mul_ln1118_fu_1441_p1 <= sext_ln1118_19_fu_645_p1(19 - 1 downto 0);
    mul_ln1192_2_fu_1485_p0 <= ap_const_lv18_31(7 - 1 downto 0);
    mul_ln1192_2_fu_1485_p1 <= sext_ln728_1_reg_1651_pp0_iter1_reg(12 - 1 downto 0);
    mul_ln1192_4_fu_1278_p0 <= p_6_reg_1782_pp0_iter4_reg;
    mul_ln1192_4_fu_1278_p1 <= mul_ln1192_3_reg_1822(31 - 1 downto 0);
    mul_ln1192_4_fu_1278_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_4_fu_1278_p0) * signed(mul_ln1192_4_fu_1278_p1))), 34));
    mul_ln1192_6_fu_1398_p0 <= sext_ln728_1_fu_444_p1(12 - 1 downto 0);
    mul_ln1192_6_fu_1398_p1 <= sext_ln728_1_fu_444_p1(12 - 1 downto 0);
    mul_ln700_1_fu_1266_p0 <= add_ln1192_reg_1817;
    mul_ln700_1_fu_1266_p1 <= mul_ln700_reg_1812;
    mul_ln700_1_fu_1266_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_1266_p0) * signed(mul_ln700_1_fu_1266_p1))), 42));
    mul_ln700_3_fu_1412_p0 <= ap_const_lv18_D2(9 - 1 downto 0);
    mul_ln700_3_fu_1412_p1 <= sext_ln703_4_fu_490_p1(12 - 1 downto 0);
    mul_ln728_1_fu_1455_p0 <= ap_const_lv18_1A4(10 - 1 downto 0);
    mul_ln728_1_fu_1455_p1 <= sext_ln728_fu_494_p1(12 - 1 downto 0);
    mul_ln728_fu_1541_p0 <= ap_const_lv18_23(7 - 1 downto 0);
    mul_ln728_fu_1541_p1 <= sext_ln728_1_reg_1651_pp0_iter2_reg(12 - 1 downto 0);
    p_Val2_1_fu_414_p4 <= x_V_in_sig(179 downto 168);
    p_Val2_5_fu_434_p4 <= x_V_in_sig(191 downto 180);
    p_Val2_s_fu_394_p4 <= x_V_in_sig(35 downto 24);
    p_shl_fu_812_p3 <= (trunc_ln1193_fu_809_p1 & ap_const_lv3_0);
        r_V_16_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_414_p4),24));

    r_V_17_fu_1406_p0 <= r_V_16_fu_486_p1(12 - 1 downto 0);
    r_V_17_fu_1406_p1 <= r_V_16_fu_486_p1(12 - 1 downto 0);
    r_V_24_fu_877_p3 <= (p_Val2_5_reg_1638_pp0_iter2_reg & ap_const_lv1_0);
    r_V_25_fu_916_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_910_p2) - unsigned(sext_ln727_fu_832_p1));
    r_V_26_fu_944_p2 <= std_logic_vector(signed(sext_ln1118_7_fu_940_p1) - signed(sext_ln1118_4_fu_888_p1));
    r_V_27_fu_756_p2 <= std_logic_vector(signed(sext_ln1118_8_fu_740_p1) - signed(sext_ln1118_9_fu_752_p1));
    r_V_28_fu_1015_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_999_p1) + signed(sext_ln1118_13_fu_1011_p1));
    r_V_29_fu_591_p2 <= std_logic_vector(signed(sext_ln1118_15_fu_576_p1) + signed(sext_ln1118_16_fu_587_p1));
    r_V_30_fu_619_p2 <= std_logic_vector(signed(sext_ln1118_17_fu_604_p1) + signed(sext_ln1118_18_fu_615_p1));
    r_V_31_fu_762_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv36_9C) * signed(mul_ln1118_reg_1697))), 36));
    r_V_32_fu_1170_p2 <= std_logic_vector(signed(sext_ln1118_20_fu_1154_p1) + signed(sext_ln1118_21_fu_1166_p1));
    r_V_34_fu_1082_p2 <= std_logic_vector(signed(sext_ln1118_23_fu_1078_p1) - signed(sext_ln1118_2_fu_874_p1));
    r_V_35_fu_1303_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(sext_ln1253_fu_1300_p1));
    r_V_36_fu_1312_p0 <= sext_ln1116_3_fu_1309_p1(7 - 1 downto 0);
    r_V_36_fu_1312_p1 <= sext_ln1116_3_fu_1309_p1(7 - 1 downto 0);
    r_V_36_fu_1312_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_36_fu_1312_p0) * signed(r_V_36_fu_1312_p1))), 14));
    r_V_37_fu_788_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv36_125) * signed(mul_ln1118_5_reg_1707))), 36));
        r_V_3_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1632),24));

    r_V_4_fu_1435_p0 <= r_V_3_fu_513_p1(12 - 1 downto 0);
    r_V_4_fu_1435_p1 <= r_V_3_fu_513_p1(12 - 1 downto 0);
    r_V_s_fu_545_p3 <= (tmp_9_reg_1662 & ap_const_lv7_0);
    ret_V_10_fu_864_p2 <= std_logic_vector(signed(ap_const_lv8_C4) + signed(sext_ln703_1_fu_861_p1));
    ret_V_12_fu_1134_p2 <= std_logic_vector(signed(ap_const_lv14_3E80) + signed(ret_V_36_reg_1777));
    ret_V_1_fu_826_p2 <= std_logic_vector(unsigned(ap_const_lv27_1B000) + unsigned(sub_ln1193_fu_820_p2));
    ret_V_22_fu_1225_p2 <= std_logic_vector(signed(ap_const_lv20_FC480) + signed(ret_V_44_fu_1220_p2));
    ret_V_28_fu_1337_p2 <= std_logic_vector(unsigned(ap_const_lv9_E) + unsigned(sext_ln703_12_fu_1334_p1));
    ret_V_32_fu_1122_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_1118_p1) - signed(sext_ln1192_1_fu_1115_p1));
    ret_V_33_fu_842_p2 <= std_logic_vector(unsigned(ap_const_lv18_C40) + unsigned(grp_fu_1506_p3));
    ret_V_34_fu_1358_p2 <= std_logic_vector(unsigned(mul_ln700_1_reg_1852) - unsigned(rhs_V_fu_1354_p1));
    ret_V_35_fu_528_p2 <= std_logic_vector(signed(ap_const_lv18_3E700) + signed(sub_ln1192_fu_523_p2));
    ret_V_37_fu_1284_p2 <= std_logic_vector(signed(ap_const_lv34_3C9000000) + signed(mul_ln1192_4_fu_1278_p2));
    ret_V_38_fu_471_p2 <= std_logic_vector(signed(ap_const_lv18_3EE40) + signed(mul_ln1192_6_fu_1398_p2));
    ret_V_39_fu_633_p2 <= std_logic_vector(signed(sext_ln703_5_fu_625_p1) - signed(sext_ln703_6_fu_629_p1));
    ret_V_40_fu_1193_p2 <= std_logic_vector(signed(ap_const_lv30_3F580000) + signed(add_ln1192_19_fu_1188_p2));
    ret_V_41_fu_663_p2 <= std_logic_vector(signed(grp_fu_1447_p3) + signed(rhs_V_5_fu_656_p3));
    ret_V_42_fu_1053_p2 <= std_logic_vector(signed(lhs_V_5_fu_1047_p1) + signed(rhs_V_6_fu_1050_p1));
    ret_V_44_fu_1220_p2 <= std_logic_vector(signed(ret_V_43_reg_1797) + signed(sext_ln1192_16_fu_1216_p1));
    ret_V_47_fu_1254_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1247_p1) - signed(sext_ln703_11_fu_1251_p1));
    rhs_V_1_fu_516_p3 <= (p_Val2_2_reg_1610 & ap_const_lv6_0);
    rhs_V_2_fu_975_p3 <= (mul_ln728_fu_1541_p2 & ap_const_lv12_0);
        rhs_V_3_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_1021_p3),30));

        rhs_V_4_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_1176_p3),30));

    rhs_V_5_fu_656_p3 <= (mul_ln728_1_fu_1455_p2 & ap_const_lv6_0);
        rhs_V_6_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1638_pp0_iter2_reg),13));

        rhs_V_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_1347_p3),42));

        sext_ln1116_3_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1747_pp0_iter4_reg),14));

        sext_ln1116_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_303_ap_return),14));

        sext_ln1118_10_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_27_reg_1737),16));

    sext_ln1118_11_fu_987_p0 <= grp_operator_s_fu_317_ap_return;
        sext_ln1118_11_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_11_fu_987_p0),14));

        sext_ln1118_12_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_991_p3),13));

        sext_ln1118_13_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_1003_p3),13));

        sext_ln1118_15_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_569_p3),18));

        sext_ln1118_16_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_580_p3),18));

        sext_ln1118_17_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_9_fu_597_p3),18));

        sext_ln1118_18_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_608_p3),18));

        sext_ln1118_19_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_15_fu_639_p2),36));

        sext_ln1118_20_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_1146_p3),13));

        sext_ln1118_21_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_1158_p3),13));

        sext_ln1118_23_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_1071_p3),17));

        sext_ln1118_25_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_25_reg_1682),36));

        sext_ln1118_2_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1638_pp0_iter2_reg),17));

        sext_ln1118_4_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_24_fu_877_p3),16));

        sext_ln1118_5_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_899_p3),17));

        sext_ln1118_7_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_933_p3),16));

        sext_ln1118_8_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_732_p3),11));

        sext_ln1118_9_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_744_p3),11));

        sext_ln1118_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1490_p2),27));

        sext_ln1192_16_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_1209_p3),20));

        sext_ln1192_1_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1632_pp0_iter3_reg),13));

        sext_ln1192_2_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_352_ap_return),13));

        sext_ln1253_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_37_reg_1837),8));

        sext_ln703_10_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_373_ap_return),8));

        sext_ln703_11_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_43_reg_1807),8));

        sext_ln703_12_fu_1334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_47_reg_1842),9));

        sext_ln703_1_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_22_reg_1727),8));

        sext_ln703_4_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_414_p4),18));

        sext_ln703_5_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_29_fu_591_p2),19));

        sext_ln703_6_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_30_fu_619_p2),19));

        sext_ln727_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1620_pp0_iter2_reg),17));

        sext_ln728_1_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_394_p4),18));

        sext_ln728_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1610),18));

    shl_ln1118_1_fu_922_p3 <= (p_Val2_5_reg_1638_pp0_iter2_reg & ap_const_lv5_0);
    shl_ln1118_2_fu_933_p3 <= (p_Val2_5_reg_1638_pp0_iter2_reg & ap_const_lv3_0);
    shl_ln1118_3_fu_1071_p3 <= (p_Val2_5_reg_1638_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln1118_7_fu_569_p3 <= (p_Val2_1_reg_1620 & ap_const_lv5_0);
    shl_ln1118_8_fu_580_p3 <= (p_Val2_1_reg_1620 & ap_const_lv3_0);
    shl_ln1118_9_fu_597_p3 <= (p_Val2_2_reg_1610 & ap_const_lv5_0);
    shl_ln1118_s_fu_608_p3 <= (p_Val2_2_reg_1610 & ap_const_lv3_0);
    shl_ln_fu_899_p3 <= (p_Val2_1_reg_1620_pp0_iter2_reg & ap_const_lv4_0);
    sub_ln1118_fu_910_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1118_5_fu_906_p1));
    sub_ln1192_fu_523_p2 <= std_logic_vector(unsigned(add_ln1192_8_reg_1657) - unsigned(rhs_V_1_fu_516_p3));
    sub_ln1193_fu_820_p2 <= std_logic_vector(signed(sext_ln1118_fu_806_p1) - signed(p_shl_fu_812_p3));
    tmp_10_fu_1209_p3 <= (p_Val2_32_reg_1802 & ap_const_lv6_0);
    tmp_11_fu_1322_p3 <= (r_V_35_fu_1303_p2 & ap_const_lv6_0);
    tmp_12_fu_1384_p4 <= grp_fu_1594_p3(28 downto 18);
    tmp_1_fu_744_p3 <= (grp_operator_s_fu_289_ap_return & ap_const_lv1_0);
    tmp_2_fu_991_p1 <= grp_operator_s_fu_317_ap_return;
    tmp_2_fu_991_p3 <= (tmp_2_fu_991_p1 & ap_const_lv5_0);
    tmp_3_fu_1003_p1 <= grp_operator_s_fu_317_ap_return;
    tmp_3_fu_1003_p3 <= (tmp_3_fu_1003_p1 & ap_const_lv1_0);
    tmp_4_fu_1021_p3 <= (r_V_28_fu_1015_p2 & ap_const_lv12_0);
    tmp_5_fu_1347_p3 <= (p_Val2_10_reg_1857 & ap_const_lv30_0);
    tmp_6_fu_1146_p3 <= (grp_operator_s_fu_359_ap_return & ap_const_lv5_0);
    tmp_7_fu_1158_p3 <= (grp_operator_s_fu_359_ap_return & ap_const_lv1_0);
    tmp_8_fu_1176_p3 <= (r_V_32_fu_1170_p2 & ap_const_lv12_0);
    tmp_s_fu_732_p3 <= (grp_operator_s_fu_289_ap_return & ap_const_lv3_0);
    trunc_ln1193_fu_809_p1 <= grp_fu_1490_p2(24 - 1 downto 0);
    trunc_ln708_10_fu_1088_p4 <= r_V_34_fu_1082_p2(16 downto 6);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_34_fu_1358_p2(41 downto 30);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_1_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_1862),12));


    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1827_pp0_iter5_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_6_reg_1832_pp0_iter5_reg;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_4_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_1384_p4),12));


    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
