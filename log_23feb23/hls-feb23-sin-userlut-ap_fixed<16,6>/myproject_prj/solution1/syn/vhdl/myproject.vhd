-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (255 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.092000,HLS_SYN_LAT=7,HLS_SYN_TPT=1,HLS_SYN_MEM=17,HLS_SYN_DSP=57,HLS_SYN_FF=2234,HLS_SYN_LUT=3796,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv26_3EE5C00 : STD_LOGIC_VECTOR (25 downto 0) := "11111011100101110000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv26_3E72000 : STD_LOGIC_VECTOR (25 downto 0) := "11111001110010000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv26_3FCB400 : STD_LOGIC_VECTOR (25 downto 0) := "11111111001011010000000000";
    constant ap_const_lv36_D20 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000110100100000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv26_3E4EC00 : STD_LOGIC_VECTOR (25 downto 0) := "11111001001110110000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv56_9CE : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000100111001110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv16_FD36 : STD_LOGIC_VECTOR (15 downto 0) := "1111110100110110";
    constant ap_const_lv17_1FC53 : STD_LOGIC_VECTOR (16 downto 0) := "11111110001010011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv56_125D : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000001001001011101";
    constant ap_const_lv16_5E4 : STD_LOGIC_VECTOR (15 downto 0) := "0000010111100100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv39_1BC00000 : STD_LOGIC_VECTOR (38 downto 0) := "000000000011011110000000000000000000000";
    constant ap_const_lv17_FA5 : STD_LOGIC_VECTOR (16 downto 0) := "00000111110100101";
    constant ap_const_lv26_C5C00 : STD_LOGIC_VECTOR (25 downto 0) := "00000011000101110000000000";
    constant ap_const_lv12_C4D : STD_LOGIC_VECTOR (11 downto 0) := "110001001101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv28_FC48800 : STD_LOGIC_VECTOR (27 downto 0) := "1111110001001000100000000000";
    constant ap_const_lv22_3EB400 : STD_LOGIC_VECTOR (21 downto 0) := "1111101011010000000000";
    constant ap_const_lv46_3F5800000000 : STD_LOGIC_VECTOR (45 downto 0) := "1111110101100000000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv46_3F0D40000000 : STD_LOGIC_VECTOR (45 downto 0) := "1111110000110101000000000000000000000000000000";
    constant ap_const_lv50_0 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_E8 : STD_LOGIC_VECTOR (12 downto 0) := "0000011101000";
    constant ap_const_lv54_3C9F0000000000 : STD_LOGIC_VECTOR (53 downto 0) := "111100100111110000000000000000000000000000000000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv45_1F2600000000 : STD_LOGIC_VECTOR (44 downto 0) := "111110010011000000000000000000000000000000000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv27_28D : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001010001101";
    constant ap_const_lv27_100000 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_const_lv26_3FFFD81 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110000001";
    constant ap_const_lv26_D20 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000110100100000";
    constant ap_const_lv26_1A40 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001101001000000";
    constant ap_const_lv26_3BB : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001110111011";
    constant ap_const_lv26_100000 : STD_LOGIC_VECTOR (25 downto 0) := "00000100000000000000000000";
    constant ap_const_lv26_3F7C400 : STD_LOGIC_VECTOR (25 downto 0) := "11111101111100010000000000";
    constant ap_const_lv27_227 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000100111";
    constant ap_const_lv24_62 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001100010";
    constant ap_const_lv22_3DF000 : STD_LOGIC_VECTOR (21 downto 0) := "1111011111000000000000";
    constant ap_const_lv26_31E : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001100011110";
    constant ap_const_lv25_1FFFEE6 : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111011100110";
    constant ap_const_lv25_F1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011110001";
    constant ap_const_lv26_3FFFCE2 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110011100010";
    constant ap_const_lv13_1A82 : STD_LOGIC_VECTOR (12 downto 0) := "1101010000010";
    constant ap_const_lv21_137 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100110111";
    constant ap_const_lv26_234 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000110100";
    constant ap_const_lv22_228 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000101000";
    constant ap_const_lv20_B7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010110111";
    constant ap_const_lv20_FB400 : STD_LOGIC_VECTOR (19 downto 0) := "11111011010000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (255 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_fu_396_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_1465 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_1465_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_1465_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_fu_406_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1472 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1472_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_fu_420_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1480 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1480_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1480_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_reg_1489 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_reg_1489_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_reg_1489_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_reg_1489_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_reg_1495 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_reg_1495_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_reg_1495_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_reg_1495_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln728_1_fu_450_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1508 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1508_pp0_iter1_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1508_pp0_iter2_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_1_reg_1508_pp0_iter3_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_4_fu_1272_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_4_reg_1514 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_8_reg_1519 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_7_reg_1524 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_5_fu_483_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_5_reg_1529 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_5_reg_1529_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1279_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_18_reg_1534 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_9_fu_1289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_reg_1539 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_reg_1544 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_fu_1304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_reg_1549 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_4_reg_1554 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_5_reg_1559 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_fu_579_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_6_reg_1564 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln708_s_reg_1569 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_11_reg_1574 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1324_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_28_reg_1579 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_13_reg_1584 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_1589 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_5_fu_1341_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal r_V_5_reg_1594 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1347_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_16_reg_1599 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_8_reg_1604 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_fu_725_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_reg_1609 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_45_fu_730_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_45_reg_1614 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_45_reg_1614_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln703_1_fu_735_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1_reg_1619 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_14_fu_742_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_14_reg_1624 : STD_LOGIC_VECTOR (50 downto 0);
    signal mul_ln1118_fu_1355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_reg_1629 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1361_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_4_reg_1635 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_2_fu_1369_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_2_reg_1640 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_operator_s_fu_291_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_24_reg_1645 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_operator_s_fu_298_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_5_reg_1650 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_operator_s_fu_305_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_6_reg_1655 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_6_reg_1655_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_6_reg_1655_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1192_1_fu_798_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal sub_ln1192_1_reg_1661 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_operator_s_fu_312_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_1_reg_1666 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_10_reg_1671 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_operator_s_fu_319_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_2_reg_1676 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_2_reg_1676_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_12_reg_1681 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_operator_s_fu_326_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_36_reg_1686 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_36_reg_1686_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_2_fu_832_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_2_reg_1691 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln700_fu_874_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal mul_ln700_reg_1696 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln1192_fu_893_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_reg_1701 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_2_reg_1706 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1396_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_2_reg_1711 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1404_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_39_reg_1716 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_17_fu_983_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1192_17_reg_1721 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_operator_s_fu_347_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_8_reg_1726 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1425_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_21_reg_1731 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_25_fu_1024_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_25_reg_1736 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln700_1_fu_1040_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal mul_ln700_1_reg_1741 : STD_LOGIC_VECTOR (65 downto 0);
    signal r_V_4_fu_1058_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_4_reg_1746 : STD_LOGIC_VECTOR (48 downto 0);
    signal trunc_ln708_9_reg_1751 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_9_reg_1751_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_6_reg_1756 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_6_reg_1756_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_operator_s_fu_368_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_30_reg_1761 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_23_fu_1451_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_23_reg_1766 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_50_fu_1137_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_50_reg_1771 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_operator_s_fu_382_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal p_0_reg_1776 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_0_reg_1776_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_3_reg_1781 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_3_fu_1176_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln1192_3_reg_1786 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_1457_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_16_reg_1791 : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_operator_s_fu_277_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_277_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_277_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_277_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_277_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_277_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call117 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call117 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call117 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call117 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call117 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call117 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call117 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call117 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp45 : BOOLEAN;
    signal grp_operator_s_fu_284_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_284_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_284_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_284_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_284_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_284_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call31 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call31 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call31 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call31 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call31 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call31 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call31 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call31 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp65 : BOOLEAN;
    signal grp_operator_s_fu_291_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_291_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_291_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_291_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_291_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call79 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call79 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call79 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call79 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call79 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call79 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call79 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call79 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp72 : BOOLEAN;
    signal grp_operator_s_fu_298_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_298_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_298_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_298_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_298_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call96 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call96 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call96 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call96 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call96 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call96 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call96 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call96 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp75 : BOOLEAN;
    signal grp_operator_s_fu_305_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_305_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_305_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_305_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_305_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call105 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call105 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call105 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call105 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call105 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call105 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call105 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call105 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp76 : BOOLEAN;
    signal grp_operator_s_fu_312_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_312_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_312_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_312_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_312_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call170 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call170 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call170 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call170 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call170 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call170 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call170 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call170 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp87 : BOOLEAN;
    signal grp_operator_s_fu_319_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_319_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_319_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_319_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_319_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call203 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call203 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call203 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call203 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call203 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call203 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call203 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call203 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp90 : BOOLEAN;
    signal grp_operator_s_fu_326_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_326_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_326_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_326_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_326_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call221 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call221 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call221 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call221 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call221 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call221 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call221 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call221 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp93 : BOOLEAN;
    signal grp_operator_s_fu_333_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_333_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_333_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_333_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_333_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_333_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call49 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call49 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call49 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call49 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call49 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call49 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call49 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call49 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp103 : BOOLEAN;
    signal grp_operator_s_fu_340_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_340_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_340_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_340_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_340_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_340_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call69 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call69 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call69 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call69 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call69 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call69 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call69 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call69 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp105 : BOOLEAN;
    signal grp_operator_s_fu_347_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_347_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_347_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_347_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_347_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call148 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call148 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call148 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call148 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call148 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call148 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call148 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call148 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp118 : BOOLEAN;
    signal grp_operator_s_fu_354_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_354_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_354_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_354_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_354_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_354_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call158 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call158 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call158 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call158 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call158 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call158 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call158 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call158 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp119 : BOOLEAN;
    signal grp_operator_s_fu_361_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_361_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_361_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_361_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_361_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_361_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call183 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call183 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call183 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call183 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call183 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call183 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call183 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call183 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp121 : BOOLEAN;
    signal grp_operator_s_fu_368_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_368_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_368_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_368_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_368_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_368_n_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call197 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call197 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call197 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call197 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call197 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call197 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call197 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call197 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp191 : BOOLEAN;
    signal grp_operator_s_fu_375_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_375_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_375_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_375_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_375_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_375_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call217 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call217 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call217 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call217 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call217 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call217 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call217 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call217 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp192 : BOOLEAN;
    signal grp_operator_s_fu_382_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_382_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_382_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_382_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_382_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call231 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call231 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call231 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call231 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call231 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call231 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call231 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call231 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp193 : BOOLEAN;
    signal grp_operator_s_fu_389_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_389_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_389_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_389_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_389_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_389_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call63 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call63 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call63 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call63 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call63 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call63 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call63 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call63 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp197 : BOOLEAN;
    signal grp_operator_s_fu_277_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_284_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_291_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_298_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_305_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_312_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_319_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_326_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_333_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_340_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_347_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_354_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_361_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_368_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_375_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_382_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_389_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ret_V_41_fu_464_p2 : STD_LOGIC_VECTOR (25 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_41_fu_464_p2 : signal is "no";
    signal grp_fu_1295_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal lhs_V_3_fu_512_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_8_fu_519_p2 : STD_LOGIC_VECTOR (25 downto 0);
    attribute use_dsp48 of add_ln1192_8_fu_519_p2 : signal is "no";
    signal rhs_V_1_fu_524_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln1192_fu_531_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_38_fu_537_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln1118_1_fu_553_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_7_fu_560_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_fu_579_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1116_3_fu_576_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_6_fu_579_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln700_2_fu_588_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln700_3_fu_1310_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln700_2_fu_588_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln1_fu_594_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln728_4_fu_1317_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln700_fu_601_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal rhs_V_5_fu_607_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_44_fu_614_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_1_fu_493_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_30_fu_630_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_28_fu_636_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1332_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_fu_667_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1192_fu_667_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_2_fu_673_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_34_fu_680_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_19_fu_709_p0 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_19_fu_709_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal rhs_V_6_fu_696_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_14_fu_742_p0 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1116_6_fu_739_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_14_fu_742_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal lhs_V_fu_748_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_751_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1192_5_fu_781_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln1192_5_fu_781_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln728_fu_1374_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal lhs_V_4_fu_787_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal sext_ln1192_10_fu_794_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1192_5_fu_781_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_21_fu_1381_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_24_fu_816_p0 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_24_fu_816_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal shl_ln1118_1_fu_844_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln1118_fu_851_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln_fu_837_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal sub_ln1193_fu_855_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_2_fu_861_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln700_fu_874_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln700_fu_874_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln1192_3_fu_883_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_2_fu_880_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_35_fu_887_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1388_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_36_fu_902_p2 : STD_LOGIC_VECTOR (25 downto 0);
    attribute use_dsp48 of ret_V_36_fu_902_p2 : signal is "no";
    signal sext_ln703_1_fu_921_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_11_fu_924_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_2_fu_937_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_7_fu_934_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_8_fu_944_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_1_fu_1412_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_2_fu_957_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln728_2_fu_1418_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_972_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln1192_16_fu_964_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal rhs_V_3_fu_979_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal lhs_V_6_fu_996_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_9_fu_1007_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1435_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_18_fu_1015_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_47_fu_1019_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of ret_V_47_fu_1019_p2 : signal is "no";
    signal mul_ln700_1_fu_1040_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln700_1_fu_1040_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal ret_V_13_fu_1046_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 of ret_V_13_fu_1046_p2 : signal is "no";
    signal r_V_4_fu_1058_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_4_fu_1058_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_3_fu_1444_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_6_fu_1067_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal rhs_V_4_fu_1074_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln1192_19_fu_1078_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ret_V_43_fu_1083_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1192_7_fu_1105_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1192_7_fu_1105_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_7_fu_1105_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal ret_V_48_fu_1111_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal sext_ln703_5_fu_1130_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_6_fu_1134_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_1143_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal rhs_V_fu_1151_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal ret_V_37_fu_1155_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal mul_ln1192_3_fu_1176_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1192_3_fu_1176_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal sext_ln1253_fu_1182_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_22_fu_1185_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_1194_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln703_7_fu_1206_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_31_fu_1209_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_40_fu_1219_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_1224_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_9_fu_1245_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1192_9_fu_1245_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1192_9_fu_1245_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal ret_V_51_fu_1251_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_10_fu_1257_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1192_4_fu_1272_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_4_fu_1272_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1279_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1279_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_9_fu_1289_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_8_fu_479_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_1289_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1295_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln728_fu_487_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1295_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_1_fu_1304_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_fu_1304_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln700_3_fu_1310_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln727_fu_490_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln700_3_fu_1310_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_4_fu_1317_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_4_fu_1317_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1324_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1324_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1324_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1332_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1332_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1332_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_5_fu_1341_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1347_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1347_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1361_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1116_fu_765_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1361_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1361_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1192_2_fu_1369_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_2_fu_1369_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_fu_1374_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_21_fu_1381_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1388_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1396_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1404_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1404_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_1_fu_1412_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_1_fu_1412_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_2_fu_1418_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_12_fu_969_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_2_fu_1418_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1425_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1425_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1435_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1435_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_3_fu_1444_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_23_fu_1451_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1116_5_fu_1127_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_23_fu_1451_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component operator_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        n_V : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_ama_submuladd_16s_16s_11ns_22ns_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mac_muladd_16s_11s_26ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_13ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_14ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_16s_11ns_22ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_16s_16s_21s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_11ns_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_am_addmul_16s_11s_8ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_17s_17s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mac_muladd_11s_11s_19s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_16s_11ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_10s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mul_mul_16s_9ns_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mac_muladd_16s_11s_26s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_am_addmul_11s_12s_12s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mac_muladd_11s_10ns_22ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_11s_11ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_ama_addmuladd_11s_11s_9ns_16s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_muladd_11s_11s_27s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_mul_11s_11s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_am_addmul_22s_22s_13s_37_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;



begin
    grp_operator_s_fu_277 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_277_ap_start,
        ap_done => grp_operator_s_fu_277_ap_done,
        ap_idle => grp_operator_s_fu_277_ap_idle,
        ap_ready => grp_operator_s_fu_277_ap_ready,
        ap_ce => grp_operator_s_fu_277_ap_ce,
        n_V => trunc_ln708_7_reg_1524,
        ap_return => grp_operator_s_fu_277_ap_return);

    grp_operator_s_fu_284 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_284_ap_start,
        ap_done => grp_operator_s_fu_284_ap_done,
        ap_idle => grp_operator_s_fu_284_ap_idle,
        ap_ready => grp_operator_s_fu_284_ap_ready,
        ap_ce => grp_operator_s_fu_284_ap_ce,
        n_V => trunc_ln_reg_1544,
        ap_return => grp_operator_s_fu_284_ap_return);

    grp_operator_s_fu_291 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_291_ap_start,
        ap_done => grp_operator_s_fu_291_ap_done,
        ap_idle => grp_operator_s_fu_291_ap_idle,
        ap_ready => grp_operator_s_fu_291_ap_ready,
        ap_ce => grp_operator_s_fu_291_ap_ce,
        n_V => trunc_ln708_4_reg_1554,
        ap_return => grp_operator_s_fu_291_ap_return);

    grp_operator_s_fu_298 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_298_ap_start,
        ap_done => grp_operator_s_fu_298_ap_done,
        ap_idle => grp_operator_s_fu_298_ap_idle,
        ap_ready => grp_operator_s_fu_298_ap_ready,
        ap_ce => grp_operator_s_fu_298_ap_ce,
        n_V => trunc_ln708_5_reg_1559,
        ap_return => grp_operator_s_fu_298_ap_return);

    grp_operator_s_fu_305 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_305_ap_start,
        ap_done => grp_operator_s_fu_305_ap_done,
        ap_idle => grp_operator_s_fu_305_ap_idle,
        ap_ready => grp_operator_s_fu_305_ap_ready,
        ap_ce => grp_operator_s_fu_305_ap_ce,
        n_V => p_Val2_1_reg_1480_pp0_iter1_reg,
        ap_return => grp_operator_s_fu_305_ap_return);

    grp_operator_s_fu_312 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_312_ap_start,
        ap_done => grp_operator_s_fu_312_ap_done,
        ap_idle => grp_operator_s_fu_312_ap_idle,
        ap_ready => grp_operator_s_fu_312_ap_ready,
        ap_ce => grp_operator_s_fu_312_ap_ce,
        n_V => trunc_ln708_s_reg_1569,
        ap_return => grp_operator_s_fu_312_ap_return);

    grp_operator_s_fu_319 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_319_ap_start,
        ap_done => grp_operator_s_fu_319_ap_done,
        ap_idle => grp_operator_s_fu_319_ap_idle,
        ap_ready => grp_operator_s_fu_319_ap_ready,
        ap_ce => grp_operator_s_fu_319_ap_ce,
        n_V => trunc_ln708_11_reg_1574,
        ap_return => grp_operator_s_fu_319_ap_return);

    grp_operator_s_fu_326 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_326_ap_start,
        ap_done => grp_operator_s_fu_326_ap_done,
        ap_idle => grp_operator_s_fu_326_ap_idle,
        ap_ready => grp_operator_s_fu_326_ap_ready,
        ap_ce => grp_operator_s_fu_326_ap_ce,
        n_V => trunc_ln708_13_reg_1584,
        ap_return => grp_operator_s_fu_326_ap_return);

    grp_operator_s_fu_333 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_333_ap_start,
        ap_done => grp_operator_s_fu_333_ap_done,
        ap_idle => grp_operator_s_fu_333_ap_idle,
        ap_ready => grp_operator_s_fu_333_ap_ready,
        ap_ce => grp_operator_s_fu_333_ap_ce,
        n_V => trunc_ln708_1_reg_1589,
        ap_return => grp_operator_s_fu_333_ap_return);

    grp_operator_s_fu_340 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_340_ap_start,
        ap_done => grp_operator_s_fu_340_ap_done,
        ap_idle => grp_operator_s_fu_340_ap_idle,
        ap_ready => grp_operator_s_fu_340_ap_ready,
        ap_ce => grp_operator_s_fu_340_ap_ce,
        n_V => p_Val2_s_reg_1465_pp0_iter2_reg,
        ap_return => grp_operator_s_fu_340_ap_return);

    grp_operator_s_fu_347 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_347_ap_start,
        ap_done => grp_operator_s_fu_347_ap_done,
        ap_idle => grp_operator_s_fu_347_ap_idle,
        ap_ready => grp_operator_s_fu_347_ap_ready,
        ap_ce => grp_operator_s_fu_347_ap_ce,
        n_V => trunc_ln708_8_reg_1604,
        ap_return => grp_operator_s_fu_347_ap_return);

    grp_operator_s_fu_354 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_354_ap_start,
        ap_done => grp_operator_s_fu_354_ap_done,
        ap_idle => grp_operator_s_fu_354_ap_idle,
        ap_ready => grp_operator_s_fu_354_ap_ready,
        ap_ce => grp_operator_s_fu_354_ap_ce,
        n_V => add_ln703_reg_1609,
        ap_return => grp_operator_s_fu_354_ap_return);

    grp_operator_s_fu_361 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_361_ap_start,
        ap_done => grp_operator_s_fu_361_ap_done,
        ap_idle => grp_operator_s_fu_361_ap_idle,
        ap_ready => grp_operator_s_fu_361_ap_ready,
        ap_ce => grp_operator_s_fu_361_ap_ce,
        n_V => add_ln703_1_reg_1619,
        ap_return => grp_operator_s_fu_361_ap_return);

    grp_operator_s_fu_368 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_368_ap_start,
        ap_done => grp_operator_s_fu_368_ap_done,
        ap_idle => grp_operator_s_fu_368_ap_idle,
        ap_ready => grp_operator_s_fu_368_ap_ready,
        ap_ce => grp_operator_s_fu_368_ap_ce,
        n_V => grp_operator_s_fu_368_n_V,
        ap_return => grp_operator_s_fu_368_ap_return);

    grp_operator_s_fu_375 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_375_ap_start,
        ap_done => grp_operator_s_fu_375_ap_done,
        ap_idle => grp_operator_s_fu_375_ap_idle,
        ap_ready => grp_operator_s_fu_375_ap_ready,
        ap_ce => grp_operator_s_fu_375_ap_ce,
        n_V => trunc_ln708_12_reg_1681,
        ap_return => grp_operator_s_fu_375_ap_return);

    grp_operator_s_fu_382 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_382_ap_start,
        ap_done => grp_operator_s_fu_382_ap_done,
        ap_idle => grp_operator_s_fu_382_ap_idle,
        ap_ready => grp_operator_s_fu_382_ap_ready,
        ap_ce => grp_operator_s_fu_382_ap_ce,
        n_V => add_ln703_2_reg_1691,
        ap_return => grp_operator_s_fu_382_ap_return);

    grp_operator_s_fu_389 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_389_ap_start,
        ap_done => grp_operator_s_fu_389_ap_done,
        ap_idle => grp_operator_s_fu_389_ap_idle,
        ap_ready => grp_operator_s_fu_389_ap_ready,
        ap_ce => grp_operator_s_fu_389_ap_ce,
        n_V => trunc_ln708_2_reg_1706,
        ap_return => grp_operator_s_fu_389_ap_return);

    myproject_mul_mul_16s_16s_26_1_1_U3 : component myproject_mul_mul_16s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1192_4_fu_1272_p0,
        din1 => mul_ln1192_4_fu_1272_p1,
        dout => mul_ln1192_4_fu_1272_p2);

    myproject_ama_submuladd_16s_16s_11ns_22ns_27_1_1_U4 : component myproject_ama_submuladd_16s_16s_11ns_22ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 11,
        din3_WIDTH => 22,
        dout_WIDTH => 27)
    port map (
        din0 => p_Val2_1_fu_420_p4,
        din1 => p_Val2_2_fu_406_p4,
        din2 => grp_fu_1279_p2,
        din3 => grp_fu_1279_p3,
        dout => grp_fu_1279_p4);

    myproject_mul_mul_16s_16s_32_1_1_U5 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_9_fu_1289_p0,
        din1 => r_V_9_fu_1289_p1,
        dout => r_V_9_fu_1289_p2);

    myproject_mac_muladd_16s_11s_26ns_26_1_1_U6 : component myproject_mac_muladd_16s_11s_26ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1295_p0,
        din1 => grp_fu_1295_p1,
        din2 => lhs_V_1_fu_493_p3,
        dout => grp_fu_1295_p3);

    myproject_mul_mul_16s_16s_32_1_1_U7 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_1_fu_1304_p0,
        din1 => r_V_1_fu_1304_p1,
        dout => r_V_1_fu_1304_p2);

    myproject_mul_mul_16s_13ns_26_1_1_U8 : component myproject_mul_mul_16s_13ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln700_3_fu_1310_p0,
        din1 => mul_ln700_3_fu_1310_p1,
        dout => mul_ln700_3_fu_1310_p2);

    myproject_mul_mul_16s_14ns_26_1_1_U9 : component myproject_mul_mul_16s_14ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln728_4_fu_1317_p0,
        din1 => mul_ln728_4_fu_1317_p1,
        dout => mul_ln728_4_fu_1317_p2);

    myproject_mac_muladd_16s_11ns_22ns_26_1_1_U10 : component myproject_mac_muladd_16s_11ns_22ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        din2_WIDTH => 22,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1324_p0,
        din1 => grp_fu_1324_p1,
        din2 => grp_fu_1324_p2,
        dout => grp_fu_1324_p3);

    myproject_mac_muladd_16s_16s_21s_26_1_1_U11 : component myproject_mac_muladd_16s_16s_21s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1332_p0,
        din1 => grp_fu_1332_p1,
        din2 => grp_fu_1332_p2,
        dout => grp_fu_1332_p3);

    myproject_mul_mul_16s_11ns_27_1_1_U12 : component myproject_mul_mul_16s_11ns_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 27)
    port map (
        din0 => p_Val2_5_reg_1495_pp0_iter1_reg,
        din1 => r_V_5_fu_1341_p1,
        dout => r_V_5_fu_1341_p2);

    myproject_am_addmul_16s_11s_8ns_24_1_1_U13 : component myproject_am_addmul_16s_11s_8ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        din2_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_1347_p0,
        din1 => grp_operator_s_fu_277_ap_return,
        din2 => grp_fu_1347_p2,
        dout => grp_fu_1347_p3);

    myproject_mul_mul_17s_17s_32_1_1_U14 : component myproject_mul_mul_17s_17s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 17,
        dout_WIDTH => 32)
    port map (
        din0 => ret_V_fu_751_p2,
        din1 => ret_V_fu_751_p2,
        dout => mul_ln1118_fu_1355_p2);

    myproject_mac_muladd_11s_11s_19s_22_1_1_U15 : component myproject_mac_muladd_11s_11s_19s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 19,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1361_p0,
        din1 => grp_fu_1361_p1,
        din2 => grp_fu_1361_p2,
        dout => grp_fu_1361_p3);

    myproject_mul_mul_16s_11ns_26_1_1_U16 : component myproject_mul_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1192_2_fu_1369_p0,
        din1 => mul_ln1192_2_fu_1369_p1,
        dout => mul_ln1192_2_fu_1369_p2);

    myproject_mul_mul_16s_10s_25_1_1_U17 : component myproject_mul_mul_16s_10s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 25)
    port map (
        din0 => p_Val2_1_reg_1480_pp0_iter2_reg,
        din1 => mul_ln728_fu_1374_p1,
        dout => mul_ln728_fu_1374_p2);

    myproject_mul_mul_16s_9ns_25_1_1_U18 : component myproject_mul_mul_16s_9ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        din0 => p_Val2_5_reg_1495_pp0_iter2_reg,
        din1 => r_V_21_fu_1381_p1,
        dout => r_V_21_fu_1381_p2);

    myproject_mac_muladd_16s_11s_26s_26_1_1_U19 : component myproject_mac_muladd_16s_11s_26s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_5_reg_1495_pp0_iter3_reg,
        din1 => grp_fu_1388_p1,
        din2 => mul_ln1192_2_reg_1640,
        dout => grp_fu_1388_p3);

    myproject_am_addmul_11s_12s_12s_25_1_1_U20 : component myproject_am_addmul_11s_12s_12s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        dout_WIDTH => 25)
    port map (
        din0 => grp_operator_s_fu_340_ap_return,
        din1 => grp_fu_1396_p1,
        din2 => ret_V_11_fu_924_p2,
        dout => grp_fu_1396_p3);

    myproject_mac_muladd_11s_10ns_22ns_22_1_1_U21 : component myproject_mac_muladd_11s_10ns_22ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => p_5_reg_1650,
        din1 => grp_fu_1404_p1,
        din2 => grp_fu_1404_p2,
        dout => grp_fu_1404_p3);

    myproject_mul_mul_16s_11ns_26_1_1_U22 : component myproject_mul_mul_16s_11ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln728_1_fu_1412_p0,
        din1 => mul_ln728_1_fu_1412_p1,
        dout => mul_ln728_1_fu_1412_p2);

    myproject_mul_mul_11s_11ns_22_1_1_U23 : component myproject_mul_mul_11s_11ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln728_2_fu_1418_p0,
        din1 => mul_ln728_2_fu_1418_p1,
        dout => mul_ln728_2_fu_1418_p2);

    myproject_ama_addmuladd_11s_11s_9ns_16s_20_1_1_U24 : component myproject_ama_addmuladd_11s_11s_9ns_16s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 9,
        din3_WIDTH => 16,
        dout_WIDTH => 20)
    port map (
        din0 => grp_operator_s_fu_354_ap_return,
        din1 => p_1_reg_1666,
        din2 => grp_fu_1425_p2,
        din3 => grp_fu_1425_p3,
        dout => grp_fu_1425_p4);

    myproject_mac_muladd_11s_11s_27s_28_1_1_U25 : component myproject_mac_muladd_11s_11s_27s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 27,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_1435_p0,
        din1 => grp_fu_1435_p1,
        din2 => lhs_V_6_fu_996_p3,
        dout => grp_fu_1435_p3);

    myproject_mul_mul_11s_11ns_22_1_1_U26 : component myproject_mul_mul_11s_11ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 22)
    port map (
        din0 => p_8_reg_1726,
        din1 => mul_ln728_3_fu_1444_p1,
        dout => mul_ln728_3_fu_1444_p2);

    myproject_mul_mul_11s_11s_22_1_1_U27 : component myproject_mul_mul_11s_11s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_23_fu_1451_p0,
        din1 => r_V_23_fu_1451_p1,
        dout => r_V_23_fu_1451_p2);

    myproject_am_addmul_22s_22s_13s_37_1_1_U28 : component myproject_am_addmul_22s_22s_13s_37_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        din2_WIDTH => 13,
        dout_WIDTH => 37)
    port map (
        din0 => r_V_23_reg_1766,
        din1 => tmp_7_fu_1194_p3,
        din2 => ret_V_31_fu_1209_p2,
        dout => grp_fu_1457_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_277_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_277_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_277_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_277_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_277_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_284_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_284_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_284_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_284_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_284_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_291_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_291_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_291_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_291_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_291_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_298_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_298_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_298_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_298_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_298_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_305_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_305_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_305_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_305_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_305_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_312_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_312_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_312_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_312_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_312_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_319_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_319_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_319_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_319_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_319_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_326_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_326_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_326_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_326_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_326_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_333_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_333_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_333_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_333_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_333_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_340_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_340_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_340_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_340_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_340_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_347_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_347_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_347_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_347_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_347_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_354_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_354_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_354_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_354_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_354_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_361_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_361_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_361_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_361_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_361_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_368_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_368_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_operator_s_fu_368_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_368_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_368_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_375_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_375_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_operator_s_fu_375_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_375_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_375_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_382_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_382_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_operator_s_fu_382_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_382_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_382_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_389_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_389_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                    grp_operator_s_fu_389_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_389_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_389_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv256_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_17_reg_1721 <= add_ln1192_17_fu_983_p2;
                add_ln1192_reg_1701 <= add_ln1192_fu_893_p2;
                add_ln703_1_reg_1619 <= add_ln703_1_fu_735_p2;
                add_ln703_2_reg_1691 <= add_ln703_2_fu_832_p2;
                add_ln703_reg_1609 <= add_ln703_fu_725_p2;
                mul_ln1118_reg_1629 <= mul_ln1118_fu_1355_p2;
                mul_ln1192_2_reg_1640 <= mul_ln1192_2_fu_1369_p2;
                mul_ln1192_3_reg_1786 <= mul_ln1192_3_fu_1176_p2;
                    mul_ln700_1_reg_1741(65 downto 1) <= mul_ln700_1_fu_1040_p2(65 downto 1);
                    mul_ln700_reg_1696(59 downto 1) <= mul_ln700_fu_874_p2(59 downto 1);
                p_0_reg_1776 <= grp_operator_s_fu_382_ap_return;
                p_0_reg_1776_pp0_iter6_reg <= p_0_reg_1776;
                p_1_reg_1666 <= grp_operator_s_fu_312_ap_return;
                p_2_reg_1676 <= grp_operator_s_fu_319_ap_return;
                p_2_reg_1676_pp0_iter4_reg <= p_2_reg_1676;
                p_5_reg_1650 <= grp_operator_s_fu_298_ap_return;
                p_6_reg_1655 <= grp_operator_s_fu_305_ap_return;
                p_6_reg_1655_pp0_iter4_reg <= p_6_reg_1655;
                p_6_reg_1655_pp0_iter5_reg <= p_6_reg_1655_pp0_iter4_reg;
                p_8_reg_1726 <= grp_operator_s_fu_347_ap_return;
                p_Val2_1_reg_1480_pp0_iter2_reg <= p_Val2_1_reg_1480_pp0_iter1_reg;
                p_Val2_30_reg_1761 <= grp_operator_s_fu_368_ap_return;
                p_Val2_36_reg_1686 <= grp_operator_s_fu_326_ap_return;
                p_Val2_36_reg_1686_pp0_iter4_reg <= p_Val2_36_reg_1686;
                p_Val2_4_reg_1489_pp0_iter2_reg <= p_Val2_4_reg_1489_pp0_iter1_reg;
                p_Val2_4_reg_1489_pp0_iter3_reg <= p_Val2_4_reg_1489_pp0_iter2_reg;
                p_Val2_5_reg_1495_pp0_iter2_reg <= p_Val2_5_reg_1495_pp0_iter1_reg;
                p_Val2_5_reg_1495_pp0_iter3_reg <= p_Val2_5_reg_1495_pp0_iter2_reg;
                p_Val2_s_24_reg_1645 <= grp_operator_s_fu_291_ap_return;
                p_Val2_s_reg_1465_pp0_iter2_reg <= p_Val2_s_reg_1465_pp0_iter1_reg;
                r_V_14_reg_1624 <= r_V_14_fu_742_p2;
                r_V_23_reg_1766 <= r_V_23_fu_1451_p2;
                r_V_4_reg_1746 <= r_V_4_fu_1058_p2;
                r_V_5_reg_1594 <= r_V_5_fu_1341_p2;
                ret_V_25_reg_1736 <= ret_V_25_fu_1024_p2;
                ret_V_45_reg_1614 <= ret_V_45_fu_730_p2;
                ret_V_45_reg_1614_pp0_iter3_reg <= ret_V_45_reg_1614;
                ret_V_50_reg_1771 <= ret_V_50_fu_1137_p2;
                sext_ln728_1_reg_1508_pp0_iter2_reg <= sext_ln728_1_reg_1508_pp0_iter1_reg;
                sext_ln728_1_reg_1508_pp0_iter3_reg <= sext_ln728_1_reg_1508_pp0_iter2_reg;
                sub_ln1192_1_reg_1661 <= sub_ln1192_1_fu_798_p2;
                trunc_ln708_10_reg_1671 <= r_V_21_fu_1381_p2(24 downto 10);
                trunc_ln708_12_reg_1681 <= r_V_24_fu_816_p2(55 downto 40);
                trunc_ln708_1_reg_1589 <= ret_V_34_fu_680_p2(35 downto 20);
                trunc_ln708_2_reg_1706 <= ret_V_36_fu_902_p2(25 downto 10);
                trunc_ln708_3_reg_1781 <= ret_V_37_fu_1155_p2(65 downto 50);
                trunc_ln708_6_reg_1756 <= ret_V_48_fu_1111_p2(45 downto 30);
                trunc_ln708_6_reg_1756_pp0_iter6_reg <= trunc_ln708_6_reg_1756;
                trunc_ln708_8_reg_1604 <= r_V_19_fu_709_p2(55 downto 40);
                trunc_ln708_9_reg_1751 <= ret_V_43_fu_1083_p2(45 downto 30);
                trunc_ln708_9_reg_1751_pp0_iter6_reg <= trunc_ln708_9_reg_1751;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lhs_V_5_reg_1529 <= lhs_V_5_fu_483_p1;
                lhs_V_5_reg_1529_pp0_iter1_reg <= lhs_V_5_reg_1529;
                mul_ln1192_4_reg_1514 <= mul_ln1192_4_fu_1272_p2;
                p_Val2_1_reg_1480 <= x_V_in_sig(239 downto 224);
                p_Val2_1_reg_1480_pp0_iter1_reg <= p_Val2_1_reg_1480;
                p_Val2_2_reg_1472 <= x_V_in_sig(63 downto 48);
                p_Val2_2_reg_1472_pp0_iter1_reg <= p_Val2_2_reg_1472;
                p_Val2_4_reg_1489 <= x_V_in_sig(79 downto 64);
                p_Val2_4_reg_1489_pp0_iter1_reg <= p_Val2_4_reg_1489;
                p_Val2_5_reg_1495 <= x_V_in_sig(255 downto 240);
                p_Val2_5_reg_1495_pp0_iter1_reg <= p_Val2_5_reg_1495;
                p_Val2_s_reg_1465 <= x_V_in_sig(47 downto 32);
                p_Val2_s_reg_1465_pp0_iter1_reg <= p_Val2_s_reg_1465;
                r_V_1_reg_1549 <= r_V_1_fu_1304_p2;
                r_V_6_reg_1564 <= r_V_6_fu_579_p2;
                r_V_9_reg_1539 <= r_V_9_fu_1289_p2;
                sext_ln728_1_reg_1508 <= sext_ln728_1_fu_450_p1;
                sext_ln728_1_reg_1508_pp0_iter1_reg <= sext_ln728_1_reg_1508;
                tmp_8_reg_1519 <= x_V_in_sig(62 downto 48);
                trunc_ln708_11_reg_1574 <= add_ln1192_28_fu_636_p2(25 downto 10);
                trunc_ln708_13_reg_1584 <= grp_fu_1332_p3(25 downto 10);
                trunc_ln708_4_reg_1554 <= ret_V_38_fu_537_p2(25 downto 10);
                trunc_ln708_5_reg_1559 <= add_ln1192_7_fu_560_p2(25 downto 10);
                trunc_ln708_7_reg_1524 <= ret_V_41_fu_464_p2(25 downto 10);
                trunc_ln708_s_reg_1569 <= ret_V_44_fu_614_p2(35 downto 20);
                trunc_ln_reg_1544 <= grp_fu_1295_p3(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                r_V_16_reg_1791 <= grp_fu_1457_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                r_V_2_reg_1711 <= grp_fu_1396_p3;
                ret_V_21_reg_1731 <= grp_fu_1425_p4;
                ret_V_39_reg_1716 <= grp_fu_1404_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ret_V_16_reg_1599 <= grp_fu_1347_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_18_reg_1534 <= grp_fu_1279_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_28_reg_1579 <= grp_fu_1324_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ret_V_4_reg_1635 <= grp_fu_1361_p3;
            end if;
        end if;
    end process;
    mul_ln700_reg_1696(0) <= '0';
    mul_ln700_1_reg_1741(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_16_fu_964_p2 <= std_logic_vector(unsigned(sub_ln1192_1_reg_1661) + unsigned(rhs_V_2_fu_957_p3));
    add_ln1192_17_fu_983_p2 <= std_logic_vector(unsigned(add_ln1192_16_fu_964_p2) + unsigned(rhs_V_3_fu_979_p1));
    add_ln1192_19_fu_1078_p2 <= std_logic_vector(unsigned(add_ln1192_17_reg_1721) + unsigned(rhs_V_4_fu_1074_p1));
    add_ln1192_28_fu_636_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_493_p3) + unsigned(add_ln1192_30_fu_630_p2));
    add_ln1192_30_fu_630_p2 <= std_logic_vector(unsigned(trunc_ln1118_1_fu_553_p3) + unsigned(ap_const_lv26_3E4EC00));
    add_ln1192_7_fu_560_p2 <= std_logic_vector(unsigned(trunc_ln1118_1_fu_553_p3) + unsigned(ap_const_lv26_3FCB400));
    add_ln1192_8_fu_519_p2 <= std_logic_vector(signed(mul_ln1192_4_reg_1514) + signed(lhs_V_3_fu_512_p3));
    add_ln1192_fu_893_p2 <= std_logic_vector(unsigned(ret_V_35_fu_887_p2) + unsigned(ap_const_lv17_FA5));
    add_ln700_fu_601_p2 <= std_logic_vector(unsigned(mul_ln700_2_fu_588_p2) + unsigned(shl_ln1_fu_594_p3));
    add_ln703_1_fu_735_p2 <= std_logic_vector(signed(p_Val2_5_reg_1495_pp0_iter1_reg) + signed(p_Val2_2_reg_1472_pp0_iter1_reg));
    add_ln703_2_fu_832_p2 <= std_logic_vector(signed(p_Val2_1_reg_1480_pp0_iter2_reg) + signed(ap_const_lv16_5E4));
    add_ln703_fu_725_p2 <= std_logic_vector(signed(p_Val2_2_reg_1472_pp0_iter1_reg) + signed(ap_const_lv16_FD36));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp103_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp103 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp105_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp105 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp118_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp118 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp119_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp119 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp121_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp121 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp191_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp191 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp192_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp192 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp193_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp193 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp197_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp197 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp45_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp45 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp65_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp65 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp72_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp72 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp75_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp75 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp76_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp76 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp87_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp87 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp90_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp90 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp93_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp93 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call105_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call105 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call117_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call117 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call148_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call148 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call158_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call158 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call170_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call170 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call183_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call183 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call197_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call197 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call203_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call203 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call217_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call217 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call221_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call221 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call231_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call231 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call31_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call31 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call49_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call49 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call63_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call63 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call69_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call69 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call79_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call79 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call96_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call96 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call148 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call158 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call170 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call183 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call197 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call148 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call158 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call170 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call183 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call197 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call148 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call158 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call170 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call183 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call197 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call148 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call158 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call170 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call183 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call197 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call148 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call158 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call170 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call183 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call197 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call148 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call158 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call170 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call183 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call197 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call148 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call158 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call170 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call183 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call197 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call221 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call231 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to6)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1279_p2 <= ap_const_lv27_28D(11 - 1 downto 0);
    grp_fu_1279_p3 <= ap_const_lv27_100000(22 - 1 downto 0);
    grp_fu_1295_p0 <= sext_ln728_fu_487_p1(16 - 1 downto 0);
    grp_fu_1295_p1 <= ap_const_lv26_3FFFD81(11 - 1 downto 0);
    grp_fu_1324_p0 <= sext_ln727_fu_490_p1(16 - 1 downto 0);
    grp_fu_1324_p1 <= ap_const_lv26_3BB(11 - 1 downto 0);
    grp_fu_1324_p2 <= ap_const_lv26_100000(22 - 1 downto 0);
    grp_fu_1332_p0 <= sext_ln728_fu_487_p1(16 - 1 downto 0);
    grp_fu_1332_p1 <= sext_ln728_fu_487_p1(16 - 1 downto 0);
    grp_fu_1332_p2 <= ap_const_lv26_3F7C400(21 - 1 downto 0);
    grp_fu_1347_p0 <= rhs_V_6_fu_696_p1(16 - 1 downto 0);
    grp_fu_1347_p2 <= ap_const_lv24_62(8 - 1 downto 0);
    grp_fu_1361_p0 <= sext_ln1116_fu_765_p1(11 - 1 downto 0);
    grp_fu_1361_p1 <= sext_ln1116_fu_765_p1(11 - 1 downto 0);
    grp_fu_1361_p2 <= ap_const_lv22_3DF000(19 - 1 downto 0);
    grp_fu_1388_p1 <= ap_const_lv26_3FFFCE2(11 - 1 downto 0);
    grp_fu_1396_p1 <= ap_const_lv13_1A82(12 - 1 downto 0);
    grp_fu_1404_p1 <= ap_const_lv21_137(10 - 1 downto 0);
    grp_fu_1404_p2 <= std_logic_vector(signed(sext_ln1118_7_fu_934_p1) + signed(sext_ln1118_8_fu_944_p1));
    grp_fu_1425_p2 <= ap_const_lv20_B7(9 - 1 downto 0);
    grp_fu_1425_p3 <= ap_const_lv20_FB400(16 - 1 downto 0);
    grp_fu_1435_p0 <= sext_ln1118_12_fu_969_p1(11 - 1 downto 0);
    grp_fu_1435_p1 <= sext_ln1118_12_fu_969_p1(11 - 1 downto 0);

    grp_operator_s_fu_277_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp45)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp45) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_277_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_277_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_277_ap_start <= grp_operator_s_fu_277_ap_start_reg;

    grp_operator_s_fu_284_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp65)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp65) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_284_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_284_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_284_ap_start <= grp_operator_s_fu_284_ap_start_reg;

    grp_operator_s_fu_291_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp72)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp72) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_291_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_291_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_291_ap_start <= grp_operator_s_fu_291_ap_start_reg;

    grp_operator_s_fu_298_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp75)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp75) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_298_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_298_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_298_ap_start <= grp_operator_s_fu_298_ap_start_reg;

    grp_operator_s_fu_305_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp76)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp76) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_305_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_305_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_305_ap_start <= grp_operator_s_fu_305_ap_start_reg;

    grp_operator_s_fu_312_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp87)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp87) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_312_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_312_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_312_ap_start <= grp_operator_s_fu_312_ap_start_reg;

    grp_operator_s_fu_319_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp90)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp90) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_319_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_319_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_319_ap_start <= grp_operator_s_fu_319_ap_start_reg;

    grp_operator_s_fu_326_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp93)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp93) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_326_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_326_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_326_ap_start <= grp_operator_s_fu_326_ap_start_reg;

    grp_operator_s_fu_333_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp103)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp103) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_333_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_333_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_333_ap_start <= grp_operator_s_fu_333_ap_start_reg;

    grp_operator_s_fu_340_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp105)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp105) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_340_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_340_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_340_ap_start <= grp_operator_s_fu_340_ap_start_reg;

    grp_operator_s_fu_347_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp118) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_347_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_347_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_347_ap_start <= grp_operator_s_fu_347_ap_start_reg;

    grp_operator_s_fu_354_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp119)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp119) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_354_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_354_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_354_ap_start <= grp_operator_s_fu_354_ap_start_reg;

    grp_operator_s_fu_361_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp121)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp121) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_361_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_361_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_361_ap_start <= grp_operator_s_fu_361_ap_start_reg;

    grp_operator_s_fu_368_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp191)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp191) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_368_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_368_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_368_ap_start <= grp_operator_s_fu_368_ap_start_reg;
        grp_operator_s_fu_368_n_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_10_reg_1671),16));


    grp_operator_s_fu_375_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp192)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp192) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_375_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_375_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_375_ap_start <= grp_operator_s_fu_375_ap_start_reg;

    grp_operator_s_fu_382_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp193)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp193) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_382_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_382_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_382_ap_start <= grp_operator_s_fu_382_ap_start_reg;

    grp_operator_s_fu_389_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp197)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp197) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_389_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_389_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_389_ap_start <= grp_operator_s_fu_389_ap_start_reg;
    lhs_V_1_fu_493_p3 <= (p_Val2_1_reg_1480 & ap_const_lv10_0);
    lhs_V_2_fu_673_p3 <= (p_Val2_5_reg_1495_pp0_iter1_reg & ap_const_lv20_0);
    lhs_V_3_fu_512_p3 <= (p_Val2_5_reg_1495 & ap_const_lv10_0);
    lhs_V_4_fu_787_p3 <= (mul_ln728_fu_1374_p2 & ap_const_lv20_0);
        lhs_V_5_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_420_p4),17));

    lhs_V_6_fu_996_p3 <= (ret_V_45_reg_1614_pp0_iter3_reg & ap_const_lv10_0);
        lhs_V_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1465_pp0_iter2_reg),17));

    mul_ln1192_2_fu_1369_p0 <= sext_ln728_1_reg_1508_pp0_iter2_reg(16 - 1 downto 0);
    mul_ln1192_2_fu_1369_p1 <= ap_const_lv26_31E(11 - 1 downto 0);
    mul_ln1192_3_fu_1176_p0 <= p_6_reg_1655_pp0_iter5_reg;
    mul_ln1192_3_fu_1176_p1 <= r_V_4_reg_1746(47 - 1 downto 0);
    mul_ln1192_3_fu_1176_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_3_fu_1176_p0) * signed(mul_ln1192_3_fu_1176_p1))), 54));
    mul_ln1192_4_fu_1272_p0 <= sext_ln728_1_fu_450_p1(16 - 1 downto 0);
    mul_ln1192_4_fu_1272_p1 <= sext_ln728_1_fu_450_p1(16 - 1 downto 0);
    mul_ln1192_5_fu_781_p0 <= r_V_5_reg_1594;
    mul_ln1192_5_fu_781_p1 <= ret_V_16_reg_1599;
    mul_ln1192_5_fu_781_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_5_fu_781_p0) * signed(mul_ln1192_5_fu_781_p1))), 46));
    mul_ln1192_7_fu_1105_p0 <= ret_V_21_reg_1731;
    mul_ln1192_7_fu_1105_p1 <= ret_V_25_reg_1736;
    mul_ln1192_7_fu_1105_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_7_fu_1105_p0) * signed(mul_ln1192_7_fu_1105_p1))), 46));
    mul_ln1192_9_fu_1245_p0 <= p_0_reg_1776_pp0_iter6_reg;
    mul_ln1192_9_fu_1245_p1 <= r_V_16_reg_1791(36 - 1 downto 0);
    mul_ln1192_9_fu_1245_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_9_fu_1245_p0) * signed(mul_ln1192_9_fu_1245_p1))), 45));
    mul_ln1192_fu_667_p0 <= p_Val2_s_reg_1465_pp0_iter1_reg;
    mul_ln1192_fu_667_p1 <= r_V_1_reg_1549;
    mul_ln1192_fu_667_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_667_p0) * signed(mul_ln1192_fu_667_p1))), 36));
    mul_ln700_1_fu_1040_p0 <= add_ln1192_reg_1701;
    mul_ln700_1_fu_1040_p1 <= mul_ln700_reg_1696;
    mul_ln700_1_fu_1040_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_1040_p0) * signed(mul_ln700_1_fu_1040_p1))), 66));
    mul_ln700_2_fu_588_p0 <= r_V_9_reg_1539;
    mul_ln700_2_fu_588_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_2_fu_588_p0) * signed('0' &ap_const_lv36_D20))), 36));
    mul_ln700_3_fu_1310_p0 <= sext_ln727_fu_490_p1(16 - 1 downto 0);
    mul_ln700_3_fu_1310_p1 <= ap_const_lv26_D20(13 - 1 downto 0);
    mul_ln700_fu_874_p0 <= ret_V_4_reg_1635;
    mul_ln700_fu_874_p1 <= ret_V_2_fu_861_p2;
    mul_ln700_fu_874_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_fu_874_p0) * signed(mul_ln700_fu_874_p1))), 60));
    mul_ln728_1_fu_1412_p0 <= sext_ln728_1_reg_1508_pp0_iter3_reg(16 - 1 downto 0);
    mul_ln728_1_fu_1412_p1 <= ap_const_lv26_234(11 - 1 downto 0);
    mul_ln728_2_fu_1418_p0 <= sext_ln1118_12_fu_969_p1(11 - 1 downto 0);
    mul_ln728_2_fu_1418_p1 <= ap_const_lv22_228(11 - 1 downto 0);
    mul_ln728_3_fu_1444_p1 <= ap_const_lv22_228(11 - 1 downto 0);
    mul_ln728_4_fu_1317_p0 <= sext_ln728_fu_487_p1(16 - 1 downto 0);
    mul_ln728_4_fu_1317_p1 <= ap_const_lv26_1A40(14 - 1 downto 0);
    mul_ln728_fu_1374_p1 <= ap_const_lv25_1FFFEE6(10 - 1 downto 0);
    p_Val2_1_fu_420_p4 <= x_V_in_sig(239 downto 224);
    p_Val2_2_fu_406_p4 <= x_V_in_sig(63 downto 48);
    p_Val2_s_fu_396_p4 <= x_V_in_sig(47 downto 32);
    r_V_14_fu_742_p0 <= sext_ln1116_6_fu_739_p1(26 - 1 downto 0);
    r_V_14_fu_742_p1 <= sext_ln1116_6_fu_739_p1(26 - 1 downto 0);
    r_V_14_fu_742_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_14_fu_742_p0) * signed(r_V_14_fu_742_p1))), 51));
    r_V_19_fu_709_p0 <= r_V_6_reg_1564;
    r_V_19_fu_709_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_19_fu_709_p0) * signed('0' &ap_const_lv56_9CE))), 56));
    r_V_1_fu_1304_p0 <= r_V_fu_509_p1(16 - 1 downto 0);
    r_V_1_fu_1304_p1 <= r_V_fu_509_p1(16 - 1 downto 0);
    r_V_21_fu_1381_p1 <= ap_const_lv25_F1(9 - 1 downto 0);
    r_V_22_fu_1185_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1253_fu_1182_p1));
    r_V_23_fu_1451_p0 <= sext_ln1116_5_fu_1127_p1(11 - 1 downto 0);
    r_V_23_fu_1451_p1 <= sext_ln1116_5_fu_1127_p1(11 - 1 downto 0);
    r_V_24_fu_816_p0 <= r_V_14_reg_1624;
    r_V_24_fu_816_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_24_fu_816_p0) * signed('0' &ap_const_lv56_125D))), 56));
    r_V_4_fu_1058_p0 <= r_V_2_reg_1711;
    r_V_4_fu_1058_p1 <= ret_V_13_fu_1046_p2;
    r_V_4_fu_1058_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(std_logic_vector(signed(r_V_4_fu_1058_p0) * signed(r_V_4_fu_1058_p1))), 49));
    r_V_5_fu_1341_p1 <= ap_const_lv27_227(11 - 1 downto 0);
    r_V_6_fu_579_p0 <= sext_ln1116_3_fu_576_p1(27 - 1 downto 0);
    r_V_6_fu_579_p1 <= sext_ln1116_3_fu_576_p1(27 - 1 downto 0);
    r_V_6_fu_579_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_fu_579_p0) * signed(r_V_6_fu_579_p1))), 52));
        r_V_8_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_420_p4),32));

    r_V_9_fu_1289_p0 <= r_V_8_fu_479_p1(16 - 1 downto 0);
    r_V_9_fu_1289_p1 <= r_V_8_fu_479_p1(16 - 1 downto 0);
        r_V_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1489),32));

    ret_V_11_fu_924_p2 <= std_logic_vector(signed(sext_ln703_1_fu_921_p1) + signed(ap_const_lv12_C4D));
    ret_V_13_fu_1046_p2 <= std_logic_vector(signed(ret_V_39_reg_1716) + signed(ap_const_lv22_3EB400));
    ret_V_25_fu_1024_p2 <= std_logic_vector(unsigned(ret_V_47_fu_1019_p2) + unsigned(ap_const_lv28_FC48800));
    ret_V_2_fu_861_p2 <= std_logic_vector(unsigned(sub_ln1193_fu_855_p2) + unsigned(ap_const_lv39_1BC00000));
    ret_V_31_fu_1209_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1206_p1) + signed(ap_const_lv13_E8));
    ret_V_34_fu_680_p2 <= std_logic_vector(unsigned(mul_ln1192_fu_667_p2) + unsigned(lhs_V_2_fu_673_p3));
    ret_V_35_fu_887_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_883_p1) - signed(sext_ln1192_2_fu_880_p1));
    ret_V_36_fu_902_p2 <= std_logic_vector(signed(grp_fu_1388_p3) + signed(ap_const_lv26_C5C00));
    ret_V_37_fu_1155_p2 <= std_logic_vector(unsigned(mul_ln700_1_reg_1741) - unsigned(rhs_V_fu_1151_p1));
    ret_V_38_fu_537_p2 <= std_logic_vector(unsigned(sub_ln1192_fu_531_p2) + unsigned(ap_const_lv26_3E72000));
    ret_V_40_fu_1219_p2 <= std_logic_vector(unsigned(mul_ln1192_3_reg_1786) + unsigned(ap_const_lv54_3C9F0000000000));
    ret_V_41_fu_464_p2 <= std_logic_vector(signed(mul_ln1192_4_fu_1272_p2) + signed(ap_const_lv26_3EE5C00));
    ret_V_43_fu_1083_p2 <= std_logic_vector(unsigned(add_ln1192_19_fu_1078_p2) + unsigned(ap_const_lv46_3F5800000000));
    ret_V_44_fu_614_p2 <= std_logic_vector(unsigned(add_ln700_fu_601_p2) + unsigned(rhs_V_5_fu_607_p3));
    ret_V_45_fu_730_p2 <= std_logic_vector(signed(lhs_V_5_reg_1529_pp0_iter1_reg) + signed(rhs_V_6_fu_696_p1));
    ret_V_47_fu_1019_p2 <= std_logic_vector(signed(grp_fu_1435_p3) + signed(sext_ln1192_18_fu_1015_p1));
    ret_V_48_fu_1111_p2 <= std_logic_vector(unsigned(mul_ln1192_7_fu_1105_p2) + unsigned(ap_const_lv46_3F0D40000000));
    ret_V_50_fu_1137_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1130_p1) - signed(sext_ln703_6_fu_1134_p1));
    ret_V_51_fu_1251_p2 <= std_logic_vector(unsigned(mul_ln1192_9_fu_1245_p2) + unsigned(ap_const_lv45_1F2600000000));
    ret_V_fu_751_p2 <= std_logic_vector(signed(lhs_V_fu_748_p1) + signed(ap_const_lv17_1FC53));
    rhs_V_1_fu_524_p3 <= (p_Val2_2_reg_1472 & ap_const_lv10_0);
    rhs_V_2_fu_957_p3 <= (mul_ln728_1_fu_1412_p2 & ap_const_lv20_0);
        rhs_V_3_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_972_p3),46));

        rhs_V_4_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_1067_p3),46));

    rhs_V_5_fu_607_p3 <= (mul_ln728_4_fu_1317_p2 & ap_const_lv10_0);
        rhs_V_6_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1495_pp0_iter1_reg),17));

        rhs_V_fu_1151_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_1143_p3),66));

        sext_ln1116_3_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_18_reg_1534),52));

        sext_ln1116_5_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1676_pp0_iter4_reg),22));

        sext_ln1116_6_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_28_reg_1579),51));

        sext_ln1116_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_284_ap_return),22));

        sext_ln1118_12_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1655),22));

        sext_ln1118_7_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1495_pp0_iter3_reg),22));

        sext_ln1118_8_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_937_p3),22));

        sext_ln1118_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_844_p3),39));

        sext_ln1192_10_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_4_fu_787_p3),46));

        sext_ln1192_18_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_1007_p3),28));

        sext_ln1192_2_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1489_pp0_iter3_reg),17));

        sext_ln1192_3_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_333_ap_return),17));

        sext_ln1253_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_30_reg_1761),12));

        sext_ln703_1_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_24_reg_1645),12));

        sext_ln703_5_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_375_ap_return),12));

        sext_ln703_6_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_36_reg_1686_pp0_iter4_reg),12));

        sext_ln703_7_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_50_reg_1771),13));

        sext_ln727_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1480),26));

        sext_ln728_1_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_396_p4),26));

        sext_ln728_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1472),26));

    shl_ln1118_1_fu_844_p3 <= (mul_ln1118_reg_1629 & ap_const_lv1_0);
    shl_ln1118_2_fu_937_p3 <= (p_Val2_5_reg_1495_pp0_iter3_reg & ap_const_lv5_0);
    shl_ln1_fu_594_p3 <= (mul_ln700_3_fu_1310_p2 & ap_const_lv10_0);
    shl_ln_fu_837_p3 <= (mul_ln1118_reg_1629 & ap_const_lv7_0);
    sub_ln1192_1_fu_798_p2 <= std_logic_vector(signed(sext_ln1192_10_fu_794_p1) - signed(mul_ln1192_5_fu_781_p2));
    sub_ln1192_fu_531_p2 <= std_logic_vector(unsigned(add_ln1192_8_fu_519_p2) - unsigned(rhs_V_1_fu_524_p3));
    sub_ln1193_fu_855_p2 <= std_logic_vector(signed(sext_ln1118_fu_851_p1) - signed(shl_ln_fu_837_p3));
    tmp_10_fu_1257_p4 <= ret_V_51_fu_1251_p2(44 downto 30);
    tmp_4_fu_1143_p3 <= (grp_operator_s_fu_389_ap_return & ap_const_lv50_0);
    tmp_5_fu_972_p3 <= (mul_ln728_2_fu_1418_p2 & ap_const_lv20_0);
    tmp_6_fu_1067_p3 <= (mul_ln728_3_fu_1444_p2 & ap_const_lv20_0);
    tmp_7_fu_1194_p3 <= (r_V_22_fu_1185_p2 & ap_const_lv10_0);
    tmp_9_fu_1007_p3 <= (grp_operator_s_fu_361_ap_return & ap_const_lv10_0);
    tmp_fu_1224_p4 <= ret_V_40_fu_1219_p2(53 downto 40);
    trunc_ln1118_1_fu_553_p3 <= (tmp_8_reg_1519 & ap_const_lv11_0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln708_3_reg_1781;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_1_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1224_p4),16));


    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1751_pp0_iter6_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_6_reg_1756_pp0_iter6_reg;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_4_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_1257_p4),16));


    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
