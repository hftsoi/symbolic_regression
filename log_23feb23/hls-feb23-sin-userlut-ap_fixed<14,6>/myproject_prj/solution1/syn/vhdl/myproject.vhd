-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (223 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (13 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (13 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (13 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (13 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (13 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.271200,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=17,HLS_SYN_DSP=45,HLS_SYN_FF=1795,HLS_SYN_LUT=3477,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv224_lc_1 : STD_LOGIC_VECTOR (223 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_C4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000100";
    constant ap_const_lv32_D1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010001";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_D2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010010";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv22_3EE500 : STD_LOGIC_VECTOR (21 downto 0) := "1111101110010100000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv22_3E7200 : STD_LOGIC_VECTOR (21 downto 0) := "1111100111001000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv22_3FCB00 : STD_LOGIC_VECTOR (21 downto 0) := "1111111100101100000000";
    constant ap_const_lv14_3F4D : STD_LOGIC_VECTOR (13 downto 0) := "11111101001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv22_3E4E00 : STD_LOGIC_VECTOR (21 downto 0) := "1111100100111000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv22_C500 : STD_LOGIC_VECTOR (21 downto 0) := "0000001100010100000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv46_273 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000001001110011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv46_497 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000010010010111";
    constant ap_const_lv14_179 : STD_LOGIC_VECTOR (13 downto 0) := "00000101111001";
    constant ap_const_lv33_6F0000 : STD_LOGIC_VECTOR (32 downto 0) := "000000000011011110000000000000000";
    constant ap_const_lv18_8A : STD_LOGIC_VECTOR (17 downto 0) := "000000000010001010";
    constant ap_const_lv15_3E9 : STD_LOGIC_VECTOR (14 downto 0) := "000001111101001";
    constant ap_const_lv10_313 : STD_LOGIC_VECTOR (9 downto 0) := "1100010011";
    constant ap_const_lv38_3F58000000 : STD_LOGIC_VECTOR (37 downto 0) := "11111101011000000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv24_FC4800 : STD_LOGIC_VECTOR (23 downto 0) := "111111000100100000000000";
    constant ap_const_lv18_3EB00 : STD_LOGIC_VECTOR (17 downto 0) := "111110101100000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_3A : STD_LOGIC_VECTOR (10 downto 0) := "00000111010";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv44_F2700000000 : STD_LOGIC_VECTOR (43 downto 0) := "11110010011100000000000000000000000000000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv37_1F26000000 : STD_LOGIC_VECTOR (36 downto 0) := "1111100100110000000000000000000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv23_A3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010100011";
    constant ap_const_lv23_10000 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_const_lv22_EE : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000011101110";
    constant ap_const_lv22_10000 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_const_lv22_3FFF61 : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111101100001";
    constant ap_const_lv22_C7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000011000111";
    constant ap_const_lv30_348 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000001101001000";
    constant ap_const_lv22_348 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001101001000";
    constant ap_const_lv22_690 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000011010010000";
    constant ap_const_lv22_3F7C00 : STD_LOGIC_VECTOR (21 downto 0) := "1111110111110000000000";
    constant ap_const_lv22_3FFF39 : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111100111001";
    constant ap_const_lv23_89 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010001001";
    constant ap_const_lv21_1FFFBA : STD_LOGIC_VECTOR (20 downto 0) := "111111111111110111010";
    constant ap_const_lv15_7F14 : STD_LOGIC_VECTOR (14 downto 0) := "111111100010100";
    constant ap_const_lv18_3DF00 : STD_LOGIC_VECTOR (17 downto 0) := "111101111100000000";
    constant ap_const_lv17_4D : STD_LOGIC_VECTOR (16 downto 0) := "00000000001001101";
    constant ap_const_lv22_8D : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010001101";
    constant ap_const_lv16_2D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101101";
    constant ap_const_lv16_FB00 : STD_LOGIC_VECTOR (15 downto 0) := "1111101100000000";
    constant ap_const_lv11_6A0 : STD_LOGIC_VECTOR (10 downto 0) := "11010100000";
    constant ap_const_lv38_3F0D000000 : STD_LOGIC_VECTOR (37 downto 0) := "11111100001101000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (223 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (223 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_fu_402_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_s_reg_1509 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_s_reg_1509_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_s_reg_1509_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_2_fu_412_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_2_reg_1516 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_1_fu_426_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_1_reg_1524 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_1_reg_1524_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln727_fu_436_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln727_reg_1532 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_4_reg_1537 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_4_reg_1537_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_4_reg_1537_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_4_reg_1537_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_5_reg_1543 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_5_reg_1543_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln728_1_fu_460_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln728_1_reg_1557 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln728_1_reg_1557_pp0_iter1_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln728_1_reg_1557_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_6_fu_1323_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_6_reg_1563 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_7_reg_1568 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_7_reg_1573 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_5_fu_493_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal lhs_V_5_reg_1578 : STD_LOGIC_VECTOR (14 downto 0);
    signal lhs_V_5_reg_1578_pp0_iter1_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1330_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal ret_V_17_reg_1583 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_12_fu_1340_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_12_reg_1588 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1346_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_27_reg_1593 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln_reg_1598 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_4_fu_1363_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_4_reg_1603 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_2_fu_1369_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_2_reg_1608 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln708_4_reg_1613 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_5_reg_1618 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_586_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1118_reg_1623 : STD_LOGIC_VECTOR (45 downto 0);
    signal add_ln703_fu_592_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_reg_1628 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_s_reg_1633 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1_fu_635_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1_reg_1638 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_11_reg_1643 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_5_fu_664_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_5_reg_1648 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln708_13_reg_1653 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_1_reg_1658 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_2_reg_1663 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_19_fu_728_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_19_reg_1668 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_7_fu_1418_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_7_reg_1673 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1192_12_fu_793_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1192_12_reg_1678 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln728_fu_1424_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln728_reg_1683 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln708_8_reg_1688 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_44_fu_817_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_44_reg_1693 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_10_reg_1698 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_12_reg_1703 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_2_fu_879_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_2_reg_1708 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_2_fu_907_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_2_reg_1713 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_1438_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_4_reg_1718 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_operator_s_fu_297_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_24_reg_1723 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1446_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_38_reg_1728 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_38_reg_1728_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_operator_s_fu_311_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal p_6_reg_1733 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_6_reg_1733_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_6_reg_1733_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1192_17_fu_988_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal add_ln1192_17_reg_1738 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_1460_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_20_reg_1743 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1470_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_45_reg_1748 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_operator_s_fu_332_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_27_reg_1753 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_operator_s_fu_339_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal p_2_reg_1758 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_2_reg_1758_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_operator_s_fu_346_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_38_reg_1763 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_fu_1023_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal mul_ln700_reg_1768 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln1192_fu_1042_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1192_reg_1773 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_operator_s_fu_360_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_10_reg_1778 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_10_reg_1778_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1478_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_5_reg_1783 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln708_9_reg_1788 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_9_reg_1788_pp0_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_6_reg_1793 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_6_reg_1793_pp0_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_operator_s_fu_381_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_32_reg_1798 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_49_fu_1153_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_49_reg_1803 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_operator_s_fu_395_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal p_0_reg_1808 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_0_reg_1808_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_1_fu_1165_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln700_1_reg_1813 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln1192_3_fu_1495_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln1192_3_reg_1818 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1501_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln1192_9_reg_1823 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_operator_s_fu_283_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_283_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_283_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_283_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_283_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_283_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call116 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call116 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call116 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call116 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call116 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call116 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call116 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp47 : BOOLEAN;
    signal grp_operator_s_fu_290_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_290_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_290_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_290_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_290_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_290_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call30 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call30 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call30 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call30 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call30 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call30 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call30 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp69 : BOOLEAN;
    signal grp_operator_s_fu_297_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_297_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_297_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_297_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_297_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call78 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call78 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call78 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call78 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call78 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call78 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call78 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp81 : BOOLEAN;
    signal grp_operator_s_fu_304_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_304_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_304_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_304_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_304_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_304_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call91 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call91 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call91 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call91 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call91 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call91 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call91 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp85 : BOOLEAN;
    signal grp_operator_s_fu_311_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_311_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_311_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_311_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_311_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call102 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call102 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call102 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call102 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call102 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call102 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call102 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp86 : BOOLEAN;
    signal grp_operator_s_fu_318_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_318_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_318_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_318_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_318_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_318_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call159 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call159 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call159 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call159 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call159 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call159 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call159 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp103 : BOOLEAN;
    signal grp_operator_s_fu_325_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_325_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_325_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_325_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_325_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_325_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call171 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call171 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call171 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call171 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call171 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call171 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call171 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp104 : BOOLEAN;
    signal grp_operator_s_fu_332_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_332_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_332_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_332_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_332_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call185 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call185 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call185 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call185 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call185 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call185 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call185 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp107 : BOOLEAN;
    signal grp_operator_s_fu_339_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_339_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_339_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_339_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_339_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call209 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call209 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call209 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call209 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call209 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call209 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call209 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp114 : BOOLEAN;
    signal grp_operator_s_fu_346_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_346_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_346_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_346_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_346_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call227 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call227 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call227 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call227 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call227 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call227 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call227 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp118 : BOOLEAN;
    signal grp_operator_s_fu_353_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_353_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_353_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_353_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_353_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_353_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call48 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call48 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call48 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call48 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call48 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call48 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call48 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp133 : BOOLEAN;
    signal grp_operator_s_fu_360_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_360_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_360_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_360_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_360_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call62 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call62 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call62 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call62 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call62 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call62 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call62 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp134 : BOOLEAN;
    signal grp_operator_s_fu_367_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_367_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_367_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_367_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_367_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_367_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call68 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call68 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call68 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call68 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call68 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call68 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call68 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp135 : BOOLEAN;
    signal grp_operator_s_fu_374_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_374_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_374_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_374_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_374_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_374_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call149 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call149 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call149 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call149 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call149 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call149 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call149 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp158 : BOOLEAN;
    signal grp_operator_s_fu_381_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_381_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_381_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_381_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_381_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_381_n_V : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call203 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call203 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call203 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call203 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call203 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call203 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call203 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp174 : BOOLEAN;
    signal grp_operator_s_fu_388_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_388_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_388_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_388_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_388_ap_ce : STD_LOGIC;
    signal grp_operator_s_fu_388_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call223 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call223 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call223 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call223 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call223 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call223 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call223 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp176 : BOOLEAN;
    signal grp_operator_s_fu_395_ap_start : STD_LOGIC;
    signal grp_operator_s_fu_395_ap_done : STD_LOGIC;
    signal grp_operator_s_fu_395_ap_idle : STD_LOGIC;
    signal grp_operator_s_fu_395_ap_ready : STD_LOGIC;
    signal grp_operator_s_fu_395_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call238 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call238 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call238 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call238 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call238 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call238 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call238 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp178 : BOOLEAN;
    signal grp_operator_s_fu_283_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_290_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_297_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_304_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_311_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_318_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_325_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_332_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_339_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_346_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_353_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_360_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_367_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_374_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_381_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_388_ap_start_reg : STD_LOGIC := '0';
    signal grp_operator_s_fu_395_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ret_V_40_fu_474_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_40_fu_474_p2 : signal is "no";
    signal grp_fu_1354_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal lhs_V_3_fu_519_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_8_fu_526_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 of add_ln1192_8_fu_526_p2 : signal is "no";
    signal rhs_V_1_fu_531_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1192_fu_538_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_37_fu_544_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln1_fu_560_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_7_fu_567_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_fu_586_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_11_fu_583_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal mul_ln1118_fu_586_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln700_3_fu_1381_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln700_2_fu_1374_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln1_fu_600_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln728_4_fu_1387_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln700_fu_607_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 of add_ln700_fu_607_p2 : signal is "no";
    signal rhs_V_5_fu_612_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_43_fu_619_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_1_fu_500_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_30_fu_639_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_28_fu_645_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_5_fu_664_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_16_fu_661_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1118_5_fu_664_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1394_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_fu_1403_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_2_fu_685_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_33_fu_692_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 of ret_V_33_fu_692_p2 : signal is "no";
    signal grp_fu_1410_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_35_fu_710_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 of ret_V_35_fu_710_p2 : signal is "no";
    signal shl_ln_fu_742_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_5_fu_749_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_3_fu_735_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_9_fu_759_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_771_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_6_fu_767_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_7_fu_779_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_21_fu_783_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_20_fu_753_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_8_fu_789_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_22_fu_799_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal rhs_V_6_fu_814_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_3_fu_822_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln1118_4_fu_833_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_13_fu_829_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_14_fu_840_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_24_fu_844_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_27_fu_863_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_27_fu_863_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal grp_fu_1430_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln1193_fu_890_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1118_fu_887_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl_fu_893_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln1193_1_fu_901_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln1192_5_fu_930_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_5_fu_930_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal lhs_V_4_fu_936_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln1192_11_fu_943_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln1192_5_fu_930_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln728_1_fu_1454_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1192_1_fu_947_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal rhs_V_2_fu_953_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal sext_ln1118_9_fu_966_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_2_fu_970_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_9_fu_966_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln728_2_fu_970_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_fu_976_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1192_16_fu_960_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal rhs_V_3_fu_984_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal lhs_V_6_fu_1002_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln700_fu_1023_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln700_fu_1023_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln1192_3_fu_1032_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_2_fu_1029_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_34_fu_1036_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_1_fu_1052_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_11_fu_1055_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_3_fu_1069_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_3_fu_1069_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_fu_1075_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal rhs_V_4_fu_1083_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal add_ln1192_19_fu_1087_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal ret_V_42_fu_1092_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_1_fu_1108_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_18_fu_1115_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_46_fu_1119_p2 : STD_LOGIC_VECTOR (23 downto 0);
    attribute use_dsp48 of ret_V_46_fu_1119_p2 : signal is "no";
    signal ret_V_24_fu_1124_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1486_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal sext_ln703_6_fu_1146_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_7_fu_1150_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln700_1_fu_1165_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln700_1_fu_1165_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_13_fu_1171_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of ret_V_13_fu_1171_p2 : signal is "no";
    signal sext_ln1253_fu_1183_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_26_fu_1195_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1116_3_fu_1192_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_26_fu_1195_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_26_fu_1195_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_25_fu_1186_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_1205_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_8_fu_1217_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_30_fu_1220_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_1230_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal rhs_V_fu_1237_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ret_V_36_fu_1241_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal mul_ln1192_4_fu_1263_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1192_4_fu_1263_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln1192_4_fu_1263_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal ret_V_39_fu_1269_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_fu_1275_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_10_fu_1296_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1192_10_fu_1296_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1192_10_fu_1296_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal ret_V_50_fu_1302_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_8_fu_1308_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1192_6_fu_1323_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_6_fu_1323_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1330_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1330_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_12_fu_1340_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_11_fu_489_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_12_fu_1340_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1346_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1346_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1354_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1354_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln728_fu_497_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_4_fu_1363_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_3_fu_516_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_4_fu_1363_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_2_fu_1369_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1192_2_fu_1369_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln700_2_fu_1374_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln700_3_fu_1381_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln700_3_fu_1381_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln728_4_fu_1387_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_4_fu_1387_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1394_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1394_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1394_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1410_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_fu_1418_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_fu_1424_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1430_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1438_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1116_fu_913_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1438_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1438_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln728_1_fu_1454_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_1_fu_1454_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1460_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1460_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1470_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1470_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1478_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1486_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component operator_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        n_V : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component myproject_mul_mul_14s_14s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_ama_submuladd_14s_14s_9ns_18ns_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mul_mul_14s_14s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mac_muladd_9ns_14s_18ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_muladd_9s_14s_22ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_9ns_14s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_11ns_28s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_mul_11ns_14s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_12ns_14s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_muladd_14s_14s_17s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_14s_28s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mac_muladd_9s_14s_22s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_9ns_14s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mul_mul_8s_14s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_am_addmul_9s_14s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mac_muladd_9s_9s_15s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_17s_9s_17s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_ama_addmuladd_9s_9s_7ns_12s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mac_muladd_9s_9s_23s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_am_addmul_10s_9s_10s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mac_muladd_16s_24s_33s_38_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (32 downto 0);
        dout : OUT STD_LOGIC_VECTOR (37 downto 0) );
    end component;


    component myproject_mul_mul_21s_18s_40_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component myproject_am_addmul_18s_18s_11s_31_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;



begin
    grp_operator_s_fu_283 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_283_ap_start,
        ap_done => grp_operator_s_fu_283_ap_done,
        ap_idle => grp_operator_s_fu_283_ap_idle,
        ap_ready => grp_operator_s_fu_283_ap_ready,
        ap_ce => grp_operator_s_fu_283_ap_ce,
        n_V => trunc_ln708_7_reg_1573,
        ap_return => grp_operator_s_fu_283_ap_return);

    grp_operator_s_fu_290 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_290_ap_start,
        ap_done => grp_operator_s_fu_290_ap_done,
        ap_idle => grp_operator_s_fu_290_ap_idle,
        ap_ready => grp_operator_s_fu_290_ap_ready,
        ap_ce => grp_operator_s_fu_290_ap_ce,
        n_V => trunc_ln_reg_1598,
        ap_return => grp_operator_s_fu_290_ap_return);

    grp_operator_s_fu_297 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_297_ap_start,
        ap_done => grp_operator_s_fu_297_ap_done,
        ap_idle => grp_operator_s_fu_297_ap_idle,
        ap_ready => grp_operator_s_fu_297_ap_ready,
        ap_ce => grp_operator_s_fu_297_ap_ce,
        n_V => trunc_ln708_4_reg_1613,
        ap_return => grp_operator_s_fu_297_ap_return);

    grp_operator_s_fu_304 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_304_ap_start,
        ap_done => grp_operator_s_fu_304_ap_done,
        ap_idle => grp_operator_s_fu_304_ap_idle,
        ap_ready => grp_operator_s_fu_304_ap_ready,
        ap_ce => grp_operator_s_fu_304_ap_ce,
        n_V => trunc_ln708_5_reg_1618,
        ap_return => grp_operator_s_fu_304_ap_return);

    grp_operator_s_fu_311 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_311_ap_start,
        ap_done => grp_operator_s_fu_311_ap_done,
        ap_idle => grp_operator_s_fu_311_ap_idle,
        ap_ready => grp_operator_s_fu_311_ap_ready,
        ap_ce => grp_operator_s_fu_311_ap_ce,
        n_V => p_Val2_1_reg_1524_pp0_iter1_reg,
        ap_return => grp_operator_s_fu_311_ap_return);

    grp_operator_s_fu_318 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_318_ap_start,
        ap_done => grp_operator_s_fu_318_ap_done,
        ap_idle => grp_operator_s_fu_318_ap_idle,
        ap_ready => grp_operator_s_fu_318_ap_ready,
        ap_ce => grp_operator_s_fu_318_ap_ce,
        n_V => add_ln703_reg_1628,
        ap_return => grp_operator_s_fu_318_ap_return);

    grp_operator_s_fu_325 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_325_ap_start,
        ap_done => grp_operator_s_fu_325_ap_done,
        ap_idle => grp_operator_s_fu_325_ap_idle,
        ap_ready => grp_operator_s_fu_325_ap_ready,
        ap_ce => grp_operator_s_fu_325_ap_ce,
        n_V => trunc_ln708_s_reg_1633,
        ap_return => grp_operator_s_fu_325_ap_return);

    grp_operator_s_fu_332 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_332_ap_start,
        ap_done => grp_operator_s_fu_332_ap_done,
        ap_idle => grp_operator_s_fu_332_ap_idle,
        ap_ready => grp_operator_s_fu_332_ap_ready,
        ap_ce => grp_operator_s_fu_332_ap_ce,
        n_V => add_ln703_1_reg_1638,
        ap_return => grp_operator_s_fu_332_ap_return);

    grp_operator_s_fu_339 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_339_ap_start,
        ap_done => grp_operator_s_fu_339_ap_done,
        ap_idle => grp_operator_s_fu_339_ap_idle,
        ap_ready => grp_operator_s_fu_339_ap_ready,
        ap_ce => grp_operator_s_fu_339_ap_ce,
        n_V => trunc_ln708_11_reg_1643,
        ap_return => grp_operator_s_fu_339_ap_return);

    grp_operator_s_fu_346 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_346_ap_start,
        ap_done => grp_operator_s_fu_346_ap_done,
        ap_idle => grp_operator_s_fu_346_ap_idle,
        ap_ready => grp_operator_s_fu_346_ap_ready,
        ap_ce => grp_operator_s_fu_346_ap_ce,
        n_V => trunc_ln708_13_reg_1653,
        ap_return => grp_operator_s_fu_346_ap_return);

    grp_operator_s_fu_353 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_353_ap_start,
        ap_done => grp_operator_s_fu_353_ap_done,
        ap_idle => grp_operator_s_fu_353_ap_idle,
        ap_ready => grp_operator_s_fu_353_ap_ready,
        ap_ce => grp_operator_s_fu_353_ap_ce,
        n_V => trunc_ln708_1_reg_1658,
        ap_return => grp_operator_s_fu_353_ap_return);

    grp_operator_s_fu_360 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_360_ap_start,
        ap_done => grp_operator_s_fu_360_ap_done,
        ap_idle => grp_operator_s_fu_360_ap_idle,
        ap_ready => grp_operator_s_fu_360_ap_ready,
        ap_ce => grp_operator_s_fu_360_ap_ce,
        n_V => trunc_ln708_2_reg_1663,
        ap_return => grp_operator_s_fu_360_ap_return);

    grp_operator_s_fu_367 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_367_ap_start,
        ap_done => grp_operator_s_fu_367_ap_done,
        ap_idle => grp_operator_s_fu_367_ap_idle,
        ap_ready => grp_operator_s_fu_367_ap_ready,
        ap_ce => grp_operator_s_fu_367_ap_ce,
        n_V => p_Val2_s_reg_1509_pp0_iter2_reg,
        ap_return => grp_operator_s_fu_367_ap_return);

    grp_operator_s_fu_374 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_374_ap_start,
        ap_done => grp_operator_s_fu_374_ap_done,
        ap_idle => grp_operator_s_fu_374_ap_idle,
        ap_ready => grp_operator_s_fu_374_ap_ready,
        ap_ce => grp_operator_s_fu_374_ap_ce,
        n_V => trunc_ln708_8_reg_1688,
        ap_return => grp_operator_s_fu_374_ap_return);

    grp_operator_s_fu_381 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_381_ap_start,
        ap_done => grp_operator_s_fu_381_ap_done,
        ap_idle => grp_operator_s_fu_381_ap_idle,
        ap_ready => grp_operator_s_fu_381_ap_ready,
        ap_ce => grp_operator_s_fu_381_ap_ce,
        n_V => grp_operator_s_fu_381_n_V,
        ap_return => grp_operator_s_fu_381_ap_return);

    grp_operator_s_fu_388 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_388_ap_start,
        ap_done => grp_operator_s_fu_388_ap_done,
        ap_idle => grp_operator_s_fu_388_ap_idle,
        ap_ready => grp_operator_s_fu_388_ap_ready,
        ap_ce => grp_operator_s_fu_388_ap_ce,
        n_V => trunc_ln708_12_reg_1703,
        ap_return => grp_operator_s_fu_388_ap_return);

    grp_operator_s_fu_395 : component operator_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_operator_s_fu_395_ap_start,
        ap_done => grp_operator_s_fu_395_ap_done,
        ap_idle => grp_operator_s_fu_395_ap_idle,
        ap_ready => grp_operator_s_fu_395_ap_ready,
        ap_ce => grp_operator_s_fu_395_ap_ce,
        n_V => add_ln703_2_reg_1708,
        ap_return => grp_operator_s_fu_395_ap_return);

    myproject_mul_mul_14s_14s_22_1_1_U3 : component myproject_mul_mul_14s_14s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln1192_6_fu_1323_p0,
        din1 => mul_ln1192_6_fu_1323_p1,
        dout => mul_ln1192_6_fu_1323_p2);

    myproject_ama_submuladd_14s_14s_9ns_18ns_23_1_1_U4 : component myproject_ama_submuladd_14s_14s_9ns_18ns_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 9,
        din3_WIDTH => 18,
        dout_WIDTH => 23)
    port map (
        din0 => p_Val2_1_fu_426_p4,
        din1 => p_Val2_2_fu_412_p4,
        din2 => grp_fu_1330_p2,
        din3 => grp_fu_1330_p3,
        dout => grp_fu_1330_p4);

    myproject_mul_mul_14s_14s_28_1_1_U5 : component myproject_mul_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => r_V_12_fu_1340_p0,
        din1 => r_V_12_fu_1340_p1,
        dout => r_V_12_fu_1340_p2);

    myproject_mac_muladd_9ns_14s_18ns_22_1_1_U6 : component myproject_mac_muladd_9ns_14s_18ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 14,
        din2_WIDTH => 18,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1346_p0,
        din1 => p_Val2_1_fu_426_p4,
        din2 => grp_fu_1346_p2,
        dout => grp_fu_1346_p3);

    myproject_mac_muladd_9s_14s_22ns_22_1_1_U7 : component myproject_mac_muladd_9s_14s_22ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 14,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1354_p0,
        din1 => grp_fu_1354_p1,
        din2 => lhs_V_1_fu_500_p3,
        dout => grp_fu_1354_p3);

    myproject_mul_mul_14s_14s_28_1_1_U8 : component myproject_mul_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => r_V_4_fu_1363_p0,
        din1 => r_V_4_fu_1363_p1,
        dout => r_V_4_fu_1363_p2);

    myproject_mul_mul_9ns_14s_22_1_1_U9 : component myproject_mul_mul_9ns_14s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 14,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln1192_2_fu_1369_p0,
        din1 => mul_ln1192_2_fu_1369_p1,
        dout => mul_ln1192_2_fu_1369_p2);

    myproject_mul_mul_11ns_28s_30_1_1_U10 : component myproject_mul_mul_11ns_28s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 28,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln700_2_fu_1374_p0,
        din1 => r_V_12_reg_1588,
        dout => mul_ln700_2_fu_1374_p2);

    myproject_mul_mul_11ns_14s_22_1_1_U11 : component myproject_mul_mul_11ns_14s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 14,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln700_3_fu_1381_p0,
        din1 => mul_ln700_3_fu_1381_p1,
        dout => mul_ln700_3_fu_1381_p2);

    myproject_mul_mul_12ns_14s_22_1_1_U12 : component myproject_mul_mul_12ns_14s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 14,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln728_4_fu_1387_p0,
        din1 => mul_ln728_4_fu_1387_p1,
        dout => mul_ln728_4_fu_1387_p2);

    myproject_mac_muladd_14s_14s_17s_22_1_1_U13 : component myproject_mac_muladd_14s_14s_17s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 17,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1394_p0,
        din1 => grp_fu_1394_p1,
        din2 => grp_fu_1394_p2,
        dout => grp_fu_1394_p3);

    myproject_mul_mul_14s_28s_30_1_1_U14 : component myproject_mul_mul_14s_28s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 28,
        dout_WIDTH => 30)
    port map (
        din0 => p_Val2_s_reg_1509_pp0_iter1_reg,
        din1 => r_V_4_reg_1603,
        dout => mul_ln1192_fu_1403_p2);

    myproject_mac_muladd_9s_14s_22s_22_1_1_U15 : component myproject_mac_muladd_9s_14s_22s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 14,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1410_p0,
        din1 => p_Val2_5_reg_1543_pp0_iter1_reg,
        din2 => mul_ln1192_2_reg_1608,
        dout => grp_fu_1410_p3);

    myproject_mul_mul_9ns_14s_23_1_1_U16 : component myproject_mul_mul_9ns_14s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 14,
        dout_WIDTH => 23)
    port map (
        din0 => r_V_7_fu_1418_p0,
        din1 => p_Val2_5_reg_1543_pp0_iter1_reg,
        dout => r_V_7_fu_1418_p2);

    myproject_mul_mul_8s_14s_21_1_1_U17 : component myproject_mul_mul_8s_14s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 14,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln728_fu_1424_p0,
        din1 => p_Val2_1_reg_1524_pp0_iter1_reg,
        dout => mul_ln728_fu_1424_p2);

    myproject_am_addmul_9s_14s_30_1_1_U18 : component myproject_am_addmul_9s_14s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_1430_p0,
        din1 => p_Val2_s_reg_1509_pp0_iter2_reg,
        dout => grp_fu_1430_p2);

    myproject_mac_muladd_9s_9s_15s_18_1_1_U19 : component myproject_mac_muladd_9s_9s_15s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 15,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1438_p0,
        din1 => grp_fu_1438_p1,
        din2 => grp_fu_1438_p2,
        dout => grp_fu_1438_p3);

    myproject_mac_muladd_17s_9s_17s_18_1_1_U20 : component myproject_mac_muladd_17s_9s_17s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 9,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        din0 => ap_const_lv17_4D,
        din1 => grp_operator_s_fu_304_ap_return,
        din2 => r_V_19_reg_1668,
        dout => grp_fu_1446_p3);

    myproject_mul_mul_9ns_14s_22_1_1_U21 : component myproject_mul_mul_9ns_14s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 14,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln728_1_fu_1454_p0,
        din1 => mul_ln728_1_fu_1454_p1,
        dout => mul_ln728_1_fu_1454_p2);

    myproject_ama_addmuladd_9s_9s_7ns_12s_16_1_1_U22 : component myproject_ama_addmuladd_9s_9s_7ns_12s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 7,
        din3_WIDTH => 12,
        dout_WIDTH => 16)
    port map (
        din0 => grp_operator_s_fu_318_ap_return,
        din1 => grp_operator_s_fu_325_ap_return,
        din2 => grp_fu_1460_p2,
        din3 => grp_fu_1460_p3,
        dout => grp_fu_1460_p4);

    myproject_mac_muladd_9s_9s_23s_24_1_1_U23 : component myproject_mac_muladd_9s_9s_23s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 23,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_1470_p0,
        din1 => grp_fu_1470_p1,
        din2 => lhs_V_6_fu_1002_p3,
        dout => grp_fu_1470_p3);

    myproject_am_addmul_10s_9s_10s_21_1_1_U24 : component myproject_am_addmul_10s_9s_10s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 9,
        din2_WIDTH => 10,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1478_p0,
        din1 => grp_operator_s_fu_367_ap_return,
        din2 => ret_V_11_fu_1055_p2,
        dout => grp_fu_1478_p3);

    myproject_mac_muladd_16s_24s_33s_38_1_1_U25 : component myproject_mac_muladd_16s_24s_33s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 24,
        din2_WIDTH => 33,
        dout_WIDTH => 38)
    port map (
        din0 => ret_V_20_reg_1743,
        din1 => ret_V_24_fu_1124_p2,
        din2 => grp_fu_1486_p2,
        dout => grp_fu_1486_p3);

    myproject_mul_mul_21s_18s_40_1_1_U26 : component myproject_mul_mul_21s_18s_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 18,
        dout_WIDTH => 40)
    port map (
        din0 => r_V_5_reg_1783,
        din1 => ret_V_13_fu_1171_p2,
        dout => mul_ln1192_3_fu_1495_p2);

    myproject_am_addmul_18s_18s_11s_31_1_1_U27 : component myproject_am_addmul_18s_18s_11s_31_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 11,
        dout_WIDTH => 31)
    port map (
        din0 => r_V_26_fu_1195_p2,
        din1 => tmp_6_fu_1205_p3,
        din2 => ret_V_30_fu_1220_p2,
        dout => grp_fu_1501_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_283_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_283_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_283_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_283_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_283_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_290_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_290_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_290_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_290_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_290_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_297_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_297_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_297_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_297_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_297_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_304_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_304_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_304_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_304_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_304_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_311_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_311_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_311_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_311_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_311_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_318_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_318_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_318_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_318_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_318_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_325_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_325_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_325_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_325_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_325_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_332_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_332_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_332_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_332_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_332_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_339_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_339_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_339_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_339_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_339_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_346_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_346_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_operator_s_fu_346_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_346_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_346_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_353_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_353_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_353_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_353_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_353_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_360_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_360_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_360_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_360_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_360_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_367_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_367_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_367_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_367_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_367_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_374_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_374_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_374_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_374_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_374_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_381_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_381_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_381_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_381_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_381_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_388_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_388_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_388_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_388_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_388_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_operator_s_fu_395_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_operator_s_fu_395_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_operator_s_fu_395_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_operator_s_fu_395_ap_ready = ap_const_logic_1)) then 
                    grp_operator_s_fu_395_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv224_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    add_ln1192_12_reg_1678(19 downto 3) <= add_ln1192_12_fu_793_p2(19 downto 3);
                    add_ln1192_17_reg_1738(37 downto 3) <= add_ln1192_17_fu_988_p2(37 downto 3);
                add_ln1192_reg_1773 <= add_ln1192_fu_1042_p2;
                add_ln703_2_reg_1708 <= add_ln703_2_fu_879_p2;
                mul_ln1192_3_reg_1818 <= mul_ln1192_3_fu_1495_p2;
                mul_ln700_1_reg_1813 <= mul_ln700_1_fu_1165_p2;
                mul_ln700_reg_1768 <= mul_ln700_fu_1023_p2;
                mul_ln728_reg_1683 <= mul_ln728_fu_1424_p2;
                p_0_reg_1808 <= grp_operator_s_fu_395_ap_return;
                p_0_reg_1808_pp0_iter5_reg <= p_0_reg_1808;
                p_2_reg_1758 <= grp_operator_s_fu_339_ap_return;
                p_2_reg_1758_pp0_iter4_reg <= p_2_reg_1758;
                p_6_reg_1733 <= grp_operator_s_fu_311_ap_return;
                p_6_reg_1733_pp0_iter4_reg <= p_6_reg_1733;
                p_6_reg_1733_pp0_iter5_reg <= p_6_reg_1733_pp0_iter4_reg;
                p_Val2_10_reg_1778 <= grp_operator_s_fu_360_ap_return;
                p_Val2_10_reg_1778_pp0_iter5_reg <= p_Val2_10_reg_1778;
                p_Val2_27_reg_1753 <= grp_operator_s_fu_332_ap_return;
                p_Val2_32_reg_1798 <= grp_operator_s_fu_381_ap_return;
                p_Val2_38_reg_1763 <= grp_operator_s_fu_346_ap_return;
                p_Val2_4_reg_1537_pp0_iter2_reg <= p_Val2_4_reg_1537_pp0_iter1_reg;
                p_Val2_4_reg_1537_pp0_iter3_reg <= p_Val2_4_reg_1537_pp0_iter2_reg;
                p_Val2_s_24_reg_1723 <= grp_operator_s_fu_297_ap_return;
                p_Val2_s_reg_1509_pp0_iter2_reg <= p_Val2_s_reg_1509_pp0_iter1_reg;
                    r_V_19_reg_1668(16 downto 3) <= r_V_19_fu_728_p3(16 downto 3);
                r_V_7_reg_1673 <= r_V_7_fu_1418_p2;
                ret_V_2_reg_1713 <= ret_V_2_fu_907_p2;
                ret_V_38_reg_1728_pp0_iter4_reg <= ret_V_38_reg_1728;
                ret_V_44_reg_1693 <= ret_V_44_fu_817_p2;
                ret_V_49_reg_1803 <= ret_V_49_fu_1153_p2;
                sext_ln728_1_reg_1557_pp0_iter2_reg <= sext_ln728_1_reg_1557_pp0_iter1_reg;
                trunc_ln708_10_reg_1698 <= r_V_24_fu_844_p2(20 downto 8);
                trunc_ln708_12_reg_1703 <= r_V_27_fu_863_p2(45 downto 32);
                trunc_ln708_1_reg_1658 <= ret_V_33_fu_692_p2(29 downto 16);
                trunc_ln708_2_reg_1663 <= ret_V_35_fu_710_p2(21 downto 8);
                trunc_ln708_6_reg_1793 <= grp_fu_1486_p3(37 downto 24);
                trunc_ln708_6_reg_1793_pp0_iter5_reg <= trunc_ln708_6_reg_1793;
                trunc_ln708_8_reg_1688 <= r_V_22_fu_799_p2(45 downto 32);
                trunc_ln708_9_reg_1788 <= ret_V_42_fu_1092_p2(37 downto 24);
                trunc_ln708_9_reg_1788_pp0_iter5_reg <= trunc_ln708_9_reg_1788;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln703_1_reg_1638 <= add_ln703_1_fu_635_p2;
                add_ln703_reg_1628 <= add_ln703_fu_592_p2;
                lhs_V_5_reg_1578 <= lhs_V_5_fu_493_p1;
                lhs_V_5_reg_1578_pp0_iter1_reg <= lhs_V_5_reg_1578;
                mul_ln1118_5_reg_1648 <= mul_ln1118_5_fu_664_p2;
                mul_ln1118_reg_1623 <= mul_ln1118_fu_586_p2;
                mul_ln1192_2_reg_1608 <= mul_ln1192_2_fu_1369_p2;
                mul_ln1192_6_reg_1563 <= mul_ln1192_6_fu_1323_p2;
                p_Val2_1_reg_1524 <= x_V_in_sig(209 downto 196);
                p_Val2_1_reg_1524_pp0_iter1_reg <= p_Val2_1_reg_1524;
                p_Val2_2_reg_1516 <= x_V_in_sig(55 downto 42);
                p_Val2_4_reg_1537 <= x_V_in_sig(69 downto 56);
                p_Val2_4_reg_1537_pp0_iter1_reg <= p_Val2_4_reg_1537;
                p_Val2_5_reg_1543 <= x_V_in_sig(223 downto 210);
                p_Val2_5_reg_1543_pp0_iter1_reg <= p_Val2_5_reg_1543;
                p_Val2_s_reg_1509 <= x_V_in_sig(41 downto 28);
                p_Val2_s_reg_1509_pp0_iter1_reg <= p_Val2_s_reg_1509;
                r_V_12_reg_1588 <= r_V_12_fu_1340_p2;
                r_V_4_reg_1603 <= r_V_4_fu_1363_p2;
                sext_ln727_reg_1532 <= sext_ln727_fu_436_p1;
                sext_ln728_1_reg_1557 <= sext_ln728_1_fu_460_p1;
                sext_ln728_1_reg_1557_pp0_iter1_reg <= sext_ln728_1_reg_1557;
                tmp_7_reg_1568 <= x_V_in_sig(54 downto 42);
                trunc_ln708_11_reg_1643 <= add_ln1192_28_fu_645_p2(21 downto 8);
                trunc_ln708_13_reg_1653 <= grp_fu_1394_p3(21 downto 8);
                trunc_ln708_4_reg_1613 <= ret_V_37_fu_544_p2(21 downto 8);
                trunc_ln708_5_reg_1618 <= add_ln1192_7_fu_567_p2(21 downto 8);
                trunc_ln708_7_reg_1573 <= ret_V_40_fu_474_p2(21 downto 8);
                trunc_ln708_s_reg_1633 <= ret_V_43_fu_619_p2(29 downto 16);
                trunc_ln_reg_1598 <= grp_fu_1354_p3(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                mul_ln1192_9_reg_1823 <= grp_fu_1501_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                r_V_5_reg_1783 <= grp_fu_1478_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_17_reg_1583 <= grp_fu_1330_p4;
                ret_V_27_reg_1593 <= grp_fu_1346_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ret_V_20_reg_1743 <= grp_fu_1460_p4;
                ret_V_38_reg_1728 <= grp_fu_1446_p3;
                ret_V_45_reg_1748 <= grp_fu_1470_p3;
                ret_V_4_reg_1718 <= grp_fu_1438_p3;
            end if;
        end if;
    end process;
    r_V_19_reg_1668(2 downto 0) <= "000";
    add_ln1192_12_reg_1678(2 downto 0) <= "000";
    add_ln1192_17_reg_1738(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_12_fu_793_p2 <= std_logic_vector(unsigned(r_V_20_fu_753_p2) + unsigned(sext_ln1118_8_fu_789_p1));
    add_ln1192_16_fu_960_p2 <= std_logic_vector(unsigned(sub_ln1192_1_fu_947_p2) + unsigned(rhs_V_2_fu_953_p3));
    add_ln1192_17_fu_988_p2 <= std_logic_vector(unsigned(add_ln1192_16_fu_960_p2) + unsigned(rhs_V_3_fu_984_p1));
    add_ln1192_19_fu_1087_p2 <= std_logic_vector(unsigned(add_ln1192_17_reg_1738) + unsigned(rhs_V_4_fu_1083_p1));
    add_ln1192_28_fu_645_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_500_p3) + unsigned(add_ln1192_30_fu_639_p2));
    add_ln1192_30_fu_639_p2 <= std_logic_vector(signed(ap_const_lv22_3E4E00) + signed(trunc_ln1_fu_560_p3));
    add_ln1192_7_fu_567_p2 <= std_logic_vector(signed(ap_const_lv22_3FCB00) + signed(trunc_ln1_fu_560_p3));
    add_ln1192_8_fu_526_p2 <= std_logic_vector(signed(mul_ln1192_6_reg_1563) + signed(lhs_V_3_fu_519_p3));
    add_ln1192_fu_1042_p2 <= std_logic_vector(unsigned(ap_const_lv15_3E9) + unsigned(ret_V_34_fu_1036_p2));
    add_ln700_fu_607_p2 <= std_logic_vector(signed(mul_ln700_2_fu_1374_p2) + signed(shl_ln1_fu_600_p3));
    add_ln703_1_fu_635_p2 <= std_logic_vector(signed(p_Val2_5_reg_1543) + signed(p_Val2_2_reg_1516));
    add_ln703_2_fu_879_p2 <= std_logic_vector(unsigned(ap_const_lv14_179) + unsigned(p_Val2_1_reg_1524_pp0_iter1_reg));
    add_ln703_fu_592_p2 <= std_logic_vector(signed(ap_const_lv14_3F4D) + signed(p_Val2_2_reg_1516));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp103_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp103 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp104_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp104 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp107_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp107 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp114_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp114 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp118_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp118 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp133_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp133 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp134_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp134 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp135_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp135 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp158_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp158 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp174_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp174 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp176_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp176 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp178_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp178 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp47_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp47 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp69_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp69 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp81_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp81 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp85_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp85 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp86_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp86 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call102_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call102 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call116_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call116 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call149_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call149 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call159_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call159 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call171_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call171 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call185_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call185 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call203_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call203 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call209_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call209 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call223_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call223 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call227_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call227 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call238_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call238 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call30_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call30 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call48_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call48 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call62_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call62 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call68_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call68 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call78_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call78 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call91_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call91 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call149 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call171 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call185 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call209 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call223 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call238 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call149 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call171 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call185 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call209 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call223 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call238 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call149 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call171 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call185 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call209 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call223 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call238 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call149 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call171 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call185 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call209 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call223 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call238 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call149 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call171 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call185 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call209 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call223 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call238 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call149 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call171 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call185 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call203 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call209 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call223 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call227 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call238 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1330_p2 <= ap_const_lv23_A3(9 - 1 downto 0);
    grp_fu_1330_p3 <= ap_const_lv23_10000(18 - 1 downto 0);
    grp_fu_1346_p0 <= ap_const_lv22_EE(9 - 1 downto 0);
    grp_fu_1346_p2 <= ap_const_lv22_10000(18 - 1 downto 0);
    grp_fu_1354_p0 <= ap_const_lv22_3FFF61(9 - 1 downto 0);
    grp_fu_1354_p1 <= sext_ln728_fu_497_p1(14 - 1 downto 0);
    grp_fu_1394_p0 <= sext_ln728_fu_497_p1(14 - 1 downto 0);
    grp_fu_1394_p1 <= sext_ln728_fu_497_p1(14 - 1 downto 0);
    grp_fu_1394_p2 <= ap_const_lv22_3F7C00(17 - 1 downto 0);
    grp_fu_1410_p0 <= ap_const_lv22_3FFF39(9 - 1 downto 0);
    grp_fu_1430_p0 <= ap_const_lv15_7F14(9 - 1 downto 0);
    grp_fu_1438_p0 <= sext_ln1116_fu_913_p1(9 - 1 downto 0);
    grp_fu_1438_p1 <= sext_ln1116_fu_913_p1(9 - 1 downto 0);
    grp_fu_1438_p2 <= ap_const_lv18_3DF00(15 - 1 downto 0);
    grp_fu_1460_p2 <= ap_const_lv16_2D(7 - 1 downto 0);
    grp_fu_1460_p3 <= ap_const_lv16_FB00(12 - 1 downto 0);
    grp_fu_1470_p0 <= sext_ln1118_9_fu_966_p1(9 - 1 downto 0);
    grp_fu_1470_p1 <= sext_ln1118_9_fu_966_p1(9 - 1 downto 0);
    grp_fu_1478_p0 <= ap_const_lv11_6A0(10 - 1 downto 0);
    grp_fu_1486_p2 <= ap_const_lv38_3F0D000000(33 - 1 downto 0);

    grp_operator_s_fu_283_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp47)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp47) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_283_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_283_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_283_ap_start <= grp_operator_s_fu_283_ap_start_reg;

    grp_operator_s_fu_290_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp69)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp69) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_290_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_290_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_290_ap_start <= grp_operator_s_fu_290_ap_start_reg;

    grp_operator_s_fu_297_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp81)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp81) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_297_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_297_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_297_ap_start <= grp_operator_s_fu_297_ap_start_reg;

    grp_operator_s_fu_304_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp85)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp85) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_304_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_304_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_304_ap_start <= grp_operator_s_fu_304_ap_start_reg;

    grp_operator_s_fu_311_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp86)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp86) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_311_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_311_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_311_ap_start <= grp_operator_s_fu_311_ap_start_reg;

    grp_operator_s_fu_318_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp103)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp103) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_318_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_318_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_318_ap_start <= grp_operator_s_fu_318_ap_start_reg;

    grp_operator_s_fu_325_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp104)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp104) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_325_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_325_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_325_ap_start <= grp_operator_s_fu_325_ap_start_reg;

    grp_operator_s_fu_332_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp107)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp107) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_332_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_332_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_332_ap_start <= grp_operator_s_fu_332_ap_start_reg;

    grp_operator_s_fu_339_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp114)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp114) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_339_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_339_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_339_ap_start <= grp_operator_s_fu_339_ap_start_reg;

    grp_operator_s_fu_346_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp118) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_346_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_346_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_346_ap_start <= grp_operator_s_fu_346_ap_start_reg;

    grp_operator_s_fu_353_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp133)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp133) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_353_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_353_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_353_ap_start <= grp_operator_s_fu_353_ap_start_reg;

    grp_operator_s_fu_360_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp134)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp134) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_360_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_360_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_360_ap_start <= grp_operator_s_fu_360_ap_start_reg;

    grp_operator_s_fu_367_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp135)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp135) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_367_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_367_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_367_ap_start <= grp_operator_s_fu_367_ap_start_reg;

    grp_operator_s_fu_374_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp158)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp158) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_374_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_374_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_374_ap_start <= grp_operator_s_fu_374_ap_start_reg;

    grp_operator_s_fu_381_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp174)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp174) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_381_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_381_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_381_ap_start <= grp_operator_s_fu_381_ap_start_reg;
        grp_operator_s_fu_381_n_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_10_reg_1698),14));


    grp_operator_s_fu_388_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp176)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp176) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_388_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_388_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_388_ap_start <= grp_operator_s_fu_388_ap_start_reg;

    grp_operator_s_fu_395_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp178)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp178) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_operator_s_fu_395_ap_ce <= ap_const_logic_1;
        else 
            grp_operator_s_fu_395_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_operator_s_fu_395_ap_start <= grp_operator_s_fu_395_ap_start_reg;
    lhs_V_1_fu_500_p3 <= (p_Val2_1_reg_1524 & ap_const_lv8_0);
    lhs_V_2_fu_685_p3 <= (p_Val2_5_reg_1543_pp0_iter1_reg & ap_const_lv16_0);
    lhs_V_3_fu_519_p3 <= (p_Val2_5_reg_1543 & ap_const_lv8_0);
    lhs_V_4_fu_936_p3 <= (mul_ln728_reg_1683 & ap_const_lv16_0);
        lhs_V_5_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_426_p4),15));

    lhs_V_6_fu_1002_p3 <= (ret_V_44_reg_1693 & ap_const_lv8_0);
    mul_ln1118_5_fu_664_p0 <= sext_ln1118_16_fu_661_p1(22 - 1 downto 0);
    mul_ln1118_5_fu_664_p1 <= sext_ln1118_16_fu_661_p1(22 - 1 downto 0);
    mul_ln1118_5_fu_664_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_5_fu_664_p0) * signed(mul_ln1118_5_fu_664_p1))), 44));
    mul_ln1118_fu_586_p0 <= sext_ln1118_11_fu_583_p1(23 - 1 downto 0);
    mul_ln1118_fu_586_p1 <= sext_ln1118_11_fu_583_p1(23 - 1 downto 0);
    mul_ln1118_fu_586_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_fu_586_p0) * signed(mul_ln1118_fu_586_p1))), 46));
    mul_ln1192_10_fu_1296_p0 <= p_0_reg_1808_pp0_iter5_reg;
    mul_ln1192_10_fu_1296_p1 <= mul_ln1192_9_reg_1823(30 - 1 downto 0);
    mul_ln1192_10_fu_1296_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_10_fu_1296_p0) * signed(mul_ln1192_10_fu_1296_p1))), 37));
    mul_ln1192_2_fu_1369_p0 <= ap_const_lv22_C7(9 - 1 downto 0);
    mul_ln1192_2_fu_1369_p1 <= sext_ln728_1_reg_1557(14 - 1 downto 0);
    mul_ln1192_4_fu_1263_p0 <= p_6_reg_1733_pp0_iter5_reg;
    mul_ln1192_4_fu_1263_p1 <= mul_ln1192_3_reg_1818(39 - 1 downto 0);
    mul_ln1192_4_fu_1263_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_4_fu_1263_p0) * signed(mul_ln1192_4_fu_1263_p1))), 44));
    mul_ln1192_5_fu_930_p0 <= r_V_7_reg_1673;
    mul_ln1192_5_fu_930_p1 <= add_ln1192_12_reg_1678;
    mul_ln1192_5_fu_930_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_5_fu_930_p0) * signed(mul_ln1192_5_fu_930_p1))), 38));
    mul_ln1192_6_fu_1323_p0 <= sext_ln728_1_fu_460_p1(14 - 1 downto 0);
    mul_ln1192_6_fu_1323_p1 <= sext_ln728_1_fu_460_p1(14 - 1 downto 0);
    mul_ln700_1_fu_1165_p0 <= add_ln1192_reg_1773;
    mul_ln700_1_fu_1165_p1 <= mul_ln700_reg_1768;
    mul_ln700_1_fu_1165_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_1165_p0) * signed(mul_ln700_1_fu_1165_p1))), 54));
    mul_ln700_2_fu_1374_p0 <= ap_const_lv30_348(11 - 1 downto 0);
    mul_ln700_3_fu_1381_p0 <= ap_const_lv22_348(11 - 1 downto 0);
    mul_ln700_3_fu_1381_p1 <= sext_ln727_reg_1532(14 - 1 downto 0);
    mul_ln700_fu_1023_p0 <= ret_V_4_reg_1718;
    mul_ln700_fu_1023_p1 <= ret_V_2_reg_1713;
    mul_ln700_fu_1023_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_fu_1023_p0) * signed(mul_ln700_fu_1023_p1))), 50));
    mul_ln728_1_fu_1454_p0 <= ap_const_lv22_8D(9 - 1 downto 0);
    mul_ln728_1_fu_1454_p1 <= sext_ln728_1_reg_1557_pp0_iter2_reg(14 - 1 downto 0);
    mul_ln728_2_fu_970_p1 <= sext_ln1118_9_fu_966_p1(9 - 1 downto 0);
    mul_ln728_2_fu_970_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv18_8A) * signed(mul_ln728_2_fu_970_p1))), 18));
    mul_ln728_3_fu_1069_p1 <= grp_operator_s_fu_374_ap_return;
    mul_ln728_3_fu_1069_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv18_8A) * signed(mul_ln728_3_fu_1069_p1))), 18));
    mul_ln728_4_fu_1387_p0 <= ap_const_lv22_690(12 - 1 downto 0);
    mul_ln728_4_fu_1387_p1 <= sext_ln728_fu_497_p1(14 - 1 downto 0);
    mul_ln728_fu_1424_p0 <= ap_const_lv21_1FFFBA(8 - 1 downto 0);
    p_Val2_1_fu_426_p4 <= x_V_in_sig(209 downto 196);
    p_Val2_2_fu_412_p4 <= x_V_in_sig(55 downto 42);
    p_Val2_s_fu_402_p4 <= x_V_in_sig(41 downto 28);
    p_shl_fu_893_p3 <= (trunc_ln1193_fu_890_p1 & ap_const_lv5_0);
        r_V_11_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_426_p4),28));

    r_V_12_fu_1340_p0 <= r_V_11_fu_489_p1(14 - 1 downto 0);
    r_V_12_fu_1340_p1 <= r_V_11_fu_489_p1(14 - 1 downto 0);
    r_V_19_fu_728_p3 <= (p_Val2_5_reg_1543_pp0_iter1_reg & ap_const_lv3_0);
    r_V_20_fu_753_p2 <= std_logic_vector(signed(sext_ln1118_5_fu_749_p1) - signed(sext_ln1118_3_fu_735_p1));
    r_V_21_fu_783_p2 <= std_logic_vector(signed(sext_ln1118_6_fu_767_p1) - signed(sext_ln1118_7_fu_779_p1));
    r_V_22_fu_799_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv46_273) * signed(mul_ln1118_reg_1623))), 46));
    r_V_24_fu_844_p2 <= std_logic_vector(signed(sext_ln1118_13_fu_829_p1) - signed(sext_ln1118_14_fu_840_p1));
    r_V_25_fu_1186_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(sext_ln1253_fu_1183_p1));
    r_V_26_fu_1195_p0 <= sext_ln1116_3_fu_1192_p1(9 - 1 downto 0);
    r_V_26_fu_1195_p1 <= sext_ln1116_3_fu_1192_p1(9 - 1 downto 0);
    r_V_26_fu_1195_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_26_fu_1195_p0) * signed(r_V_26_fu_1195_p1))), 18));
    r_V_27_fu_863_p1 <= mul_ln1118_5_reg_1648;
    r_V_27_fu_863_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv46_497) * signed(r_V_27_fu_863_p1))), 46));
        r_V_3_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1537),28));

    r_V_4_fu_1363_p0 <= r_V_3_fu_516_p1(14 - 1 downto 0);
    r_V_4_fu_1363_p1 <= r_V_3_fu_516_p1(14 - 1 downto 0);
    r_V_7_fu_1418_p0 <= ap_const_lv23_89(9 - 1 downto 0);
    ret_V_11_fu_1055_p2 <= std_logic_vector(signed(ap_const_lv10_313) + signed(sext_ln703_1_fu_1052_p1));
    ret_V_13_fu_1171_p2 <= std_logic_vector(signed(ap_const_lv18_3EB00) + signed(ret_V_38_reg_1728_pp0_iter4_reg));
    ret_V_24_fu_1124_p2 <= std_logic_vector(signed(ap_const_lv24_FC4800) + signed(ret_V_46_fu_1119_p2));
    ret_V_2_fu_907_p2 <= std_logic_vector(unsigned(ap_const_lv33_6F0000) + unsigned(sub_ln1193_1_fu_901_p2));
    ret_V_30_fu_1220_p2 <= std_logic_vector(unsigned(ap_const_lv11_3A) + unsigned(sext_ln703_8_fu_1217_p1));
    ret_V_33_fu_692_p2 <= std_logic_vector(signed(mul_ln1192_fu_1403_p2) + signed(lhs_V_2_fu_685_p3));
    ret_V_34_fu_1036_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_1032_p1) - signed(sext_ln1192_2_fu_1029_p1));
    ret_V_35_fu_710_p2 <= std_logic_vector(unsigned(ap_const_lv22_C500) + unsigned(grp_fu_1410_p3));
    ret_V_36_fu_1241_p2 <= std_logic_vector(unsigned(mul_ln700_1_reg_1813) - unsigned(rhs_V_fu_1237_p1));
    ret_V_37_fu_544_p2 <= std_logic_vector(signed(ap_const_lv22_3E7200) + signed(sub_ln1192_fu_538_p2));
    ret_V_39_fu_1269_p2 <= std_logic_vector(signed(ap_const_lv44_F2700000000) + signed(mul_ln1192_4_fu_1263_p2));
    ret_V_40_fu_474_p2 <= std_logic_vector(signed(ap_const_lv22_3EE500) + signed(mul_ln1192_6_fu_1323_p2));
    ret_V_42_fu_1092_p2 <= std_logic_vector(signed(ap_const_lv38_3F58000000) + signed(add_ln1192_19_fu_1087_p2));
    ret_V_43_fu_619_p2 <= std_logic_vector(unsigned(add_ln700_fu_607_p2) + unsigned(rhs_V_5_fu_612_p3));
    ret_V_44_fu_817_p2 <= std_logic_vector(signed(lhs_V_5_reg_1578_pp0_iter1_reg) + signed(rhs_V_6_fu_814_p1));
    ret_V_46_fu_1119_p2 <= std_logic_vector(signed(ret_V_45_reg_1748) + signed(sext_ln1192_18_fu_1115_p1));
    ret_V_49_fu_1153_p2 <= std_logic_vector(signed(sext_ln703_6_fu_1146_p1) - signed(sext_ln703_7_fu_1150_p1));
    ret_V_50_fu_1302_p2 <= std_logic_vector(signed(ap_const_lv37_1F26000000) + signed(mul_ln1192_10_fu_1296_p2));
    rhs_V_1_fu_531_p3 <= (p_Val2_2_reg_1516 & ap_const_lv8_0);
    rhs_V_2_fu_953_p3 <= (mul_ln728_1_fu_1454_p2 & ap_const_lv16_0);
        rhs_V_3_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_976_p3),38));

        rhs_V_4_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_1075_p3),38));

    rhs_V_5_fu_612_p3 <= (mul_ln728_4_fu_1387_p2 & ap_const_lv8_0);
        rhs_V_6_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1543_pp0_iter1_reg),15));

        rhs_V_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_1230_p3),54));

        sext_ln1116_3_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1758_pp0_iter4_reg),18));

        sext_ln1116_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_290_ap_return),18));

        sext_ln1118_11_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_17_reg_1583),46));

        sext_ln1118_13_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_822_p3),21));

        sext_ln1118_14_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_833_p3),21));

        sext_ln1118_16_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_27_reg_1593),44));

        sext_ln1118_3_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_19_fu_728_p3),20));

        sext_ln1118_5_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_742_p3),20));

        sext_ln1118_6_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_759_p3),15));

        sext_ln1118_7_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_771_p3),15));

        sext_ln1118_8_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_21_fu_783_p2),20));

    sext_ln1118_9_fu_966_p0 <= grp_operator_s_fu_311_ap_return;
        sext_ln1118_9_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_9_fu_966_p0),18));

        sext_ln1118_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1430_p2),33));

        sext_ln1192_11_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_4_fu_936_p3),38));

        sext_ln1192_18_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_1108_p3),24));

        sext_ln1192_2_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1537_pp0_iter3_reg),15));

        sext_ln1192_3_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_353_ap_return),15));

        sext_ln1253_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_32_reg_1798),10));

        sext_ln703_1_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_24_reg_1723),10));

        sext_ln703_6_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_operator_s_fu_388_ap_return),10));

        sext_ln703_7_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_38_reg_1763),10));

        sext_ln703_8_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_49_reg_1803),11));

        sext_ln727_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_426_p4),22));

        sext_ln728_1_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_402_p4),22));

        sext_ln728_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1516),22));

    shl_ln1118_3_fu_822_p3 <= (p_Val2_5_reg_1543_pp0_iter1_reg & ap_const_lv6_0);
    shl_ln1118_4_fu_833_p3 <= (p_Val2_5_reg_1543_pp0_iter1_reg & ap_const_lv2_0);
    shl_ln1_fu_600_p3 <= (mul_ln700_3_fu_1381_p2 & ap_const_lv8_0);
    shl_ln_fu_742_p3 <= (p_Val2_5_reg_1543_pp0_iter1_reg & ap_const_lv5_0);
    sub_ln1192_1_fu_947_p2 <= std_logic_vector(signed(sext_ln1192_11_fu_943_p1) - signed(mul_ln1192_5_fu_930_p2));
    sub_ln1192_fu_538_p2 <= std_logic_vector(unsigned(add_ln1192_8_fu_526_p2) - unsigned(rhs_V_1_fu_531_p3));
    sub_ln1193_1_fu_901_p2 <= std_logic_vector(signed(sext_ln1118_fu_887_p1) - signed(p_shl_fu_893_p3));
    tmp_1_fu_1108_p3 <= (p_Val2_27_reg_1753 & ap_const_lv8_0);
    tmp_3_fu_1230_p3 <= (p_Val2_10_reg_1778_pp0_iter5_reg & ap_const_lv40_0);
    tmp_4_fu_976_p3 <= (mul_ln728_2_fu_970_p2 & ap_const_lv16_0);
    tmp_5_fu_1075_p3 <= (mul_ln728_3_fu_1069_p2 & ap_const_lv16_0);
    tmp_6_fu_1205_p3 <= (r_V_25_fu_1186_p2 & ap_const_lv8_0);
    tmp_8_fu_1308_p4 <= ret_V_50_fu_1302_p2(36 downto 24);
    tmp_9_fu_759_p3 <= (grp_operator_s_fu_283_ap_return & ap_const_lv5_0);
    tmp_fu_1275_p4 <= ret_V_39_fu_1269_p2(43 downto 32);
    tmp_s_fu_771_p3 <= (grp_operator_s_fu_283_ap_return & ap_const_lv3_0);
    trunc_ln1193_fu_890_p1 <= grp_fu_1430_p2(28 - 1 downto 0);
    trunc_ln1_fu_560_p3 <= (tmp_7_reg_1568 & ap_const_lv9_0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_36_fu_1241_p2(53 downto 40);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_1_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1275_p4),14));


    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1788_pp0_iter5_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_6_reg_1793_pp0_iter5_reg;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_4_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_1308_p4),14));


    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
