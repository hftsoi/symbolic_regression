// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mac_muladd_10s_14ns_19ns_24_1_1.h"
#include "myproject_ama_addmuladd_13s_4s_6s_12ns_18_1_1.h"

namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<144> > x_V;
    sc_in< sc_logic > x_V_ap_vld;
    sc_out< sc_lv<9> > y_0_V;
    sc_out< sc_logic > y_0_V_ap_vld;
    sc_out< sc_lv<9> > y_1_V;
    sc_out< sc_logic > y_1_V_ap_vld;
    sc_out< sc_lv<9> > y_2_V;
    sc_out< sc_logic > y_2_V_ap_vld;
    sc_out< sc_lv<9> > y_3_V;
    sc_out< sc_logic > y_3_V_ap_vld;
    sc_out< sc_lv<9> > y_4_V;
    sc_out< sc_logic > y_4_V_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    myproject_mac_muladd_10s_14ns_19ns_24_1_1<1,1,10,14,19,24>* myproject_mac_muladd_10s_14ns_19ns_24_1_1_U1;
    myproject_ama_addmuladd_13s_4s_6s_12ns_18_1_1<1,1,13,4,6,12,18>* myproject_ama_addmuladd_13s_4s_6s_12ns_18_1_1_U2;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<144> > x_V_preg;
    sc_signal< sc_lv<144> > x_V_in_sig;
    sc_signal< sc_logic > x_V_ap_vld_preg;
    sc_signal< sc_logic > x_V_ap_vld_in_sig;
    sc_signal< sc_logic > x_V_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<9> > p_Val2_1_fu_157_p4;
    sc_signal< sc_lv<10> > sext_ln1192_fu_177_p1;
    sc_signal< sc_lv<10> > ret_V_fu_181_p2;
    sc_signal< sc_lv<10> > add_ln1192_fu_187_p2;
    sc_signal< sc_lv<24> > grp_fu_318_p3;
    sc_signal< sc_lv<9> > p_Val2_s_fu_147_p4;
    sc_signal< sc_lv<10> > shl_ln1_fu_207_p3;
    sc_signal< sc_lv<11> > sext_ln1118_fu_215_p1;
    sc_signal< sc_lv<11> > r_V_fu_219_p2;
    sc_signal< sc_lv<17> > lhs_V_3_fu_225_p3;
    sc_signal< sc_lv<9> > tmp_5_fu_233_p4;
    sc_signal< sc_lv<17> > rhs_V_fu_247_p3;
    sc_signal< sc_lv<18> > sext_ln728_fu_255_p1;
    sc_signal< sc_lv<18> > sext_ln703_fu_243_p1;
    sc_signal< sc_lv<18> > ret_V_2_fu_259_p2;
    sc_signal< sc_lv<18> > ret_V_3_fu_265_p2;
    sc_signal< sc_lv<9> > p_Val2_2_fu_167_p4;
    sc_signal< sc_lv<10> > rhs_V_1_fu_286_p1;
    sc_signal< sc_lv<10> > lhs_V_fu_282_p1;
    sc_signal< sc_lv<10> > ret_V_4_fu_290_p2;
    sc_signal< sc_lv<13> > lhs_V_1_fu_296_p3;
    sc_signal< sc_lv<18> > grp_fu_327_p4;
    sc_signal< sc_lv<14> > grp_fu_318_p1;
    sc_signal< sc_lv<19> > grp_fu_318_p2;
    sc_signal< sc_lv<4> > grp_fu_327_p1;
    sc_signal< sc_lv<6> > grp_fu_327_p2;
    sc_signal< sc_lv<12> > grp_fu_327_p3;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<144> ap_const_lv144_lc_1;
    static const sc_lv<9> ap_const_lv9_3;
    static const sc_lv<9> ap_const_lv9_1F7;
    static const sc_lv<32> ap_const_lv32_7E;
    static const sc_lv<32> ap_const_lv32_86;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_87;
    static const sc_lv<32> ap_const_lv32_8F;
    static const sc_lv<10> ap_const_lv10_3F9;
    static const sc_lv<10> ap_const_lv10_1F;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<18> ap_const_lv18_3E600;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<24> ap_const_lv24_18C0;
    static const sc_lv<24> ap_const_lv24_38000;
    static const sc_lv<14> ap_const_lv14_3FF9;
    static const sc_lv<18> ap_const_lv18_3FFEA;
    static const sc_lv<18> ap_const_lv18_4A0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_fu_187_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_318_p1();
    void thread_grp_fu_318_p2();
    void thread_grp_fu_327_p1();
    void thread_grp_fu_327_p2();
    void thread_grp_fu_327_p3();
    void thread_lhs_V_1_fu_296_p3();
    void thread_lhs_V_3_fu_225_p3();
    void thread_lhs_V_fu_282_p1();
    void thread_p_Val2_1_fu_157_p4();
    void thread_p_Val2_2_fu_167_p4();
    void thread_p_Val2_s_fu_147_p4();
    void thread_r_V_fu_219_p2();
    void thread_ret_V_2_fu_259_p2();
    void thread_ret_V_3_fu_265_p2();
    void thread_ret_V_4_fu_290_p2();
    void thread_ret_V_fu_181_p2();
    void thread_rhs_V_1_fu_286_p1();
    void thread_rhs_V_fu_247_p3();
    void thread_sext_ln1118_fu_215_p1();
    void thread_sext_ln1192_fu_177_p1();
    void thread_sext_ln703_fu_243_p1();
    void thread_sext_ln728_fu_255_p1();
    void thread_shl_ln1_fu_207_p3();
    void thread_tmp_5_fu_233_p4();
    void thread_x_V_ap_vld_in_sig();
    void thread_x_V_blk_n();
    void thread_x_V_in_sig();
    void thread_y_0_V();
    void thread_y_0_V_ap_vld();
    void thread_y_1_V();
    void thread_y_1_V_ap_vld();
    void thread_y_2_V();
    void thread_y_2_V_ap_vld();
    void thread_y_3_V();
    void thread_y_3_V_ap_vld();
    void thread_y_4_V();
    void thread_y_4_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
