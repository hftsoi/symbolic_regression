-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (159 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.339000,HLS_SYN_LAT=7,HLS_SYN_TPT=1,HLS_SYN_MEM=34,HLS_SYN_DSP=37,HLS_SYN_FF=12903,HLS_SYN_LUT=23952,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv160_lc_1 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_3FC0 : STD_LOGIC_VECTOR (13 downto 0) := "11111111000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv15_100 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_const_lv14_34 : STD_LOGIC_VECTOR (13 downto 0) := "00000000110100";
    constant ap_const_lv14_3E40 : STD_LOGIC_VECTOR (13 downto 0) := "11111001000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv14_C0 : STD_LOGIC_VECTOR (13 downto 0) := "00000011000000";
    constant ap_const_lv14_3E70 : STD_LOGIC_VECTOR (13 downto 0) := "11111001110000";
    constant ap_const_lv14_3EE0 : STD_LOGIC_VECTOR (13 downto 0) := "11111011100000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv10_3F4 : STD_LOGIC_VECTOR (9 downto 0) := "1111110100";
    constant ap_const_lv10_17 : STD_LOGIC_VECTOR (9 downto 0) := "0000010111";
    constant ap_const_lv11_3E : STD_LOGIC_VECTOR (10 downto 0) := "00000111110";
    constant ap_const_lv7_71 : STD_LOGIC_VECTOR (6 downto 0) := "1110001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv22_3F5000 : STD_LOGIC_VECTOR (21 downto 0) := "1111110101000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv16_FC40 : STD_LOGIC_VECTOR (15 downto 0) := "1111110001000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv18_34 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000110100";
    constant ap_const_lv14_3F70 : STD_LOGIC_VECTOR (13 downto 0) := "11111101110000";
    constant ap_const_lv26_27 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000100111";
    constant ap_const_lv18_690 : STD_LOGIC_VECTOR (17 downto 0) := "000000011010010000";
    constant ap_const_lv26_49 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000001001001";
    constant ap_const_lv11_7F1 : STD_LOGIC_VECTOR (10 downto 0) := "11111110001";
    constant ap_const_lv20_600 : STD_LOGIC_VECTOR (19 downto 0) := "00000000011000000000";
    constant ap_const_lv12_FD0 : STD_LOGIC_VECTOR (11 downto 0) := "111111010000";
    constant ap_const_lv7_6A : STD_LOGIC_VECTOR (6 downto 0) := "1101010";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv22_3F0000 : STD_LOGIC_VECTOR (21 downto 0) := "1111110000000000000000";
    constant ap_const_lv25_1F20000 : STD_LOGIC_VECTOR (24 downto 0) := "1111100100000000000000000";
    constant ap_const_lv22_3F2000 : STD_LOGIC_VECTOR (21 downto 0) := "1111110010000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (159 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_fu_402_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1483 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1483_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1483_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1483_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_reg_1483_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_11_fu_412_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_11_reg_1493 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_11_reg_1493_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_fu_444_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1501 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1501_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1501_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1501_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1501_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1509 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1509_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1509_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1509_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1509_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_3_reg_1515 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_3_reg_1515_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_3_reg_1515_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_3_reg_1515_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_3_reg_1515_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_9_fu_503_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_9_reg_1526 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_fu_1332_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_reg_1532 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1338_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln700_reg_1537 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_4_fu_1346_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_4_reg_1542 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_13_reg_1547 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_1_reg_1552 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_8_reg_1557 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_s_reg_1562 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_12_reg_1567 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_s_reg_1572 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_5_reg_1577 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_5_reg_1577_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_5_reg_1577_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_2_reg_1582 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_2_reg_1582_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_2_reg_1582_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1390_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_1_reg_1587 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1398_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_3_reg_1592 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_5_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_5_reg_1597_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_6_reg_1602 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_s_28_reg_1607 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_6_reg_1612 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_6_reg_1612_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_6_reg_1612_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_7_reg_1619 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_reg_1624 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_reg_1624_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_7_reg_1629 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln700_fu_1406_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln700_reg_1634 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln1192_fu_950_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_reg_1639 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1412_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_reg_1644 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_9_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_9_reg_1649_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_22_fu_1122_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1192_22_reg_1654 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_20_fu_1166_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_20_reg_1659 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_43_fu_1179_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_43_reg_1664 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln708_3_reg_1669 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1440_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_2_reg_1674 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln708_6_reg_1679 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1457_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1192_7_reg_1684 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_reg_1689 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call27 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call27 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call27 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call27 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call27 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call27 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp20 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call88 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call88 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call88 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call88 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call88 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call88 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call88 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call88 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp29 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call199 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call199 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call199 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call199 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call199 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call199 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call199 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call199 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp55 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call62 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call62 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call62 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call62 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call62 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call62 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call62 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call62 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp84 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call68 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call68 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call68 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call68 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call68 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call68 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call68 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call68 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp85 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call78 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call78 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call78 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call78 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call78 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call78 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call78 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call78 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp91 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call96 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call96 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call96 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call96 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call96 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call96 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call96 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call96 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp93 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call110 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call110 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call110 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call110 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call110 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call110 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call110 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call110 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp97 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call193 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call193 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call193 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call193 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call193 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call193 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call193 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call193 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp107 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call217 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call217 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call217 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call217 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call217 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call217 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call217 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call217 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp111 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call43 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call43 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call43 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call43 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call43 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call43 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call43 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp113 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call144 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call144 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call144 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call144 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call144 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call144 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call144 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call144 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp120 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call152 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call152 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call152 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call152 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call152 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call152 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call152 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call152 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp122 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call164 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call164 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call164 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call164 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call164 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call164 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call164 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call164 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp123 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call178 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call178 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call178 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call178 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call178 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call178 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call178 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call178 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp125 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call213 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call213 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call213 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call213 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call213 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call213 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call213 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call213 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp128 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call228 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call228 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call228 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call228 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call228 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call228 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call228 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call228 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp147 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln_fu_426_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_2_fu_422_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_3_fu_434_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_1_fu_454_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_14_fu_438_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_27_fu_462_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_9_fu_503_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_6_fu_499_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_9_fu_503_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_509_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_s_fu_519_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_7_fu_527_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_s_fu_548_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_1_fu_560_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_12_fu_556_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_13_fu_568_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_5_fu_582_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_15_fu_590_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_17_fu_576_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_18_fu_594_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_3_fu_600_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_4_fu_604_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_35_fu_608_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1192_14_fu_614_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln700_2_fu_628_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_18_fu_624_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln700_2_fu_628_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln700_4_fu_634_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln700_4_fu_634_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_30_fu_648_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_27_fu_654_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_23_fu_671_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_14_fu_572_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_24_fu_675_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1192_29_fu_681_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1352_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_fu_709_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_4_fu_703_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_fu_709_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1361_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln1118_2_fu_738_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_3_fu_745_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_3_fu_731_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_4_fu_762_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_3_fu_755_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_4_fu_769_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1192_1_fu_773_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1192_fu_749_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_4_fu_779_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_30_fu_785_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_8_fu_802_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_1_fu_807_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1192_2_fu_814_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_32_fu_820_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_34_fu_840_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_19_fu_1370_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1376_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_21_fu_874_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_10_fu_837_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_21_fu_878_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_10_fu_884_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_25_fu_1384_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1192_2_fu_940_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1192_1_fu_937_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_29_fu_944_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_1_fu_962_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_10_fu_965_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1118_7_fu_975_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_9_fu_982_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_3_fu_992_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_16_fu_986_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_4_fu_1006_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_2_fu_1018_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1420_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_12_fu_1025_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_1_fu_1037_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_16_fu_1029_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1192_16_fu_1029_p2 : signal is "no";
    signal sext_ln1192_13_fu_1044_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_2_fu_1054_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1192_17_fu_1048_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_14_fu_1062_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_18_fu_1066_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_36_fu_1072_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_3_fu_1088_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_fu_1100_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_17_fu_1096_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1192_21_fu_1112_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_19_fu_1108_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1192_17_fu_1118_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_5_fu_1128_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_4_fu_956_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_38_fu_1131_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_6_fu_1137_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_5_fu_1149_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1431_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_18_fu_1157_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_40_fu_1161_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of ret_V_40_fu_1161_p2 : signal is "no";
    signal sext_ln703_7_fu_1172_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln703_8_fu_1176_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln700_1_fu_1188_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_7_fu_1193_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln700_1_fu_1188_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal rhs_V_fu_1200_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_31_fu_1204_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_s_fu_1220_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1448_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1253_fu_1249_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_23_fu_1261_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_2_fu_1258_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_23_fu_1261_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_23_fu_1261_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_22_fu_1252_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_1271_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_9_fu_1283_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_25_fu_1286_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1465_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_fu_1302_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1474_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_fu_1332_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_16_fu_620_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_fu_1332_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1338_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1338_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1338_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1118_4_fu_1346_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_24_fu_687_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_4_fu_1346_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1352_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1352_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1352_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1361_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1361_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_19_fu_1370_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1376_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_25_fu_1384_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1390_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1390_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1398_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_fu_928_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1398_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1398_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1412_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1420_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1431_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_11_fu_1034_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1431_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1440_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1448_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1465_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1474_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sin_lut_ap_fixed_10_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component myproject_mul_mul_15s_15s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_18s_7ns_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_10s_10s_9s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_muladd_10s_18s_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_26s_7ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_10s_12ns_18s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_26s_8ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_ama_addmulsub_10s_5s_12ns_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_muladd_6s_6s_7s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mul_mul_12s_20s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_am_addmul_6s_6s_7s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_ama_addmulsub_10s_6s_13s_21s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_muladd_6s_6s_15s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_am_addmul_8s_6s_14s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mac_muladd_9s_16s_17s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_am_addmul_12s_11s_8s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mac_muladd_6s_23s_21s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mac_muladd_6s_21s_17s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;



begin
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_ce,
        input_V => p_Val2_s_reg_1483,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_ce,
        input_V => p_Val2_1_reg_1501,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_ce,
        input_V => trunc_ln708_13_reg_1547,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_ce,
        input_V => trunc_ln708_1_reg_1552,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_ce,
        input_V => trunc_ln708_8_reg_1557,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_ce,
        input_V => trunc_ln708_s_reg_1562,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_ce,
        input_V => trunc_ln708_12_reg_1567,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_return);

    myproject_mul_mul_15s_15s_26_1_1_U11 : component myproject_mul_mul_15s_15s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1118_fu_1332_p0,
        din1 => mul_ln1118_fu_1332_p1,
        dout => mul_ln1118_fu_1332_p2);

    myproject_mac_muladd_18s_7ns_18ns_18_1_1_U12 : component myproject_mac_muladd_18s_7ns_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 7,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1338_p0,
        din1 => grp_fu_1338_p1,
        din2 => grp_fu_1338_p2,
        dout => grp_fu_1338_p3);

    myproject_mul_mul_15s_15s_26_1_1_U13 : component myproject_mul_mul_15s_15s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1118_4_fu_1346_p0,
        din1 => mul_ln1118_4_fu_1346_p1,
        dout => mul_ln1118_4_fu_1346_p2);

    myproject_mac_muladd_10s_10s_9s_14_1_1_U14 : component myproject_mac_muladd_10s_10s_9s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 9,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1352_p0,
        din1 => grp_fu_1352_p1,
        din2 => grp_fu_1352_p2,
        dout => grp_fu_1352_p3);

    myproject_mac_muladd_10s_18s_18ns_18_1_1_U15 : component myproject_mac_muladd_10s_18s_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => p_Val2_s_reg_1483,
        din1 => grp_fu_1361_p1,
        din2 => grp_fu_1361_p2,
        dout => grp_fu_1361_p3);

    myproject_mul_mul_26s_7ns_26_1_1_U16 : component myproject_mul_mul_26s_7ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 7,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1118_reg_1532,
        din1 => r_V_19_fu_1370_p1,
        dout => r_V_19_fu_1370_p2);

    myproject_mac_muladd_10s_12ns_18s_18_1_1_U17 : component myproject_mac_muladd_10s_12ns_18s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => p_Val2_11_reg_1493,
        din1 => grp_fu_1376_p1,
        din2 => add_ln700_reg_1537,
        dout => grp_fu_1376_p3);

    myproject_mul_mul_26s_8ns_26_1_1_U18 : component myproject_mul_mul_26s_8ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 8,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1118_4_reg_1542,
        din1 => r_V_25_fu_1384_p1,
        dout => r_V_25_fu_1384_p2);

    myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U19 : component myproject_ama_addmulsub_10s_5s_12ns_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 5,
        din2_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        din0 => p_Val2_s_reg_1483_pp0_iter3_reg,
        din1 => grp_fu_1390_p1,
        din2 => grp_fu_1390_p2,
        dout => grp_fu_1390_p3);

    myproject_mac_muladd_6s_6s_7s_12_1_1_U20 : component myproject_mac_muladd_6s_6s_7s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 7,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1398_p0,
        din1 => grp_fu_1398_p1,
        din2 => grp_fu_1398_p2,
        dout => grp_fu_1398_p3);

    myproject_mul_mul_12s_20s_30_1_1_U21 : component myproject_mul_mul_12s_20s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 20,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_3_reg_1592,
        din1 => ret_V_1_reg_1587,
        dout => mul_ln700_fu_1406_p2);

    myproject_am_addmul_6s_6s_7s_14_1_1_U22 : component myproject_am_addmul_6s_6s_7s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 7,
        dout_WIDTH => 14)
    port map (
        din0 => p_Val2_6_reg_1602,
        din1 => grp_fu_1412_p1,
        din2 => ret_V_10_fu_965_p2,
        dout => grp_fu_1412_p3);

    myproject_ama_addmulsub_10s_6s_13s_21s_22_1_1_U23 : component myproject_ama_addmulsub_10s_6s_13s_21s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 6,
        din2_WIDTH => 13,
        din3_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1420_p0,
        din1 => p_7_reg_1619,
        din2 => r_V_3_fu_992_p3,
        din3 => lhs_V_4_fu_1006_p3,
        dout => grp_fu_1420_p4);

    myproject_mac_muladd_6s_6s_15s_16_1_1_U24 : component myproject_mac_muladd_6s_6s_15s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 15,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1431_p0,
        din1 => grp_fu_1431_p1,
        din2 => lhs_V_6_fu_1137_p3,
        dout => grp_fu_1431_p3);

    myproject_am_addmul_8s_6s_14s_23_1_1_U25 : component myproject_am_addmul_8s_6s_14s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 14,
        dout_WIDTH => 23)
    port map (
        din0 => tmp_s_fu_1220_p3,
        din1 => grp_fu_1440_p1,
        din2 => r_V_reg_1644,
        dout => grp_fu_1440_p3);

    myproject_mac_muladd_9s_16s_17s_22_1_1_U26 : component myproject_mac_muladd_9s_16s_17s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 17,
        dout_WIDTH => 22)
    port map (
        din0 => add_ln1192_22_reg_1654,
        din1 => ret_V_20_reg_1659,
        din2 => grp_fu_1448_p2,
        dout => grp_fu_1448_p3);

    myproject_am_addmul_12s_11s_8s_21_1_1_U27 : component myproject_am_addmul_12s_11s_8s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 11,
        din2_WIDTH => 8,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_23_fu_1261_p2,
        din1 => tmp_11_fu_1271_p3,
        din2 => ret_V_25_fu_1286_p2,
        dout => grp_fu_1457_p3);

    myproject_mac_muladd_6s_23s_21s_25_1_1_U28 : component myproject_mac_muladd_6s_23s_21s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 23,
        din2_WIDTH => 21,
        dout_WIDTH => 25)
    port map (
        din0 => p_6_reg_1612_pp0_iter6_reg,
        din1 => mul_ln1192_2_reg_1674,
        din2 => grp_fu_1465_p2,
        dout => grp_fu_1465_p3);

    myproject_mac_muladd_6s_21s_17s_22_1_1_U29 : component myproject_mac_muladd_6s_21s_17s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 21,
        din2_WIDTH => 17,
        dout_WIDTH => 22)
    port map (
        din0 => p_0_reg_1689,
        din1 => mul_ln1192_7_reg_1684,
        din2 => grp_fu_1474_p2,
        dout => grp_fu_1474_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv160_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    add_ln1192_22_reg_1654(8 downto 1) <= add_ln1192_22_fu_1122_p2(8 downto 1);
                add_ln1192_reg_1639 <= add_ln1192_fu_950_p2;
                mul_ln700_reg_1634 <= mul_ln700_fu_1406_p2;
                p_0_reg_1689 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_return;
                p_2_reg_1582 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_return;
                p_2_reg_1582_pp0_iter4_reg <= p_2_reg_1582;
                p_2_reg_1582_pp0_iter5_reg <= p_2_reg_1582_pp0_iter4_reg;
                p_5_reg_1577 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_return;
                p_5_reg_1577_pp0_iter4_reg <= p_5_reg_1577;
                p_5_reg_1577_pp0_iter5_reg <= p_5_reg_1577_pp0_iter4_reg;
                p_6_reg_1612 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_return;
                p_6_reg_1612_pp0_iter5_reg <= p_6_reg_1612;
                p_6_reg_1612_pp0_iter6_reg <= p_6_reg_1612_pp0_iter5_reg;
                p_7_reg_1619 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_return;
                p_Val2_1_reg_1501_pp0_iter2_reg <= p_Val2_1_reg_1501_pp0_iter1_reg;
                p_Val2_1_reg_1501_pp0_iter3_reg <= p_Val2_1_reg_1501_pp0_iter2_reg;
                p_Val2_1_reg_1501_pp0_iter4_reg <= p_Val2_1_reg_1501_pp0_iter3_reg;
                p_Val2_2_reg_1509_pp0_iter2_reg <= p_Val2_2_reg_1509_pp0_iter1_reg;
                p_Val2_2_reg_1509_pp0_iter3_reg <= p_Val2_2_reg_1509_pp0_iter2_reg;
                p_Val2_2_reg_1509_pp0_iter4_reg <= p_Val2_2_reg_1509_pp0_iter3_reg;
                p_Val2_3_reg_1515_pp0_iter2_reg <= p_Val2_3_reg_1515_pp0_iter1_reg;
                p_Val2_3_reg_1515_pp0_iter3_reg <= p_Val2_3_reg_1515_pp0_iter2_reg;
                p_Val2_3_reg_1515_pp0_iter4_reg <= p_Val2_3_reg_1515_pp0_iter3_reg;
                p_Val2_5_reg_1597 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_return;
                p_Val2_5_reg_1597_pp0_iter5_reg <= p_Val2_5_reg_1597;
                p_Val2_6_reg_1602 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_return;
                p_Val2_7_reg_1629 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_return;
                p_Val2_9_reg_1624 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_return;
                p_Val2_9_reg_1624_pp0_iter5_reg <= p_Val2_9_reg_1624;
                p_Val2_s_28_reg_1607 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_return;
                p_Val2_s_reg_1483_pp0_iter2_reg <= p_Val2_s_reg_1483_pp0_iter1_reg;
                p_Val2_s_reg_1483_pp0_iter3_reg <= p_Val2_s_reg_1483_pp0_iter2_reg;
                p_Val2_s_reg_1483_pp0_iter4_reg <= p_Val2_s_reg_1483_pp0_iter3_reg;
                p_s_reg_1572 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_return;
                ret_V_20_reg_1659 <= ret_V_20_fu_1166_p2;
                ret_V_43_reg_1664 <= ret_V_43_fu_1179_p2;
                trunc_ln708_3_reg_1669 <= ret_V_31_fu_1204_p2(29 downto 20);
                trunc_ln708_6_reg_1679 <= grp_fu_1448_p3(21 downto 12);
                trunc_ln708_9_reg_1649 <= ret_V_36_fu_1072_p2(21 downto 12);
                trunc_ln708_9_reg_1649_pp0_iter6_reg <= trunc_ln708_9_reg_1649;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln700_reg_1537 <= grp_fu_1338_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_4_reg_1542 <= mul_ln1118_4_fu_1346_p2;
                mul_ln1118_reg_1532 <= mul_ln1118_fu_1332_p2;
                mul_ln1192_9_reg_1526 <= mul_ln1192_9_fu_503_p2;
                p_Val2_11_reg_1493 <= x_V_in_sig(39 downto 30);
                p_Val2_11_reg_1493_pp0_iter1_reg <= p_Val2_11_reg_1493;
                p_Val2_1_reg_1501 <= x_V_in_sig(149 downto 140);
                p_Val2_1_reg_1501_pp0_iter1_reg <= p_Val2_1_reg_1501;
                p_Val2_2_reg_1509 <= x_V_in_sig(49 downto 40);
                p_Val2_2_reg_1509_pp0_iter1_reg <= p_Val2_2_reg_1509;
                p_Val2_3_reg_1515 <= x_V_in_sig(159 downto 150);
                p_Val2_3_reg_1515_pp0_iter1_reg <= p_Val2_3_reg_1515;
                p_Val2_s_reg_1483 <= x_V_in_sig(29 downto 20);
                p_Val2_s_reg_1483_pp0_iter1_reg <= p_Val2_s_reg_1483;
                trunc_ln708_12_reg_1567 <= r_V_25_fu_1384_p2(25 downto 16);
                trunc_ln708_13_reg_1547 <= grp_fu_1352_p3(13 downto 4);
                trunc_ln708_1_reg_1552 <= grp_fu_1361_p3(17 downto 8);
                trunc_ln708_8_reg_1557 <= r_V_19_fu_1370_p2(25 downto 16);
                trunc_ln708_s_reg_1562 <= grp_fu_1376_p3(17 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                mul_ln1192_2_reg_1674 <= grp_fu_1440_p3;
                mul_ln1192_7_reg_1684 <= grp_fu_1457_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                r_V_reg_1644 <= grp_fu_1412_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ret_V_1_reg_1587 <= grp_fu_1390_p3;
                ret_V_3_reg_1592 <= grp_fu_1398_p3;
            end if;
        end if;
    end process;
    add_ln1192_22_reg_1654(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_14_fu_614_p2 <= std_logic_vector(unsigned(ret_V_35_fu_608_p2) + unsigned(ap_const_lv15_100));
    add_ln1192_16_fu_1029_p2 <= std_logic_vector(signed(grp_fu_1420_p4) + signed(sext_ln1192_12_fu_1025_p1));
    add_ln1192_17_fu_1048_p2 <= std_logic_vector(unsigned(add_ln1192_16_fu_1029_p2) + unsigned(sext_ln1192_13_fu_1044_p1));
    add_ln1192_18_fu_1066_p2 <= std_logic_vector(unsigned(add_ln1192_17_fu_1048_p2) + unsigned(sext_ln1192_14_fu_1062_p1));
    add_ln1192_21_fu_1112_p2 <= std_logic_vector(signed(sext_ln1118_17_fu_1096_p1) + signed(ap_const_lv8_F0));
    add_ln1192_22_fu_1122_p2 <= std_logic_vector(signed(sext_ln1118_19_fu_1108_p1) + signed(sext_ln1192_17_fu_1118_p1));
    add_ln1192_27_fu_654_p2 <= std_logic_vector(signed(lhs_V_1_fu_454_p3) + signed(add_ln1192_30_fu_648_p2));
    add_ln1192_29_fu_681_p2 <= std_logic_vector(unsigned(r_V_24_fu_675_p2) + unsigned(ap_const_lv15_100));
    add_ln1192_30_fu_648_p2 <= std_logic_vector(unsigned(r_V_s_fu_519_p3) + unsigned(ap_const_lv14_3E40));
    add_ln1192_4_fu_779_p2 <= std_logic_vector(unsigned(sub_ln1192_1_fu_773_p2) + unsigned(sub_ln1192_fu_749_p2));
    add_ln1192_7_fu_527_p2 <= std_logic_vector(unsigned(r_V_s_fu_519_p3) + unsigned(ap_const_lv14_3FC0));
    add_ln1192_8_fu_802_p2 <= std_logic_vector(unsigned(mul_ln1192_9_reg_1526) + unsigned(lhs_V_3_fu_731_p3));
    add_ln1192_fu_950_p2 <= std_logic_vector(unsigned(ret_V_29_fu_944_p2) + unsigned(ap_const_lv11_3E));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp107_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp107 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp111_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp111 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp113_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp113 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp120_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp120 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp122_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp122 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp123_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp123 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp125_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp125 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp128_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp128 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp147_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp147 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp20_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp20 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp29_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp29 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp55_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp55 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp84_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp84 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp85_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp85 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp91_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp91 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp93_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp93 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp97_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp97 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call110_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call110 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call144_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call144 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call152_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call152 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call164_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call164 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call178_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call178 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call193_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call193 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call199_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call199 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call213_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call213 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call217_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call217 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call228_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call228 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call27_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call27 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call43_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call43 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call62_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call62 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call68_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call68 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call78_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call78 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call88_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call88 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call96_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call96 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call152 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call213 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call228 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call152 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call213 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call228 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call152 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call213 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call228 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call152 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call213 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call228 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call152 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call213 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call228 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call152 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call213 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call228 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call110 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call152 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call193 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call213 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call217 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call228 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to6)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1338_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_2_fu_628_p0) * signed(mul_ln700_2_fu_628_p1))), 18));
    grp_fu_1338_p1 <= ap_const_lv18_34(7 - 1 downto 0);
    grp_fu_1338_p2 <= (mul_ln700_4_fu_634_p2 & ap_const_lv4_0);
    grp_fu_1352_p0 <= sext_ln1118_2_fu_422_p1(10 - 1 downto 0);
    grp_fu_1352_p1 <= sext_ln1118_2_fu_422_p1(10 - 1 downto 0);
    grp_fu_1352_p2 <= ap_const_lv14_3F70(9 - 1 downto 0);
    grp_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_709_p0) * signed(mul_ln1192_fu_709_p1))), 18));
    grp_fu_1361_p2 <= (p_Val2_3_reg_1515 & ap_const_lv8_0);
    grp_fu_1376_p1 <= ap_const_lv18_690(12 - 1 downto 0);
    grp_fu_1390_p1 <= ap_const_lv11_7F1(5 - 1 downto 0);
    grp_fu_1390_p2 <= ap_const_lv20_600(12 - 1 downto 0);
    grp_fu_1398_p0 <= sext_ln1116_fu_928_p1(6 - 1 downto 0);
    grp_fu_1398_p1 <= sext_ln1116_fu_928_p1(6 - 1 downto 0);
    grp_fu_1398_p2 <= ap_const_lv12_FD0(7 - 1 downto 0);
    grp_fu_1412_p1 <= ap_const_lv7_6A(6 - 1 downto 0);
    grp_fu_1420_p0 <= rhs_V_4_fu_956_p1(10 - 1 downto 0);
    grp_fu_1431_p0 <= sext_ln1118_11_fu_1034_p1(6 - 1 downto 0);
    grp_fu_1431_p1 <= sext_ln1118_11_fu_1034_p1(6 - 1 downto 0);
    grp_fu_1440_p1 <= ap_const_lv9_1E0(6 - 1 downto 0);
    grp_fu_1448_p2 <= ap_const_lv22_3F0000(17 - 1 downto 0);
    grp_fu_1465_p2 <= ap_const_lv25_1F20000(21 - 1 downto 0);
    grp_fu_1474_p2 <= ap_const_lv22_3F2000(17 - 1 downto 0);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp20)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp20) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_249_input_V <= ret_V_27_fu_462_p2(13 downto 4);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp29)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_258_input_V <= add_ln1192_7_fu_527_p2(13 downto 4);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp55)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp55) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_267_input_V <= add_ln1192_27_fu_654_p2(13 downto 4);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp84)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp84) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_276_input_V <= ret_V_30_fu_785_p2(13 downto 4);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp85)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp85) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_285_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp91)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp91) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_294_input_V <= ret_V_32_fu_820_p2(13 downto 4);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp93)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp93) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_303_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp97)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp97) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_312_input_V <= ret_V_34_fu_840_p2(13 downto 4);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp107)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp107) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_ap_start_reg;
        grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_321_input_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_10_fu_884_p4),10));


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp111)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp111) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_330_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp113)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp113) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp120)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp120) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp122) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_input_V <= std_logic_vector(signed(p_Val2_11_reg_1493_pp0_iter1_reg) + signed(ap_const_lv10_3F4));

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp123)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp123) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp125)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp125) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_input_V <= std_logic_vector(signed(p_Val2_3_reg_1515_pp0_iter1_reg) + signed(p_Val2_11_reg_1493_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp128)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp128) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp147)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp147) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_393_input_V <= std_logic_vector(signed(p_Val2_1_reg_1501_pp0_iter2_reg) + signed(ap_const_lv10_17));
    lhs_V_1_fu_454_p3 <= (p_Val2_1_fu_444_p4 & ap_const_lv4_0);
    lhs_V_3_fu_731_p3 <= (p_Val2_3_reg_1515 & ap_const_lv4_0);
    lhs_V_4_fu_1006_p3 <= (r_V_16_fu_986_p2 & ap_const_lv8_0);
        lhs_V_5_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1501_pp0_iter4_reg),11));

    lhs_V_6_fu_1137_p3 <= (ret_V_38_fu_1131_p2 & ap_const_lv4_0);
    mul_ln1118_4_fu_1346_p0 <= sext_ln1118_24_fu_687_p1(15 - 1 downto 0);
    mul_ln1118_4_fu_1346_p1 <= sext_ln1118_24_fu_687_p1(15 - 1 downto 0);
    mul_ln1118_fu_1332_p0 <= sext_ln1118_16_fu_620_p1(15 - 1 downto 0);
    mul_ln1118_fu_1332_p1 <= sext_ln1118_16_fu_620_p1(15 - 1 downto 0);
    mul_ln1192_9_fu_503_p0 <= sext_ln1118_6_fu_499_p1(10 - 1 downto 0);
    mul_ln1192_9_fu_503_p1 <= sext_ln1118_6_fu_499_p1(10 - 1 downto 0);
    mul_ln1192_9_fu_503_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_9_fu_503_p0) * signed(mul_ln1192_9_fu_503_p1))), 14));
    mul_ln1192_fu_709_p0 <= sext_ln1118_4_fu_703_p1(10 - 1 downto 0);
    mul_ln1192_fu_709_p1 <= sext_ln1118_4_fu_703_p1(10 - 1 downto 0);
    mul_ln700_1_fu_1188_p0 <= add_ln1192_reg_1639;
    mul_ln700_1_fu_1188_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_1188_p0) * signed(mul_ln700_reg_1634))), 30));
    mul_ln700_2_fu_628_p0 <= sext_ln1118_18_fu_624_p1(10 - 1 downto 0);
    mul_ln700_2_fu_628_p1 <= sext_ln1118_18_fu_624_p1(10 - 1 downto 0);
    mul_ln700_4_fu_634_p0 <= p_Val2_1_fu_444_p4;
    mul_ln700_4_fu_634_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_4_fu_634_p0) * signed('0' &ap_const_lv14_34))), 14));
    p_Val2_11_fu_412_p4 <= x_V_in_sig(39 downto 30);
    p_Val2_1_fu_444_p4 <= x_V_in_sig(149 downto 140);
    p_Val2_s_fu_402_p4 <= x_V_in_sig(29 downto 20);
    r_V_14_fu_438_p2 <= std_logic_vector(signed(sext_ln1118_2_fu_422_p1) + signed(sext_ln1118_3_fu_434_p1));
    r_V_16_fu_986_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_9_fu_982_p1));
    r_V_17_fu_576_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_556_p1) + signed(sext_ln1118_13_fu_568_p1));
    r_V_18_fu_594_p2 <= std_logic_vector(signed(sext_ln1118_3_fu_434_p1) + signed(sext_ln1118_15_fu_590_p1));
    r_V_19_fu_1370_p1 <= ap_const_lv26_27(7 - 1 downto 0);
    r_V_21_fu_878_p2 <= std_logic_vector(signed(sext_ln1118_21_fu_874_p1) - signed(sext_ln1118_10_fu_837_p1));
    r_V_22_fu_1252_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(sext_ln1253_fu_1249_p1));
    r_V_23_fu_1261_p0 <= sext_ln1116_2_fu_1258_p1(6 - 1 downto 0);
    r_V_23_fu_1261_p1 <= sext_ln1116_2_fu_1258_p1(6 - 1 downto 0);
    r_V_23_fu_1261_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_23_fu_1261_p0) * signed(r_V_23_fu_1261_p1))), 12));
    r_V_24_fu_675_p2 <= std_logic_vector(signed(sext_ln1118_23_fu_671_p1) - signed(sext_ln1118_14_fu_572_p1));
    r_V_25_fu_1384_p1 <= ap_const_lv26_49(8 - 1 downto 0);
    r_V_3_fu_992_p3 <= (p_Val2_3_reg_1515_pp0_iter4_reg & ap_const_lv3_0);
    r_V_s_fu_519_p3 <= (tmp_9_fu_509_p4 & ap_const_lv5_0);
    ret_V_10_fu_965_p2 <= std_logic_vector(signed(sext_ln703_1_fu_962_p1) + signed(ap_const_lv7_71));
    ret_V_20_fu_1166_p2 <= std_logic_vector(unsigned(ret_V_40_fu_1161_p2) + unsigned(ap_const_lv16_FC40));
    ret_V_25_fu_1286_p2 <= std_logic_vector(signed(sext_ln703_9_fu_1283_p1) + signed(ap_const_lv8_3));
    ret_V_27_fu_462_p2 <= std_logic_vector(signed(lhs_V_1_fu_454_p3) - signed(r_V_14_fu_438_p2));
    ret_V_29_fu_944_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_940_p1) - signed(sext_ln1192_1_fu_937_p1));
    ret_V_30_fu_785_p2 <= std_logic_vector(unsigned(add_ln1192_4_fu_779_p2) + unsigned(ap_const_lv14_C0));
    ret_V_31_fu_1204_p2 <= std_logic_vector(unsigned(mul_ln700_1_fu_1188_p2) - unsigned(rhs_V_fu_1200_p1));
    ret_V_32_fu_820_p2 <= std_logic_vector(unsigned(sub_ln1192_2_fu_814_p2) + unsigned(ap_const_lv14_3E70));
    ret_V_34_fu_840_p2 <= std_logic_vector(unsigned(mul_ln1192_9_reg_1526) + unsigned(ap_const_lv14_3EE0));
    ret_V_35_fu_608_p2 <= std_logic_vector(signed(sext_ln703_3_fu_600_p1) - signed(sext_ln703_4_fu_604_p1));
    ret_V_36_fu_1072_p2 <= std_logic_vector(unsigned(add_ln1192_18_fu_1066_p2) + unsigned(ap_const_lv22_3F5000));
    ret_V_38_fu_1131_p2 <= std_logic_vector(signed(lhs_V_5_fu_1128_p1) + signed(rhs_V_4_fu_956_p1));
    ret_V_40_fu_1161_p2 <= std_logic_vector(signed(grp_fu_1431_p3) + signed(sext_ln1192_18_fu_1157_p1));
    ret_V_43_fu_1179_p2 <= std_logic_vector(signed(sext_ln703_7_fu_1172_p1) - signed(sext_ln703_8_fu_1176_p1));
    rhs_V_1_fu_807_p3 <= (p_Val2_11_reg_1493 & ap_const_lv4_0);
    rhs_V_2_fu_1018_p3 <= (p_Val2_s_reg_1483_pp0_iter4_reg & ap_const_lv11_0);
        rhs_V_4_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1515_pp0_iter4_reg),11));

        rhs_V_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_1193_p3),30));

        sext_ln1116_2_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1582_pp0_iter5_reg),12));

        sext_ln1116_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_s_reg_1572),12));

        sext_ln1118_10_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1515),13));

        sext_ln1118_11_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1612),12));

        sext_ln1118_12_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_548_p3),14));

        sext_ln1118_13_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_560_p3),14));

        sext_ln1118_14_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_560_p3),15));

        sext_ln1118_15_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_582_p3),14));

        sext_ln1118_16_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_14_fu_614_p2),26));

        sext_ln1118_17_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_1088_p3),8));

        sext_ln1118_18_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_444_p4),18));

        sext_ln1118_19_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_1100_p3),9));

        sext_ln1118_21_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_738_p3),13));

        sext_ln1118_23_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_1_fu_454_p3),15));

        sext_ln1118_24_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_29_fu_681_p2),26));

        sext_ln1118_2_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_11_fu_412_p4),14));

        sext_ln1118_3_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_426_p3),14));

        sext_ln1118_4_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1509),18));

        sext_ln1118_6_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_402_p4),14));

        sext_ln1118_9_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_975_p3),13));

        sext_ln1192_12_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_1018_p3),22));

        sext_ln1192_13_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_1037_p3),22));

        sext_ln1192_14_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_1054_p3),22));

        sext_ln1192_17_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_21_fu_1112_p2),9));

        sext_ln1192_18_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_1149_p3),16));

        sext_ln1192_1_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1509_pp0_iter4_reg),11));

        sext_ln1192_2_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_339_ap_return),11));

        sext_ln1192_3_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_738_p3),14));

        sext_ln1192_4_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_762_p3),14));

        sext_ln1253_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1624_pp0_iter5_reg),7));

        sext_ln703_1_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_28_reg_1607),7));

        sext_ln703_3_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_17_fu_576_p2),15));

        sext_ln703_4_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_18_fu_594_p2),15));

        sext_ln703_7_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_384_ap_return),7));

        sext_ln703_8_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1629),7));

        sext_ln703_9_fu_1283_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_43_reg_1664),8));

    shl_ln1118_1_fu_560_p3 <= (p_Val2_1_fu_444_p4 & ap_const_lv1_0);
    shl_ln1118_2_fu_738_p3 <= (p_Val2_3_reg_1515 & ap_const_lv2_0);
    shl_ln1118_3_fu_755_p3 <= (p_Val2_s_reg_1483 & ap_const_lv4_0);
    shl_ln1118_4_fu_762_p3 <= (p_Val2_s_reg_1483 & ap_const_lv2_0);
    shl_ln1118_5_fu_582_p3 <= (p_Val2_11_fu_412_p4 & ap_const_lv1_0);
    shl_ln1118_7_fu_975_p3 <= (p_Val2_1_reg_1501_pp0_iter4_reg & ap_const_lv2_0);
    shl_ln1118_s_fu_548_p3 <= (p_Val2_1_fu_444_p4 & ap_const_lv3_0);
    shl_ln_fu_426_p3 <= (p_Val2_11_fu_412_p4 & ap_const_lv3_0);
    sub_ln1192_1_fu_773_p2 <= std_logic_vector(unsigned(shl_ln1118_3_fu_755_p3) - unsigned(sext_ln1192_4_fu_769_p1));
    sub_ln1192_2_fu_814_p2 <= std_logic_vector(unsigned(add_ln1192_8_fu_802_p2) - unsigned(rhs_V_1_fu_807_p3));
    sub_ln1192_fu_749_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_745_p1) - signed(lhs_V_3_fu_731_p3));
    tmp_11_fu_1271_p3 <= (r_V_22_fu_1252_p2 & ap_const_lv4_0);
    tmp_1_fu_1037_p3 <= (p_6_reg_1612 & ap_const_lv11_0);
    tmp_2_fu_1054_p3 <= (grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_348_ap_return & ap_const_lv11_0);
    tmp_3_fu_1088_p3 <= (grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_357_ap_return & ap_const_lv1_0);
    tmp_4_fu_1100_p3 <= (grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_366_ap_return & ap_const_lv1_0);
    tmp_5_fu_1149_p3 <= (grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_375_ap_return & ap_const_lv4_0);
    tmp_7_fu_1193_p3 <= (p_Val2_5_reg_1597_pp0_iter5_reg & ap_const_lv20_0);
    tmp_9_fu_509_p4 <= x_V_in_sig(38 downto 30);
    tmp_fu_1302_p4 <= grp_fu_1465_p3(24 downto 16);
    tmp_s_fu_1220_p3 <= (p_5_reg_1577_pp0_iter5_reg & ap_const_lv2_0);
    trunc_ln708_10_fu_884_p4 <= r_V_21_fu_878_p2(12 downto 4);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln708_3_reg_1669;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_1_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1302_p4),10));


    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1649_pp0_iter6_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_6_reg_1679;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= grp_fu_1474_p3(21 downto 12);

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
