-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (127 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.339000,HLS_SYN_LAT=8,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=29,HLS_SYN_FF=8854,HLS_SYN_LUT=18273,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_3FC : STD_LOGIC_VECTOR (9 downto 0) := "1111111100";
    constant ap_const_lv11_10 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_const_lv10_3E4 : STD_LOGIC_VECTOR (9 downto 0) := "1111100100";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv10_3EC : STD_LOGIC_VECTOR (9 downto 0) := "1111101100";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv12_D : STD_LOGIC_VECTOR (11 downto 0) := "000000001101";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_3F40 : STD_LOGIC_VECTOR (13 downto 0) := "11111101000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv14_3FF0 : STD_LOGIC_VECTOR (13 downto 0) := "11111111110000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv12_34 : STD_LOGIC_VECTOR (11 downto 0) := "000000110100";
    constant ap_const_lv10_3F4 : STD_LOGIC_VECTOR (9 downto 0) := "1111110100";
    constant ap_const_lv12_68 : STD_LOGIC_VECTOR (11 downto 0) := "000001101000";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv15_7C00 : STD_LOGIC_VECTOR (14 downto 0) := "111110000000000";
    constant ap_const_lv14_3F00 : STD_LOGIC_VECTOR (13 downto 0) := "11111100000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (127 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_8_fu_301_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_reg_1150 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_reg_1150_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_319_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1159 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1159_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1159_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1159_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1159_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_358_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_1171 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_1171_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_1171_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_1171_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_1171_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_372_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_1176 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_1176_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_1176_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_1176_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_1176_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_fu_392_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_1183 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_1183_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_1183_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_1183_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_1183_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_1_reg_1191 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1192_4_fu_419_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_4_reg_1196 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_2_fu_423_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_2_reg_1201 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln700_2_fu_464_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln700_2_reg_1212 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_fu_1054_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_reg_1217 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln700_1_fu_504_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln700_1_reg_1223 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_11_reg_1233 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1068_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln700_1_reg_1258 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_12_reg_1263 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_s_reg_1273 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_s_reg_1288 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_5_reg_1293 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_5_reg_1293_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_5_reg_1293_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_reg_1298 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_reg_1298_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_reg_1298_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1092_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln700_reg_1303 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1192_fu_767_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1192_reg_1308 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_4_reg_1313 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_5_reg_1318 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_26_reg_1323 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_6_reg_1328 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_6_reg_1328_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_6_reg_1328_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln708_9_reg_1334 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_9_reg_1334_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_9_reg_1334_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_33_fu_863_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_33_reg_1339 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_9_reg_1344 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_9_reg_1344_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln708_3_reg_1349 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_3_reg_1349_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1100_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_reg_1354 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_6_reg_1359 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_6_reg_1359_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_6_reg_1364 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1117_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1192_3_reg_1369 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1125_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1192_6_reg_1374 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0_reg_1379 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call20 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call20 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call20 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call20 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call20 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call20 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call20 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp18 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call77 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call77 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call77 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call77 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call77 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call77 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call77 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call77 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call77 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp35 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call151 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call151 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call151 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call151 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call151 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call151 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call151 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call151 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call151 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp49 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call35 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call35 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call35 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call35 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call35 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call35 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call35 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call35 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call35 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp60 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call52 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call52 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call52 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call52 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call52 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call52 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call52 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call52 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call52 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp69 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call58 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call58 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call58 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call58 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call58 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call58 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call58 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call58 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call58 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp70 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call67 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call67 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call67 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call67 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call67 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call67 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call67 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call67 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call67 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp76 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call83 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call83 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call83 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call83 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call83 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call83 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call83 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call83 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call83 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp78 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call93 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call93 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call93 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call93 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call93 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call93 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call93 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call93 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call93 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp81 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call115 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call115 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call115 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call115 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call115 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call115 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call115 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call115 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call115 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp85 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call164 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call164 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call164 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call164 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call164 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call164 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call164 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call164 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call164 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp90 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call123 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call123 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call123 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call123 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call123 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call123 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call123 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call123 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call123 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp106 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call139 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call139 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call139 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call139 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call139 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call139 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call139 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call139 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call139 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp111 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call169 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call169 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call169 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call169 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call169 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call169 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call169 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call169 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call169 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp114 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_291_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_291_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call131 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call131 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call131 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call131 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call131 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call131 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call131 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call131 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call131 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp125 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call177 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call177 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call177 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call177 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call177 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call177 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call177 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call177 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call177 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp131 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_9_fu_311_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_fu_329_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1193_fu_337_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_21_fu_341_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_fu_386_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_fu_368_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_fu_386_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1045_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_2_fu_423_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1192_2_fu_423_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_429_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_s_fu_439_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_7_fu_447_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_12_fu_472_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_3_fu_480_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_30_fu_484_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1193_1_fu_490_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_13_fu_494_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln700_1_fu_504_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln700_1_fu_504_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1192_21_fu_510_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_22_fu_516_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_5_fu_533_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_3_fu_468_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_16_fu_537_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_23_fu_543_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_3_fu_1060_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_2_fu_558_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_1_fu_553_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_17_fu_563_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_3_fu_579_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_2_fu_582_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1_fu_595_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1192_fu_602_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1192_3_fu_589_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_2_fu_607_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_24_fu_613_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_5_fu_630_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_1_fu_635_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1192_1_fu_642_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_26_fu_648_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_28_fu_665_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1118_fu_681_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_13_fu_686_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of r_V_13_fu_686_p2 : signal is "no";
    signal grp_fu_1075_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1084_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_2_fu_757_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1192_1_fu_754_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_23_fu_761_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_4_fu_748_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_11_fu_773_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_6_fu_779_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_2_fu_791_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_2_fu_787_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln728_fu_798_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_808_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_808_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_29_fu_802_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_9_fu_816_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_1_fu_826_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1192_14_fu_820_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_10_fu_834_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_15_fu_838_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_31_fu_844_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_4_fu_860_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_fu_875_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln700_fu_875_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_fu_875_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_5_fu_889_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln_fu_881_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_fu_896_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_25_fu_900_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_fu_916_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_fu_919_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs_V_5_fu_935_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_946_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1192_13_fu_954_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1108_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_20_fu_958_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 of add_ln1192_20_fu_958_p2 : signal is "no";
    signal shl_ln2_fu_963_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_34_fu_971_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_15_fu_996_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_2_fu_993_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_15_fu_996_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_15_fu_996_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1133_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_1015_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1141_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1045_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1045_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_fu_1054_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_4_fu_500_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_fu_1054_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln1118_3_fu_1060_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_6_fu_549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_3_fu_1060_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1068_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1068_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1068_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1075_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_7_fu_707_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1075_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1075_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1084_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1092_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_fu_751_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1092_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1092_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1100_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1108_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1118_2_fu_932_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1108_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1117_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1133_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1141_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sin_lut_ap_fixed_8_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_mac_muladd_8s_12s_12ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mul_mul_11s_11s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mac_muladd_7ns_8s_12ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mac_muladd_8s_8s_5s_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component myproject_mac_muladd_8ns_8s_12s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mac_muladd_4s_4s_3s_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component myproject_am_addmul_3s_4s_5s_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component myproject_mac_muladd_4s_4s_11s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_am_addmul_3s_4s_10s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_am_submul_4s_4s_8s_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component myproject_mac_muladd_4s_15s_11s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_mac_muladd_4s_13s_9s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_1_reg_1191,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => tmp_8_reg_1176,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_s_reg_1159,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_11_reg_1233,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_12_reg_1263,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_291 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_s_reg_1273,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_291_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_291_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_ap_ce);

    myproject_mac_muladd_8s_12s_12ns_12_1_1_U8 : component myproject_mac_muladd_8s_12s_12ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => tmp_8_fu_372_p4,
        din1 => grp_fu_1045_p1,
        din2 => grp_fu_1045_p2,
        dout => grp_fu_1045_p3);

    myproject_mul_mul_11s_11s_16_1_1_U9 : component myproject_mul_mul_11s_11s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1118_fu_1054_p0,
        din1 => mul_ln1118_fu_1054_p1,
        dout => mul_ln1118_fu_1054_p2);

    myproject_mul_mul_11s_11s_16_1_1_U10 : component myproject_mul_mul_11s_11s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1118_3_fu_1060_p0,
        din1 => mul_ln1118_3_fu_1060_p1,
        dout => mul_ln1118_3_fu_1060_p2);

    myproject_mac_muladd_7ns_8s_12ns_12_1_1_U11 : component myproject_mac_muladd_7ns_8s_12ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1068_p0,
        din1 => grp_fu_1068_p1,
        din2 => grp_fu_1068_p2,
        dout => grp_fu_1068_p3);

    myproject_mac_muladd_8s_8s_5s_10_1_1_U12 : component myproject_mac_muladd_8s_8s_5s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1075_p0,
        din1 => grp_fu_1075_p1,
        din2 => grp_fu_1075_p2,
        dout => grp_fu_1075_p3);

    myproject_mac_muladd_8ns_8s_12s_12_1_1_U13 : component myproject_mac_muladd_8ns_8s_12s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1084_p0,
        din1 => p_Val2_8_reg_1150_pp0_iter1_reg,
        din2 => add_ln700_1_reg_1258,
        dout => grp_fu_1084_p3);

    myproject_mac_muladd_4s_4s_3s_8_1_1_U14 : component myproject_mac_muladd_4s_4s_3s_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_1092_p0,
        din1 => grp_fu_1092_p1,
        din2 => grp_fu_1092_p2,
        dout => grp_fu_1092_p3);

    myproject_am_addmul_3s_4s_5s_10_1_1_U15 : component myproject_am_addmul_3s_4s_5s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 4,
        din2_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1100_p0,
        din1 => p_Val2_s_26_reg_1323,
        din2 => ret_V_fu_919_p2,
        dout => grp_fu_1100_p3);

    myproject_mac_muladd_4s_4s_11s_12_1_1_U16 : component myproject_mac_muladd_4s_4s_11s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1108_p0,
        din1 => grp_fu_1108_p1,
        din2 => lhs_V_5_fu_935_p3,
        dout => grp_fu_1108_p3);

    myproject_am_addmul_3s_4s_10s_15_1_1_U17 : component myproject_am_addmul_3s_4s_10s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 4,
        din2_WIDTH => 10,
        dout_WIDTH => 15)
    port map (
        din0 => grp_fu_1117_p0,
        din1 => p_5_reg_1293_pp0_iter6_reg,
        din2 => r_V_reg_1354,
        dout => grp_fu_1117_p3);

    myproject_am_submul_4s_4s_8s_13_1_1_U18 : component myproject_am_submul_4s_4s_8s_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 4,
        din2_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => p_Val2_9_reg_1344_pp0_iter6_reg,
        din1 => p_Val2_6_reg_1364,
        din2 => r_V_15_fu_996_p2,
        dout => grp_fu_1125_p3);

    myproject_mac_muladd_4s_15s_11s_15_1_1_U19 : component myproject_mac_muladd_4s_15s_11s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 15,
        din2_WIDTH => 11,
        dout_WIDTH => 15)
    port map (
        din0 => p_6_reg_1328_pp0_iter7_reg,
        din1 => mul_ln1192_3_reg_1369,
        din2 => grp_fu_1133_p2,
        dout => grp_fu_1133_p3);

    myproject_mac_muladd_4s_13s_9s_14_1_1_U20 : component myproject_mac_muladd_4s_13s_9s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 13,
        din2_WIDTH => 9,
        dout_WIDTH => 14)
    port map (
        din0 => p_0_reg_1379,
        din1 => mul_ln1192_6_reg_1374,
        din2 => grp_fu_1141_p2,
        dout => grp_fu_1141_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv128_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_reg_1308 <= add_ln1192_fu_767_p2;
                p_0_reg_1379 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_ap_return;
                p_1_reg_1298 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_ap_return;
                p_1_reg_1298_pp0_iter5_reg <= p_1_reg_1298;
                p_1_reg_1298_pp0_iter6_reg <= p_1_reg_1298_pp0_iter5_reg;
                p_5_reg_1293 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_ap_return;
                p_5_reg_1293_pp0_iter5_reg <= p_5_reg_1293;
                p_5_reg_1293_pp0_iter6_reg <= p_5_reg_1293_pp0_iter5_reg;
                p_6_reg_1328 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_return;
                p_6_reg_1328_pp0_iter6_reg <= p_6_reg_1328;
                p_6_reg_1328_pp0_iter7_reg <= p_6_reg_1328_pp0_iter6_reg;
                p_Val2_1_reg_1171_pp0_iter2_reg <= p_Val2_1_reg_1171_pp0_iter1_reg;
                p_Val2_1_reg_1171_pp0_iter3_reg <= p_Val2_1_reg_1171_pp0_iter2_reg;
                p_Val2_1_reg_1171_pp0_iter4_reg <= p_Val2_1_reg_1171_pp0_iter3_reg;
                p_Val2_2_reg_1183_pp0_iter2_reg <= p_Val2_2_reg_1183_pp0_iter1_reg;
                p_Val2_2_reg_1183_pp0_iter3_reg <= p_Val2_2_reg_1183_pp0_iter2_reg;
                p_Val2_2_reg_1183_pp0_iter4_reg <= p_Val2_2_reg_1183_pp0_iter3_reg;
                p_Val2_4_reg_1313 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_ap_return;
                p_Val2_5_reg_1318 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246_ap_return;
                p_Val2_6_reg_1364 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286_ap_return;
                p_Val2_9_reg_1344 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271_ap_return;
                p_Val2_9_reg_1344_pp0_iter6_reg <= p_Val2_9_reg_1344;
                p_Val2_s_26_reg_1323 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_ap_return;
                p_Val2_s_reg_1159_pp0_iter2_reg <= p_Val2_s_reg_1159_pp0_iter1_reg;
                p_Val2_s_reg_1159_pp0_iter3_reg <= p_Val2_s_reg_1159_pp0_iter2_reg;
                p_Val2_s_reg_1159_pp0_iter4_reg <= p_Val2_s_reg_1159_pp0_iter3_reg;
                p_s_reg_1288 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_ap_return;
                ret_V_33_reg_1339 <= ret_V_33_fu_863_p2;
                tmp_8_reg_1176_pp0_iter2_reg <= tmp_8_reg_1176_pp0_iter1_reg;
                tmp_8_reg_1176_pp0_iter3_reg <= tmp_8_reg_1176_pp0_iter2_reg;
                tmp_8_reg_1176_pp0_iter4_reg <= tmp_8_reg_1176_pp0_iter3_reg;
                trunc_ln708_3_reg_1349 <= ret_V_25_fu_900_p2(17 downto 10);
                trunc_ln708_3_reg_1349_pp0_iter7_reg <= trunc_ln708_3_reg_1349;
                trunc_ln708_6_reg_1359 <= ret_V_34_fu_971_p2(13 downto 6);
                trunc_ln708_6_reg_1359_pp0_iter7_reg <= trunc_ln708_6_reg_1359;
                trunc_ln708_9_reg_1334 <= ret_V_31_fu_844_p2(13 downto 6);
                trunc_ln708_9_reg_1334_pp0_iter6_reg <= trunc_ln708_9_reg_1334;
                trunc_ln708_9_reg_1334_pp0_iter7_reg <= trunc_ln708_9_reg_1334_pp0_iter6_reg;
                trunc_ln708_s_reg_1273 <= grp_fu_1084_p3(11 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln700_1_reg_1258 <= grp_fu_1068_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                add_ln700_reg_1303 <= grp_fu_1092_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_reg_1217 <= mul_ln1118_fu_1054_p2;
                mul_ln1192_2_reg_1201 <= mul_ln1192_2_fu_423_p2;
                mul_ln700_1_reg_1223 <= mul_ln700_1_fu_504_p2;
                p_Val2_1_reg_1171 <= x_V_in_sig(39 downto 32);
                p_Val2_1_reg_1171_pp0_iter1_reg <= p_Val2_1_reg_1171;
                p_Val2_2_reg_1183 <= x_V_in_sig(127 downto 120);
                p_Val2_2_reg_1183_pp0_iter1_reg <= p_Val2_2_reg_1183;
                p_Val2_8_reg_1150 <= x_V_in_sig(31 downto 24);
                p_Val2_8_reg_1150_pp0_iter1_reg <= p_Val2_8_reg_1150;
                p_Val2_s_reg_1159 <= x_V_in_sig(119 downto 112);
                p_Val2_s_reg_1159_pp0_iter1_reg <= p_Val2_s_reg_1159;
                sext_ln1192_4_reg_1196 <= sext_ln1192_4_fu_419_p1;
                sext_ln700_2_reg_1212 <= sext_ln700_2_fu_464_p1;
                tmp_8_reg_1176 <= x_V_in_sig(23 downto 16);
                tmp_8_reg_1176_pp0_iter1_reg <= tmp_8_reg_1176;
                trunc_ln708_11_reg_1233 <= r_V_17_fu_563_p2(15 downto 8);
                trunc_ln708_12_reg_1263 <= grp_fu_1075_p3(9 downto 2);
                trunc_ln708_1_reg_1191 <= grp_fu_1045_p3(11 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                mul_ln1192_3_reg_1369 <= grp_fu_1117_p3;
                mul_ln1192_6_reg_1374 <= grp_fu_1125_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                r_V_reg_1354 <= grp_fu_1100_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_13_fu_494_p2 <= std_logic_vector(unsigned(ap_const_lv11_10) + unsigned(sext_ln1193_1_fu_490_p1));
    add_ln1192_14_fu_820_p2 <= std_logic_vector(unsigned(ret_V_29_fu_802_p2) + unsigned(sext_ln1192_9_fu_816_p1));
    add_ln1192_15_fu_838_p2 <= std_logic_vector(unsigned(add_ln1192_14_fu_820_p2) + unsigned(sext_ln1192_10_fu_834_p1));
    add_ln1192_20_fu_958_p2 <= std_logic_vector(signed(sext_ln1192_13_fu_954_p1) + signed(grp_fu_1108_p3));
    add_ln1192_21_fu_510_p2 <= std_logic_vector(signed(ap_const_lv10_3E4) + signed(r_V_s_fu_439_p3));
    add_ln1192_22_fu_516_p2 <= std_logic_vector(signed(lhs_V_fu_329_p3) + signed(add_ln1192_21_fu_510_p2));
    add_ln1192_23_fu_543_p2 <= std_logic_vector(unsigned(ap_const_lv11_10) + unsigned(r_V_16_fu_537_p2));
    add_ln1192_2_fu_607_p2 <= std_logic_vector(unsigned(sub_ln1192_fu_602_p2) + unsigned(sub_ln1192_3_fu_589_p2));
    add_ln1192_5_fu_630_p2 <= std_logic_vector(unsigned(mul_ln1192_2_reg_1201) + unsigned(lhs_V_2_fu_582_p3));
    add_ln1192_7_fu_447_p2 <= std_logic_vector(signed(ap_const_lv10_3FC) + signed(r_V_s_fu_439_p3));
    add_ln1192_fu_767_p2 <= std_logic_vector(unsigned(ap_const_lv9_F) + unsigned(ret_V_23_fu_761_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp106_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp106 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp111_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp111 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp114_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp114 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp125_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp125 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp131_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp131 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp18_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp18 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp35_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp35 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp49_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp49 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp60_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp60 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp69_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp69 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp70_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp70 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp76_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp76 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp78_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp78 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp81_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp81 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp85_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp85 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp90_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp90 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call115_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call115 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call123_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call123 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call131_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call131 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call139_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call139 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call151_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call151 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call164_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call164 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call169_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call169 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call177_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call177 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call20_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call20 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call35_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call35 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call52_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call52 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call58_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call58 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call67_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call67 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call77_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call77 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call83_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call83 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call93_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call93 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call123 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call139 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call123 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call139 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call123 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call139 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call123 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call139 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call123 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call139 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call123 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call139 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call123 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call139 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call115 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call123 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call131 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call139 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call151 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call164 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call169 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call177 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to7)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to7 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_386_p0) * signed(mul_ln1192_fu_386_p1))), 12));
    grp_fu_1045_p2 <= (p_Val2_2_fu_392_p4 & ap_const_lv4_0);
    grp_fu_1068_p0 <= ap_const_lv12_34(7 - 1 downto 0);
    grp_fu_1068_p1 <= sext_ln700_2_reg_1212(8 - 1 downto 0);
    grp_fu_1068_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv12_D) * signed(mul_ln700_1_reg_1223))), 12));
    grp_fu_1075_p0 <= sext_ln1118_7_fu_707_p1(8 - 1 downto 0);
    grp_fu_1075_p1 <= sext_ln1118_7_fu_707_p1(8 - 1 downto 0);
    grp_fu_1075_p2 <= ap_const_lv10_3F4(5 - 1 downto 0);
    grp_fu_1084_p0 <= ap_const_lv12_68(8 - 1 downto 0);
    grp_fu_1092_p0 <= sext_ln1116_fu_751_p1(4 - 1 downto 0);
    grp_fu_1092_p1 <= sext_ln1116_fu_751_p1(4 - 1 downto 0);
    grp_fu_1092_p2 <= ap_const_lv8_FC(3 - 1 downto 0);
    grp_fu_1100_p0 <= ap_const_lv5_1C(3 - 1 downto 0);
    grp_fu_1108_p0 <= sext_ln1118_2_fu_932_p1(4 - 1 downto 0);
    grp_fu_1108_p1 <= sext_ln1118_2_fu_932_p1(4 - 1 downto 0);
    grp_fu_1117_p0 <= ap_const_lv5_1C(3 - 1 downto 0);
    grp_fu_1133_p2 <= ap_const_lv15_7C00(11 - 1 downto 0);
    grp_fu_1141_p2 <= ap_const_lv14_3F00(9 - 1 downto 0);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp18)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_221_input_V <= ret_V_21_fu_341_p2(9 downto 2);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp35)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_226_input_V <= add_ln1192_7_fu_447_p2(9 downto 2);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp49)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp49) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_231_input_V <= add_ln1192_22_fu_516_p2(9 downto 2);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp60)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp60) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp69)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp69) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_241_input_V <= ret_V_24_fu_613_p2(9 downto 2);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp70)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp70) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_246_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp76)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp76) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_251_input_V <= ret_V_26_fu_648_p2(9 downto 2);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp78)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp78) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp81)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp81) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_261_input_V <= ret_V_28_fu_665_p2(9 downto 2);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp85)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp85) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_input_V <= r_V_13_fu_686_p2(15 downto 8);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp90)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp90) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_271_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp106)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp106) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_276_input_V <= std_logic_vector(signed(ap_const_lv8_FD) + signed(p_Val2_8_reg_1150_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp111)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp111) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_input_V <= std_logic_vector(signed(p_Val2_8_reg_1150_pp0_iter1_reg) + signed(p_Val2_2_reg_1183_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp114)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp114) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_286_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_291_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp125)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp125) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_291_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_291_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp131)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp131) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_296_input_V <= std_logic_vector(unsigned(ap_const_lv8_5) + unsigned(p_Val2_s_reg_1159_pp0_iter2_reg));
    lhs_V_2_fu_582_p3 <= (p_Val2_2_reg_1183 & ap_const_lv2_0);
        lhs_V_4_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1159_pp0_iter4_reg),9));

    lhs_V_5_fu_935_p3 <= (ret_V_33_reg_1339 & ap_const_lv2_0);
    lhs_V_6_fu_779_p3 <= (r_V_11_fu_773_p2 & ap_const_lv4_0);
    lhs_V_fu_329_p3 <= (p_Val2_s_fu_319_p4 & ap_const_lv2_0);
    mul_ln1118_3_fu_1060_p0 <= sext_ln1118_6_fu_549_p1(11 - 1 downto 0);
    mul_ln1118_3_fu_1060_p1 <= sext_ln1118_6_fu_549_p1(11 - 1 downto 0);
    mul_ln1118_fu_1054_p0 <= sext_ln1118_4_fu_500_p1(11 - 1 downto 0);
    mul_ln1118_fu_1054_p1 <= sext_ln1118_4_fu_500_p1(11 - 1 downto 0);
    mul_ln1192_2_fu_423_p0 <= sext_ln1192_4_fu_419_p1(8 - 1 downto 0);
    mul_ln1192_2_fu_423_p1 <= sext_ln1192_4_fu_419_p1(8 - 1 downto 0);
    mul_ln1192_2_fu_423_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_2_fu_423_p0) * signed(mul_ln1192_2_fu_423_p1))), 10));
    mul_ln1192_fu_386_p0 <= sext_ln1118_fu_368_p1(8 - 1 downto 0);
    mul_ln1192_fu_386_p1 <= sext_ln1118_fu_368_p1(8 - 1 downto 0);
    mul_ln700_1_fu_504_p0 <= sext_ln700_2_fu_464_p1(8 - 1 downto 0);
    mul_ln700_1_fu_504_p1 <= sext_ln700_2_fu_464_p1(8 - 1 downto 0);
    mul_ln700_1_fu_504_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_504_p0) * signed(mul_ln700_1_fu_504_p1))), 12));
    mul_ln700_fu_875_p0 <= add_ln700_reg_1303;
    mul_ln700_fu_875_p1 <= add_ln1192_reg_1308;
    mul_ln700_fu_875_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_fu_875_p0) * signed(mul_ln700_fu_875_p1))), 14));
    p_Val2_1_fu_358_p4 <= x_V_in_sig(39 downto 32);
    p_Val2_2_fu_392_p4 <= x_V_in_sig(127 downto 120);
    p_Val2_8_fu_301_p4 <= x_V_in_sig(31 downto 24);
    p_Val2_s_fu_319_p4 <= x_V_in_sig(119 downto 112);
    r_V_11_fu_773_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(lhs_V_4_fu_748_p1));
    r_V_12_fu_472_p3 <= (p_Val2_s_fu_319_p4 & ap_const_lv1_0);
    r_V_13_fu_686_p2 <= std_logic_vector(signed(mul_ln1118_reg_1217) + signed(shl_ln1118_fu_681_p2));
    r_V_15_fu_996_p0 <= sext_ln1116_2_fu_993_p1(4 - 1 downto 0);
    r_V_15_fu_996_p1 <= sext_ln1116_2_fu_993_p1(4 - 1 downto 0);
    r_V_15_fu_996_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_15_fu_996_p0) * signed(r_V_15_fu_996_p1))), 8));
    r_V_16_fu_537_p2 <= std_logic_vector(signed(sext_ln1118_5_fu_533_p1) - signed(sext_ln1118_3_fu_468_p1));
    r_V_17_fu_563_p2 <= std_logic_vector(unsigned(shl_ln1118_2_fu_558_p2) + unsigned(shl_ln1118_1_fu_553_p2));
    r_V_9_fu_311_p3 <= (p_Val2_8_fu_301_p4 & ap_const_lv1_0);
    r_V_s_fu_439_p3 <= (tmp_9_fu_429_p4 & ap_const_lv3_0);
    ret_V_21_fu_341_p2 <= std_logic_vector(signed(lhs_V_fu_329_p3) - signed(sext_ln1193_fu_337_p1));
    ret_V_23_fu_761_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_757_p1) - signed(sext_ln1192_1_fu_754_p1));
    ret_V_24_fu_613_p2 <= std_logic_vector(unsigned(ap_const_lv10_C) + unsigned(add_ln1192_2_fu_607_p2));
    ret_V_25_fu_900_p2 <= std_logic_vector(unsigned(shl_ln_fu_881_p3) - unsigned(rhs_V_fu_896_p1));
    ret_V_26_fu_648_p2 <= std_logic_vector(signed(ap_const_lv10_3E4) + signed(sub_ln1192_1_fu_642_p2));
    ret_V_28_fu_665_p2 <= std_logic_vector(signed(ap_const_lv10_3EC) + signed(mul_ln1192_2_reg_1201));
    ret_V_29_fu_802_p2 <= std_logic_vector(signed(sext_ln703_2_fu_787_p1) + signed(sext_ln728_fu_798_p1));
    ret_V_30_fu_484_p2 <= std_logic_vector(signed(sext_ln703_3_fu_480_p1) - signed(sext_ln1193_fu_337_p1));
    ret_V_31_fu_844_p2 <= std_logic_vector(signed(ap_const_lv14_3F40) + signed(add_ln1192_15_fu_838_p2));
    ret_V_33_fu_863_p2 <= std_logic_vector(signed(rhs_V_4_fu_860_p1) + signed(lhs_V_4_fu_748_p1));
    ret_V_34_fu_971_p2 <= std_logic_vector(signed(ap_const_lv14_3FF0) - signed(shl_ln2_fu_963_p3));
    ret_V_fu_919_p2 <= std_logic_vector(signed(ap_const_lv5_1A) + signed(sext_ln703_fu_916_p1));
    rhs_V_1_fu_635_p3 <= (p_Val2_8_reg_1150 & ap_const_lv2_0);
    rhs_V_2_fu_791_p3 <= (tmp_8_reg_1176_pp0_iter4_reg & ap_const_lv5_0);
        rhs_V_4_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1183_pp0_iter4_reg),9));

        rhs_V_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_889_p3),18));

        sext_ln1116_2_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_reg_1298_pp0_iter6_reg),8));

        sext_ln1116_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_s_reg_1288),8));

        sext_ln1118_2_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1328),8));

        sext_ln1118_3_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_319_p4),11));

        sext_ln1118_4_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_13_fu_494_p2),16));

        sext_ln1118_5_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_329_p3),11));

        sext_ln1118_6_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_23_fu_543_p2),16));

        sext_ln1118_7_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1150),10));

        sext_ln1118_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_358_p4),12));

        sext_ln1192_10_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_826_p3),14));

        sext_ln1192_13_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_946_p3),12));

        sext_ln1192_1_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1171_pp0_iter4_reg),9));

        sext_ln1192_2_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_236_ap_return),9));

        sext_ln1192_3_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1183),10));

        sext_ln1192_4_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_372_p4),10));

        sext_ln1192_9_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_808_p3),14));

        sext_ln1193_1_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_30_fu_484_p2),11));

        sext_ln1193_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_fu_311_p3),10));

        sext_ln700_2_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_319_p4),12));

        sext_ln703_2_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_6_fu_779_p3),14));

        sext_ln703_3_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_12_fu_472_p3),10));

        sext_ln703_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1318),5));

        sext_ln728_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_791_p3),14));

    shl_ln1118_1_fu_553_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_3_fu_1060_p2),to_integer(unsigned('0' & ap_const_lv16_4(16-1 downto 0)))));
    shl_ln1118_2_fu_558_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_3_fu_1060_p2),to_integer(unsigned('0' & ap_const_lv16_1(16-1 downto 0)))));
    shl_ln1118_fu_681_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_reg_1217),to_integer(unsigned('0' & ap_const_lv16_3(16-1 downto 0)))));
    shl_ln1_fu_595_p3 <= (tmp_8_reg_1176 & ap_const_lv2_0);
    shl_ln2_fu_963_p3 <= (add_ln1192_20_fu_958_p2 & ap_const_lv2_0);
    shl_ln_fu_881_p3 <= (mul_ln700_fu_875_p2 & ap_const_lv4_0);
    sub_ln1192_1_fu_642_p2 <= std_logic_vector(unsigned(add_ln1192_5_fu_630_p2) - unsigned(rhs_V_1_fu_635_p3));
    sub_ln1192_3_fu_589_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_579_p1) - signed(lhs_V_2_fu_582_p3));
    sub_ln1192_fu_602_p2 <= std_logic_vector(unsigned(shl_ln1_fu_595_p3) - unsigned(sext_ln1192_4_reg_1196));
    tmp_1_fu_826_p3 <= (grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_266_ap_return & ap_const_lv5_0);
    tmp_2_fu_946_p3 <= (grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_281_ap_return & ap_const_lv2_0);
    tmp_5_fu_889_p3 <= (p_Val2_4_reg_1313 & ap_const_lv10_0);
    tmp_8_fu_372_p4 <= x_V_in_sig(23 downto 16);
    tmp_9_fu_429_p4 <= x_V_in_sig(30 downto 24);
    tmp_fu_1015_p4 <= grp_fu_1133_p3(14 downto 8);
    tmp_s_fu_808_p1 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_256_ap_return;
    tmp_s_fu_808_p3 <= (tmp_s_fu_808_p1 & ap_const_lv5_0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln708_3_reg_1349_pp0_iter7_reg;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_1_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1015_p4),8));


    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1334_pp0_iter7_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_6_reg_1359_pp0_iter7_reg;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= grp_fu_1141_p3(13 downto 6);

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
