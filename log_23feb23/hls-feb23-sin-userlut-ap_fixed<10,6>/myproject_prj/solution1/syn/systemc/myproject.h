// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_ama_addmulsub_10s_5s_12ns_20_1_1.h"
#include "myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1.h"
#include "myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1.h"
#include "myproject_mul_mul_20s_9ns_29_1_1.h"

namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > x_V_ap_vld;
    sc_in< sc_lv<160> > x_V;
    sc_out< sc_lv<10> > y_0_V;
    sc_out< sc_logic > y_0_V_ap_vld;
    sc_out< sc_lv<10> > y_1_V;
    sc_out< sc_logic > y_1_V_ap_vld;
    sc_out< sc_lv<10> > y_2_V;
    sc_out< sc_logic > y_2_V_ap_vld;
    sc_out< sc_lv<10> > y_3_V;
    sc_out< sc_logic > y_3_V_ap_vld;
    sc_out< sc_lv<10> > y_4_V;
    sc_out< sc_logic > y_4_V_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    myproject_ama_addmulsub_10s_5s_12ns_20_1_1<1,1,10,5,12,20>* myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U1;
    myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1<1,1,10,5,13,21,22>* myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2;
    myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1<1,1,15,11,8,17,22>* myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3;
    myproject_mul_mul_20s_9ns_29_1_1<1,1,20,9,29>* myproject_mul_mul_20s_9ns_29_1_1_U4;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > x_V_ap_vld_in_sig;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<160> > x_V_preg;
    sc_signal< sc_lv<160> > x_V_in_sig;
    sc_signal< sc_logic > x_V_ap_vld_preg;
    sc_signal< sc_logic > x_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<20> > grp_fu_350_p3;
    sc_signal< sc_lv<20> > ret_V_1_reg_386;
    sc_signal< sc_lv<10> > p_Val2_2_reg_391;
    sc_signal< sc_lv<10> > trunc_ln708_9_reg_396;
    sc_signal< sc_lv<10> > trunc_ln708_9_reg_396_pp0_iter1_reg;
    sc_signal< sc_lv<10> > trunc_ln708_s_reg_401;
    sc_signal< sc_lv<10> > trunc_ln708_s_reg_401_pp0_iter1_reg;
    sc_signal< sc_lv<29> > mul_ln700_fu_380_p2;
    sc_signal< sc_lv<29> > mul_ln700_reg_406;
    sc_signal< sc_lv<11> > add_ln1192_fu_315_p2;
    sc_signal< sc_lv<11> > add_ln1192_reg_411;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<10> > p_Val2_s_fu_149_p4;
    sc_signal< sc_lv<10> > p_Val2_3_fu_183_p4;
    sc_signal< sc_lv<10> > p_Val2_1_fu_163_p4;
    sc_signal< sc_lv<12> > shl_ln1118_7_fu_197_p3;
    sc_signal< sc_lv<13> > sext_ln1118_2_fu_205_p1;
    sc_signal< sc_lv<13> > r_V_1_fu_215_p3;
    sc_signal< sc_lv<13> > r_V_fu_209_p2;
    sc_signal< sc_lv<21> > lhs_V_1_fu_227_p3;
    sc_signal< sc_lv<21> > rhs_V_fu_239_p3;
    sc_signal< sc_lv<22> > grp_fu_358_p4;
    sc_signal< sc_lv<22> > sext_ln1192_4_fu_247_p1;
    sc_signal< sc_lv<22> > add_ln1192_3_fu_251_p2;
    sc_signal< sc_lv<22> > ret_V_11_fu_256_p2;
    sc_signal< sc_lv<11> > lhs_V_2_fu_272_p1;
    sc_signal< sc_lv<11> > rhs_V_1_fu_193_p1;
    sc_signal< sc_lv<11> > ret_V_12_fu_276_p2;
    sc_signal< sc_lv<15> > lhs_V_3_fu_282_p3;
    sc_signal< sc_lv<22> > grp_fu_369_p4;
    sc_signal< sc_lv<11> > sext_ln1192_fu_306_p1;
    sc_signal< sc_lv<11> > ret_V_9_fu_309_p2;
    sc_signal< sc_lv<11> > mul_ln700_1_fu_327_p0;
    sc_signal< sc_lv<29> > mul_ln700_1_fu_327_p1;
    sc_signal< sc_lv<30> > mul_ln700_1_fu_327_p2;
    sc_signal< sc_lv<30> > ret_V_10_fu_333_p2;
    sc_signal< sc_lv<5> > grp_fu_350_p1;
    sc_signal< sc_lv<12> > grp_fu_350_p2;
    sc_signal< sc_lv<10> > grp_fu_358_p0;
    sc_signal< sc_lv<5> > grp_fu_358_p1;
    sc_signal< sc_lv<11> > grp_fu_369_p1;
    sc_signal< sc_lv<8> > grp_fu_369_p2;
    sc_signal< sc_lv<17> > grp_fu_369_p3;
    sc_signal< sc_lv<9> > mul_ln700_fu_380_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<160> ap_const_lv160_lc_1;
    static const sc_lv<10> ap_const_lv10_9;
    static const sc_lv<10> ap_const_lv10_3EC;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_8C;
    static const sc_lv<32> ap_const_lv32_95;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_96;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<22> ap_const_lv22_3E6000;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<11> ap_const_lv11_7F1;
    static const sc_lv<11> ap_const_lv11_3E;
    static const sc_lv<30> ap_const_lv30_F00000;
    static const sc_lv<20> ap_const_lv20_600;
    static const sc_lv<16> ap_const_lv16_FC31;
    static const sc_lv<22> ap_const_lv22_3FFFB4;
    static const sc_lv<22> ap_const_lv22_3F0000;
    static const sc_lv<29> ap_const_lv29_B1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_3_fu_251_p2();
    void thread_add_ln1192_fu_315_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_grp_fu_350_p1();
    void thread_grp_fu_350_p2();
    void thread_grp_fu_358_p0();
    void thread_grp_fu_358_p1();
    void thread_grp_fu_369_p1();
    void thread_grp_fu_369_p2();
    void thread_grp_fu_369_p3();
    void thread_lhs_V_1_fu_227_p3();
    void thread_lhs_V_2_fu_272_p1();
    void thread_lhs_V_3_fu_282_p3();
    void thread_mul_ln700_1_fu_327_p0();
    void thread_mul_ln700_1_fu_327_p1();
    void thread_mul_ln700_1_fu_327_p2();
    void thread_mul_ln700_fu_380_p1();
    void thread_p_Val2_1_fu_163_p4();
    void thread_p_Val2_3_fu_183_p4();
    void thread_p_Val2_s_fu_149_p4();
    void thread_r_V_1_fu_215_p3();
    void thread_r_V_fu_209_p2();
    void thread_ret_V_10_fu_333_p2();
    void thread_ret_V_11_fu_256_p2();
    void thread_ret_V_12_fu_276_p2();
    void thread_ret_V_9_fu_309_p2();
    void thread_rhs_V_1_fu_193_p1();
    void thread_rhs_V_fu_239_p3();
    void thread_sext_ln1118_2_fu_205_p1();
    void thread_sext_ln1192_4_fu_247_p1();
    void thread_sext_ln1192_fu_306_p1();
    void thread_shl_ln1118_7_fu_197_p3();
    void thread_x_V_ap_vld_in_sig();
    void thread_x_V_blk_n();
    void thread_x_V_in_sig();
    void thread_y_0_V();
    void thread_y_0_V_ap_vld();
    void thread_y_1_V();
    void thread_y_1_V_ap_vld();
    void thread_y_2_V();
    void thread_y_2_V_ap_vld();
    void thread_y_3_V();
    void thread_y_3_V_ap_vld();
    void thread_y_4_V();
    void thread_y_4_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
