// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myproject.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myproject::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myproject::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> myproject::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> myproject::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool myproject::ap_const_boolean_1 = true;
const bool myproject::ap_const_boolean_0 = false;
const sc_lv<160> myproject::ap_const_lv160_lc_1 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<10> myproject::ap_const_lv10_9 = "1001";
const sc_lv<10> myproject::ap_const_lv10_3EC = "1111101100";
const sc_lv<32> myproject::ap_const_lv32_14 = "10100";
const sc_lv<32> myproject::ap_const_lv32_1D = "11101";
const sc_lv<32> myproject::ap_const_lv32_8C = "10001100";
const sc_lv<32> myproject::ap_const_lv32_95 = "10010101";
const sc_lv<32> myproject::ap_const_lv32_28 = "101000";
const sc_lv<32> myproject::ap_const_lv32_31 = "110001";
const sc_lv<32> myproject::ap_const_lv32_96 = "10010110";
const sc_lv<32> myproject::ap_const_lv32_9F = "10011111";
const sc_lv<2> myproject::ap_const_lv2_0 = "00";
const sc_lv<13> myproject::ap_const_lv13_0 = "0000000000000";
const sc_lv<3> myproject::ap_const_lv3_0 = "000";
const sc_lv<8> myproject::ap_const_lv8_0 = "00000000";
const sc_lv<11> myproject::ap_const_lv11_0 = "00000000000";
const sc_lv<22> myproject::ap_const_lv22_3E6000 = "1111100110000000000000";
const sc_lv<32> myproject::ap_const_lv32_C = "1100";
const sc_lv<32> myproject::ap_const_lv32_15 = "10101";
const sc_lv<4> myproject::ap_const_lv4_0 = "0000";
const sc_lv<11> myproject::ap_const_lv11_7F1 = "11111110001";
const sc_lv<11> myproject::ap_const_lv11_3E = "111110";
const sc_lv<30> myproject::ap_const_lv30_F00000 = "111100000000000000000000";
const sc_lv<20> myproject::ap_const_lv20_600 = "11000000000";
const sc_lv<16> myproject::ap_const_lv16_FC31 = "1111110000110001";
const sc_lv<22> myproject::ap_const_lv22_3FFFB4 = "1111111111111110110100";
const sc_lv<22> myproject::ap_const_lv22_3F0000 = "1111110000000000000000";
const sc_lv<29> myproject::ap_const_lv29_B1 = "10110001";

myproject::myproject(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U1 = new myproject_ama_addmulsub_10s_5s_12ns_20_1_1<1,1,10,5,12,20>("myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U1");
    myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U1->din0(p_Val2_s_fu_149_p4);
    myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U1->din1(grp_fu_350_p1);
    myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U1->din2(grp_fu_350_p2);
    myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U1->dout(grp_fu_350_p3);
    myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2 = new myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1<1,1,10,5,13,21,22>("myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2");
    myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2->din0(grp_fu_358_p0);
    myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2->din1(grp_fu_358_p1);
    myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2->din2(r_V_1_fu_215_p3);
    myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2->din3(lhs_V_1_fu_227_p3);
    myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2->dout(grp_fu_358_p4);
    myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3 = new myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1<1,1,15,11,8,17,22>("myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3");
    myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3->din0(lhs_V_3_fu_282_p3);
    myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3->din1(grp_fu_369_p1);
    myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3->din2(grp_fu_369_p2);
    myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3->din3(grp_fu_369_p3);
    myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3->dout(grp_fu_369_p4);
    myproject_mul_mul_20s_9ns_29_1_1_U4 = new myproject_mul_mul_20s_9ns_29_1_1<1,1,20,9,29>("myproject_mul_mul_20s_9ns_29_1_1_U4");
    myproject_mul_mul_20s_9ns_29_1_1_U4->din0(ret_V_1_reg_386);
    myproject_mul_mul_20s_9ns_29_1_1_U4->din1(mul_ln700_fu_380_p1);
    myproject_mul_mul_20s_9ns_29_1_1_U4->dout(mul_ln700_fu_380_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1192_3_fu_251_p2);
    sensitive << ( grp_fu_358_p4 );
    sensitive << ( sext_ln1192_4_fu_247_p1 );

    SC_METHOD(thread_add_ln1192_fu_315_p2);
    sensitive << ( ret_V_9_fu_309_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp0_0to1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to1 );

    SC_METHOD(thread_grp_fu_350_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_350_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_358_p0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( rhs_V_1_fu_193_p1 );

    SC_METHOD(thread_grp_fu_358_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_369_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_369_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_369_p3);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_lhs_V_1_fu_227_p3);
    sensitive << ( r_V_fu_209_p2 );

    SC_METHOD(thread_lhs_V_2_fu_272_p1);
    sensitive << ( p_Val2_1_fu_163_p4 );

    SC_METHOD(thread_lhs_V_3_fu_282_p3);
    sensitive << ( ret_V_12_fu_276_p2 );

    SC_METHOD(thread_mul_ln700_1_fu_327_p0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( add_ln1192_reg_411 );

    SC_METHOD(thread_mul_ln700_1_fu_327_p1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln700_reg_406 );

    SC_METHOD(thread_mul_ln700_1_fu_327_p2);
    sensitive << ( mul_ln700_1_fu_327_p0 );
    sensitive << ( mul_ln700_1_fu_327_p1 );

    SC_METHOD(thread_mul_ln700_fu_380_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_p_Val2_1_fu_163_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_p_Val2_3_fu_183_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_p_Val2_s_fu_149_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_r_V_1_fu_215_p3);
    sensitive << ( p_Val2_3_fu_183_p4 );

    SC_METHOD(thread_r_V_fu_209_p2);
    sensitive << ( sext_ln1118_2_fu_205_p1 );

    SC_METHOD(thread_ret_V_10_fu_333_p2);
    sensitive << ( mul_ln700_1_fu_327_p2 );

    SC_METHOD(thread_ret_V_11_fu_256_p2);
    sensitive << ( add_ln1192_3_fu_251_p2 );

    SC_METHOD(thread_ret_V_12_fu_276_p2);
    sensitive << ( lhs_V_2_fu_272_p1 );
    sensitive << ( rhs_V_1_fu_193_p1 );

    SC_METHOD(thread_ret_V_9_fu_309_p2);
    sensitive << ( sext_ln1192_fu_306_p1 );

    SC_METHOD(thread_rhs_V_1_fu_193_p1);
    sensitive << ( p_Val2_3_fu_183_p4 );

    SC_METHOD(thread_rhs_V_fu_239_p3);
    sensitive << ( p_Val2_s_fu_149_p4 );

    SC_METHOD(thread_sext_ln1118_2_fu_205_p1);
    sensitive << ( shl_ln1118_7_fu_197_p3 );

    SC_METHOD(thread_sext_ln1192_4_fu_247_p1);
    sensitive << ( rhs_V_fu_239_p3 );

    SC_METHOD(thread_sext_ln1192_fu_306_p1);
    sensitive << ( p_Val2_2_reg_391 );

    SC_METHOD(thread_shl_ln1118_7_fu_197_p3);
    sensitive << ( p_Val2_1_fu_163_p4 );

    SC_METHOD(thread_x_V_ap_vld_in_sig);
    sensitive << ( x_V_ap_vld );
    sensitive << ( x_V_ap_vld_preg );

    SC_METHOD(thread_x_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( x_V_ap_vld );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_x_V_in_sig);
    sensitive << ( x_V_ap_vld );
    sensitive << ( x_V );
    sensitive << ( x_V_preg );

    SC_METHOD(thread_y_0_V);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ret_V_10_fu_333_p2 );

    SC_METHOD(thread_y_0_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_1_V);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_1_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_2_V);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( trunc_ln708_9_reg_396_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_2_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_3_V);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( trunc_ln708_s_reg_401_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_3_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_4_V);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_4_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    x_V_preg = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    x_V_ap_vld_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myproject_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_V_ap_vld, "(port)x_V_ap_vld");
    sc_trace(mVcdFile, x_V, "(port)x_V");
    sc_trace(mVcdFile, y_0_V, "(port)y_0_V");
    sc_trace(mVcdFile, y_0_V_ap_vld, "(port)y_0_V_ap_vld");
    sc_trace(mVcdFile, y_1_V, "(port)y_1_V");
    sc_trace(mVcdFile, y_1_V_ap_vld, "(port)y_1_V_ap_vld");
    sc_trace(mVcdFile, y_2_V, "(port)y_2_V");
    sc_trace(mVcdFile, y_2_V_ap_vld, "(port)y_2_V_ap_vld");
    sc_trace(mVcdFile, y_3_V, "(port)y_3_V");
    sc_trace(mVcdFile, y_3_V_ap_vld, "(port)y_3_V_ap_vld");
    sc_trace(mVcdFile, y_4_V, "(port)y_4_V");
    sc_trace(mVcdFile, y_4_V_ap_vld, "(port)y_4_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, x_V_ap_vld_in_sig, "x_V_ap_vld_in_sig");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, x_V_preg, "x_V_preg");
    sc_trace(mVcdFile, x_V_in_sig, "x_V_in_sig");
    sc_trace(mVcdFile, x_V_ap_vld_preg, "x_V_ap_vld_preg");
    sc_trace(mVcdFile, x_V_blk_n, "x_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, grp_fu_350_p3, "grp_fu_350_p3");
    sc_trace(mVcdFile, ret_V_1_reg_386, "ret_V_1_reg_386");
    sc_trace(mVcdFile, p_Val2_2_reg_391, "p_Val2_2_reg_391");
    sc_trace(mVcdFile, trunc_ln708_9_reg_396, "trunc_ln708_9_reg_396");
    sc_trace(mVcdFile, trunc_ln708_9_reg_396_pp0_iter1_reg, "trunc_ln708_9_reg_396_pp0_iter1_reg");
    sc_trace(mVcdFile, trunc_ln708_s_reg_401, "trunc_ln708_s_reg_401");
    sc_trace(mVcdFile, trunc_ln708_s_reg_401_pp0_iter1_reg, "trunc_ln708_s_reg_401_pp0_iter1_reg");
    sc_trace(mVcdFile, mul_ln700_fu_380_p2, "mul_ln700_fu_380_p2");
    sc_trace(mVcdFile, mul_ln700_reg_406, "mul_ln700_reg_406");
    sc_trace(mVcdFile, add_ln1192_fu_315_p2, "add_ln1192_fu_315_p2");
    sc_trace(mVcdFile, add_ln1192_reg_411, "add_ln1192_reg_411");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, p_Val2_s_fu_149_p4, "p_Val2_s_fu_149_p4");
    sc_trace(mVcdFile, p_Val2_3_fu_183_p4, "p_Val2_3_fu_183_p4");
    sc_trace(mVcdFile, p_Val2_1_fu_163_p4, "p_Val2_1_fu_163_p4");
    sc_trace(mVcdFile, shl_ln1118_7_fu_197_p3, "shl_ln1118_7_fu_197_p3");
    sc_trace(mVcdFile, sext_ln1118_2_fu_205_p1, "sext_ln1118_2_fu_205_p1");
    sc_trace(mVcdFile, r_V_1_fu_215_p3, "r_V_1_fu_215_p3");
    sc_trace(mVcdFile, r_V_fu_209_p2, "r_V_fu_209_p2");
    sc_trace(mVcdFile, lhs_V_1_fu_227_p3, "lhs_V_1_fu_227_p3");
    sc_trace(mVcdFile, rhs_V_fu_239_p3, "rhs_V_fu_239_p3");
    sc_trace(mVcdFile, grp_fu_358_p4, "grp_fu_358_p4");
    sc_trace(mVcdFile, sext_ln1192_4_fu_247_p1, "sext_ln1192_4_fu_247_p1");
    sc_trace(mVcdFile, add_ln1192_3_fu_251_p2, "add_ln1192_3_fu_251_p2");
    sc_trace(mVcdFile, ret_V_11_fu_256_p2, "ret_V_11_fu_256_p2");
    sc_trace(mVcdFile, lhs_V_2_fu_272_p1, "lhs_V_2_fu_272_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_193_p1, "rhs_V_1_fu_193_p1");
    sc_trace(mVcdFile, ret_V_12_fu_276_p2, "ret_V_12_fu_276_p2");
    sc_trace(mVcdFile, lhs_V_3_fu_282_p3, "lhs_V_3_fu_282_p3");
    sc_trace(mVcdFile, grp_fu_369_p4, "grp_fu_369_p4");
    sc_trace(mVcdFile, sext_ln1192_fu_306_p1, "sext_ln1192_fu_306_p1");
    sc_trace(mVcdFile, ret_V_9_fu_309_p2, "ret_V_9_fu_309_p2");
    sc_trace(mVcdFile, mul_ln700_1_fu_327_p0, "mul_ln700_1_fu_327_p0");
    sc_trace(mVcdFile, mul_ln700_1_fu_327_p1, "mul_ln700_1_fu_327_p1");
    sc_trace(mVcdFile, mul_ln700_1_fu_327_p2, "mul_ln700_1_fu_327_p2");
    sc_trace(mVcdFile, ret_V_10_fu_333_p2, "ret_V_10_fu_333_p2");
    sc_trace(mVcdFile, grp_fu_350_p1, "grp_fu_350_p1");
    sc_trace(mVcdFile, grp_fu_350_p2, "grp_fu_350_p2");
    sc_trace(mVcdFile, grp_fu_358_p0, "grp_fu_358_p0");
    sc_trace(mVcdFile, grp_fu_358_p1, "grp_fu_358_p1");
    sc_trace(mVcdFile, grp_fu_369_p1, "grp_fu_369_p1");
    sc_trace(mVcdFile, grp_fu_369_p2, "grp_fu_369_p2");
    sc_trace(mVcdFile, grp_fu_369_p3, "grp_fu_369_p3");
    sc_trace(mVcdFile, mul_ln700_fu_380_p1, "mul_ln700_fu_380_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to1, "ap_idle_pp0_0to1");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("myproject.hdltvin.dat");
    mHdltvoutHandle.open("myproject.hdltvout.dat");
}

myproject::~myproject() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete myproject_ama_addmulsub_10s_5s_12ns_20_1_1_U1;
    delete myproject_ama_addmulsub_10s_5s_13s_21s_22_1_1_U2;
    delete myproject_ama_addmuladd_15s_11s_8s_17s_22_1_1_U3;
    delete myproject_mul_mul_20s_9ns_29_1_1_U4;
}

void myproject::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_V_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            x_V_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())))) {
            x_V_ap_vld_preg = x_V_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_V_preg = ap_const_lv160_lc_1;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())))) {
            x_V_preg = x_V.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        add_ln1192_reg_411 = add_ln1192_fu_315_p2.read();
        mul_ln700_reg_406 = mul_ln700_fu_380_p2.read();
        p_Val2_2_reg_391 = x_V_in_sig.read().range(49, 40);
        trunc_ln708_9_reg_396 = ret_V_11_fu_256_p2.read().range(21, 12);
        trunc_ln708_9_reg_396_pp0_iter1_reg = trunc_ln708_9_reg_396.read();
        trunc_ln708_s_reg_401 = grp_fu_369_p4.read().range(21, 12);
        trunc_ln708_s_reg_401_pp0_iter1_reg = trunc_ln708_s_reg_401.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ret_V_1_reg_386 = grp_fu_350_p3.read();
    }
}

void myproject::thread_add_ln1192_3_fu_251_p2() {
    add_ln1192_3_fu_251_p2 = (!grp_fu_358_p4.read().is_01() || !sext_ln1192_4_fu_247_p1.read().is_01())? sc_lv<22>(): (sc_bigint<22>(grp_fu_358_p4.read()) + sc_bigint<22>(sext_ln1192_4_fu_247_p1.read()));
}

void myproject::thread_add_ln1192_fu_315_p2() {
    add_ln1192_fu_315_p2 = (!ret_V_9_fu_309_p2.read().is_01() || !ap_const_lv11_3E.is_01())? sc_lv<11>(): (sc_biguint<11>(ret_V_9_fu_309_p2.read()) + sc_biguint<11>(ap_const_lv11_3E));
}

void myproject::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void myproject::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read()));
}

void myproject::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myproject::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void myproject::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void myproject::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle_pp0_0to1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0_0to1 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to1 = ap_const_logic_0;
    }
}

void myproject::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myproject::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to1.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void myproject::thread_grp_fu_350_p1() {
    grp_fu_350_p1 =  (sc_lv<5>) (ap_const_lv11_7F1);
}

void myproject::thread_grp_fu_350_p2() {
    grp_fu_350_p2 =  (sc_lv<12>) (ap_const_lv20_600);
}

void myproject::thread_grp_fu_358_p0() {
    grp_fu_358_p0 =  (sc_lv<10>) (rhs_V_1_fu_193_p1.read());
}

void myproject::thread_grp_fu_358_p1() {
    grp_fu_358_p1 =  (sc_lv<5>) (ap_const_lv11_7F1);
}

void myproject::thread_grp_fu_369_p1() {
    grp_fu_369_p1 =  (sc_lv<11>) (ap_const_lv16_FC31);
}

void myproject::thread_grp_fu_369_p2() {
    grp_fu_369_p2 =  (sc_lv<8>) (ap_const_lv22_3FFFB4);
}

void myproject::thread_grp_fu_369_p3() {
    grp_fu_369_p3 =  (sc_lv<17>) (ap_const_lv22_3F0000);
}

void myproject::thread_lhs_V_1_fu_227_p3() {
    lhs_V_1_fu_227_p3 = esl_concat<13,8>(r_V_fu_209_p2.read(), ap_const_lv8_0);
}

void myproject::thread_lhs_V_2_fu_272_p1() {
    lhs_V_2_fu_272_p1 = esl_sext<11,10>(p_Val2_1_fu_163_p4.read());
}

void myproject::thread_lhs_V_3_fu_282_p3() {
    lhs_V_3_fu_282_p3 = esl_concat<11,4>(ret_V_12_fu_276_p2.read(), ap_const_lv4_0);
}

void myproject::thread_mul_ln700_1_fu_327_p0() {
    mul_ln700_1_fu_327_p0 = add_ln1192_reg_411.read();
}

void myproject::thread_mul_ln700_1_fu_327_p1() {
    mul_ln700_1_fu_327_p1 = mul_ln700_reg_406.read();
}

void myproject::thread_mul_ln700_1_fu_327_p2() {
    mul_ln700_1_fu_327_p2 = (!mul_ln700_1_fu_327_p0.read().is_01() || !mul_ln700_1_fu_327_p1.read().is_01())? sc_lv<30>(): sc_bigint<11>(mul_ln700_1_fu_327_p0.read()) * sc_bigint<29>(mul_ln700_1_fu_327_p1.read());
}

void myproject::thread_mul_ln700_fu_380_p1() {
    mul_ln700_fu_380_p1 =  (sc_lv<9>) (ap_const_lv29_B1);
}

void myproject::thread_p_Val2_1_fu_163_p4() {
    p_Val2_1_fu_163_p4 = x_V_in_sig.read().range(149, 140);
}

void myproject::thread_p_Val2_3_fu_183_p4() {
    p_Val2_3_fu_183_p4 = x_V_in_sig.read().range(159, 150);
}

void myproject::thread_p_Val2_s_fu_149_p4() {
    p_Val2_s_fu_149_p4 = x_V_in_sig.read().range(29, 20);
}

void myproject::thread_r_V_1_fu_215_p3() {
    r_V_1_fu_215_p3 = esl_concat<10,3>(p_Val2_3_fu_183_p4.read(), ap_const_lv3_0);
}

void myproject::thread_r_V_fu_209_p2() {
    r_V_fu_209_p2 = (!ap_const_lv13_0.is_01() || !sext_ln1118_2_fu_205_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_0) - sc_bigint<13>(sext_ln1118_2_fu_205_p1.read()));
}

void myproject::thread_ret_V_10_fu_333_p2() {
    ret_V_10_fu_333_p2 = (!mul_ln700_1_fu_327_p2.read().is_01() || !ap_const_lv30_F00000.is_01())? sc_lv<30>(): (sc_biguint<30>(mul_ln700_1_fu_327_p2.read()) + sc_biguint<30>(ap_const_lv30_F00000));
}

void myproject::thread_ret_V_11_fu_256_p2() {
    ret_V_11_fu_256_p2 = (!add_ln1192_3_fu_251_p2.read().is_01() || !ap_const_lv22_3E6000.is_01())? sc_lv<22>(): (sc_biguint<22>(add_ln1192_3_fu_251_p2.read()) + sc_bigint<22>(ap_const_lv22_3E6000));
}

void myproject::thread_ret_V_12_fu_276_p2() {
    ret_V_12_fu_276_p2 = (!lhs_V_2_fu_272_p1.read().is_01() || !rhs_V_1_fu_193_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(lhs_V_2_fu_272_p1.read()) + sc_bigint<11>(rhs_V_1_fu_193_p1.read()));
}

void myproject::thread_ret_V_9_fu_309_p2() {
    ret_V_9_fu_309_p2 = (!ap_const_lv11_7F1.is_01() || !sext_ln1192_fu_306_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_7F1) - sc_bigint<11>(sext_ln1192_fu_306_p1.read()));
}

void myproject::thread_rhs_V_1_fu_193_p1() {
    rhs_V_1_fu_193_p1 = esl_sext<11,10>(p_Val2_3_fu_183_p4.read());
}

void myproject::thread_rhs_V_fu_239_p3() {
    rhs_V_fu_239_p3 = esl_concat<10,11>(p_Val2_s_fu_149_p4.read(), ap_const_lv11_0);
}

void myproject::thread_sext_ln1118_2_fu_205_p1() {
    sext_ln1118_2_fu_205_p1 = esl_sext<13,12>(shl_ln1118_7_fu_197_p3.read());
}

void myproject::thread_sext_ln1192_4_fu_247_p1() {
    sext_ln1192_4_fu_247_p1 = esl_sext<22,21>(rhs_V_fu_239_p3.read());
}

void myproject::thread_sext_ln1192_fu_306_p1() {
    sext_ln1192_fu_306_p1 = esl_sext<11,10>(p_Val2_2_reg_391.read());
}

void myproject::thread_shl_ln1118_7_fu_197_p3() {
    shl_ln1118_7_fu_197_p3 = esl_concat<10,2>(p_Val2_1_fu_163_p4.read(), ap_const_lv2_0);
}

void myproject::thread_x_V_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read())) {
        x_V_ap_vld_in_sig = x_V_ap_vld.read();
    } else {
        x_V_ap_vld_in_sig = x_V_ap_vld_preg.read();
    }
}

void myproject::thread_x_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        x_V_blk_n = x_V_ap_vld.read();
    } else {
        x_V_blk_n = ap_const_logic_1;
    }
}

void myproject::thread_x_V_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read())) {
        x_V_in_sig = x_V.read();
    } else {
        x_V_in_sig = x_V_preg.read();
    }
}

void myproject::thread_y_0_V() {
    y_0_V = ret_V_10_fu_333_p2.read().range(29, 20);
}

void myproject::thread_y_0_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        y_0_V_ap_vld = ap_const_logic_1;
    } else {
        y_0_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_1_V() {
    y_1_V = ap_const_lv10_9;
}

void myproject::thread_y_1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        y_1_V_ap_vld = ap_const_logic_1;
    } else {
        y_1_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_2_V() {
    y_2_V = trunc_ln708_9_reg_396_pp0_iter1_reg.read();
}

void myproject::thread_y_2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        y_2_V_ap_vld = ap_const_logic_1;
    } else {
        y_2_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_3_V() {
    y_3_V = trunc_ln708_s_reg_401_pp0_iter1_reg.read();
}

void myproject::thread_y_3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        y_3_V_ap_vld = ap_const_logic_1;
    } else {
        y_3_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_4_V() {
    y_4_V = ap_const_lv10_3EC;
}

void myproject::thread_y_4_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        y_4_V_ap_vld = ap_const_logic_1;
    } else {
        y_4_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void myproject::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V_ap_vld\" :  \"" << x_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V\" :  \"" << x_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_0_V\" :  \"" << y_0_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_0_V_ap_vld\" :  \"" << y_0_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_1_V\" :  \"" << y_1_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_1_V_ap_vld\" :  \"" << y_1_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_2_V\" :  \"" << y_2_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_2_V_ap_vld\" :  \"" << y_2_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_3_V\" :  \"" << y_3_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_3_V_ap_vld\" :  \"" << y_3_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_4_V\" :  \"" << y_4_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_4_V_ap_vld\" :  \"" << y_4_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

