// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sin_lut_ap_fixed_12_6_5_3_0_s_HH_
#define _sin_lut_ap_fixed_12_6_5_3_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_dcmp_64ns_64ns_1_2_1.h"
#include "myproject_mul_mul_15ns_12s_27_1_1.h"
#include "sin_lut_ap_fixed_12_6_5_3_0_s_sincos1_1.h"
#include "sin_lut_ap_fixed_12_6_5_3_0_s_sincos1_0.h"

namespace ap_rtl {

struct sin_lut_ap_fixed_12_6_5_3_0_s : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<12> > input_V;
    sc_out< sc_lv<8> > ap_return;
    sc_signal< sc_lv<64> > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const2;
    sc_signal< sc_lv<64> > ap_var_for_const3;
    sc_signal< sc_lv<64> > ap_var_for_const4;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    sin_lut_ap_fixed_12_6_5_3_0_s(sc_module_name name);
    SC_HAS_PROCESS(sin_lut_ap_fixed_12_6_5_3_0_s);

    ~sin_lut_ap_fixed_12_6_5_3_0_s();

    sc_trace_file* mVcdFile;

    sin_lut_ap_fixed_12_6_5_3_0_s_sincos1_1* sincos1_1_U;
    sin_lut_ap_fixed_12_6_5_3_0_s_sincos1_0* sincos1_0_U;
    myproject_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* myproject_dcmp_64ns_64ns_1_2_1_U1;
    myproject_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* myproject_dcmp_64ns_64ns_1_2_1_U2;
    myproject_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* myproject_dcmp_64ns_64ns_1_2_1_U3;
    myproject_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* myproject_dcmp_64ns_64ns_1_2_1_U4;
    myproject_mul_mul_15ns_12s_27_1_1<1,1,15,12,27>* myproject_mul_mul_15ns_12s_27_1_1_U5;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > sincos1_1_address0;
    sc_signal< sc_logic > sincos1_1_ce0;
    sc_signal< sc_lv<6> > sincos1_1_q0;
    sc_signal< sc_lv<9> > sincos1_0_address0;
    sc_signal< sc_logic > sincos1_0_ce0;
    sc_signal< sc_lv<7> > sincos1_0_q0;
    sc_signal< sc_lv<6> > p_Val2_16_reg_734;
    sc_signal< sc_lv<6> > p_Val2_16_reg_734_pp0_iter1_reg;
    sc_signal< sc_lv<3> > luTdex1_V_reg_743;
    sc_signal< sc_lv<3> > luTdex1_V_reg_743_pp0_iter1_reg;
    sc_signal< sc_lv<3> > octant_V_reg_748;
    sc_signal< sc_lv<3> > octant_V_reg_748_pp0_iter1_reg;
    sc_signal< sc_lv<3> > octant_V_reg_748_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_5_reg_759;
    sc_signal< sc_lv<1> > tmp_5_reg_759_pp0_iter1_reg;
    sc_signal< sc_lv<6> > p_Result_s_fu_210_p4;
    sc_signal< sc_lv<6> > p_Result_s_reg_764;
    sc_signal< sc_lv<11> > trunc_ln893_fu_234_p1;
    sc_signal< sc_lv<11> > trunc_ln893_reg_769;
    sc_signal< sc_lv<32> > sub_ln894_fu_238_p2;
    sc_signal< sc_lv<32> > sub_ln894_reg_774;
    sc_signal< sc_lv<32> > or_ln_fu_346_p3;
    sc_signal< sc_lv<32> > or_ln_reg_780;
    sc_signal< sc_lv<1> > icmp_ln908_fu_354_p2;
    sc_signal< sc_lv<1> > icmp_ln908_reg_785;
    sc_signal< sc_lv<64> > bitcast_ln729_fu_499_p1;
    sc_signal< sc_lv<1> > or_ln924_fu_529_p2;
    sc_signal< sc_lv<1> > or_ln924_reg_808;
    sc_signal< sc_lv<1> > icmp_ln885_fu_535_p2;
    sc_signal< sc_lv<1> > icmp_ln885_reg_814;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln544_fu_380_p1;
    sc_signal< sc_lv<27> > r_V_fu_723_p2;
    sc_signal< sc_lv<32> > p_Result_13_fu_219_p3;
    sc_signal< sc_lv<32> > l_fu_226_p3;
    sc_signal< sc_lv<32> > lsb_index_fu_248_p2;
    sc_signal< sc_lv<31> > tmp_7_fu_254_p4;
    sc_signal< sc_lv<3> > trunc_ln897_fu_270_p1;
    sc_signal< sc_lv<3> > sub_ln897_fu_274_p2;
    sc_signal< sc_lv<6> > zext_ln897_fu_280_p1;
    sc_signal< sc_lv<6> > lshr_ln897_fu_284_p2;
    sc_signal< sc_lv<6> > p_Result_4_fu_290_p2;
    sc_signal< sc_lv<1> > icmp_ln897_fu_264_p2;
    sc_signal< sc_lv<1> > icmp_ln897_1_fu_295_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_307_p3;
    sc_signal< sc_lv<6> > trunc_ln894_fu_244_p1;
    sc_signal< sc_lv<6> > add_ln899_fu_321_p2;
    sc_signal< sc_lv<1> > p_Result_3_fu_327_p3;
    sc_signal< sc_lv<1> > xor_ln899_fu_315_p2;
    sc_signal< sc_lv<1> > and_ln899_fu_334_p2;
    sc_signal< sc_lv<1> > a_fu_301_p2;
    sc_signal< sc_lv<1> > or_ln899_fu_340_p2;
    sc_signal< sc_lv<9> > p_Result_12_fu_360_p3;
    sc_signal< sc_lv<9> > sub_ln214_fu_367_p2;
    sc_signal< sc_lv<9> > luTdex_V_1_fu_373_p3;
    sc_signal< sc_lv<32> > zext_ln907_1_fu_389_p1;
    sc_signal< sc_lv<32> > add_ln908_fu_392_p2;
    sc_signal< sc_lv<32> > lshr_ln908_fu_397_p2;
    sc_signal< sc_lv<32> > sub_ln908_fu_407_p2;
    sc_signal< sc_lv<64> > m_fu_386_p1;
    sc_signal< sc_lv<64> > zext_ln908_1_fu_412_p1;
    sc_signal< sc_lv<64> > zext_ln908_fu_403_p1;
    sc_signal< sc_lv<64> > shl_ln908_fu_416_p2;
    sc_signal< sc_lv<64> > zext_ln911_fu_429_p1;
    sc_signal< sc_lv<64> > m_1_fu_422_p3;
    sc_signal< sc_lv<64> > m_2_fu_432_p2;
    sc_signal< sc_lv<63> > m_s_fu_438_p4;
    sc_signal< sc_lv<11> > sub_ln915_fu_460_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_452_p3;
    sc_signal< sc_lv<11> > add_ln915_fu_465_p2;
    sc_signal< sc_lv<11> > select_ln915_fu_471_p3;
    sc_signal< sc_lv<64> > m_11_fu_448_p1;
    sc_signal< sc_lv<12> > tmp_1_fu_479_p3;
    sc_signal< sc_lv<64> > p_Result_14_fu_487_p5;
    sc_signal< sc_lv<52> > trunc_ln3_fu_507_p4;
    sc_signal< sc_lv<1> > icmp_ln924_1_fu_523_p2;
    sc_signal< sc_lv<1> > icmp_ln924_fu_517_p2;
    sc_signal< sc_lv<3> > add_ln142_fu_540_p2;
    sc_signal< sc_lv<2> > tmp_6_fu_545_p4;
    sc_signal< sc_lv<1> > icmp_ln143_fu_565_p2;
    sc_signal< sc_lv<1> > icmp_ln143_1_fu_570_p2;
    sc_signal< sc_lv<1> > or_ln143_fu_575_p2;
    sc_signal< sc_lv<7> > zext_ln1265_fu_561_p1;
    sc_signal< sc_lv<7> > select_ln143_fu_581_p3;
    sc_signal< sc_lv<7> > sub_ln703_fu_589_p2;
    sc_signal< sc_lv<1> > icmp_ln141_fu_599_p2;
    sc_signal< sc_lv<1> > icmp_ln141_1_fu_604_p2;
    sc_signal< sc_lv<1> > icmp_ln141_3_fu_620_p2;
    sc_signal< sc_lv<1> > icmp_ln142_fu_555_p2;
    sc_signal< sc_lv<1> > and_ln142_fu_625_p2;
    sc_signal< sc_lv<1> > icmp_ln141_2_fu_615_p2;
    sc_signal< sc_lv<1> > grp_fu_152_p2;
    sc_signal< sc_lv<1> > grp_fu_157_p2;
    sc_signal< sc_lv<1> > or_ln151_1_fu_637_p2;
    sc_signal< sc_lv<1> > and_ln151_1_fu_643_p2;
    sc_signal< sc_lv<1> > grp_fu_162_p2;
    sc_signal< sc_lv<1> > grp_fu_167_p2;
    sc_signal< sc_lv<1> > or_ln152_fu_653_p2;
    sc_signal< sc_lv<1> > and_ln152_1_fu_659_p2;
    sc_signal< sc_lv<1> > and_ln151_fu_648_p2;
    sc_signal< sc_lv<1> > and_ln152_fu_664_p2;
    sc_signal< sc_lv<1> > and_ln142_1_fu_631_p2;
    sc_signal< sc_lv<7> > select_ln151_1_fu_683_p3;
    sc_signal< sc_lv<1> > or_ln141_fu_609_p2;
    sc_signal< sc_lv<1> > or_ln151_fu_677_p2;
    sc_signal< sc_lv<8> > select_ln151_fu_669_p3;
    sc_signal< sc_lv<8> > zext_ln151_fu_691_p1;
    sc_signal< sc_lv<1> > or_ln151_2_fu_695_p2;
    sc_signal< sc_lv<1> > or_ln151_3_fu_709_p2;
    sc_signal< sc_lv<8> > select_ln151_2_fu_701_p3;
    sc_signal< sc_lv<8> > sext_ln703_fu_595_p1;
    sc_signal< sc_lv<15> > r_V_fu_723_p0;
    sc_signal< sc_logic > grp_fu_152_ce;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > grp_fu_157_ce;
    sc_signal< sc_logic > grp_fu_162_ce;
    sc_signal< sc_logic > grp_fu_167_ce;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<64> ap_const_lv64_3FC0000000000000;
    static const sc_lv<64> ap_const_lv64_3FD8000000000000;
    static const sc_lv<64> ap_const_lv64_3FE4000000000000;
    static const sc_lv<64> ap_const_lv64_3FEC000000000000;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<26> ap_const_lv26_3FFFFFF;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_FFFFFFCB;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<6> ap_const_lv6_B;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFCA;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<11> ap_const_lv11_3FE;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_2D;
    static const sc_lv<8> ap_const_lv8_D2;
    static const sc_lv<27> ap_const_lv27_28BE;
    static const sc_lv<5> ap_const_lv5_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_a_fu_301_p2();
    void thread_add_ln142_fu_540_p2();
    void thread_add_ln899_fu_321_p2();
    void thread_add_ln908_fu_392_p2();
    void thread_add_ln915_fu_465_p2();
    void thread_and_ln142_1_fu_631_p2();
    void thread_and_ln142_fu_625_p2();
    void thread_and_ln151_1_fu_643_p2();
    void thread_and_ln151_fu_648_p2();
    void thread_and_ln152_1_fu_659_p2();
    void thread_and_ln152_fu_664_p2();
    void thread_and_ln899_fu_334_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_bitcast_ln729_fu_499_p1();
    void thread_grp_fu_152_ce();
    void thread_grp_fu_157_ce();
    void thread_grp_fu_162_ce();
    void thread_grp_fu_167_ce();
    void thread_icmp_ln141_1_fu_604_p2();
    void thread_icmp_ln141_2_fu_615_p2();
    void thread_icmp_ln141_3_fu_620_p2();
    void thread_icmp_ln141_fu_599_p2();
    void thread_icmp_ln142_fu_555_p2();
    void thread_icmp_ln143_1_fu_570_p2();
    void thread_icmp_ln143_fu_565_p2();
    void thread_icmp_ln885_fu_535_p2();
    void thread_icmp_ln897_1_fu_295_p2();
    void thread_icmp_ln897_fu_264_p2();
    void thread_icmp_ln908_fu_354_p2();
    void thread_icmp_ln924_1_fu_523_p2();
    void thread_icmp_ln924_fu_517_p2();
    void thread_l_fu_226_p3();
    void thread_lsb_index_fu_248_p2();
    void thread_lshr_ln897_fu_284_p2();
    void thread_lshr_ln908_fu_397_p2();
    void thread_luTdex_V_1_fu_373_p3();
    void thread_m_11_fu_448_p1();
    void thread_m_1_fu_422_p3();
    void thread_m_2_fu_432_p2();
    void thread_m_fu_386_p1();
    void thread_m_s_fu_438_p4();
    void thread_or_ln141_fu_609_p2();
    void thread_or_ln143_fu_575_p2();
    void thread_or_ln151_1_fu_637_p2();
    void thread_or_ln151_2_fu_695_p2();
    void thread_or_ln151_3_fu_709_p2();
    void thread_or_ln151_fu_677_p2();
    void thread_or_ln152_fu_653_p2();
    void thread_or_ln899_fu_340_p2();
    void thread_or_ln924_fu_529_p2();
    void thread_or_ln_fu_346_p3();
    void thread_p_Result_12_fu_360_p3();
    void thread_p_Result_13_fu_219_p3();
    void thread_p_Result_14_fu_487_p5();
    void thread_p_Result_3_fu_327_p3();
    void thread_p_Result_4_fu_290_p2();
    void thread_p_Result_s_fu_210_p4();
    void thread_r_V_fu_723_p0();
    void thread_select_ln143_fu_581_p3();
    void thread_select_ln151_1_fu_683_p3();
    void thread_select_ln151_2_fu_701_p3();
    void thread_select_ln151_fu_669_p3();
    void thread_select_ln915_fu_471_p3();
    void thread_sext_ln703_fu_595_p1();
    void thread_shl_ln908_fu_416_p2();
    void thread_sincos1_0_address0();
    void thread_sincos1_0_ce0();
    void thread_sincos1_1_address0();
    void thread_sincos1_1_ce0();
    void thread_sub_ln214_fu_367_p2();
    void thread_sub_ln703_fu_589_p2();
    void thread_sub_ln894_fu_238_p2();
    void thread_sub_ln897_fu_274_p2();
    void thread_sub_ln908_fu_407_p2();
    void thread_sub_ln915_fu_460_p2();
    void thread_tmp_1_fu_479_p3();
    void thread_tmp_6_fu_545_p4();
    void thread_tmp_7_fu_254_p4();
    void thread_tmp_8_fu_307_p3();
    void thread_tmp_9_fu_452_p3();
    void thread_trunc_ln3_fu_507_p4();
    void thread_trunc_ln893_fu_234_p1();
    void thread_trunc_ln894_fu_244_p1();
    void thread_trunc_ln897_fu_270_p1();
    void thread_xor_ln899_fu_315_p2();
    void thread_zext_ln1265_fu_561_p1();
    void thread_zext_ln151_fu_691_p1();
    void thread_zext_ln544_fu_380_p1();
    void thread_zext_ln897_fu_280_p1();
    void thread_zext_ln907_1_fu_389_p1();
    void thread_zext_ln908_1_fu_412_p1();
    void thread_zext_ln908_fu_403_p1();
    void thread_zext_ln911_fu_429_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
