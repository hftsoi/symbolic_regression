-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (191 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.345000,HLS_SYN_LAT=8,HLS_SYN_TPT=1,HLS_SYN_MEM=34,HLS_SYN_DSP=52,HLS_SYN_FF=13442,HLS_SYN_LUT=24318,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv192_lc_1 : STD_LOGIC_VECTOR (191 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_B3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_B4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110100";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv18_3FC80 : STD_LOGIC_VECTOR (17 downto 0) := "111111110010000000";
    constant ap_const_lv18_3E4C0 : STD_LOGIC_VECTOR (17 downto 0) := "111110010011000000";
    constant ap_const_lv18_3E700 : STD_LOGIC_VECTOR (17 downto 0) := "111110011100000000";
    constant ap_const_lv18_3EE40 : STD_LOGIC_VECTOR (17 downto 0) := "111110111001000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv19_1000 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv36_9C : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000010011100";
    constant ap_const_lv12_FD3 : STD_LOGIC_VECTOR (11 downto 0) := "111111010011";
    constant ap_const_lv36_125 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000100100101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv18_C40 : STD_LOGIC_VECTOR (17 downto 0) := "000000110001000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_5E : STD_LOGIC_VECTOR (11 downto 0) := "000001011110";
    constant ap_const_lv27_1B000 : STD_LOGIC_VECTOR (26 downto 0) := "000000000011011000000000000";
    constant ap_const_lv9_1C4 : STD_LOGIC_VECTOR (8 downto 0) := "111000100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv13_FA : STD_LOGIC_VECTOR (12 downto 0) := "0000011111010";
    constant ap_const_lv14_3E80 : STD_LOGIC_VECTOR (13 downto 0) := "11111010000000";
    constant ap_const_lv30_3F580000 : STD_LOGIC_VECTOR (29 downto 0) := "111111010110000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv20_FC480 : STD_LOGIC_VECTOR (19 downto 0) := "11111100010010000000";
    constant ap_const_lv36_FC9000000 : STD_LOGIC_VECTOR (35 downto 0) := "111111001001000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_E : STD_LOGIC_VECTOR (9 downto 0) := "0000001110";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv18_3FFD9 : STD_LOGIC_VECTOR (17 downto 0) := "111111111111011001";
    constant ap_const_lv18_D2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000011010010";
    constant ap_const_lv18_3B : STD_LOGIC_VECTOR (17 downto 0) := "000000000000111011";
    constant ap_const_lv18_1000 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_const_lv24_D2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000011010010";
    constant ap_const_lv18_1A4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000110100100";
    constant ap_const_lv18_3F7C0 : STD_LOGIC_VECTOR (17 downto 0) := "111111011111000000";
    constant ap_const_lv18_31 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000110001";
    constant ap_const_lv18_3FFCF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111001111";
    constant ap_const_lv13_1FC5 : STD_LOGIC_VECTOR (12 downto 0) := "1111111000101";
    constant ap_const_lv16_FDC0 : STD_LOGIC_VECTOR (15 downto 0) := "1111110111000000";
    constant ap_const_lv9_1A8 : STD_LOGIC_VECTOR (8 downto 0) := "110101000";
    constant ap_const_lv14_13 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010011";
    constant ap_const_lv18_23 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100011";
    constant ap_const_lv13_B : STD_LOGIC_VECTOR (12 downto 0) := "0000000001011";
    constant ap_const_lv13_1F80 : STD_LOGIC_VECTOR (12 downto 0) := "1111110000000";
    constant ap_const_lv30_3F0C0000 : STD_LOGIC_VECTOR (29 downto 0) := "111111000011000000000000000000";
    constant ap_const_lv30_3F240000 : STD_LOGIC_VECTOR (29 downto 0) := "111111001001000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (191 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (191 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_s_fu_422_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1613 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1613_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1613_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1613_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1613_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_11_fu_432_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_11_reg_1620 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_11_reg_1620_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_fu_442_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_reg_1629 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_fu_446_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_1636 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_1636_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_1636_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_1636_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_1636_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln_reg_1647 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_reg_1652 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_reg_1652_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_reg_1652_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_reg_1652_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_reg_1652_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_2_reg_1652_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_3_reg_1658 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_3_reg_1658_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_3_reg_1658_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_3_reg_1658_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_3_reg_1658_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_1_fu_493_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_1_reg_1672 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_1_reg_1672_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_1_reg_1672_pp0_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_1_reg_1672_pp0_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_1_reg_1672_pp0_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_6_fu_1421_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_6_reg_1678 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_17_fu_1427_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_17_reg_1684 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln700_3_fu_1433_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln700_3_reg_1689 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1439_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_25_reg_1694 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_4_fu_1447_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_4_reg_1699 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_fu_1453_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1118_reg_1704 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln708_s_reg_1709 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_5_fu_1473_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1118_5_reg_1714 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln708_14_reg_1719 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_1_reg_1724 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_8_reg_1729 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_13_reg_1734 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_2_fu_1494_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_2_reg_1739 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_reg_1744 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_5_reg_1744_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_reg_1749 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_reg_1749_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_reg_1749_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_reg_1749_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_reg_1754 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_2_reg_1759 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_reg_1764 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_28_reg_1769 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_27_fu_882_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_27_reg_1774 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_1_fu_917_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_1_reg_1779 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1515_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_3_reg_1784 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1523_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_6_reg_1789 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1531_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_36_reg_1794 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_6_reg_1799 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_6_reg_1799_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1192_18_fu_1097_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln1192_18_reg_1805 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_9_reg_1810 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_1_reg_1815 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_42_fu_1109_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_42_reg_1820 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_8_reg_1825 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_reg_1830 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln700_fu_1556_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_ln700_reg_1835 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln1192_fu_1134_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_reg_1840 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1192_3_fu_1562_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln1192_3_reg_1845 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln708_9_reg_1850 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_9_reg_1850_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1568_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_18_reg_1855 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_22_fu_1251_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_22_reg_1860 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_reg_1865 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_47_fu_1264_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_47_reg_1870 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_1_fu_1273_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_ln700_1_reg_1875 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln708_6_reg_1880 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_10_reg_1885 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1596_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln1192_9_reg_1890 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_reg_1895 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_input_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call89 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call89 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call89 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call89 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call89 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call89 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call89 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call89 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call89 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp27 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_input_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call224 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call224 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call224 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call224 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call224 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call224 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call224 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call224 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call224 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp35 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call29 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call29 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call29 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call29 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call29 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call29 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call29 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call29 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call29 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp38 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call65 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call65 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call65 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call65 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call65 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call65 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call65 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call65 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call65 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp41 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_input_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call75 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call75 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call75 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call75 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call75 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call75 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call75 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call75 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call75 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp48 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_input_V : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call117 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call117 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call117 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call117 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call117 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call117 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call117 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call117 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call117 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp52 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call99 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call99 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call99 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call99 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call99 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call99 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call99 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call99 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call99 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp91 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_input_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call176 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call176 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call176 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call176 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call176 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call176 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call176 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call176 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call176 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp96 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call187 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call187 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call187 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call187 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call187 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call187 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call187 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call187 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call187 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp97 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_input_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call202 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call202 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call202 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call202 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call202 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call202 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call202 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call202 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call202 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp99 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call241 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call241 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call241 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call241 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call241 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call241 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call241 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call241 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call241 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp103 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call45 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call45 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call45 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call45 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call45 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call45 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call45 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call45 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call45 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp105 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call163 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call163 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call163 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call163 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call163 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call163 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call163 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call163 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call163 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp113 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_input_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call218 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call218 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call218 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call218 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call218 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call218 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call218 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call218 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call218 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp122 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call237 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call237 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call237 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call237 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call237 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call237 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call237 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call237 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call237 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp124 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_input_V : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call252 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call252 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call252 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call252 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call252 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call252 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call252 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call252 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call252 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp150 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call59 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call59 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call59 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call59 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call59 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call59 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call59 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call59 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call59 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp165 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_1412_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_7_fu_497_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_s_fu_507_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_7_fu_515_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_1_fu_456_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_30_fu_540_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_28_fu_546_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_3_fu_566_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_8_fu_573_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1192_8_fu_573_p2 : signal is "no";
    signal rhs_V_1_fu_578_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1192_fu_585_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_35_fu_591_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_38_fu_608_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of ret_V_38_fu_608_p2 : signal is "no";
    signal shl_ln1118_7_fu_624_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_8_fu_635_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_15_fu_631_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_16_fu_642_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln1118_9_fu_652_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_s_fu_663_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_17_fu_659_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_18_fu_670_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_29_fu_646_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_30_fu_674_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_5_fu_680_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_6_fu_684_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_39_fu_688_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1192_15_fu_694_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_1_fu_1467_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1459_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_V_5_fu_711_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_41_fu_718_p2 : STD_LOGIC_VECTOR (23 downto 0);
    attribute use_dsp48 of ret_V_41_fu_718_p2 : signal is "no";
    signal grp_fu_1479_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1486_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_31_fu_764_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_37_fu_790_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal shl_ln1118_3_fu_808_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_23_fu_815_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_2_fu_805_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_34_fu_819_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln708_11_fu_825_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1499_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_33_fu_843_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of ret_V_33_fu_843_p2 : signal is "no";
    signal tmp_s_fu_858_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_870_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_8_fu_866_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_9_fu_878_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1507_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln1193_fu_900_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_fu_897_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_shl_fu_903_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln1193_fu_911_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln703_1_fu_932_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_10_fu_935_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_24_fu_945_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_967_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_5_fu_974_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1118_fu_978_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln727_fu_923_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_1_fu_990_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_2_fu_1001_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_7_fu_1008_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_4_fu_956_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_26_fu_1012_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_10_fu_1018_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_12_fu_1021_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_25_fu_984_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_4_fu_1031_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln728_fu_1550_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1539_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal rhs_V_2_fu_1043_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_fu_1055_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_1055_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_4_fu_1067_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_1067_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_12_fu_1063_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_13_fu_1075_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_28_fu_1079_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_1085_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_17_fu_1050_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 of add_ln1192_17_fu_1050_p2 : signal is "no";
    signal rhs_V_3_fu_1093_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_5_fu_1103_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_6_fu_1106_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_2_fu_1124_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1192_1_fu_1121_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_32_fu_1128_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_12_fu_1140_p2 : STD_LOGIC_VECTOR (13 downto 0);
    attribute use_dsp48 of ret_V_12_fu_1140_p2 : signal is "no";
    signal tmp_5_fu_1155_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_fu_1167_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_20_fu_1163_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_21_fu_1175_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_32_fu_1179_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_10_fu_1185_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_4_fu_1193_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln1192_19_fu_1197_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_40_fu_1202_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_6_fu_1224_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_8_fu_1235_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1578_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_16_fu_1242_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_44_fu_1246_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 of ret_V_44_fu_1246_p2 : signal is "no";
    signal sext_ln703_9_fu_1257_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_10_fu_1261_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_1_fu_1273_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1192_4_fu_1284_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1192_4_fu_1284_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1192_4_fu_1284_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_37_fu_1290_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1587_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln1253_fu_1321_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_36_fu_1333_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1116_3_fu_1330_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_36_fu_1333_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_36_fu_1333_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_35_fu_1324_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_1343_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_11_fu_1355_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_28_fu_1358_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_1368_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal rhs_V_fu_1376_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal ret_V_34_fu_1380_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1604_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1412_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1192_6_fu_1421_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_6_fu_1421_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_17_fu_1427_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_16_fu_532_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_17_fu_1427_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln700_3_fu_1433_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_3_fu_1433_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_4_fu_536_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1439_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1439_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1439_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_4_fu_1447_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_3_fu_563_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_4_fu_1447_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_fu_1453_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_19_fu_700_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1118_fu_1453_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1459_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1459_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln728_1_fu_1467_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_1_fu_1467_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_5_fu_1473_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_25_fu_733_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1118_5_fu_1473_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1479_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1479_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1479_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1486_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_2_fu_1494_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1192_2_fu_1494_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1499_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1507_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1515_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1116_fu_926_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1515_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1515_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1523_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1531_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln728_fu_1550_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_fu_1550_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1568_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1568_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1578_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_11_fu_1152_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1578_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1587_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1604_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sin_lut_ap_fixed_12_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component myproject_mac_muladd_7s_12s_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_12s_12s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_12s_12s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_9ns_12s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_7ns_12s_14ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_19s_19s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_mac_muladd_9ns_24s_24ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_10ns_12s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_18s_18s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_mac_muladd_12s_12s_13s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_12s_24s_24ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_7ns_12s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_7s_12s_18s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_am_addmul_7s_12s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_8s_8s_11s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_am_addmul_8s_8s_9s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_6ns_8s_13s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_ama_addmulsub_17s_13s_16s_29s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_mul_16s_27s_42_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component myproject_mul_mul_18s_14s_34_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component myproject_ama_addmuladd_8s_8s_5ns_8s_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component myproject_mac_muladd_8s_8s_19s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_muladd_13s_20s_25s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_am_addmul_16s_15s_10s_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_mac_muladd_8s_27s_25s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        din2 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;



begin
    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_ce,
        input_V => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_input_V,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_ce,
        input_V => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_input_V,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_ce,
        input_V => trunc_ln_reg_1647,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_ce,
        input_V => p_Val2_s_reg_1613,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_ce,
        input_V => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_input_V,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_ce,
        input_V => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_input_V,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_ce,
        input_V => p_Val2_1_reg_1636_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_ce,
        input_V => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_input_V,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_ce,
        input_V => trunc_ln708_s_reg_1709,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_ce,
        input_V => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_input_V,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_ce,
        input_V => trunc_ln708_14_reg_1719,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_ce,
        input_V => trunc_ln708_1_reg_1724,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_ce,
        input_V => trunc_ln708_8_reg_1729,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_ce,
        input_V => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_input_V,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_ce,
        input_V => trunc_ln708_13_reg_1734,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_ce,
        input_V => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_input_V,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_return);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413 : component sin_lut_ap_fixed_12_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start,
        ap_done => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_ce,
        input_V => trunc_ln708_2_reg_1759,
        ap_return => grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_return);

    myproject_mac_muladd_7s_12s_18ns_18_1_1_U11 : component myproject_mac_muladd_7s_12s_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1412_p0,
        din1 => p_Val2_11_fu_432_p4,
        din2 => lhs_V_1_fu_456_p3,
        dout => grp_fu_1412_p3);

    myproject_mul_mul_12s_12s_18_1_1_U12 : component myproject_mul_mul_12s_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln1192_6_fu_1421_p0,
        din1 => mul_ln1192_6_fu_1421_p1,
        dout => mul_ln1192_6_fu_1421_p2);

    myproject_mul_mul_12s_12s_24_1_1_U13 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_17_fu_1427_p0,
        din1 => r_V_17_fu_1427_p1,
        dout => r_V_17_fu_1427_p2);

    myproject_mul_mul_9ns_12s_18_1_1_U14 : component myproject_mul_mul_9ns_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln700_3_fu_1433_p0,
        din1 => mul_ln700_3_fu_1433_p1,
        dout => mul_ln700_3_fu_1433_p2);

    myproject_mac_muladd_7ns_12s_14ns_18_1_1_U15 : component myproject_mac_muladd_7ns_12s_14ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        din2_WIDTH => 14,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1439_p0,
        din1 => grp_fu_1439_p1,
        din2 => grp_fu_1439_p2,
        dout => grp_fu_1439_p3);

    myproject_mul_mul_12s_12s_24_1_1_U16 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_4_fu_1447_p0,
        din1 => r_V_4_fu_1447_p1,
        dout => r_V_4_fu_1447_p2);

    myproject_mul_mul_19s_19s_36_1_1_U17 : component myproject_mul_mul_19s_19s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 19,
        dout_WIDTH => 36)
    port map (
        din0 => mul_ln1118_fu_1453_p0,
        din1 => mul_ln1118_fu_1453_p1,
        dout => mul_ln1118_fu_1453_p2);

    myproject_mac_muladd_9ns_24s_24ns_24_1_1_U18 : component myproject_mac_muladd_9ns_24s_24ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_1459_p0,
        din1 => r_V_17_reg_1684,
        din2 => grp_fu_1459_p2,
        dout => grp_fu_1459_p3);

    myproject_mul_mul_10ns_12s_18_1_1_U19 : component myproject_mul_mul_10ns_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln728_1_fu_1467_p0,
        din1 => mul_ln728_1_fu_1467_p1,
        dout => mul_ln728_1_fu_1467_p2);

    myproject_mul_mul_18s_18s_36_1_1_U20 : component myproject_mul_mul_18s_18s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        din0 => mul_ln1118_5_fu_1473_p0,
        din1 => mul_ln1118_5_fu_1473_p1,
        dout => mul_ln1118_5_fu_1473_p2);

    myproject_mac_muladd_12s_12s_13s_18_1_1_U21 : component myproject_mac_muladd_12s_12s_13s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 13,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1479_p0,
        din1 => grp_fu_1479_p1,
        din2 => grp_fu_1479_p2,
        dout => grp_fu_1479_p3);

    myproject_mac_muladd_12s_24s_24ns_24_1_1_U22 : component myproject_mac_muladd_12s_24s_24ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        din0 => p_Val2_s_reg_1613_pp0_iter1_reg,
        din1 => r_V_4_reg_1699,
        din2 => grp_fu_1486_p2,
        dout => grp_fu_1486_p3);

    myproject_mul_mul_7ns_12s_18_1_1_U23 : component myproject_mul_mul_7ns_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln1192_2_fu_1494_p0,
        din1 => mul_ln1192_2_fu_1494_p1,
        dout => mul_ln1192_2_fu_1494_p2);

    myproject_mac_muladd_7s_12s_18s_18_1_1_U24 : component myproject_mac_muladd_7s_12s_18s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1499_p0,
        din1 => p_Val2_3_reg_1658_pp0_iter3_reg,
        din2 => mul_ln1192_2_reg_1739,
        dout => grp_fu_1499_p3);

    myproject_am_addmul_7s_12s_26_1_1_U25 : component myproject_am_addmul_7s_12s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1507_p0,
        din1 => p_Val2_s_reg_1613_pp0_iter4_reg,
        dout => grp_fu_1507_p2);

    myproject_mac_muladd_8s_8s_11s_16_1_1_U26 : component myproject_mac_muladd_8s_8s_11s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1515_p0,
        din1 => grp_fu_1515_p1,
        din2 => grp_fu_1515_p2,
        dout => grp_fu_1515_p3);

    myproject_am_addmul_8s_8s_9s_18_1_1_U27 : component myproject_am_addmul_8s_8s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_1523_p0,
        din1 => p_Val2_6_reg_1764,
        din2 => ret_V_10_fu_935_p2,
        dout => grp_fu_1523_p3);

    myproject_mac_muladd_6ns_8s_13s_14_1_1_U28 : component myproject_mac_muladd_6ns_8s_13s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        din2_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1531_p0,
        din1 => p_5_reg_1744_pp0_iter4_reg,
        din2 => r_V_24_fu_945_p3,
        dout => grp_fu_1531_p3);

    myproject_ama_addmulsub_17s_13s_16s_29s_30_1_1_U29 : component myproject_ama_addmulsub_17s_13s_16s_29s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 17,
        din1_WIDTH => 13,
        din2_WIDTH => 16,
        din3_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => shl_ln1118_1_fu_990_p3,
        din1 => r_V_24_fu_945_p3,
        din2 => add_ln1192_12_fu_1021_p2,
        din3 => lhs_V_4_fu_1031_p3,
        dout => grp_fu_1539_p4);

    myproject_mul_mul_7ns_12s_18_1_1_U30 : component myproject_mul_mul_7ns_12s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln728_fu_1550_p0,
        din1 => mul_ln728_fu_1550_p1,
        dout => mul_ln728_fu_1550_p2);

    myproject_mul_mul_16s_27s_42_1_1_U31 : component myproject_mul_mul_16s_27s_42_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 27,
        dout_WIDTH => 42)
    port map (
        din0 => ret_V_3_reg_1784,
        din1 => ret_V_1_reg_1779,
        dout => mul_ln700_fu_1556_p2);

    myproject_mul_mul_18s_14s_34_1_1_U32 : component myproject_mul_mul_18s_14s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 14,
        dout_WIDTH => 34)
    port map (
        din0 => r_V_6_reg_1789,
        din1 => ret_V_12_fu_1140_p2,
        dout => mul_ln1192_3_fu_1562_p2);

    myproject_ama_addmuladd_8s_8s_5ns_8s_13_1_1_U33 : component myproject_ama_addmuladd_8s_8s_5ns_8s_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 5,
        din3_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => p_9_reg_1810,
        din1 => p_1_reg_1815,
        din2 => grp_fu_1568_p2,
        din3 => grp_fu_1568_p3,
        dout => grp_fu_1568_p4);

    myproject_mac_muladd_8s_8s_19s_20_1_1_U34 : component myproject_mac_muladd_8s_8s_19s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => grp_fu_1578_p0,
        din1 => grp_fu_1578_p1,
        din2 => lhs_V_6_fu_1224_p3,
        dout => grp_fu_1578_p3);

    myproject_mac_muladd_13s_20s_25s_30_1_1_U35 : component myproject_mac_muladd_13s_20s_25s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 20,
        din2_WIDTH => 25,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_18_reg_1855,
        din1 => ret_V_22_reg_1860,
        din2 => grp_fu_1587_p2,
        dout => grp_fu_1587_p3);

    myproject_am_addmul_16s_15s_10s_27_1_1_U36 : component myproject_am_addmul_16s_15s_10s_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        din2_WIDTH => 10,
        dout_WIDTH => 27)
    port map (
        din0 => r_V_36_fu_1333_p2,
        din1 => tmp_11_fu_1343_p3,
        din2 => ret_V_28_fu_1358_p2,
        dout => grp_fu_1596_p3);

    myproject_mac_muladd_8s_27s_25s_30_1_1_U37 : component myproject_mac_muladd_8s_27s_25s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 27,
        din2_WIDTH => 25,
        dout_WIDTH => 30)
    port map (
        din0 => p_0_reg_1895,
        din1 => mul_ln1192_9_reg_1890,
        din2 => grp_fu_1604_p2,
        dout => grp_fu_1604_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv192_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_18_reg_1805 <= add_ln1192_18_fu_1097_p2;
                add_ln1192_reg_1840 <= add_ln1192_fu_1134_p2;
                mul_ln1192_2_reg_1739 <= mul_ln1192_2_fu_1494_p2;
                mul_ln1192_3_reg_1845 <= mul_ln1192_3_fu_1562_p2;
                mul_ln700_1_reg_1875 <= mul_ln700_1_fu_1273_p2;
                mul_ln700_reg_1835 <= mul_ln700_fu_1556_p2;
                p_0_reg_1895 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_return;
                p_1_reg_1815 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_return;
                p_2_reg_1749 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_return;
                p_2_reg_1749_pp0_iter4_reg <= p_2_reg_1749;
                p_2_reg_1749_pp0_iter5_reg <= p_2_reg_1749_pp0_iter4_reg;
                p_2_reg_1749_pp0_iter6_reg <= p_2_reg_1749_pp0_iter5_reg;
                p_5_reg_1744 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_return;
                p_5_reg_1744_pp0_iter4_reg <= p_5_reg_1744;
                p_6_reg_1799 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_return;
                p_6_reg_1799_pp0_iter6_reg <= p_6_reg_1799;
                p_9_reg_1810 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_return;
                p_Val2_1_reg_1636_pp0_iter2_reg <= p_Val2_1_reg_1636_pp0_iter1_reg;
                p_Val2_1_reg_1636_pp0_iter3_reg <= p_Val2_1_reg_1636_pp0_iter2_reg;
                p_Val2_1_reg_1636_pp0_iter4_reg <= p_Val2_1_reg_1636_pp0_iter3_reg;
                p_Val2_2_reg_1652_pp0_iter2_reg <= p_Val2_2_reg_1652_pp0_iter1_reg;
                p_Val2_2_reg_1652_pp0_iter3_reg <= p_Val2_2_reg_1652_pp0_iter2_reg;
                p_Val2_2_reg_1652_pp0_iter4_reg <= p_Val2_2_reg_1652_pp0_iter3_reg;
                p_Val2_2_reg_1652_pp0_iter5_reg <= p_Val2_2_reg_1652_pp0_iter4_reg;
                p_Val2_3_reg_1658_pp0_iter2_reg <= p_Val2_3_reg_1658_pp0_iter1_reg;
                p_Val2_3_reg_1658_pp0_iter3_reg <= p_Val2_3_reg_1658_pp0_iter2_reg;
                p_Val2_3_reg_1658_pp0_iter4_reg <= p_Val2_3_reg_1658_pp0_iter3_reg;
                p_Val2_6_reg_1764 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_return;
                p_Val2_7_reg_1830 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_return;
                p_Val2_8_reg_1825 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_return;
                p_Val2_9_reg_1865 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_return;
                p_Val2_s_28_reg_1769 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_return;
                p_Val2_s_reg_1613_pp0_iter2_reg <= p_Val2_s_reg_1613_pp0_iter1_reg;
                p_Val2_s_reg_1613_pp0_iter3_reg <= p_Val2_s_reg_1613_pp0_iter2_reg;
                p_Val2_s_reg_1613_pp0_iter4_reg <= p_Val2_s_reg_1613_pp0_iter3_reg;
                p_s_reg_1754 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_return;
                    r_V_27_reg_1774(11 downto 1) <= r_V_27_fu_882_p2(11 downto 1);
                ret_V_1_reg_1779 <= ret_V_1_fu_917_p2;
                ret_V_22_reg_1860 <= ret_V_22_fu_1251_p2;
                ret_V_42_reg_1820 <= ret_V_42_fu_1109_p2;
                ret_V_47_reg_1870 <= ret_V_47_fu_1264_p2;
                sext_ln728_1_reg_1672_pp0_iter2_reg <= sext_ln728_1_reg_1672_pp0_iter1_reg;
                sext_ln728_1_reg_1672_pp0_iter3_reg <= sext_ln728_1_reg_1672_pp0_iter2_reg;
                sext_ln728_1_reg_1672_pp0_iter4_reg <= sext_ln728_1_reg_1672_pp0_iter3_reg;
                trunc_ln708_10_reg_1885 <= grp_fu_1587_p3(29 downto 18);
                trunc_ln708_13_reg_1734 <= r_V_37_fu_790_p2(35 downto 24);
                trunc_ln708_1_reg_1724 <= grp_fu_1486_p3(23 downto 12);
                trunc_ln708_2_reg_1759 <= ret_V_33_fu_843_p2(17 downto 6);
                trunc_ln708_6_reg_1880 <= ret_V_37_fu_1290_p2(35 downto 24);
                trunc_ln708_8_reg_1729 <= r_V_31_fu_764_p2(35 downto 24);
                trunc_ln708_9_reg_1850 <= ret_V_40_fu_1202_p2(29 downto 18);
                trunc_ln708_9_reg_1850_pp0_iter7_reg <= trunc_ln708_9_reg_1850;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_5_reg_1714 <= mul_ln1118_5_fu_1473_p2;
                mul_ln1118_reg_1704 <= mul_ln1118_fu_1453_p2;
                mul_ln1192_6_reg_1678 <= mul_ln1192_6_fu_1421_p2;
                mul_ln700_3_reg_1689 <= mul_ln700_3_fu_1433_p2;
                p_Val2_11_reg_1620 <= x_V_in_sig(47 downto 36);
                p_Val2_11_reg_1620_pp0_iter1_reg <= p_Val2_11_reg_1620;
                p_Val2_1_reg_1636 <= x_V_in_sig(179 downto 168);
                p_Val2_1_reg_1636_pp0_iter1_reg <= p_Val2_1_reg_1636;
                p_Val2_2_reg_1652 <= x_V_in_sig(59 downto 48);
                p_Val2_2_reg_1652_pp0_iter1_reg <= p_Val2_2_reg_1652;
                p_Val2_3_reg_1658 <= x_V_in_sig(191 downto 180);
                p_Val2_3_reg_1658_pp0_iter1_reg <= p_Val2_3_reg_1658;
                p_Val2_s_reg_1613 <= x_V_in_sig(35 downto 24);
                p_Val2_s_reg_1613_pp0_iter1_reg <= p_Val2_s_reg_1613;
                r_V_17_reg_1684 <= r_V_17_fu_1427_p2;
                r_V_4_reg_1699 <= r_V_4_fu_1447_p2;
                sext_ln728_1_reg_1672 <= sext_ln728_1_fu_493_p1;
                sext_ln728_1_reg_1672_pp0_iter1_reg <= sext_ln728_1_reg_1672;
                sext_ln728_reg_1629 <= sext_ln728_fu_442_p1;
                trunc_ln708_14_reg_1719 <= grp_fu_1479_p3(17 downto 6);
                trunc_ln708_s_reg_1709 <= ret_V_41_fu_718_p2(23 downto 12);
                trunc_ln_reg_1647 <= grp_fu_1412_p3(17 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                mul_ln1192_9_reg_1890 <= grp_fu_1596_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                r_V_6_reg_1789 <= grp_fu_1523_p3;
                ret_V_36_reg_1794 <= grp_fu_1531_p3;
                ret_V_3_reg_1784 <= grp_fu_1515_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ret_V_18_reg_1855 <= grp_fu_1568_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_25_reg_1694 <= grp_fu_1439_p3;
            end if;
        end if;
    end process;
    r_V_27_reg_1774(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_12_fu_1021_p2 <= std_logic_vector(unsigned(r_V_26_fu_1012_p2) + unsigned(sext_ln1118_10_fu_1018_p1));
    add_ln1192_15_fu_694_p2 <= std_logic_vector(unsigned(ap_const_lv19_1000) + unsigned(ret_V_39_fu_688_p2));
    add_ln1192_17_fu_1050_p2 <= std_logic_vector(signed(grp_fu_1539_p4) + signed(rhs_V_2_fu_1043_p3));
    add_ln1192_18_fu_1097_p2 <= std_logic_vector(unsigned(add_ln1192_17_fu_1050_p2) + unsigned(rhs_V_3_fu_1093_p1));
    add_ln1192_19_fu_1197_p2 <= std_logic_vector(unsigned(add_ln1192_18_reg_1805) + unsigned(rhs_V_4_fu_1193_p1));
    add_ln1192_28_fu_546_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_456_p3) + unsigned(add_ln1192_30_fu_540_p2));
    add_ln1192_30_fu_540_p2 <= std_logic_vector(signed(ap_const_lv18_3E4C0) + signed(r_V_s_fu_507_p3));
    add_ln1192_7_fu_515_p2 <= std_logic_vector(signed(ap_const_lv18_3FC80) + signed(r_V_s_fu_507_p3));
    add_ln1192_8_fu_573_p2 <= std_logic_vector(signed(mul_ln1192_6_reg_1678) + signed(lhs_V_3_fu_566_p3));
    add_ln1192_fu_1134_p2 <= std_logic_vector(unsigned(ap_const_lv13_FA) + unsigned(ret_V_32_fu_1128_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp103_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp103 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp105_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp105 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp113_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp113 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp122_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp122 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp124_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp124 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp150_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp150 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp165_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp165 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp27_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp27 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp35_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp35 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp38_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp38 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp41_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp41 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp48_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp48 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp52_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp52 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp91_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp91 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp96_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp96 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp97_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp97 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp99_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp99 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call117_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call117 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call163_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call163 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call176_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call176 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call187_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call187 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call202_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call202 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call218_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call218 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call224_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call224 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call237_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call237 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call241_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call241 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call252_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call252 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call29_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call29 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call45_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call45 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call59_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call59 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call65_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call65 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call75_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call75 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call89_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call89 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call99_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call99 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call237 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call252 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call237 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call252 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call237 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call252 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call237 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call252 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call237 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call252 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call237 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call252 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call237 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call252 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call117 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call163 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call176 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call187 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call202 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call218 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call237 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call241 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call252 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call99 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to7)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to7 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1412_p0 <= ap_const_lv18_3FFD9(7 - 1 downto 0);
    grp_fu_1439_p0 <= ap_const_lv18_3B(7 - 1 downto 0);
    grp_fu_1439_p1 <= sext_ln703_4_fu_536_p1(12 - 1 downto 0);
    grp_fu_1439_p2 <= ap_const_lv18_1000(14 - 1 downto 0);
    grp_fu_1459_p0 <= ap_const_lv24_D2(9 - 1 downto 0);
    grp_fu_1459_p2 <= (mul_ln700_3_reg_1689 & ap_const_lv6_0);
    grp_fu_1479_p0 <= sext_ln728_reg_1629(12 - 1 downto 0);
    grp_fu_1479_p1 <= sext_ln728_reg_1629(12 - 1 downto 0);
    grp_fu_1479_p2 <= ap_const_lv18_3F7C0(13 - 1 downto 0);
    grp_fu_1486_p2 <= (p_Val2_3_reg_1658_pp0_iter1_reg & ap_const_lv12_0);
    grp_fu_1499_p0 <= ap_const_lv18_3FFCF(7 - 1 downto 0);
    grp_fu_1507_p0 <= ap_const_lv13_1FC5(7 - 1 downto 0);
    grp_fu_1515_p0 <= sext_ln1116_fu_926_p1(8 - 1 downto 0);
    grp_fu_1515_p1 <= sext_ln1116_fu_926_p1(8 - 1 downto 0);
    grp_fu_1515_p2 <= ap_const_lv16_FDC0(11 - 1 downto 0);
    grp_fu_1523_p0 <= ap_const_lv9_1A8(8 - 1 downto 0);
    grp_fu_1531_p0 <= ap_const_lv14_13(6 - 1 downto 0);
    grp_fu_1568_p2 <= ap_const_lv13_B(5 - 1 downto 0);
    grp_fu_1568_p3 <= ap_const_lv13_1F80(8 - 1 downto 0);
    grp_fu_1578_p0 <= sext_ln1118_11_fu_1152_p1(8 - 1 downto 0);
    grp_fu_1578_p1 <= sext_ln1118_11_fu_1152_p1(8 - 1 downto 0);
    grp_fu_1587_p2 <= ap_const_lv30_3F0C0000(25 - 1 downto 0);
    grp_fu_1604_p2 <= ap_const_lv30_3F240000(25 - 1 downto 0);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp27)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_269_input_V <= add_ln1192_7_fu_515_p2(17 downto 6);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp35)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_278_input_V <= add_ln1192_28_fu_546_p2(17 downto 6);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp38)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp38) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_287_ap_start_reg;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp41)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp41) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_296_ap_start_reg;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp48)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp48) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_ap_start_reg;
    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_305_input_V <= ret_V_35_fu_591_p2(17 downto 6);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp52)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp52) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_start_reg;
    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_input_V <= ret_V_38_fu_608_p2(17 downto 6);

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp91)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp91) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_start_reg;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp96)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp96) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_ap_start_reg;
    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_332_input_V <= std_logic_vector(signed(ap_const_lv12_FD3) + signed(p_Val2_11_reg_1620_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp97)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp97) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_341_ap_start_reg;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp99)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp99) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_ap_start_reg;
    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_350_input_V <= std_logic_vector(signed(p_Val2_3_reg_1658_pp0_iter1_reg) + signed(p_Val2_11_reg_1620_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp103)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp103) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_359_ap_start_reg;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp105)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp105) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_start_reg;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp113)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp113) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_start_reg;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp122) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_ap_start_reg;
        grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_386_input_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_11_fu_825_p4),12));


    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp124)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp124) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_start_reg;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp150)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp150) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_ap_start_reg;
    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_404_input_V <= std_logic_vector(unsigned(ap_const_lv12_5E) + unsigned(p_Val2_1_reg_1636_pp0_iter3_reg));

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp165)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp165) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_start_reg;
    lhs_V_1_fu_456_p3 <= (p_Val2_1_fu_446_p4 & ap_const_lv6_0);
    lhs_V_3_fu_566_p3 <= (p_Val2_3_reg_1658 & ap_const_lv6_0);
    lhs_V_4_fu_1031_p3 <= (r_V_25_fu_984_p2 & ap_const_lv12_0);
        lhs_V_5_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1636_pp0_iter4_reg),13));

    lhs_V_6_fu_1224_p3 <= (ret_V_42_reg_1820 & ap_const_lv6_0);
    mul_ln1118_5_fu_1473_p0 <= sext_ln1118_25_fu_733_p1(18 - 1 downto 0);
    mul_ln1118_5_fu_1473_p1 <= sext_ln1118_25_fu_733_p1(18 - 1 downto 0);
    mul_ln1118_fu_1453_p0 <= sext_ln1118_19_fu_700_p1(19 - 1 downto 0);
    mul_ln1118_fu_1453_p1 <= sext_ln1118_19_fu_700_p1(19 - 1 downto 0);
    mul_ln1192_2_fu_1494_p0 <= ap_const_lv18_31(7 - 1 downto 0);
    mul_ln1192_2_fu_1494_p1 <= sext_ln728_1_reg_1672_pp0_iter2_reg(12 - 1 downto 0);
    mul_ln1192_4_fu_1284_p0 <= p_6_reg_1799_pp0_iter6_reg;
    mul_ln1192_4_fu_1284_p1 <= mul_ln1192_3_reg_1845(32 - 1 downto 0);
    mul_ln1192_4_fu_1284_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_4_fu_1284_p0) * signed(mul_ln1192_4_fu_1284_p1))), 36));
    mul_ln1192_6_fu_1421_p0 <= sext_ln728_1_fu_493_p1(12 - 1 downto 0);
    mul_ln1192_6_fu_1421_p1 <= sext_ln728_1_fu_493_p1(12 - 1 downto 0);
    mul_ln700_1_fu_1273_p0 <= add_ln1192_reg_1840;
    mul_ln700_1_fu_1273_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_1273_p0) * signed(mul_ln700_reg_1835))), 42));
    mul_ln700_3_fu_1433_p0 <= ap_const_lv18_D2(9 - 1 downto 0);
    mul_ln700_3_fu_1433_p1 <= sext_ln703_4_fu_536_p1(12 - 1 downto 0);
    mul_ln728_1_fu_1467_p0 <= ap_const_lv18_1A4(10 - 1 downto 0);
    mul_ln728_1_fu_1467_p1 <= sext_ln728_reg_1629(12 - 1 downto 0);
    mul_ln728_fu_1550_p0 <= ap_const_lv18_23(7 - 1 downto 0);
    mul_ln728_fu_1550_p1 <= sext_ln728_1_reg_1672_pp0_iter4_reg(12 - 1 downto 0);
    p_Val2_11_fu_432_p4 <= x_V_in_sig(47 downto 36);
    p_Val2_1_fu_446_p4 <= x_V_in_sig(179 downto 168);
    p_Val2_s_fu_422_p4 <= x_V_in_sig(35 downto 24);
    p_shl_fu_903_p3 <= (trunc_ln1193_fu_900_p1 & ap_const_lv3_0);
        r_V_16_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_446_p4),24));

    r_V_17_fu_1427_p0 <= r_V_16_fu_532_p1(12 - 1 downto 0);
    r_V_17_fu_1427_p1 <= r_V_16_fu_532_p1(12 - 1 downto 0);
    r_V_24_fu_945_p3 <= (p_Val2_3_reg_1658_pp0_iter4_reg & ap_const_lv1_0);
    r_V_25_fu_984_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_978_p2) - unsigned(sext_ln727_fu_923_p1));
    r_V_26_fu_1012_p2 <= std_logic_vector(signed(sext_ln1118_7_fu_1008_p1) - signed(sext_ln1118_4_fu_956_p1));
    r_V_27_fu_882_p2 <= std_logic_vector(signed(sext_ln1118_8_fu_866_p1) - signed(sext_ln1118_9_fu_878_p1));
    r_V_28_fu_1079_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_1063_p1) + signed(sext_ln1118_13_fu_1075_p1));
    r_V_29_fu_646_p2 <= std_logic_vector(signed(sext_ln1118_15_fu_631_p1) + signed(sext_ln1118_16_fu_642_p1));
    r_V_30_fu_674_p2 <= std_logic_vector(signed(sext_ln1118_17_fu_659_p1) + signed(sext_ln1118_18_fu_670_p1));
    r_V_31_fu_764_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv36_9C) * signed(mul_ln1118_reg_1704))), 36));
    r_V_32_fu_1179_p2 <= std_logic_vector(signed(sext_ln1118_20_fu_1163_p1) + signed(sext_ln1118_21_fu_1175_p1));
    r_V_34_fu_819_p2 <= std_logic_vector(signed(sext_ln1118_23_fu_815_p1) - signed(sext_ln1118_2_fu_805_p1));
    r_V_35_fu_1324_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sext_ln1253_fu_1321_p1));
    r_V_36_fu_1333_p0 <= sext_ln1116_3_fu_1330_p1(8 - 1 downto 0);
    r_V_36_fu_1333_p1 <= sext_ln1116_3_fu_1330_p1(8 - 1 downto 0);
    r_V_36_fu_1333_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_36_fu_1333_p0) * signed(r_V_36_fu_1333_p1))), 16));
    r_V_37_fu_790_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv36_125) * signed(mul_ln1118_5_reg_1714))), 36));
        r_V_3_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1652),24));

    r_V_4_fu_1447_p0 <= r_V_3_fu_563_p1(12 - 1 downto 0);
    r_V_4_fu_1447_p1 <= r_V_3_fu_563_p1(12 - 1 downto 0);
    r_V_s_fu_507_p3 <= (tmp_7_fu_497_p4 & ap_const_lv7_0);
    ret_V_10_fu_935_p2 <= std_logic_vector(signed(ap_const_lv9_1C4) + signed(sext_ln703_1_fu_932_p1));
    ret_V_12_fu_1140_p2 <= std_logic_vector(signed(ap_const_lv14_3E80) + signed(ret_V_36_reg_1794));
    ret_V_1_fu_917_p2 <= std_logic_vector(unsigned(ap_const_lv27_1B000) + unsigned(sub_ln1193_fu_911_p2));
    ret_V_22_fu_1251_p2 <= std_logic_vector(signed(ap_const_lv20_FC480) + signed(ret_V_44_fu_1246_p2));
    ret_V_28_fu_1358_p2 <= std_logic_vector(unsigned(ap_const_lv10_E) + unsigned(sext_ln703_11_fu_1355_p1));
    ret_V_32_fu_1128_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_1124_p1) - signed(sext_ln1192_1_fu_1121_p1));
    ret_V_33_fu_843_p2 <= std_logic_vector(unsigned(ap_const_lv18_C40) + unsigned(grp_fu_1499_p3));
    ret_V_34_fu_1380_p2 <= std_logic_vector(unsigned(mul_ln700_1_reg_1875) - unsigned(rhs_V_fu_1376_p1));
    ret_V_35_fu_591_p2 <= std_logic_vector(signed(ap_const_lv18_3E700) + signed(sub_ln1192_fu_585_p2));
    ret_V_37_fu_1290_p2 <= std_logic_vector(signed(ap_const_lv36_FC9000000) + signed(mul_ln1192_4_fu_1284_p2));
    ret_V_38_fu_608_p2 <= std_logic_vector(signed(ap_const_lv18_3EE40) + signed(mul_ln1192_6_reg_1678));
    ret_V_39_fu_688_p2 <= std_logic_vector(signed(sext_ln703_5_fu_680_p1) - signed(sext_ln703_6_fu_684_p1));
    ret_V_40_fu_1202_p2 <= std_logic_vector(signed(ap_const_lv30_3F580000) + signed(add_ln1192_19_fu_1197_p2));
    ret_V_41_fu_718_p2 <= std_logic_vector(signed(grp_fu_1459_p3) + signed(rhs_V_5_fu_711_p3));
    ret_V_42_fu_1109_p2 <= std_logic_vector(signed(lhs_V_5_fu_1103_p1) + signed(rhs_V_6_fu_1106_p1));
    ret_V_44_fu_1246_p2 <= std_logic_vector(signed(grp_fu_1578_p3) + signed(sext_ln1192_16_fu_1242_p1));
    ret_V_47_fu_1264_p2 <= std_logic_vector(signed(sext_ln703_9_fu_1257_p1) - signed(sext_ln703_10_fu_1261_p1));
    rhs_V_1_fu_578_p3 <= (p_Val2_11_reg_1620 & ap_const_lv6_0);
    rhs_V_2_fu_1043_p3 <= (mul_ln728_fu_1550_p2 & ap_const_lv12_0);
        rhs_V_3_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1085_p3),30));

        rhs_V_4_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_1185_p3),30));

    rhs_V_5_fu_711_p3 <= (mul_ln728_1_fu_1467_p2 & ap_const_lv6_0);
        rhs_V_6_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1658_pp0_iter4_reg),13));

        rhs_V_fu_1376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_1368_p3),42));

        sext_ln1116_3_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1749_pp0_iter6_reg),16));

        sext_ln1116_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_s_reg_1754),16));

        sext_ln1118_10_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_27_reg_1774),16));

        sext_ln1118_11_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1799),16));

        sext_ln1118_12_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_1055_p3),14));

        sext_ln1118_13_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_1067_p3),14));

        sext_ln1118_15_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_624_p3),18));

        sext_ln1118_16_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_635_p3),18));

        sext_ln1118_17_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_9_fu_652_p3),18));

        sext_ln1118_18_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_663_p3),18));

        sext_ln1118_19_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_15_fu_694_p2),36));

        sext_ln1118_20_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_1155_p3),14));

        sext_ln1118_21_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_1167_p3),14));

        sext_ln1118_23_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_808_p3),17));

        sext_ln1118_25_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_25_reg_1694),36));

        sext_ln1118_2_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1658_pp0_iter2_reg),17));

        sext_ln1118_4_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_24_fu_945_p3),16));

        sext_ln1118_5_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_967_p3),17));

        sext_ln1118_7_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1001_p3),16));

        sext_ln1118_8_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_858_p3),12));

        sext_ln1118_9_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_870_p3),12));

        sext_ln1118_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1507_p2),27));

        sext_ln1192_16_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_1235_p3),20));

        sext_ln1192_1_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1652_pp0_iter5_reg),13));

        sext_ln1192_2_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_368_ap_return),13));

        sext_ln1253_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1865),9));

        sext_ln703_10_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1830),9));

        sext_ln703_11_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_47_reg_1870),10));

        sext_ln703_1_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_28_reg_1769),9));

        sext_ln703_4_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_446_p4),18));

        sext_ln703_5_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_29_fu_646_p2),19));

        sext_ln703_6_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_30_fu_674_p2),19));

        sext_ln703_9_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_395_ap_return),9));

        sext_ln727_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1636_pp0_iter4_reg),17));

        sext_ln728_1_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_422_p4),18));

        sext_ln728_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_11_fu_432_p4),18));

    shl_ln1118_1_fu_990_p3 <= (p_Val2_3_reg_1658_pp0_iter4_reg & ap_const_lv5_0);
    shl_ln1118_2_fu_1001_p3 <= (p_Val2_3_reg_1658_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln1118_3_fu_808_p3 <= (p_Val2_3_reg_1658_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln1118_7_fu_624_p3 <= (p_Val2_1_reg_1636 & ap_const_lv5_0);
    shl_ln1118_8_fu_635_p3 <= (p_Val2_1_reg_1636 & ap_const_lv3_0);
    shl_ln1118_9_fu_652_p3 <= (p_Val2_11_reg_1620 & ap_const_lv5_0);
    shl_ln1118_s_fu_663_p3 <= (p_Val2_11_reg_1620 & ap_const_lv3_0);
    shl_ln_fu_967_p3 <= (p_Val2_1_reg_1636_pp0_iter4_reg & ap_const_lv4_0);
    sub_ln1118_fu_978_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln1118_5_fu_974_p1));
    sub_ln1192_fu_585_p2 <= std_logic_vector(unsigned(add_ln1192_8_fu_573_p2) - unsigned(rhs_V_1_fu_578_p3));
    sub_ln1193_fu_911_p2 <= std_logic_vector(signed(sext_ln1118_fu_897_p1) - signed(p_shl_fu_903_p3));
    tmp_10_fu_1185_p3 <= (r_V_32_fu_1179_p2 & ap_const_lv12_0);
    tmp_11_fu_1343_p3 <= (r_V_35_fu_1324_p2 & ap_const_lv6_0);
    tmp_1_fu_870_p3 <= (grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_return & ap_const_lv1_0);
    tmp_2_fu_1055_p1 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_return;
    tmp_2_fu_1055_p3 <= (tmp_2_fu_1055_p1 & ap_const_lv5_0);
    tmp_3_fu_1368_p3 <= (grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_413_ap_return & ap_const_lv30_0);
    tmp_4_fu_1067_p1 <= grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_323_ap_return;
    tmp_4_fu_1067_p3 <= (tmp_4_fu_1067_p1 & ap_const_lv1_0);
    tmp_5_fu_1155_p3 <= (grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_return & ap_const_lv5_0);
    tmp_6_fu_1167_p3 <= (grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_377_ap_return & ap_const_lv1_0);
    tmp_7_fu_497_p4 <= x_V_in_sig(46 downto 36);
    tmp_8_fu_1235_p3 <= (p_Val2_8_reg_1825 & ap_const_lv6_0);
    tmp_fu_1085_p3 <= (r_V_28_fu_1079_p2 & ap_const_lv12_0);
    tmp_s_fu_858_p3 <= (grp_sin_lut_ap_fixed_12_6_5_3_0_s_fu_314_ap_return & ap_const_lv3_0);
    trunc_ln1193_fu_900_p1 <= grp_fu_1507_p2(24 - 1 downto 0);
    trunc_ln708_11_fu_825_p4 <= r_V_34_fu_819_p2(16 downto 6);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_34_fu_1380_p2(41 downto 30);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= trunc_ln708_6_reg_1880;

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1850_pp0_iter7_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_10_reg_1885;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= grp_fu_1604_p3(29 downto 18);

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
