-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (143 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.339000,HLS_SYN_LAT=8,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=34,HLS_SYN_FF=12664,HLS_SYN_LUT=22836,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv144_lc_1 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_86 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv13_40 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv12_F90 : STD_LOGIC_VECTOR (11 downto 0) := "111110010000";
    constant ap_const_lv21_5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000101";
    constant ap_const_lv21_2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_30 : STD_LOGIC_VECTOR (11 downto 0) := "000000110000";
    constant ap_const_lv12_F98 : STD_LOGIC_VECTOR (11 downto 0) := "111110011000";
    constant ap_const_lv12_FB8 : STD_LOGIC_VECTOR (11 downto 0) := "111110111000";
    constant ap_const_lv9_B : STD_LOGIC_VECTOR (8 downto 0) := "000001011";
    constant ap_const_lv9_1FA : STD_LOGIC_VECTOR (8 downto 0) := "111111010";
    constant ap_const_lv10_1F : STD_LOGIC_VECTOR (9 downto 0) := "0000011111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv18_3F400 : STD_LOGIC_VECTOR (17 downto 0) := "111111010000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv14_3F10 : STD_LOGIC_VECTOR (13 downto 0) := "11111100010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv15_1A : STD_LOGIC_VECTOR (14 downto 0) := "000000000011010";
    constant ap_const_lv12_FD8 : STD_LOGIC_VECTOR (11 downto 0) := "111111011000";
    constant ap_const_lv21_13 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010011";
    constant ap_const_lv15_D0 : STD_LOGIC_VECTOR (14 downto 0) := "000000011010000";
    constant ap_const_lv15_1A0 : STD_LOGIC_VECTOR (14 downto 0) := "000000110100000";
    constant ap_const_lv10_3F0 : STD_LOGIC_VECTOR (9 downto 0) := "1111110000";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv18_3F200 : STD_LOGIC_VECTOR (17 downto 0) := "111111001000000000";
    constant ap_const_lv20_F9000 : STD_LOGIC_VECTOR (19 downto 0) := "11111001000000000000";
    constant ap_const_lv18_3F000 : STD_LOGIC_VECTOR (17 downto 0) := "111111000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (143 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_10_fu_326_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_10_reg_1325 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_10_reg_1325_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_10_reg_1325_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_fu_352_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1333 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1333_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1333_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1333_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1333_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1333_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_1_fu_387_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_1_reg_1346 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_1_reg_1346_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_1_reg_1346_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_1_reg_1346_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_1_reg_1346_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_401_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_reg_1351 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_reg_1351_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_reg_1351_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_reg_1351_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_reg_1351_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_reg_1351_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_fu_421_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_reg_1359 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_reg_1359_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_reg_1359_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_reg_1359_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_reg_1359_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_reg_1359_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_1_reg_1367 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1192_8_fu_452_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_8_reg_1372 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_8_fu_493_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_8_reg_1383 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_fu_1198_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_reg_1388 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln700_2_fu_1204_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln700_2_reg_1393 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_12_reg_1408 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_13_reg_1413 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_8_reg_1433 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1233_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln700_reg_1438 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_s_reg_1443 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_s_reg_1463 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_5_reg_1468 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_5_reg_1468_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_5_reg_1468_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_8_reg_1473 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_8_reg_1473_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_1_reg_1478 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_1_reg_1478_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1247_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_reg_1483 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_fu_828_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_reg_1489 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_4_reg_1494 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_5_reg_1499 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_s_26_reg_1504 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_43_fu_842_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_43_reg_1509 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln708_3_reg_1514 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_3_reg_1514_pp0_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1266_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_reg_1519 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_6_reg_1524 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_6_reg_1524_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln708_9_reg_1530 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_9_reg_1530_pp0_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_38_fu_1013_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_38_reg_1535 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1274_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_6_reg_1540 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_0_reg_1545 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1282_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln1192_2_reg_1550 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1192_19_fu_1101_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1192_19_reg_1555 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_19_fu_1135_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_19_reg_1560 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_14_reg_1565 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call20 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call20 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call20 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call20 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call20 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call20 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call20 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp19 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call83 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call83 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call83 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call83 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call83 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call83 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call83 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call83 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call83 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp36 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call172 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call172 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call172 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call172 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call172 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call172 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call172 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call172 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call172 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp54 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call178 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call178 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call178 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call178 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call178 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call178 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call178 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call178 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call178 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp58 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call39 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call39 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call39 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call39 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call39 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call39 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call39 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call39 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call39 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp72 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call57 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call57 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call57 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call57 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call57 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call57 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call57 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call57 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call57 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp84 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call63 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call63 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call63 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call63 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call63 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call63 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call63 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call63 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call63 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp85 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call73 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call73 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call73 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call73 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call73 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call73 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call73 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call73 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call73 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp91 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call103 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call103 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call103 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call103 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call103 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call103 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call103 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call103 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call103 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp95 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call195 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call195 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call195 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call195 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call195 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call195 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call195 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call195 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call195 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp102 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call199 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call199 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call199 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call199 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call199 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call199 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call199 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call199 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call199 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp103 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call91 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call91 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call91 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call91 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call91 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call91 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call91 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call91 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call91 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp111 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call128 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call128 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call128 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call128 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call128 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call128 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call128 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call128 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call128 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp113 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call208 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call208 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call208 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call208 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call208 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call208 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call208 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call208 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call208 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp122 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call136 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call136 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call136 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call136 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call136 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call136 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call136 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call136 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call136 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp133 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call144 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call144 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call144 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call144 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call144 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call144 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call144 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call144 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call144 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp134 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call159 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call159 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call159 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call159 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call159 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call159 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call159 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call159 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call159 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp136 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_12_fu_340_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_fu_362_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_1_fu_348_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_26_fu_370_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_fu_415_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_2_fu_397_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1192_fu_415_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1189_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1192_8_fu_452_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_3_fu_448_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_8_fu_452_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_458_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_s_fu_468_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_7_fu_476_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_8_fu_505_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_10_fu_501_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_11_fu_513_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_fu_336_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_15_fu_517_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_16_fu_523_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_3_fu_529_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_4_fu_533_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_35_fu_537_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_13_fu_543_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln700_1_fu_553_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln700_1_fu_553_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_10_fu_559_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1192_27_fu_574_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_26_fu_580_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_15_fu_597_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_9_fu_497_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_21_fu_601_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_28_fu_607_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1118_4_fu_1210_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_fu_617_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_1_fu_622_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_22_fu_627_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1218_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_3_fu_659_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_3_fu_666_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_2_fu_652_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_5_fu_683_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1118_4_fu_676_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_4_fu_690_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1192_1_fu_694_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1192_fu_670_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_3_fu_700_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_29_fu_706_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_6_fu_723_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_V_1_fu_728_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1192_2_fu_735_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_31_fu_741_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_33_fu_758_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_17_fu_1227_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1239_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1192_2_fu_818_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_1_fu_815_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_28_fu_822_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_8_fu_834_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln703_9_fu_838_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_848_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_fu_859_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_873_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1255_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1_fu_896_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_8_fu_899_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1_fu_909_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_6_fu_916_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_14_fu_920_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_6_fu_926_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_2_fu_938_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_2_fu_934_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_fu_945_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_3_fu_955_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_955_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_34_fu_949_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1192_9_fu_963_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_fu_973_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1192_15_fu_967_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1192_10_fu_981_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_16_fu_985_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_36_fu_991_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_4_fu_1007_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_4_fu_1010_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1253_fu_1019_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_20_fu_1031_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_2_fu_1028_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_20_fu_1031_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_20_fu_1031_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_19_fu_1022_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_fu_1041_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1192_19_fu_1053_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_24_fu_1056_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_1066_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln703_5_fu_1083_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1192_20_fu_1091_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1192_11_fu_1087_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1192_15_fu_1097_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_5_fu_1107_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_1118_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1290_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_16_fu_1126_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_40_fu_1130_p2 : STD_LOGIC_VECTOR (13 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_40_fu_1130_p2 : signal is "no";
    signal grp_fu_1299_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1307_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_11_fu_1159_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1316_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1189_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1189_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_fu_1198_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_12_fu_549_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_fu_1198_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln700_2_fu_1204_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln700_2_fu_1204_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1118_4_fu_1210_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_16_fu_613_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_4_fu_1210_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1218_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1218_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1218_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_17_fu_1227_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1233_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1233_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1239_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1247_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_fu_812_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1247_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1247_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1266_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1282_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1290_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_7_fu_1080_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1290_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1299_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1307_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1316_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sin_lut_ap_fixed_9_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_mac_muladd_9s_15s_15ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_mul_mul_13s_13s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mul_mul_6ns_15s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_mac_muladd_9s_9s_7s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mul_mul_6ns_21s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mac_muladd_9ns_9s_15s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_mac_muladd_10ns_9s_15s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_mac_muladd_5s_5s_5s_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component myproject_ama_submul_sub_18s_16s_10s_20s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_am_addmul_5s_5s_6s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_am_addmul_10s_9s_7s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_am_addmul_4s_6s_12s_19_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component myproject_mac_muladd_5s_5s_13s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_muladd_5s_18s_13s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_5s_19s_16s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_muladd_7s_14s_13s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_1_reg_1367,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => tmp_s_reg_1351,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_12_reg_1408,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_13_reg_1413,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_s_reg_1333_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_8_reg_1433,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_s_reg_1443,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_ap_ce);

    myproject_mac_muladd_9s_15s_15ns_15_1_1_U9 : component myproject_mac_muladd_9s_15s_15ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 15,
        din2_WIDTH => 15,
        dout_WIDTH => 15)
    port map (
        din0 => tmp_s_fu_401_p4,
        din1 => grp_fu_1189_p1,
        din2 => grp_fu_1189_p2,
        dout => grp_fu_1189_p3);

    myproject_mul_mul_13s_13s_21_1_1_U10 : component myproject_mul_mul_13s_13s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_fu_1198_p0,
        din1 => mul_ln1118_fu_1198_p1,
        dout => mul_ln1118_fu_1198_p2);

    myproject_mul_mul_6ns_15s_15_1_1_U11 : component myproject_mul_mul_6ns_15s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 15,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln700_2_fu_1204_p0,
        din1 => mul_ln700_2_fu_1204_p1,
        dout => mul_ln700_2_fu_1204_p2);

    myproject_mul_mul_13s_13s_21_1_1_U12 : component myproject_mul_mul_13s_13s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 21)
    port map (
        din0 => mul_ln1118_4_fu_1210_p0,
        din1 => mul_ln1118_4_fu_1210_p1,
        dout => mul_ln1118_4_fu_1210_p2);

    myproject_mac_muladd_9s_9s_7s_12_1_1_U13 : component myproject_mac_muladd_9s_9s_7s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 7,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1218_p0,
        din1 => grp_fu_1218_p1,
        din2 => grp_fu_1218_p2,
        dout => grp_fu_1218_p3);

    myproject_mul_mul_6ns_21s_21_1_1_U14 : component myproject_mul_mul_6ns_21s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_17_fu_1227_p0,
        din1 => mul_ln1118_reg_1388,
        dout => r_V_17_fu_1227_p2);

    myproject_mac_muladd_9ns_9s_15s_15_1_1_U15 : component myproject_mac_muladd_9ns_9s_15s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        din2_WIDTH => 15,
        dout_WIDTH => 15)
    port map (
        din0 => grp_fu_1233_p0,
        din1 => grp_fu_1233_p1,
        din2 => mul_ln700_2_reg_1393,
        dout => grp_fu_1233_p3);

    myproject_mac_muladd_10ns_9s_15s_15_1_1_U16 : component myproject_mac_muladd_10ns_9s_15s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 9,
        din2_WIDTH => 15,
        dout_WIDTH => 15)
    port map (
        din0 => grp_fu_1239_p0,
        din1 => p_Val2_10_reg_1325_pp0_iter1_reg,
        din2 => add_ln700_reg_1438,
        dout => grp_fu_1239_p3);

    myproject_mac_muladd_5s_5s_5s_10_1_1_U17 : component myproject_mac_muladd_5s_5s_5s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1247_p0,
        din1 => grp_fu_1247_p1,
        din2 => grp_fu_1247_p2,
        dout => grp_fu_1247_p3);

    myproject_ama_submul_sub_18s_16s_10s_20s_24_1_1_U18 : component myproject_ama_submul_sub_18s_16s_10s_20s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        din2_WIDTH => 10,
        din3_WIDTH => 20,
        dout_WIDTH => 24)
    port map (
        din0 => tmp_fu_848_p3,
        din1 => tmp_10_fu_859_p3,
        din2 => add_ln1192_reg_1489,
        din3 => tmp_9_fu_873_p3,
        dout => grp_fu_1255_p4);

    myproject_am_addmul_5s_5s_6s_12_1_1_U19 : component myproject_am_addmul_5s_5s_6s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        din2_WIDTH => 6,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1266_p0,
        din1 => p_Val2_5_reg_1499,
        din2 => ret_V_8_fu_899_p2,
        dout => grp_fu_1266_p3);

    myproject_am_addmul_10s_9s_7s_18_1_1_U20 : component myproject_am_addmul_10s_9s_7s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 9,
        din2_WIDTH => 7,
        dout_WIDTH => 18)
    port map (
        din0 => r_V_20_fu_1031_p2,
        din1 => tmp_12_fu_1041_p3,
        din2 => ret_V_24_fu_1056_p2,
        dout => grp_fu_1274_p3);

    myproject_am_addmul_4s_6s_12s_19_1_1_U21 : component myproject_am_addmul_4s_6s_12s_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 6,
        din2_WIDTH => 12,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_1282_p0,
        din1 => tmp_2_fu_1066_p3,
        din2 => r_V_reg_1519,
        dout => grp_fu_1282_p3);

    myproject_mac_muladd_5s_5s_13s_14_1_1_U22 : component myproject_mac_muladd_5s_5s_13s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        din2_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1290_p0,
        din1 => grp_fu_1290_p1,
        din2 => lhs_V_5_fu_1107_p3,
        dout => grp_fu_1290_p3);

    myproject_mac_muladd_5s_18s_13s_18_1_1_U23 : component myproject_mac_muladd_5s_18s_13s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 18,
        din2_WIDTH => 13,
        dout_WIDTH => 18)
    port map (
        din0 => p_0_reg_1545,
        din1 => mul_ln1192_6_reg_1540,
        din2 => grp_fu_1299_p2,
        dout => grp_fu_1299_p3);

    myproject_mac_muladd_5s_19s_16s_20_1_1_U24 : component myproject_mac_muladd_5s_19s_16s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 19,
        din2_WIDTH => 16,
        dout_WIDTH => 20)
    port map (
        din0 => p_6_reg_1524_pp0_iter7_reg,
        din1 => mul_ln1192_2_reg_1550,
        din2 => grp_fu_1307_p2,
        dout => grp_fu_1307_p3);

    myproject_mac_muladd_7s_14s_13s_18_1_1_U25 : component myproject_mac_muladd_7s_14s_13s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 14,
        din2_WIDTH => 13,
        dout_WIDTH => 18)
    port map (
        din0 => add_ln1192_19_reg_1555,
        din1 => ret_V_19_reg_1560,
        din2 => grp_fu_1316_p2,
        dout => grp_fu_1316_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv144_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_19_reg_1555 <= add_ln1192_19_fu_1101_p2;
                add_ln1192_reg_1489 <= add_ln1192_fu_828_p2;
                p_0_reg_1545 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_ap_return;
                p_1_reg_1478 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_ap_return;
                p_1_reg_1478_pp0_iter5_reg <= p_1_reg_1478;
                p_5_reg_1468 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_ap_return;
                p_5_reg_1468_pp0_iter5_reg <= p_5_reg_1468;
                p_5_reg_1468_pp0_iter6_reg <= p_5_reg_1468_pp0_iter5_reg;
                p_6_reg_1524 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_return;
                p_6_reg_1524_pp0_iter7_reg <= p_6_reg_1524;
                p_Val2_10_reg_1325_pp0_iter2_reg <= p_Val2_10_reg_1325_pp0_iter1_reg;
                p_Val2_1_reg_1346_pp0_iter2_reg <= p_Val2_1_reg_1346_pp0_iter1_reg;
                p_Val2_1_reg_1346_pp0_iter3_reg <= p_Val2_1_reg_1346_pp0_iter2_reg;
                p_Val2_1_reg_1346_pp0_iter4_reg <= p_Val2_1_reg_1346_pp0_iter3_reg;
                p_Val2_2_reg_1359_pp0_iter2_reg <= p_Val2_2_reg_1359_pp0_iter1_reg;
                p_Val2_2_reg_1359_pp0_iter3_reg <= p_Val2_2_reg_1359_pp0_iter2_reg;
                p_Val2_2_reg_1359_pp0_iter4_reg <= p_Val2_2_reg_1359_pp0_iter3_reg;
                p_Val2_2_reg_1359_pp0_iter5_reg <= p_Val2_2_reg_1359_pp0_iter4_reg;
                p_Val2_4_reg_1494 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_ap_return;
                p_Val2_5_reg_1499 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271_ap_return;
                p_Val2_8_reg_1473 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_ap_return;
                p_Val2_8_reg_1473_pp0_iter5_reg <= p_Val2_8_reg_1473;
                p_Val2_s_26_reg_1504 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_ap_return;
                p_Val2_s_reg_1333_pp0_iter2_reg <= p_Val2_s_reg_1333_pp0_iter1_reg;
                p_Val2_s_reg_1333_pp0_iter3_reg <= p_Val2_s_reg_1333_pp0_iter2_reg;
                p_Val2_s_reg_1333_pp0_iter4_reg <= p_Val2_s_reg_1333_pp0_iter3_reg;
                p_Val2_s_reg_1333_pp0_iter5_reg <= p_Val2_s_reg_1333_pp0_iter4_reg;
                p_s_reg_1463 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_ap_return;
                ret_V_19_reg_1560 <= ret_V_19_fu_1135_p2;
                ret_V_38_reg_1535 <= ret_V_38_fu_1013_p2;
                ret_V_43_reg_1509 <= ret_V_43_fu_842_p2;
                tmp_s_reg_1351_pp0_iter2_reg <= tmp_s_reg_1351_pp0_iter1_reg;
                tmp_s_reg_1351_pp0_iter3_reg <= tmp_s_reg_1351_pp0_iter2_reg;
                tmp_s_reg_1351_pp0_iter4_reg <= tmp_s_reg_1351_pp0_iter3_reg;
                tmp_s_reg_1351_pp0_iter5_reg <= tmp_s_reg_1351_pp0_iter4_reg;
                trunc_ln708_14_reg_1565 <= grp_fu_1299_p3(17 downto 9);
                trunc_ln708_3_reg_1514 <= grp_fu_1255_p4(23 downto 15);
                trunc_ln708_3_reg_1514_pp0_iter7_reg <= trunc_ln708_3_reg_1514;
                trunc_ln708_9_reg_1530 <= ret_V_36_fu_991_p2(17 downto 9);
                trunc_ln708_9_reg_1530_pp0_iter7_reg <= trunc_ln708_9_reg_1530;
                trunc_ln708_s_reg_1443 <= grp_fu_1239_p3(14 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln700_reg_1438 <= grp_fu_1233_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_reg_1388 <= mul_ln1118_fu_1198_p2;
                mul_ln1192_8_reg_1372 <= mul_ln1192_8_fu_452_p2;
                mul_ln700_2_reg_1393 <= mul_ln700_2_fu_1204_p2;
                p_Val2_10_reg_1325 <= x_V_in_sig(35 downto 27);
                p_Val2_10_reg_1325_pp0_iter1_reg <= p_Val2_10_reg_1325;
                p_Val2_1_reg_1346 <= x_V_in_sig(44 downto 36);
                p_Val2_1_reg_1346_pp0_iter1_reg <= p_Val2_1_reg_1346;
                p_Val2_2_reg_1359 <= x_V_in_sig(143 downto 135);
                p_Val2_2_reg_1359_pp0_iter1_reg <= p_Val2_2_reg_1359;
                p_Val2_s_reg_1333 <= x_V_in_sig(134 downto 126);
                p_Val2_s_reg_1333_pp0_iter1_reg <= p_Val2_s_reg_1333;
                sext_ln1118_8_reg_1383 <= sext_ln1118_8_fu_493_p1;
                tmp_s_reg_1351 <= x_V_in_sig(26 downto 18);
                tmp_s_reg_1351_pp0_iter1_reg <= tmp_s_reg_1351;
                trunc_ln708_12_reg_1408 <= r_V_22_fu_627_p2(20 downto 12);
                trunc_ln708_13_reg_1413 <= grp_fu_1218_p3(11 downto 3);
                trunc_ln708_1_reg_1367 <= grp_fu_1189_p3(14 downto 6);
                trunc_ln708_8_reg_1433 <= r_V_17_fu_1227_p2(20 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                mul_ln1192_2_reg_1550 <= grp_fu_1282_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                mul_ln1192_6_reg_1540 <= grp_fu_1274_p3;
                r_V_reg_1519 <= grp_fu_1266_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ret_V_reg_1483 <= grp_fu_1247_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_13_fu_543_p2 <= std_logic_vector(unsigned(ap_const_lv13_40) + unsigned(ret_V_35_fu_537_p2));
    add_ln1192_15_fu_967_p2 <= std_logic_vector(unsigned(ret_V_34_fu_949_p2) + unsigned(sext_ln1192_9_fu_963_p1));
    add_ln1192_16_fu_985_p2 <= std_logic_vector(unsigned(add_ln1192_15_fu_967_p2) + unsigned(sext_ln1192_10_fu_981_p1));
    add_ln1192_19_fu_1101_p2 <= std_logic_vector(signed(sext_ln1192_11_fu_1087_p1) + signed(sext_ln1192_15_fu_1097_p1));
    add_ln1192_20_fu_1091_p2 <= std_logic_vector(signed(ap_const_lv6_38) + signed(sext_ln703_5_fu_1083_p1));
    add_ln1192_26_fu_580_p2 <= std_logic_vector(signed(lhs_V_fu_362_p3) + signed(add_ln1192_27_fu_574_p2));
    add_ln1192_27_fu_574_p2 <= std_logic_vector(signed(ap_const_lv12_F90) + signed(r_V_s_fu_468_p3));
    add_ln1192_28_fu_607_p2 <= std_logic_vector(unsigned(ap_const_lv13_40) + unsigned(r_V_21_fu_601_p2));
    add_ln1192_3_fu_700_p2 <= std_logic_vector(unsigned(sub_ln1192_1_fu_694_p2) + unsigned(sub_ln1192_fu_670_p2));
    add_ln1192_6_fu_723_p2 <= std_logic_vector(unsigned(mul_ln1192_8_reg_1372) + unsigned(lhs_V_2_fu_652_p3));
    add_ln1192_7_fu_476_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(r_V_s_fu_468_p3));
    add_ln1192_fu_828_p2 <= std_logic_vector(unsigned(ap_const_lv10_1F) + unsigned(ret_V_28_fu_822_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp102_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp102 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp103_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp103 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp111_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp111 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp113_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp113 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp122_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp122 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp133_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp133 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp134_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp134 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp136_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp136 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp19_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp19 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp36_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp36 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp54_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp54 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp58_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp58 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp72_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp72 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp84_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp84 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp85_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp85 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp91_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp91 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp95_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp95 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call103_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call103 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call128_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call128 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call136_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call136 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call144_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call144 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call159_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call159 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call172_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call172 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call178_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call178 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call195_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call195 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call199_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call199 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call20_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call20 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call208_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call208 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call39_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call39 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call57_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call57 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call63_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call63 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call73_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call73 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call83_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call83 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call91_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call91 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call128 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call136 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call172 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call178 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call208 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call91 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to7)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to7 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_fu_415_p0) * signed(mul_ln1192_fu_415_p1))), 15));
    grp_fu_1189_p2 <= (p_Val2_2_fu_421_p4 & ap_const_lv6_0);
    grp_fu_1218_p0 <= sext_ln1118_fu_336_p1(9 - 1 downto 0);
    grp_fu_1218_p1 <= sext_ln1118_fu_336_p1(9 - 1 downto 0);
    grp_fu_1218_p2 <= ap_const_lv12_FD8(7 - 1 downto 0);
    grp_fu_1233_p0 <= ap_const_lv15_D0(9 - 1 downto 0);
    grp_fu_1233_p1 <= sext_ln1118_8_reg_1383(9 - 1 downto 0);
    grp_fu_1239_p0 <= ap_const_lv15_1A0(10 - 1 downto 0);
    grp_fu_1247_p0 <= sext_ln1116_fu_812_p1(5 - 1 downto 0);
    grp_fu_1247_p1 <= sext_ln1116_fu_812_p1(5 - 1 downto 0);
    grp_fu_1247_p2 <= ap_const_lv10_3F0(5 - 1 downto 0);
    grp_fu_1266_p0 <= ap_const_lv6_35(5 - 1 downto 0);
    grp_fu_1282_p0 <= ap_const_lv7_78(4 - 1 downto 0);
    grp_fu_1290_p0 <= sext_ln1118_7_fu_1080_p1(5 - 1 downto 0);
    grp_fu_1290_p1 <= sext_ln1118_7_fu_1080_p1(5 - 1 downto 0);
    grp_fu_1299_p2 <= ap_const_lv18_3F200(13 - 1 downto 0);
    grp_fu_1307_p2 <= ap_const_lv20_F9000(16 - 1 downto 0);
    grp_fu_1316_p2 <= ap_const_lv18_3F000(13 - 1 downto 0);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp19)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_241_input_V <= ret_V_26_fu_370_p2(11 downto 3);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp36)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp36) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_246_input_V <= add_ln1192_7_fu_476_p2(11 downto 3);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp54)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp54) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_251_input_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_10_fu_559_p4),9));


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp58)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp58) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_256_input_V <= add_ln1192_26_fu_580_p2(11 downto 3);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp72)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp72) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp84)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp84) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_266_input_V <= ret_V_29_fu_706_p2(11 downto 3);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp85)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp85) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_271_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp91)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp91) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_276_input_V <= ret_V_31_fu_741_p2(11 downto 3);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp95)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp95) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_281_input_V <= ret_V_33_fu_758_p2(11 downto 3);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp102)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp102) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp103)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp103) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp111)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp111) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp113)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp113) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp122) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_306_input_V <= std_logic_vector(unsigned(ap_const_lv9_B) + unsigned(p_Val2_s_reg_1333_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp133)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp133) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_input_V <= std_logic_vector(signed(ap_const_lv9_1FA) + signed(p_Val2_10_reg_1325_pp0_iter2_reg));

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp134)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp134) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp136)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp136) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_input_V <= std_logic_vector(signed(p_Val2_2_reg_1359_pp0_iter2_reg) + signed(p_Val2_10_reg_1325_pp0_iter2_reg));
    lhs_V_2_fu_652_p3 <= (p_Val2_2_reg_1359 & ap_const_lv3_0);
        lhs_V_4_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1333_pp0_iter5_reg),10));

    lhs_V_5_fu_1107_p3 <= (ret_V_38_reg_1535 & ap_const_lv3_0);
    lhs_V_6_fu_926_p3 <= (r_V_14_fu_920_p2 & ap_const_lv6_0);
    lhs_V_fu_362_p3 <= (p_Val2_s_fu_352_p4 & ap_const_lv3_0);
    mul_ln1118_4_fu_1210_p0 <= sext_ln1118_16_fu_613_p1(13 - 1 downto 0);
    mul_ln1118_4_fu_1210_p1 <= sext_ln1118_16_fu_613_p1(13 - 1 downto 0);
    mul_ln1118_fu_1198_p0 <= sext_ln1118_12_fu_549_p1(13 - 1 downto 0);
    mul_ln1118_fu_1198_p1 <= sext_ln1118_12_fu_549_p1(13 - 1 downto 0);
    mul_ln1192_8_fu_452_p0 <= sext_ln1118_3_fu_448_p1(9 - 1 downto 0);
    mul_ln1192_8_fu_452_p1 <= sext_ln1118_3_fu_448_p1(9 - 1 downto 0);
    mul_ln1192_8_fu_452_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_8_fu_452_p0) * signed(mul_ln1192_8_fu_452_p1))), 12));
    mul_ln1192_fu_415_p0 <= sext_ln1118_2_fu_397_p1(9 - 1 downto 0);
    mul_ln1192_fu_415_p1 <= sext_ln1118_2_fu_397_p1(9 - 1 downto 0);
    mul_ln700_1_fu_553_p0 <= sext_ln1118_8_fu_493_p1(9 - 1 downto 0);
    mul_ln700_1_fu_553_p1 <= sext_ln1118_8_fu_493_p1(9 - 1 downto 0);
    mul_ln700_2_fu_1204_p0 <= ap_const_lv15_1A(6 - 1 downto 0);
    mul_ln700_2_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_553_p0) * signed(mul_ln700_1_fu_553_p1))), 15));
    p_Val2_10_fu_326_p4 <= x_V_in_sig(35 downto 27);
    p_Val2_1_fu_387_p4 <= x_V_in_sig(44 downto 36);
    p_Val2_2_fu_421_p4 <= x_V_in_sig(143 downto 135);
    p_Val2_s_fu_352_p4 <= x_V_in_sig(134 downto 126);
    r_V_12_fu_340_p3 <= (p_Val2_10_fu_326_p4 & ap_const_lv2_0);
    r_V_14_fu_920_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(sext_ln1118_6_fu_916_p1));
    r_V_15_fu_517_p2 <= std_logic_vector(signed(sext_ln1118_10_fu_501_p1) + signed(sext_ln1118_11_fu_513_p1));
    r_V_16_fu_523_p2 <= std_logic_vector(signed(sext_ln1118_fu_336_p1) + signed(sext_ln1118_1_fu_348_p1));
    r_V_17_fu_1227_p0 <= ap_const_lv21_13(6 - 1 downto 0);
    r_V_19_fu_1022_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(sext_ln1253_fu_1019_p1));
    r_V_20_fu_1031_p0 <= sext_ln1116_2_fu_1028_p1(5 - 1 downto 0);
    r_V_20_fu_1031_p1 <= sext_ln1116_2_fu_1028_p1(5 - 1 downto 0);
    r_V_20_fu_1031_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_20_fu_1031_p0) * signed(r_V_20_fu_1031_p1))), 10));
    r_V_21_fu_601_p2 <= std_logic_vector(signed(sext_ln1118_15_fu_597_p1) - signed(sext_ln1118_9_fu_497_p1));
    r_V_22_fu_627_p2 <= std_logic_vector(unsigned(shl_ln1118_fu_617_p2) + unsigned(shl_ln1118_1_fu_622_p2));
    r_V_s_fu_468_p3 <= (tmp_1_fu_458_p4 & ap_const_lv4_0);
    ret_V_19_fu_1135_p2 <= std_logic_vector(signed(ap_const_lv14_3F10) + signed(ret_V_40_fu_1130_p2));
    ret_V_24_fu_1056_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(sext_ln1192_19_fu_1053_p1));
    ret_V_26_fu_370_p2 <= std_logic_vector(signed(lhs_V_fu_362_p3) - signed(sext_ln1118_1_fu_348_p1));
    ret_V_28_fu_822_p2 <= std_logic_vector(signed(sext_ln1192_2_fu_818_p1) - signed(sext_ln1192_1_fu_815_p1));
    ret_V_29_fu_706_p2 <= std_logic_vector(unsigned(ap_const_lv12_30) + unsigned(add_ln1192_3_fu_700_p2));
    ret_V_31_fu_741_p2 <= std_logic_vector(signed(ap_const_lv12_F98) + signed(sub_ln1192_2_fu_735_p2));
    ret_V_33_fu_758_p2 <= std_logic_vector(signed(ap_const_lv12_FB8) + signed(mul_ln1192_8_reg_1372));
    ret_V_34_fu_949_p2 <= std_logic_vector(signed(sext_ln703_2_fu_934_p1) + signed(sext_ln728_fu_945_p1));
    ret_V_35_fu_537_p2 <= std_logic_vector(signed(sext_ln703_3_fu_529_p1) - signed(sext_ln703_4_fu_533_p1));
    ret_V_36_fu_991_p2 <= std_logic_vector(signed(ap_const_lv18_3F400) + signed(add_ln1192_16_fu_985_p2));
    ret_V_38_fu_1013_p2 <= std_logic_vector(signed(lhs_V_4_fu_1007_p1) + signed(rhs_V_4_fu_1010_p1));
    ret_V_40_fu_1130_p2 <= std_logic_vector(signed(grp_fu_1290_p3) + signed(sext_ln1192_16_fu_1126_p1));
    ret_V_43_fu_842_p2 <= std_logic_vector(signed(sext_ln703_8_fu_834_p1) - signed(sext_ln703_9_fu_838_p1));
    ret_V_8_fu_899_p2 <= std_logic_vector(signed(ap_const_lv6_38) + signed(sext_ln703_1_fu_896_p1));
    rhs_V_1_fu_728_p3 <= (p_Val2_10_reg_1325 & ap_const_lv3_0);
    rhs_V_2_fu_938_p3 <= (tmp_s_reg_1351_pp0_iter5_reg & ap_const_lv8_0);
        rhs_V_4_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1359_pp0_iter5_reg),10));

        sext_ln1116_2_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_reg_1478_pp0_iter5_reg),10));

        sext_ln1116_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_s_reg_1463),10));

        sext_ln1118_10_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_352_p4),12));

        sext_ln1118_11_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_505_p3),12));

        sext_ln1118_12_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_13_fu_543_p2),21));

        sext_ln1118_15_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_362_p3),13));

        sext_ln1118_16_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_28_fu_607_p2),21));

        sext_ln1118_1_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_12_fu_340_p3),12));

        sext_ln1118_2_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_fu_387_p4),15));

        sext_ln1118_3_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_401_p4),12));

        sext_ln1118_6_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_909_p3),11));

        sext_ln1118_7_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1524),10));

        sext_ln1118_8_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_352_p4),15));

        sext_ln1118_9_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_fu_352_p4),13));

        sext_ln1118_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_10_fu_326_p4),12));

        sext_ln1192_10_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_973_p3),18));

        sext_ln1192_11_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_316_ap_return),7));

        sext_ln1192_15_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_20_fu_1091_p2),7));

        sext_ln1192_16_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_1118_p3),14));

        sext_ln1192_19_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_43_reg_1509),7));

        sext_ln1192_1_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1346_pp0_iter4_reg),10));

        sext_ln1192_2_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_261_ap_return),10));

        sext_ln1192_3_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_659_p3),12));

        sext_ln1192_4_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_683_p3),12));

        sext_ln1192_9_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_955_p3),18));

        sext_ln1253_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1473_pp0_iter5_reg),6));

        sext_ln703_1_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_26_reg_1504),6));

        sext_ln703_2_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_6_fu_926_p3),18));

        sext_ln703_3_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_15_fu_517_p2),13));

        sext_ln703_4_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_16_fu_523_p2),13));

        sext_ln703_5_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_311_ap_return),6));

        sext_ln703_8_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_286_ap_return),6));

        sext_ln703_9_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_291_ap_return),6));

        sext_ln728_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_938_p3),18));

    shl_ln1118_1_fu_622_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_4_fu_1210_p2),to_integer(unsigned('0' & ap_const_lv21_2(21-1 downto 0)))));
    shl_ln1118_3_fu_659_p3 <= (p_Val2_2_reg_1359 & ap_const_lv1_0);
    shl_ln1118_4_fu_676_p3 <= (tmp_s_reg_1351 & ap_const_lv3_0);
    shl_ln1118_5_fu_683_p3 <= (tmp_s_reg_1351 & ap_const_lv1_0);
    shl_ln1118_8_fu_505_p3 <= (p_Val2_s_fu_352_p4 & ap_const_lv2_0);
    shl_ln1118_fu_617_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_4_fu_1210_p2),to_integer(unsigned('0' & ap_const_lv21_5(21-1 downto 0)))));
    shl_ln1_fu_909_p3 <= (p_Val2_s_reg_1333_pp0_iter5_reg & ap_const_lv1_0);
    sub_ln1192_1_fu_694_p2 <= std_logic_vector(unsigned(shl_ln1118_4_fu_676_p3) - unsigned(sext_ln1192_4_fu_690_p1));
    sub_ln1192_2_fu_735_p2 <= std_logic_vector(unsigned(add_ln1192_6_fu_723_p2) - unsigned(rhs_V_1_fu_728_p3));
    sub_ln1192_fu_670_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_666_p1) - signed(lhs_V_2_fu_652_p3));
    tmp_10_fu_859_p3 <= (ret_V_reg_1483 & ap_const_lv6_0);
    tmp_11_fu_1159_p4 <= grp_fu_1307_p3(19 downto 12);
    tmp_12_fu_1041_p3 <= (r_V_19_fu_1022_p2 & ap_const_lv3_0);
    tmp_1_fu_458_p4 <= x_V_in_sig(34 downto 27);
    tmp_2_fu_1066_p3 <= (p_5_reg_1468_pp0_iter6_reg & ap_const_lv1_0);
    tmp_3_fu_955_p1 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_296_ap_return;
    tmp_3_fu_955_p3 <= (tmp_3_fu_955_p1 & ap_const_lv8_0);
    tmp_4_fu_973_p3 <= (grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_301_ap_return & ap_const_lv8_0);
    tmp_5_fu_1118_p3 <= (grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_321_ap_return & ap_const_lv3_0);
    tmp_9_fu_873_p3 <= (p_Val2_4_reg_1494 & ap_const_lv15_0);
    tmp_fu_848_p3 <= (ret_V_reg_1483 & ap_const_lv8_0);
    tmp_s_fu_401_p4 <= x_V_in_sig(26 downto 18);
    trunc_ln708_10_fu_559_p4 <= x_V_in_sig(143 downto 138);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln708_3_reg_1514_pp0_iter7_reg;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_1_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_1159_p4),9));


    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_9_reg_1530_pp0_iter7_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= grp_fu_1316_p3(17 downto 9);

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= trunc_ln708_14_reg_1565;

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
