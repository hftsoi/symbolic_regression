// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_am_addmul_11s_6s_24_1_1.h"
#include "myproject_mac_muladd_12s_19s_26s_29_1_1.h"
#include "myproject_ama_addmulsub_15s_11s_14s_25s_26_1_1.h"
#include "myproject_ama_addmuladd_17s_13s_10s_21s_26_1_1.h"
#include "myproject_mul_mul_24s_11ns_35_1_1.h"

namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > x_V_ap_vld;
    sc_in< sc_lv<176> > x_V;
    sc_out< sc_lv<11> > y_0_V;
    sc_out< sc_logic > y_0_V_ap_vld;
    sc_out< sc_lv<11> > y_1_V;
    sc_out< sc_logic > y_1_V_ap_vld;
    sc_out< sc_lv<11> > y_2_V;
    sc_out< sc_logic > y_2_V_ap_vld;
    sc_out< sc_lv<11> > y_3_V;
    sc_out< sc_logic > y_3_V_ap_vld;
    sc_out< sc_lv<11> > y_4_V;
    sc_out< sc_logic > y_4_V_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    myproject_am_addmul_11s_6s_24_1_1<1,1,11,6,24>* myproject_am_addmul_11s_6s_24_1_1_U1;
    myproject_mac_muladd_12s_19s_26s_29_1_1<1,1,12,19,26,29>* myproject_mac_muladd_12s_19s_26s_29_1_1_U2;
    myproject_ama_addmulsub_15s_11s_14s_25s_26_1_1<1,1,15,11,14,25,26>* myproject_ama_addmulsub_15s_11s_14s_25s_26_1_1_U3;
    myproject_ama_addmuladd_17s_13s_10s_21s_26_1_1<1,1,17,13,10,21,26>* myproject_ama_addmuladd_17s_13s_10s_21s_26_1_1_U4;
    myproject_mul_mul_24s_11ns_35_1_1<1,1,24,11,35>* myproject_mul_mul_24s_11ns_35_1_1_U5;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > x_V_ap_vld_in_sig;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<176> > x_V_preg;
    sc_signal< sc_lv<176> > x_V_in_sig;
    sc_signal< sc_logic > x_V_ap_vld_preg;
    sc_signal< sc_logic > x_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<24> > grp_fu_471_p2;
    sc_signal< sc_lv<24> > r_V_1_reg_514;
    sc_signal< sc_lv<11> > p_Val2_2_reg_520;
    sc_signal< sc_lv<9> > tmp_reg_525;
    sc_signal< sc_lv<9> > tmp_reg_525_pp0_iter1_reg;
    sc_signal< sc_lv<11> > trunc_ln708_9_reg_530;
    sc_signal< sc_lv<11> > trunc_ln708_9_reg_530_pp0_iter1_reg;
    sc_signal< sc_lv<11> > trunc_ln708_s_reg_535;
    sc_signal< sc_lv<11> > trunc_ln708_s_reg_535_pp0_iter1_reg;
    sc_signal< sc_lv<35> > mul_ln700_fu_508_p2;
    sc_signal< sc_lv<35> > mul_ln700_reg_540;
    sc_signal< sc_lv<12> > add_ln1192_fu_432_p2;
    sc_signal< sc_lv<12> > add_ln1192_reg_545;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<11> > p_Val2_s_fu_170_p4;
    sc_signal< sc_lv<11> > p_Val2_3_fu_204_p4;
    sc_signal< sc_lv<12> > rhs_V_1_fu_214_p1;
    sc_signal< sc_lv<12> > add_ln1192_2_fu_222_p2;
    sc_signal< sc_lv<29> > grp_fu_477_p3;
    sc_signal< sc_lv<11> > p_Val2_1_fu_184_p4;
    sc_signal< sc_lv<14> > shl_ln1118_4_fu_241_p3;
    sc_signal< sc_lv<15> > sext_ln1118_2_fu_249_p1;
    sc_signal< sc_lv<15> > shl_ln1118_5_fu_267_p3;
    sc_signal< sc_lv<13> > shl_ln1118_6_fu_279_p3;
    sc_signal< sc_lv<14> > sext_ln1118_6_fu_287_p1;
    sc_signal< sc_lv<14> > sext_ln1118_4_fu_263_p1;
    sc_signal< sc_lv<14> > r_V_7_fu_291_p2;
    sc_signal< sc_lv<14> > add_ln1192_4_fu_297_p2;
    sc_signal< sc_lv<15> > r_V_6_fu_253_p2;
    sc_signal< sc_lv<25> > lhs_V_1_fu_307_p3;
    sc_signal< sc_lv<15> > shl_ln1118_8_fu_319_p3;
    sc_signal< sc_lv<16> > sext_ln1118_7_fu_327_p1;
    sc_signal< sc_lv<16> > sext_ln1118_1_fu_218_p1;
    sc_signal< sc_lv<16> > r_V_8_fu_331_p2;
    sc_signal< sc_lv<26> > rhs_V_fu_337_p3;
    sc_signal< sc_lv<26> > grp_fu_486_p4;
    sc_signal< sc_lv<26> > add_ln1192_5_fu_345_p2;
    sc_signal< sc_lv<26> > ret_V_12_fu_350_p2;
    sc_signal< sc_lv<12> > lhs_V_2_fu_366_p1;
    sc_signal< sc_lv<12> > ret_V_13_fu_370_p2;
    sc_signal< sc_lv<17> > lhs_V_3_fu_376_p3;
    sc_signal< sc_lv<26> > grp_fu_497_p4;
    sc_signal< sc_lv<24> > shl_ln1193_fu_397_p2;
    sc_signal< sc_lv<24> > sub_ln1193_1_fu_402_p2;
    sc_signal< sc_lv<24> > add_ln1193_fu_408_p2;
    sc_signal< sc_lv<24> > ret_V_1_fu_413_p2;
    sc_signal< sc_lv<12> > sext_ln1192_fu_423_p1;
    sc_signal< sc_lv<12> > ret_V_9_fu_426_p2;
    sc_signal< sc_lv<35> > mul_ln700_1_fu_444_p0;
    sc_signal< sc_lv<12> > mul_ln700_1_fu_444_p1;
    sc_signal< sc_lv<36> > mul_ln700_1_fu_444_p2;
    sc_signal< sc_lv<36> > ret_V_10_fu_450_p2;
    sc_signal< sc_lv<6> > grp_fu_471_p1;
    sc_signal< sc_lv<19> > grp_fu_477_p1;
    sc_signal< sc_lv<26> > grp_fu_477_p2;
    sc_signal< sc_lv<13> > grp_fu_497_p1;
    sc_signal< sc_lv<10> > grp_fu_497_p2;
    sc_signal< sc_lv<21> > grp_fu_497_p3;
    sc_signal< sc_lv<11> > mul_ln700_fu_508_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<176> ap_const_lv176_lc_1;
    static const sc_lv<11> ap_const_lv11_7D7;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_9A;
    static const sc_lv<32> ap_const_lv32_A4;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_A5;
    static const sc_lv<32> ap_const_lv32_AF;
    static const sc_lv<12> ap_const_lv12_E89;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<14> ap_const_lv14_3FA3;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<26> ap_const_lv26_3E50800;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<24> ap_const_lv24_2;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<24> ap_const_lv24_3400;
    static const sc_lv<12> ap_const_lv12_FE1;
    static const sc_lv<12> ap_const_lv12_7D;
    static const sc_lv<36> ap_const_lv36_3E000000;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<12> ap_const_lv12_FE2;
    static const sc_lv<29> ap_const_lv29_1FFDD5FF;
    static const sc_lv<29> ap_const_lv29_1E400000;
    static const sc_lv<18> ap_const_lv18_3F101;
    static const sc_lv<26> ap_const_lv26_3FFFEAA;
    static const sc_lv<26> ap_const_lv26_3F08000;
    static const sc_lv<35> ap_const_lv35_321;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_2_fu_222_p2();
    void thread_add_ln1192_4_fu_297_p2();
    void thread_add_ln1192_5_fu_345_p2();
    void thread_add_ln1192_fu_432_p2();
    void thread_add_ln1193_fu_408_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_grp_fu_471_p1();
    void thread_grp_fu_477_p1();
    void thread_grp_fu_477_p2();
    void thread_grp_fu_497_p1();
    void thread_grp_fu_497_p2();
    void thread_grp_fu_497_p3();
    void thread_lhs_V_1_fu_307_p3();
    void thread_lhs_V_2_fu_366_p1();
    void thread_lhs_V_3_fu_376_p3();
    void thread_mul_ln700_1_fu_444_p0();
    void thread_mul_ln700_1_fu_444_p1();
    void thread_mul_ln700_1_fu_444_p2();
    void thread_mul_ln700_fu_508_p1();
    void thread_p_Val2_1_fu_184_p4();
    void thread_p_Val2_3_fu_204_p4();
    void thread_p_Val2_s_fu_170_p4();
    void thread_r_V_6_fu_253_p2();
    void thread_r_V_7_fu_291_p2();
    void thread_r_V_8_fu_331_p2();
    void thread_ret_V_10_fu_450_p2();
    void thread_ret_V_12_fu_350_p2();
    void thread_ret_V_13_fu_370_p2();
    void thread_ret_V_1_fu_413_p2();
    void thread_ret_V_9_fu_426_p2();
    void thread_rhs_V_1_fu_214_p1();
    void thread_rhs_V_fu_337_p3();
    void thread_sext_ln1118_1_fu_218_p1();
    void thread_sext_ln1118_2_fu_249_p1();
    void thread_sext_ln1118_4_fu_263_p1();
    void thread_sext_ln1118_6_fu_287_p1();
    void thread_sext_ln1118_7_fu_327_p1();
    void thread_sext_ln1192_fu_423_p1();
    void thread_shl_ln1118_4_fu_241_p3();
    void thread_shl_ln1118_5_fu_267_p3();
    void thread_shl_ln1118_6_fu_279_p3();
    void thread_shl_ln1118_8_fu_319_p3();
    void thread_shl_ln1193_fu_397_p2();
    void thread_sub_ln1193_1_fu_402_p2();
    void thread_x_V_ap_vld_in_sig();
    void thread_x_V_blk_n();
    void thread_x_V_in_sig();
    void thread_y_0_V();
    void thread_y_0_V_ap_vld();
    void thread_y_1_V();
    void thread_y_1_V_ap_vld();
    void thread_y_2_V();
    void thread_y_2_V_ap_vld();
    void thread_y_3_V();
    void thread_y_3_V_ap_vld();
    void thread_y_4_V();
    void thread_y_4_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
