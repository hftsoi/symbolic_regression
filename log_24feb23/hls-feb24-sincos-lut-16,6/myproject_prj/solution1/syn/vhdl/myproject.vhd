-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (255 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.348429,HLS_SYN_LAT=10,HLS_SYN_TPT=1,HLS_SYN_MEM=38,HLS_SYN_DSP=104,HLS_SYN_FF=18257,HLS_SYN_LUT=29500,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv16_FE74 : STD_LOGIC_VECTOR (15 downto 0) := "1111111001110100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv26_C8000 : STD_LOGIC_VECTOR (25 downto 0) := "00000011001000000000000000";
    constant ap_const_lv16_12A : STD_LOGIC_VECTOR (15 downto 0) := "0000000100101010";
    constant ap_const_lv16_FFC8 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111001000";
    constant ap_const_lv18_2C9 : STD_LOGIC_VECTOR (17 downto 0) := "000000001011001001";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv39_32 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000110010";
    constant ap_const_lv18_232 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000110010";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_CFB : STD_LOGIC_VECTOR (16 downto 0) := "00000110011111011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1B6 : STD_LOGIC_VECTOR (12 downto 0) := "0000110110110";
    constant ap_const_lv36_FFFFFFFCE : STD_LOGIC_VECTOR (35 downto 0) := "111111111111111111111111111111001110";
    constant ap_const_lv13_1E4 : STD_LOGIC_VECTOR (12 downto 0) := "0000111100100";
    constant ap_const_lv37_6B000000 : STD_LOGIC_VECTOR (36 downto 0) := "0000001101011000000000000000000000000";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv76_FC82000000000000000 : STD_LOGIC_VECTOR (75 downto 0) := "1111110010000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv96_FC2F00000000000000000000 : STD_LOGIC_VECTOR (95 downto 0) := "111111000010111100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv86_3F06000000000000000000 : STD_LOGIC_VECTOR (85 downto 0) := "11111100000110000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv26_2D5 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001011010101";
    constant ap_const_lv26_18B : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110001011";
    constant ap_const_lv26_138C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001001110001100";
    constant ap_const_lv26_3FFFD2B : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110100101011";
    constant ap_const_lv26_973 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000100101110011";
    constant ap_const_lv26_DA800 : STD_LOGIC_VECTOR (25 downto 0) := "00000011011010100000000000";
    constant ap_const_lv28_973 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000100101110011";
    constant ap_const_lv28_46B400 : STD_LOGIC_VECTOR (27 downto 0) := "0000010001101011010000000000";
    constant ap_const_lv26_B77 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000101101110111";
    constant ap_const_lv26_2C800 : STD_LOGIC_VECTOR (25 downto 0) := "00000000101100100000000000";
    constant ap_const_lv26_1C4 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000111000100";
    constant ap_const_lv26_62400 : STD_LOGIC_VECTOR (25 downto 0) := "00000001100010010000000000";
    constant ap_const_lv20_5B : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001011011";
    constant ap_const_lv26_3FFFD45 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110101000101";
    constant ap_const_lv25_BB : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010111011";
    constant ap_const_lv23_5B : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001011011";
    constant ap_const_lv22_32 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000110010";
    constant ap_const_lv37_1FFFFFFD45 : STD_LOGIC_VECTOR (36 downto 0) := "1111111111111111111111111110101000101";
    constant ap_const_lv24_EC8C00 : STD_LOGIC_VECTOR (23 downto 0) := "111011001000110000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (255 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_10_fu_408_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_10_reg_1443 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_10_reg_1443_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_fu_422_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1452 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1452_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1452_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1452_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_1452_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_fu_432_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1458 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1458_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1458_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1458_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_1458_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_2_fu_442_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_2_reg_1466 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_2_reg_1466_pp0_iter1_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_2_reg_1466_pp0_iter2_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_2_reg_1466_pp0_iter3_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_3_fu_446_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1472 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1472_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1472_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_1472_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_fu_1208_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_reg_1481 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_2_reg_1486 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_7_fu_496_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_7_reg_1491 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_7_reg_1491_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_9_reg_1502 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_reg_1507 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_6_reg_1512 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1246_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_21_reg_1517 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln708_s_reg_1522 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_2_fu_564_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_2_reg_1527 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_fu_567_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_reg_1532 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_reg_1532_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_reg_1532_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_13_fu_1263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_13_reg_1538 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln708_4_reg_1543 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_7_reg_1548 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_10_reg_1553 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_35_fu_669_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_35_reg_1558 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_35_reg_1558_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_0_reg_1563 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_0_reg_1563_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_s_reg_1569 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_1574 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_4_reg_1579 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_5_reg_1584 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_reg_1589 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_reg_1589_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_14_fu_677_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_14_reg_1595 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_16_fu_1296_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_16_reg_1600 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_9_reg_1605 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_28_fu_1302_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_28_reg_1610 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1308_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_7_reg_1615 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_32_fu_751_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_32_reg_1620 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_33_fu_1316_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_33_reg_1625 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_33_reg_1625_pp0_iter5_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_3_reg_1631 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_3_reg_1631_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_3_reg_1631_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_3_reg_1631_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_7_fu_1322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_reg_1637 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_1328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_reg_1642 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_17_fu_766_p2 : STD_LOGIC_VECTOR (68 downto 0);
    signal r_V_17_reg_1647 : STD_LOGIC_VECTOR (68 downto 0);
    signal r_V_18_fu_1334_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_18_reg_1652 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln728_1_fu_1340_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln728_1_reg_1657 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_19_fu_1345_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_19_reg_1662 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_7_reg_1667 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_29_fu_1351_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_29_reg_1672 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1357_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal ret_V_30_reg_1677 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_1_reg_1682 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_2_reg_1687 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_5_fu_827_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_5_reg_1692 : STD_LOGIC_VECTOR (50 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_8_reg_1697 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_9_reg_1702 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_9_reg_1702_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln700_1_fu_853_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln700_1_reg_1707 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_10_fu_862_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_10_reg_1712 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_1373_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_10_reg_1717 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1381_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal ret_V_39_reg_1732 : STD_LOGIC_VECTOR (36 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_5_reg_1737 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_23_fu_1389_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_23_reg_1742 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_24_fu_1395_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_24_reg_1747 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_10_reg_1752 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_1_reg_1757 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_1757_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_1757_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_1757_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_2_fu_976_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln1192_2_reg_1762 : STD_LOGIC_VECTOR (61 downto 0);
    signal sub_ln700_fu_1001_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal sub_ln700_reg_1767 : STD_LOGIC_VECTOR (55 downto 0);
    signal grp_fu_888_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal mul_ln700_2_reg_1772 : STD_LOGIC_VECTOR (75 downto 0);
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_8_reg_1777 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_20_fu_1019_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal r_V_20_reg_1782 : STD_LOGIC_VECTOR (58 downto 0);
    signal r_V_21_fu_1419_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_21_reg_1787 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_6_reg_1792 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_25_fu_1034_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_25_reg_1797 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_26_fu_1425_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_26_reg_1802 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal p_11_reg_1807 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_3_fu_1049_p2 : STD_LOGIC_VECTOR (72 downto 0);
    signal mul_ln1192_3_reg_1812 : STD_LOGIC_VECTOR (72 downto 0);
    signal trunc_ln708_5_reg_1817 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_5_reg_1817_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_5_reg_1817_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_6_fu_1100_p2 : STD_LOGIC_VECTOR (80 downto 0);
    signal mul_ln1192_6_reg_1822 : STD_LOGIC_VECTOR (80 downto 0);
    signal r_V_22_fu_1431_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_22_reg_1827 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_9_fu_1115_p2 : STD_LOGIC_VECTOR (67 downto 0);
    signal mul_ln1192_9_reg_1832 : STD_LOGIC_VECTOR (67 downto 0);
    signal r_V_27_fu_1437_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_27_reg_1837 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1130_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal mul_ln1192_4_reg_1872 : STD_LOGIC_VECTOR (75 downto 0);
    signal grp_fu_1142_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal mul_ln1192_7_reg_1877 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_1154_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal mul_ln1192_11_reg_1882 : STD_LOGIC_VECTOR (85 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call34 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call34 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call34 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call34 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call34 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call34 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call34 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call34 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call34 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call34 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call34 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp21 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call67 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call67 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call67 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call67 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call67 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call67 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call67 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call67 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call67 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call67 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call67 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp25 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call72 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call72 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call72 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call72 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call72 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call72 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call72 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call72 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call72 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call72 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call72 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp27 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call87 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call87 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call87 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call87 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call87 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call87 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call87 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call87 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call87 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call87 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call87 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp33 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call107 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call107 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call107 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call107 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call107 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call107 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call107 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call107 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call107 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call107 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call107 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp51 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call184 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call184 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call184 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call184 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call184 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call184 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call184 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call184 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call184 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call184 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call184 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp92 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call224 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call224 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call224 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call224 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call224 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call224 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call224 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call224 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call224 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call224 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call224 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp100 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call199 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call199 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call199 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call199 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call199 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call199 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call199 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call199 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call199 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call199 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call199 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp129 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call236 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call236 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call236 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call236 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call236 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call236 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call236 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call236 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call236 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call236 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call236 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp132 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call27 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call27 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call27 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call27 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call27 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call27 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call27 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call27 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call27 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call27 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call27 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp19 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call77 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call77 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call77 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call77 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call77 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call77 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call77 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call77 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call77 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call77 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call77 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp29 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call167 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call167 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call167 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call167 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call167 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call167 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call167 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call167 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call167 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call167 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call167 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp34 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call83 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call83 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call83 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call83 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call83 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call83 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call83 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call83 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call83 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call83 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call83 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp49 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call215 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call215 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call215 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call215 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call215 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call215 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call215 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call215 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call215 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call215 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call215 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp59 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call48 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call48 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call48 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call48 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call48 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call48 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call48 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call48 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call48 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call48 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call48 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp67 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call57 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call57 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call57 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call57 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call57 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call57 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call57 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call57 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call57 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call57 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call57 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp70 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call97 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call97 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call97 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call97 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call97 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call97 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call97 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call97 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call97 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call97 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call97 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp76 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_input_V : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call103 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call103 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call103 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call103 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call103 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call103 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call103 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call103 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call103 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call103 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call103 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp78 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call160 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call160 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call160 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call160 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call160 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call160 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call160 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call160 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call160 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call160 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call160 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp126 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_31_fu_1214_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1221_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1230_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_31_fu_528_p2 : STD_LOGIC_VECTOR (25 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_31_fu_528_p2 : signal is "no";
    signal grp_fu_1237_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1254_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln703_fu_570_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_3_fu_590_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_36_fu_593_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_4_fu_599_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_14_fu_603_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1269_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln700_3_fu_1278_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal rhs_V_5_fu_635_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_41_fu_642_p2 : STD_LOGIC_VECTOR (35 downto 0);
    attribute use_dsp48 of ret_V_41_fu_642_p2 : signal is "no";
    signal grp_fu_1285_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_2_fu_666_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_14_fu_677_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_3_fu_683_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_12_fu_687_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_30_fu_709_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_1_fu_714_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_33_fu_717_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_723_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_fu_736_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1253_fu_747_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_17_fu_766_p0 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_17_fu_766_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln703_4_fu_772_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_17_fu_775_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_fu_803_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_7_fu_800_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln700_11_fu_810_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_8_fu_814_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_5_fu_827_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_5_fu_827_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln700_6_fu_836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln728_fu_1366_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_1_fu_842_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln700_6_fu_836_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln700_13_fu_849_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_10_fu_862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_1_fu_871_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal lhs_V_6_fu_897_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal sext_ln703_5_fu_908_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_24_fu_911_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_fu_930_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_29_fu_1412_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_fu_944_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_1401_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal rhs_V_fu_951_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_32_fu_955_p2 : STD_LOGIC_VECTOR (35 downto 0);
    attribute use_dsp48 of ret_V_32_fu_955_p2 : signal is "no";
    signal mul_ln1192_2_fu_976_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_2_fu_976_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal mul_ln700_1_fu_988_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln700_1_fu_988_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal shl_ln_fu_994_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal mul_ln700_1_fu_988_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal ret_V_19_fu_1007_p2 : STD_LOGIC_VECTOR (36 downto 0);
    attribute use_dsp48 of ret_V_19_fu_1007_p2 : signal is "no";
    signal r_V_20_fu_1019_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_20_fu_1019_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_25_fu_1034_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_25_fu_1034_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1192_3_fu_1049_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_3_fu_1049_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln700_1_fu_1055_p3 : STD_LOGIC_VECTOR (75 downto 0);
    signal tmp_7_fu_1067_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal sub_ln700_1_fu_1062_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal rhs_V_4_fu_1074_p1 : STD_LOGIC_VECTOR (75 downto 0);
    signal ret_V_38_fu_1078_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal mul_ln1192_6_fu_1100_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_6_fu_1100_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal mul_ln1192_9_fu_1115_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_9_fu_1115_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_34_fu_1160_p2 : STD_LOGIC_VECTOR (75 downto 0);
    signal ret_V_42_fu_1176_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal ret_V_46_fu_1192_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal mul_ln1192_fu_1208_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_31_fu_1214_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1221_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1221_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1230_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1230_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1237_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1237_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_3_fu_543_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1237_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1246_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1246_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1254_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1254_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1254_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_13_fu_1263_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_12_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_13_fu_1263_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1269_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_14_fu_609_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1269_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1269_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1285_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1285_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1285_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_16_fu_1296_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_15_fu_693_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_16_fu_1296_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_28_fu_1302_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_33_fu_1316_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_1_fu_757_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_33_fu_1316_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_7_fu_1322_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_fu_697_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_fu_1322_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_9_fu_1328_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_8_fu_706_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_1328_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_18_fu_1334_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_4_fu_700_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_18_fu_1334_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_1_fu_1340_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_1_fu_1340_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_19_fu_1345_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1116_7_fu_781_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_19_fu_1345_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_29_fu_1351_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1357_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1357_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln728_fu_1366_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1381_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_23_fu_1389_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1116_10_fu_917_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_23_fu_1389_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_24_fu_1395_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_11_fu_921_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_24_fu_1395_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1401_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_29_fu_1412_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_fu_941_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_29_fu_1412_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_21_fu_1419_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_8_fu_1025_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_21_fu_1419_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_26_fu_1425_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_12_fu_1040_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_26_fu_1425_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_22_fu_1431_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_9_fu_1106_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_22_fu_1431_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_27_fu_1437_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1116_13_fu_1121_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_27_fu_1437_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_888_ce : STD_LOGIC;
    signal grp_fu_1130_ce : STD_LOGIC;
    signal grp_fu_1142_ce : STD_LOGIC;
    signal grp_fu_1154_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component cos_lut_ap_fixed_16_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component sin_lut_ap_fixed_16_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mul_24s_69s_76_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (68 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (75 downto 0) );
    end component;


    component myproject_mul_12s_73s_76_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (72 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (75 downto 0) );
    end component;


    component myproject_mul_24s_81s_96_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (80 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (95 downto 0) );
    end component;


    component myproject_mul_24s_68s_86_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (67 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (85 downto 0) );
    end component;


    component myproject_mul_mul_11ns_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_10ns_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_14ns_16s_26ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_11s_16s_26s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_13ns_16s_21ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_13ns_16s_24ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mac_muladd_13ns_16s_19ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mac_mulsub_18s_18s_26ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_16s_28s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_ama_addmuladd_16s_16s_10ns_20ns_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_18s_18s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_mul_mul_8ns_12s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_mul_sub_12s_17s_22s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_mul_12s_12s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_11s_16s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_13s_13s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_mul_9ns_17s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_ama_addmul_sub_16s_12s_8ns_20s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mul_mul_7ns_16s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_muladd_16s_12s_26s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mac_muladd_11s_26s_36s_37_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        din2 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (36 downto 0) );
    end component;


    component myproject_ama_addmuladd_22s_23s_12s_35s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (34 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;



begin
    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_ce,
        input_V => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_input_V,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_return);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_ce,
        input_V => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_input_V,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_return);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_ce,
        input_V => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_input_V,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_return);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_ce,
        input_V => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_input_V,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_return);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_ce,
        input_V => p_Val2_3_reg_1472,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_return);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_ce,
        input_V => trunc_ln708_6_reg_1512,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_return);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_ce,
        input_V => trunc_ln708_s_reg_1522,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_return);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_ce,
        input_V => trunc_ln708_7_reg_1548,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_return);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309 : component cos_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start,
        ap_done => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_ce,
        input_V => trunc_ln708_10_reg_1553,
        ap_return => grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_ce,
        input_V => trunc_ln708_2_reg_1486,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_ce,
        input_V => trunc_ln708_9_reg_1502,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_ce,
        input_V => trunc_ln_reg_1507,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_ce,
        input_V => p_Val2_10_reg_1443_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_ce,
        input_V => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_input_V,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_return);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399 : component sin_lut_ap_fixed_16_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start,
        ap_done => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_ce,
        input_V => trunc_ln708_4_reg_1543,
        ap_return => grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_return);

    myproject_mul_24s_69s_76_2_1_U17 : component myproject_mul_24s_69s_76_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 24,
        din1_WIDTH => 69,
        dout_WIDTH => 76)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_18_reg_1652,
        din1 => r_V_17_reg_1647,
        ce => grp_fu_888_ce,
        dout => grp_fu_888_p2);

    myproject_mul_12s_73s_76_2_1_U18 : component myproject_mul_12s_73s_76_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 73,
        dout_WIDTH => 76)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_3_reg_1631_pp0_iter7_reg,
        din1 => mul_ln1192_3_reg_1812,
        ce => grp_fu_1130_ce,
        dout => grp_fu_1130_p2);

    myproject_mul_24s_81s_96_2_1_U19 : component myproject_mul_24s_81s_96_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 24,
        din1_WIDTH => 81,
        dout_WIDTH => 96)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_22_reg_1827,
        din1 => mul_ln1192_6_reg_1822,
        ce => grp_fu_1142_ce,
        dout => grp_fu_1142_p2);

    myproject_mul_24s_68s_86_2_1_U20 : component myproject_mul_24s_68s_86_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 24,
        din1_WIDTH => 68,
        dout_WIDTH => 86)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_27_reg_1837,
        din1 => mul_ln1192_9_reg_1832,
        ce => grp_fu_1154_ce,
        dout => grp_fu_1154_p2);

    myproject_mul_mul_11ns_16s_26_1_1_U21 : component myproject_mul_mul_11ns_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln1192_fu_1208_p0,
        din1 => p_Val2_3_fu_446_p4,
        dout => mul_ln1192_fu_1208_p2);

    myproject_mul_mul_10ns_16s_26_1_1_U22 : component myproject_mul_mul_10ns_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => r_V_31_fu_1214_p0,
        din1 => p_Val2_2_fu_432_p4,
        dout => r_V_31_fu_1214_p2);

    myproject_mac_muladd_14ns_16s_26ns_26_1_1_U23 : component myproject_mac_muladd_14ns_16s_26ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1221_p0,
        din1 => p_Val2_10_fu_408_p4,
        din2 => grp_fu_1221_p2,
        dout => grp_fu_1221_p3);

    myproject_mac_muladd_11s_16s_26s_26_1_1_U24 : component myproject_mac_muladd_11s_16s_26s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 16,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1230_p0,
        din1 => grp_fu_1230_p1,
        din2 => mul_ln1192_reg_1481,
        dout => grp_fu_1230_p3);

    myproject_mac_muladd_13ns_16s_21ns_26_1_1_U25 : component myproject_mac_muladd_13ns_16s_21ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1237_p0,
        din1 => grp_fu_1237_p1,
        din2 => grp_fu_1237_p2,
        dout => grp_fu_1237_p3);

    myproject_mac_muladd_13ns_16s_24ns_28_1_1_U26 : component myproject_mac_muladd_13ns_16s_24ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_1246_p0,
        din1 => p_Val2_10_reg_1443,
        din2 => grp_fu_1246_p2,
        dout => grp_fu_1246_p3);

    myproject_mac_muladd_13ns_16s_19ns_26_1_1_U27 : component myproject_mac_muladd_13ns_16s_19ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 16,
        din2_WIDTH => 19,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1254_p0,
        din1 => grp_fu_1254_p1,
        din2 => grp_fu_1254_p2,
        dout => grp_fu_1254_p3);

    myproject_mul_mul_16s_16s_32_1_1_U28 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_13_fu_1263_p0,
        din1 => r_V_13_fu_1263_p1,
        dout => r_V_13_fu_1263_p2);

    myproject_mac_mulsub_18s_18s_26ns_26_1_1_U29 : component myproject_mac_mulsub_18s_18s_26ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 26,
        dout_WIDTH => 26)
    port map (
        din0 => grp_fu_1269_p0,
        din1 => grp_fu_1269_p1,
        din2 => grp_fu_1269_p2,
        dout => grp_fu_1269_p3);

    myproject_mul_mul_16s_28s_36_1_1_U30 : component myproject_mul_mul_16s_28s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 28,
        dout_WIDTH => 36)
    port map (
        din0 => p_Val2_10_reg_1443_pp0_iter1_reg,
        din1 => ret_V_21_reg_1517,
        dout => mul_ln700_3_fu_1278_p2);

    myproject_ama_addmuladd_16s_16s_10ns_20ns_26_1_1_U31 : component myproject_ama_addmuladd_16s_16s_10ns_20ns_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 10,
        din3_WIDTH => 20,
        dout_WIDTH => 26)
    port map (
        din0 => p_Val2_2_reg_1458_pp0_iter1_reg,
        din1 => grp_fu_1285_p1,
        din2 => grp_fu_1285_p2,
        din3 => grp_fu_1285_p3,
        dout => grp_fu_1285_p4);

    myproject_mul_mul_18s_18s_36_1_1_U32 : component myproject_mul_mul_18s_18s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        din0 => r_V_16_fu_1296_p0,
        din1 => r_V_16_fu_1296_p1,
        dout => r_V_16_fu_1296_p2);

    myproject_mul_mul_8ns_12s_20_1_1_U33 : component myproject_mul_mul_8ns_12s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        din0 => r_V_28_fu_1302_p0,
        din1 => p_s_reg_1569,
        dout => r_V_28_fu_1302_p2);

    myproject_mac_mul_sub_12s_17s_22s_28_1_1_U34 : component myproject_mac_mul_sub_12s_17s_22s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 17,
        din2_WIDTH => 22,
        dout_WIDTH => 28)
    port map (
        din0 => p_4_reg_1579,
        din1 => ret_V_fu_723_p2,
        din2 => tmp_2_fu_736_p3,
        dout => grp_fu_1308_p3);

    myproject_mul_mul_12s_12s_24_1_1_U35 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_33_fu_1316_p0,
        din1 => r_V_33_fu_1316_p1,
        dout => r_V_33_fu_1316_p2);

    myproject_mul_mul_16s_16s_32_1_1_U36 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_7_fu_1322_p0,
        din1 => r_V_7_fu_1322_p1,
        dout => r_V_7_fu_1322_p2);

    myproject_mul_mul_16s_16s_32_1_1_U37 : component myproject_mul_mul_16s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_9_fu_1328_p0,
        din1 => r_V_9_fu_1328_p1,
        dout => r_V_9_fu_1328_p2);

    myproject_mul_mul_12s_12s_24_1_1_U38 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_18_fu_1334_p0,
        din1 => r_V_18_fu_1334_p1,
        dout => r_V_18_fu_1334_p2);

    myproject_mul_mul_11s_16s_26_1_1_U39 : component myproject_mul_mul_11s_16s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln728_1_fu_1340_p0,
        din1 => mul_ln728_1_fu_1340_p1,
        dout => mul_ln728_1_fu_1340_p2);

    myproject_mul_mul_13s_13s_26_1_1_U40 : component myproject_mul_mul_13s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => r_V_19_fu_1345_p0,
        din1 => r_V_19_fu_1345_p1,
        dout => r_V_19_fu_1345_p2);

    myproject_mul_mul_9ns_17s_25_1_1_U41 : component myproject_mul_mul_9ns_17s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 17,
        dout_WIDTH => 25)
    port map (
        din0 => ret_V_29_fu_1351_p0,
        din1 => ret_V_35_reg_1558_pp0_iter4_reg,
        dout => ret_V_29_fu_1351_p2);

    myproject_ama_addmul_sub_16s_12s_8ns_20s_23_1_1_U42 : component myproject_ama_addmul_sub_16s_12s_8ns_20s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 12,
        din2_WIDTH => 8,
        din3_WIDTH => 20,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_1357_p0,
        din1 => p_0_reg_1563_pp0_iter4_reg,
        din2 => grp_fu_1357_p2,
        din3 => r_V_28_reg_1610,
        dout => grp_fu_1357_p4);

    myproject_mul_mul_7ns_16s_22_1_1_U43 : component myproject_mul_mul_7ns_16s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 16,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln728_fu_1366_p0,
        din1 => p_Val2_2_reg_1458_pp0_iter4_reg,
        dout => mul_ln728_fu_1366_p2);

    myproject_mac_muladd_16s_12s_26s_28_1_1_U44 : component myproject_mac_muladd_16s_12s_26s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 12,
        din2_WIDTH => 26,
        dout_WIDTH => 28)
    port map (
        din0 => p_Val2_1_reg_1452_pp0_iter4_reg,
        din1 => p_3_reg_1631,
        din2 => lhs_V_1_fu_871_p3,
        dout => grp_fu_1373_p3);

    myproject_mac_muladd_11s_26s_36s_37_1_1_U45 : component myproject_mac_muladd_11s_26s_36s_37_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 26,
        din2_WIDTH => 36,
        dout_WIDTH => 37)
    port map (
        din0 => grp_fu_1381_p0,
        din1 => r_V_19_reg_1662,
        din2 => lhs_V_6_fu_897_p3,
        dout => grp_fu_1381_p3);

    myproject_mul_mul_13s_13s_26_1_1_U46 : component myproject_mul_mul_13s_13s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 26)
    port map (
        din0 => r_V_23_fu_1389_p0,
        din1 => r_V_23_fu_1389_p1,
        dout => r_V_23_fu_1389_p2);

    myproject_mul_mul_12s_12s_24_1_1_U47 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_24_fu_1395_p0,
        din1 => r_V_24_fu_1395_p1,
        dout => r_V_24_fu_1395_p2);

    myproject_ama_addmuladd_22s_23s_12s_35s_36_1_1_U48 : component myproject_ama_addmuladd_22s_23s_12s_35s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 23,
        din2_WIDTH => 12,
        din3_WIDTH => 35,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1401_p0,
        din1 => ret_V_30_reg_1677,
        din2 => p_1_reg_1682,
        din3 => lhs_V_fu_930_p3,
        dout => grp_fu_1401_p4);

    myproject_mul_mul_12s_12s_24_1_1_U49 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_29_fu_1412_p0,
        din1 => r_V_29_fu_1412_p1,
        dout => r_V_29_fu_1412_p2);

    myproject_mul_mul_12s_12s_24_1_1_U50 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_21_fu_1419_p0,
        din1 => r_V_21_fu_1419_p1,
        dout => r_V_21_fu_1419_p2);

    myproject_mul_mul_12s_12s_24_1_1_U51 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_26_fu_1425_p0,
        din1 => r_V_26_fu_1425_p1,
        dout => r_V_26_fu_1425_p2);

    myproject_mul_mul_12s_12s_24_1_1_U52 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_22_fu_1431_p0,
        din1 => r_V_22_fu_1431_p1,
        dout => r_V_22_fu_1431_p2);

    myproject_mul_mul_12s_12s_24_1_1_U53 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_27_fu_1437_p0,
        din1 => r_V_27_fu_1437_p1,
        dout => r_V_27_fu_1437_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv256_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln700_1_reg_1707 <= add_ln700_1_fu_853_p2;
                lhs_V_2_reg_1527 <= lhs_V_2_fu_564_p1;
                mul_ln1192_11_reg_1882 <= grp_fu_1154_p2;
                mul_ln1192_2_reg_1762 <= mul_ln1192_2_fu_976_p2;
                mul_ln1192_3_reg_1812 <= mul_ln1192_3_fu_1049_p2;
                mul_ln1192_4_reg_1872 <= grp_fu_1130_p2;
                mul_ln1192_6_reg_1822 <= mul_ln1192_6_fu_1100_p2;
                mul_ln1192_7_reg_1877 <= grp_fu_1142_p2;
                mul_ln1192_9_reg_1832 <= mul_ln1192_9_fu_1115_p2;
                mul_ln700_2_reg_1772 <= grp_fu_888_p2;
                mul_ln728_1_reg_1657 <= mul_ln728_1_fu_1340_p2;
                p_0_reg_1563 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_return;
                p_0_reg_1563_pp0_iter4_reg <= p_0_reg_1563;
                p_10_reg_1752 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_return;
                p_11_reg_1807 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_return;
                p_1_reg_1682 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_return;
                p_2_reg_1687 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_return;
                p_3_reg_1631 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_return;
                p_3_reg_1631_pp0_iter5_reg <= p_3_reg_1631;
                p_3_reg_1631_pp0_iter6_reg <= p_3_reg_1631_pp0_iter5_reg;
                p_3_reg_1631_pp0_iter7_reg <= p_3_reg_1631_pp0_iter6_reg;
                p_4_reg_1579 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_return;
                p_5_reg_1737 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_return;
                p_6_reg_1792 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_return;
                p_7_reg_1667 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_return;
                p_8_reg_1697 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_return;
                p_9_reg_1702 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_return;
                p_9_reg_1702_pp0_iter6_reg <= p_9_reg_1702;
                p_Val2_1_reg_1452_pp0_iter2_reg <= p_Val2_1_reg_1452_pp0_iter1_reg;
                p_Val2_1_reg_1452_pp0_iter3_reg <= p_Val2_1_reg_1452_pp0_iter2_reg;
                p_Val2_1_reg_1452_pp0_iter4_reg <= p_Val2_1_reg_1452_pp0_iter3_reg;
                p_Val2_2_reg_1458_pp0_iter2_reg <= p_Val2_2_reg_1458_pp0_iter1_reg;
                p_Val2_2_reg_1458_pp0_iter3_reg <= p_Val2_2_reg_1458_pp0_iter2_reg;
                p_Val2_2_reg_1458_pp0_iter4_reg <= p_Val2_2_reg_1458_pp0_iter3_reg;
                p_Val2_3_reg_1472_pp0_iter2_reg <= p_Val2_3_reg_1472_pp0_iter1_reg;
                p_Val2_3_reg_1472_pp0_iter3_reg <= p_Val2_3_reg_1472_pp0_iter2_reg;
                p_Val2_4_reg_1589 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_return;
                p_Val2_4_reg_1589_pp0_iter4_reg <= p_Val2_4_reg_1589;
                p_Val2_5_reg_1584 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_return;
                p_Val2_8_reg_1777 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_return;
                p_Val2_9_reg_1605 <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_return;
                p_Val2_s_reg_1574 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_return;
                p_s_reg_1569 <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_return;
                r_V_10_reg_1712 <= r_V_10_fu_862_p2;
                r_V_13_reg_1538 <= r_V_13_fu_1263_p2;
                r_V_14_reg_1595 <= r_V_14_fu_677_p2;
                r_V_16_reg_1600 <= r_V_16_fu_1296_p2;
                r_V_17_reg_1647 <= r_V_17_fu_766_p2;
                r_V_18_reg_1652 <= r_V_18_fu_1334_p2;
                r_V_19_reg_1662 <= r_V_19_fu_1345_p2;
                r_V_20_reg_1782 <= r_V_20_fu_1019_p2;
                r_V_21_reg_1787 <= r_V_21_fu_1419_p2;
                r_V_22_reg_1827 <= r_V_22_fu_1431_p2;
                r_V_23_reg_1742 <= r_V_23_fu_1389_p2;
                r_V_24_reg_1747 <= r_V_24_fu_1395_p2;
                r_V_25_reg_1797 <= r_V_25_fu_1034_p2;
                r_V_26_reg_1802 <= r_V_26_fu_1425_p2;
                r_V_27_reg_1837 <= r_V_27_fu_1437_p2;
                r_V_28_reg_1610 <= r_V_28_fu_1302_p2;
                r_V_32_reg_1620 <= r_V_32_fu_751_p2;
                r_V_33_reg_1625 <= r_V_33_fu_1316_p2;
                r_V_33_reg_1625_pp0_iter5_reg <= r_V_33_reg_1625;
                r_V_5_reg_1692 <= r_V_5_fu_827_p2;
                r_V_7_reg_1637 <= r_V_7_fu_1322_p2;
                r_V_9_reg_1642 <= r_V_9_fu_1328_p2;
                r_V_reg_1532 <= r_V_fu_567_p1;
                r_V_reg_1532_pp0_iter3_reg <= r_V_reg_1532;
                r_V_reg_1532_pp0_iter4_reg <= r_V_reg_1532_pp0_iter3_reg;
                ret_V_29_reg_1672 <= ret_V_29_fu_1351_p2;
                ret_V_35_reg_1558 <= ret_V_35_fu_669_p2;
                ret_V_35_reg_1558_pp0_iter4_reg <= ret_V_35_reg_1558;
                sext_ln1118_2_reg_1466_pp0_iter2_reg <= sext_ln1118_2_reg_1466_pp0_iter1_reg;
                sext_ln1118_2_reg_1466_pp0_iter3_reg <= sext_ln1118_2_reg_1466_pp0_iter2_reg;
                sub_ln700_reg_1767 <= sub_ln700_fu_1001_p2;
                trunc_ln708_10_reg_1553 <= grp_fu_1285_p4(25 downto 10);
                trunc_ln708_1_reg_1757 <= ret_V_32_fu_955_p2(35 downto 20);
                trunc_ln708_1_reg_1757_pp0_iter7_reg <= trunc_ln708_1_reg_1757;
                trunc_ln708_1_reg_1757_pp0_iter8_reg <= trunc_ln708_1_reg_1757_pp0_iter7_reg;
                trunc_ln708_1_reg_1757_pp0_iter9_reg <= trunc_ln708_1_reg_1757_pp0_iter8_reg;
                trunc_ln708_4_reg_1543 <= grp_fu_1269_p3(25 downto 10);
                trunc_ln708_5_reg_1817 <= ret_V_38_fu_1078_p2(75 downto 60);
                trunc_ln708_5_reg_1817_pp0_iter8_reg <= trunc_ln708_5_reg_1817;
                trunc_ln708_5_reg_1817_pp0_iter9_reg <= trunc_ln708_5_reg_1817_pp0_iter8_reg;
                trunc_ln708_7_reg_1548 <= ret_V_41_fu_642_p2(35 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1192_reg_1481 <= mul_ln1192_fu_1208_p2;
                p_Val2_10_reg_1443 <= x_V_in_sig(239 downto 224);
                p_Val2_10_reg_1443_pp0_iter1_reg <= p_Val2_10_reg_1443;
                p_Val2_1_reg_1452 <= x_V_in_sig(79 downto 64);
                p_Val2_1_reg_1452_pp0_iter1_reg <= p_Val2_1_reg_1452;
                p_Val2_2_reg_1458 <= x_V_in_sig(255 downto 240);
                p_Val2_2_reg_1458_pp0_iter1_reg <= p_Val2_2_reg_1458;
                p_Val2_3_reg_1472 <= x_V_in_sig(47 downto 32);
                p_Val2_3_reg_1472_pp0_iter1_reg <= p_Val2_3_reg_1472;
                p_Val2_7_reg_1491 <= x_V_in_sig(63 downto 48);
                p_Val2_7_reg_1491_pp0_iter1_reg <= p_Val2_7_reg_1491;
                sext_ln1118_2_reg_1466 <= sext_ln1118_2_fu_442_p1;
                sext_ln1118_2_reg_1466_pp0_iter1_reg <= sext_ln1118_2_reg_1466;
                trunc_ln708_2_reg_1486 <= r_V_31_fu_1214_p2(25 downto 10);
                trunc_ln708_6_reg_1512 <= grp_fu_1237_p3(25 downto 10);
                trunc_ln708_9_reg_1502 <= grp_fu_1221_p3(25 downto 10);
                trunc_ln708_s_reg_1522 <= grp_fu_1254_p3(25 downto 10);
                trunc_ln_reg_1507 <= ret_V_31_fu_528_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ret_V_10_reg_1717 <= grp_fu_1373_p3;
                ret_V_30_reg_1677 <= grp_fu_1357_p4;
                ret_V_39_reg_1732 <= grp_fu_1381_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_21_reg_1517 <= grp_fu_1246_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ret_V_7_reg_1615 <= grp_fu_1308_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_1_fu_853_p2 <= std_logic_vector(unsigned(mul_ln700_6_fu_836_p2) + unsigned(sext_ln700_13_fu_849_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp100_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp100 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp126_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp126 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp129_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp129 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp132_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp132 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp19_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp19 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp21_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp21 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp25_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp25 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp27_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp27 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp29_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp29 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp33_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp33 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp34_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp34 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp49_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp49 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp51_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp51 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp59_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp59 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp67_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp67 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp70_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp70 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp76_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp76 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp78_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp78 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp92_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp92 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call103_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call103 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call107_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call107 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call160_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call160 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call167_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call167 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call184_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call184 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call199_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call199 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call215_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call215 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call224_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call224 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call236_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call236 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call27_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call27 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call34_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call34 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call48_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call48 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call57_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call57 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call67_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call67 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call72_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call72 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call77_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call77 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call83_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call83 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call87_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call87 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call97_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call97 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call160 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call167 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call199 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call215 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call224 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call236 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to9)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to9 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp21)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_start <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_237_input_V <= std_logic_vector(signed(p_Val2_2_fu_432_p4) + signed(p_Val2_1_fu_422_p4));

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp25)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp25) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_start <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_246_input_V <= x_V_in_sig(16 - 1 downto 0);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp27)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_start <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_255_input_V <= std_logic_vector(signed(p_Val2_10_fu_408_p4) - signed(p_Val2_1_fu_422_p4));

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp33)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp33) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_start <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_264_input_V <= x_V_in_sig(63 downto 48);

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp51)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp51) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_273_ap_start_reg;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp92)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp92) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_282_ap_start_reg;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp100)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_291_ap_start_reg;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp129)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp129) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_300_ap_start_reg;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp132)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp132) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start <= grp_cos_lut_ap_fixed_16_6_5_3_0_s_fu_309_ap_start_reg;

    grp_fu_1130_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1130_ce <= ap_const_logic_1;
        else 
            grp_fu_1130_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1142_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1142_ce <= ap_const_logic_1;
        else 
            grp_fu_1142_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1154_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1154_ce <= ap_const_logic_1;
        else 
            grp_fu_1154_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1221_p0 <= ap_const_lv26_138C(14 - 1 downto 0);
    grp_fu_1221_p2 <= (p_Val2_7_fu_496_p4 & ap_const_lv10_0);
    grp_fu_1230_p0 <= ap_const_lv26_3FFFD2B(11 - 1 downto 0);
    grp_fu_1230_p1 <= sext_ln1118_2_reg_1466(16 - 1 downto 0);
    grp_fu_1237_p0 <= ap_const_lv26_973(13 - 1 downto 0);
    grp_fu_1237_p1 <= sext_ln1116_3_fu_543_p1(16 - 1 downto 0);
    grp_fu_1237_p2 <= ap_const_lv26_DA800(21 - 1 downto 0);
    grp_fu_1246_p0 <= ap_const_lv28_973(13 - 1 downto 0);
    grp_fu_1246_p2 <= ap_const_lv28_46B400(24 - 1 downto 0);
    grp_fu_1254_p0 <= ap_const_lv26_B77(13 - 1 downto 0);
    grp_fu_1254_p1 <= sext_ln1116_3_fu_543_p1(16 - 1 downto 0);
    grp_fu_1254_p2 <= ap_const_lv26_2C800(19 - 1 downto 0);
    grp_fu_1269_p0 <= sext_ln1118_14_fu_609_p1(18 - 1 downto 0);
    grp_fu_1269_p1 <= sext_ln1118_14_fu_609_p1(18 - 1 downto 0);
    grp_fu_1269_p2 <= (p_Val2_3_reg_1472_pp0_iter1_reg & ap_const_lv10_0);
    grp_fu_1285_p1 <= rhs_V_3_fu_590_p1(16 - 1 downto 0);
    grp_fu_1285_p2 <= ap_const_lv26_1C4(10 - 1 downto 0);
    grp_fu_1285_p3 <= ap_const_lv26_62400(20 - 1 downto 0);
    grp_fu_1357_p0 <= r_V_reg_1532_pp0_iter4_reg(16 - 1 downto 0);
    grp_fu_1357_p2 <= ap_const_lv23_5B(8 - 1 downto 0);
    grp_fu_1381_p0 <= ap_const_lv37_1FFFFFFD45(11 - 1 downto 0);
    grp_fu_1401_p0 <= ap_const_lv24_EC8C00(22 - 1 downto 0);

    grp_fu_888_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_888_ce <= ap_const_logic_1;
        else 
            grp_fu_888_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp19)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_318_input_V <= x_V_in_sig(47 downto 32);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp29)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_327_input_V <= std_logic_vector(signed(ap_const_lv16_FE74) + signed(p_Val2_3_fu_446_p4));

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp34)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_336_input_V <= x_V_in_sig(63 downto 48);

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp49)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp49) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp59)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp59) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_354_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp67)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp67) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_363_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp70)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp70) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_ap_start_reg;
    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_372_input_V <= std_logic_vector(unsigned(ap_const_lv16_12A) + unsigned(sub_ln703_fu_570_p2));

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp76)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp76) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_381_ap_start_reg;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp78)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp78) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_ap_start_reg;
    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_390_input_V <= std_logic_vector(signed(ap_const_lv16_FFC8) + signed(p_Val2_7_reg_1491_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp126)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp126) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start <= grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_399_ap_start_reg;
    lhs_V_1_fu_871_p3 <= (p_Val2_2_reg_1458_pp0_iter4_reg & ap_const_lv10_0);
        lhs_V_2_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_10_reg_1443_pp0_iter1_reg),17));

        lhs_V_3_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_35_fu_669_p2),18));

        lhs_V_4_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_36_fu_593_p2),18));

    lhs_V_6_fu_897_p3 <= (mul_ln728_1_reg_1657 & ap_const_lv10_0);
    lhs_V_fu_930_p3 <= (ret_V_29_reg_1672 & ap_const_lv10_0);
    mul_ln1192_2_fu_976_p0 <= p_8_reg_1697;
    mul_ln1192_2_fu_976_p1 <= r_V_5_reg_1692;
    mul_ln1192_2_fu_976_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_2_fu_976_p0) * signed(mul_ln1192_2_fu_976_p1))), 62));
    mul_ln1192_3_fu_1049_p0 <= p_9_reg_1702_pp0_iter6_reg;
    mul_ln1192_3_fu_1049_p1 <= mul_ln1192_2_reg_1762;
    mul_ln1192_3_fu_1049_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_3_fu_1049_p0) * signed(mul_ln1192_3_fu_1049_p1))), 73));
    mul_ln1192_6_fu_1100_p0 <= r_V_21_reg_1787;
    mul_ln1192_6_fu_1100_p1 <= r_V_20_reg_1782;
    mul_ln1192_6_fu_1100_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_6_fu_1100_p0) * signed(mul_ln1192_6_fu_1100_p1))), 81));
    mul_ln1192_9_fu_1115_p0 <= r_V_26_reg_1802;
    mul_ln1192_9_fu_1115_p1 <= r_V_25_reg_1797;
    mul_ln1192_9_fu_1115_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_9_fu_1115_p0) * signed(mul_ln1192_9_fu_1115_p1))), 68));
    mul_ln1192_fu_1208_p0 <= ap_const_lv26_2D5(11 - 1 downto 0);
    mul_ln700_1_fu_988_p0 <= ret_V_10_reg_1717;
    mul_ln700_1_fu_988_p1 <= r_V_10_reg_1712;
    mul_ln700_1_fu_988_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_1_fu_988_p0) * signed(mul_ln700_1_fu_988_p1))), 56));
    mul_ln700_6_fu_836_p1 <= r_V_7_reg_1637;
    mul_ln700_6_fu_836_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv36_FFFFFFFCE) * signed(mul_ln700_6_fu_836_p1))), 36));
    mul_ln728_1_fu_1340_p0 <= ap_const_lv26_3FFFD45(11 - 1 downto 0);
    mul_ln728_1_fu_1340_p1 <= sext_ln1118_2_reg_1466_pp0_iter3_reg(16 - 1 downto 0);
    mul_ln728_fu_1366_p0 <= ap_const_lv22_32(7 - 1 downto 0);
    p_Val2_10_fu_408_p4 <= x_V_in_sig(239 downto 224);
    p_Val2_1_fu_422_p4 <= x_V_in_sig(79 downto 64);
    p_Val2_2_fu_432_p4 <= x_V_in_sig(255 downto 240);
    p_Val2_3_fu_446_p4 <= x_V_in_sig(47 downto 32);
    p_Val2_7_fu_496_p4 <= x_V_in_sig(63 downto 48);
    r_V_10_fu_862_p1 <= r_V_9_reg_1642;
    r_V_10_fu_862_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv39_32) * signed(r_V_10_fu_862_p1))), 39));
        r_V_12_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1491_pp0_iter1_reg),32));

    r_V_13_fu_1263_p0 <= r_V_12_fu_587_p1(16 - 1 downto 0);
    r_V_13_fu_1263_p1 <= r_V_12_fu_587_p1(16 - 1 downto 0);
    r_V_14_fu_677_p1 <= r_V_13_reg_1538;
    r_V_14_fu_677_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv39_32) * signed(r_V_14_fu_677_p1))), 39));
        r_V_15_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_12_fu_687_p2),36));

    r_V_16_fu_1296_p0 <= r_V_15_fu_693_p1(18 - 1 downto 0);
    r_V_16_fu_1296_p1 <= r_V_15_fu_693_p1(18 - 1 downto 0);
    r_V_17_fu_766_p0 <= r_V_16_reg_1600;
    r_V_17_fu_766_p1 <= r_V_14_reg_1595;
    r_V_17_fu_766_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_17_fu_766_p0) * signed(r_V_17_fu_766_p1))), 69));
    r_V_18_fu_1334_p0 <= sext_ln1118_4_fu_700_p1(12 - 1 downto 0);
    r_V_18_fu_1334_p1 <= sext_ln1118_4_fu_700_p1(12 - 1 downto 0);
    r_V_19_fu_1345_p0 <= sext_ln1116_7_fu_781_p1(13 - 1 downto 0);
    r_V_19_fu_1345_p1 <= sext_ln1116_7_fu_781_p1(13 - 1 downto 0);
    r_V_20_fu_1019_p0 <= r_V_33_reg_1625_pp0_iter5_reg;
    r_V_20_fu_1019_p1 <= ret_V_19_fu_1007_p2;
    r_V_20_fu_1019_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_20_fu_1019_p0) * signed(r_V_20_fu_1019_p1))), 59));
    r_V_21_fu_1419_p0 <= sext_ln1116_8_fu_1025_p1(12 - 1 downto 0);
    r_V_21_fu_1419_p1 <= sext_ln1116_8_fu_1025_p1(12 - 1 downto 0);
    r_V_22_fu_1431_p0 <= sext_ln1116_9_fu_1106_p1(12 - 1 downto 0);
    r_V_22_fu_1431_p1 <= sext_ln1116_9_fu_1106_p1(12 - 1 downto 0);
    r_V_23_fu_1389_p0 <= sext_ln1116_10_fu_917_p1(13 - 1 downto 0);
    r_V_23_fu_1389_p1 <= sext_ln1116_10_fu_917_p1(13 - 1 downto 0);
    r_V_24_fu_1395_p0 <= sext_ln1116_11_fu_921_p1(12 - 1 downto 0);
    r_V_24_fu_1395_p1 <= sext_ln1116_11_fu_921_p1(12 - 1 downto 0);
    r_V_25_fu_1034_p0 <= r_V_24_reg_1747;
    r_V_25_fu_1034_p1 <= r_V_23_reg_1742;
    r_V_25_fu_1034_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_25_fu_1034_p0) * signed(r_V_25_fu_1034_p1))), 50));
    r_V_26_fu_1425_p0 <= sext_ln1116_12_fu_1040_p1(12 - 1 downto 0);
    r_V_26_fu_1425_p1 <= sext_ln1116_12_fu_1040_p1(12 - 1 downto 0);
    r_V_27_fu_1437_p0 <= sext_ln1116_13_fu_1121_p1(12 - 1 downto 0);
    r_V_27_fu_1437_p1 <= sext_ln1116_13_fu_1121_p1(12 - 1 downto 0);
    r_V_28_fu_1302_p0 <= ap_const_lv20_5B(8 - 1 downto 0);
    r_V_29_fu_1412_p0 <= sext_ln1116_fu_941_p1(12 - 1 downto 0);
    r_V_29_fu_1412_p1 <= sext_ln1116_fu_941_p1(12 - 1 downto 0);
    r_V_30_fu_709_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(r_V_reg_1532_pp0_iter3_reg));
    r_V_31_fu_1214_p0 <= ap_const_lv26_18B(10 - 1 downto 0);
    r_V_32_fu_751_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1253_fu_747_p1));
    r_V_33_fu_1316_p0 <= sext_ln1116_1_fu_757_p1(12 - 1 downto 0);
    r_V_33_fu_1316_p1 <= sext_ln1116_1_fu_757_p1(12 - 1 downto 0);
    r_V_5_fu_827_p0 <= ret_V_8_fu_814_p2;
    r_V_5_fu_827_p1 <= ret_V_7_reg_1615;
    r_V_5_fu_827_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_5_fu_827_p0) * signed(r_V_5_fu_827_p1))), 51));
        r_V_6_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1458_pp0_iter3_reg),32));

    r_V_7_fu_1322_p0 <= r_V_6_fu_697_p1(16 - 1 downto 0);
    r_V_7_fu_1322_p1 <= r_V_6_fu_697_p1(16 - 1 downto 0);
        r_V_8_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1472_pp0_iter3_reg),32));

    r_V_9_fu_1328_p0 <= r_V_8_fu_706_p1(16 - 1 downto 0);
    r_V_9_fu_1328_p1 <= r_V_8_fu_706_p1(16 - 1 downto 0);
        r_V_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1458_pp0_iter1_reg),17));

    ret_V_12_fu_687_p2 <= std_logic_vector(unsigned(ap_const_lv18_232) + unsigned(lhs_V_3_fu_683_p1));
    ret_V_14_fu_603_p2 <= std_logic_vector(unsigned(ap_const_lv18_2C9) + unsigned(lhs_V_4_fu_599_p1));
    ret_V_17_fu_775_p2 <= std_logic_vector(unsigned(ap_const_lv13_1B6) + unsigned(sext_ln703_4_fu_772_p1));
    ret_V_19_fu_1007_p2 <= std_logic_vector(unsigned(ap_const_lv37_6B000000) + unsigned(ret_V_39_reg_1732));
    ret_V_24_fu_911_p2 <= std_logic_vector(unsigned(ap_const_lv13_1E4) + unsigned(sext_ln703_5_fu_908_p1));
    ret_V_29_fu_1351_p0 <= ap_const_lv25_BB(9 - 1 downto 0);
    ret_V_31_fu_528_p2 <= std_logic_vector(unsigned(ap_const_lv26_C8000) + unsigned(grp_fu_1230_p3));
    ret_V_32_fu_955_p2 <= std_logic_vector(signed(grp_fu_1401_p4) + signed(rhs_V_fu_951_p1));
    ret_V_33_fu_717_p2 <= std_logic_vector(unsigned(r_V_30_fu_709_p2) - unsigned(sext_ln703_1_fu_714_p1));
    ret_V_34_fu_1160_p2 <= std_logic_vector(signed(ap_const_lv76_FC82000000000000000) + signed(mul_ln1192_4_reg_1872));
    ret_V_35_fu_669_p2 <= std_logic_vector(signed(lhs_V_2_reg_1527) - signed(rhs_V_2_fu_666_p1));
    ret_V_36_fu_593_p2 <= std_logic_vector(signed(lhs_V_2_fu_564_p1) - signed(rhs_V_3_fu_590_p1));
    ret_V_38_fu_1078_p2 <= std_logic_vector(unsigned(sub_ln700_1_fu_1062_p2) + unsigned(rhs_V_4_fu_1074_p1));
    ret_V_41_fu_642_p2 <= std_logic_vector(signed(mul_ln700_3_fu_1278_p2) + signed(rhs_V_5_fu_635_p3));
    ret_V_42_fu_1176_p2 <= std_logic_vector(signed(ap_const_lv96_FC2F00000000000000000000) + signed(mul_ln1192_7_reg_1877));
    ret_V_46_fu_1192_p2 <= std_logic_vector(signed(ap_const_lv86_3F06000000000000000000) + signed(mul_ln1192_11_reg_1882));
    ret_V_8_fu_814_p2 <= std_logic_vector(signed(sext_ln1118_7_fu_800_p1) + signed(sext_ln700_11_fu_810_p1));
    ret_V_fu_723_p2 <= std_logic_vector(unsigned(ap_const_lv17_CFB) + unsigned(ret_V_33_fu_717_p2));
    rhs_V_1_fu_842_p3 <= (mul_ln728_fu_1366_p2 & ap_const_lv10_0);
        rhs_V_2_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1452_pp0_iter2_reg),17));

        rhs_V_3_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1491_pp0_iter1_reg),17));

        rhs_V_4_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_1067_p3),76));

    rhs_V_5_fu_635_p3 <= (p_Val2_7_reg_1491_pp0_iter1_reg & ap_const_lv20_0);
        rhs_V_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_944_p3),36));

        sext_ln1116_10_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_24_fu_911_p2),26));

        sext_ln1116_11_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_7_reg_1667),24));

        sext_ln1116_12_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_10_reg_1752),24));

        sext_ln1116_13_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_11_reg_1807),24));

        sext_ln1116_1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1589),24));

        sext_ln1116_3_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1491),26));

        sext_ln1116_7_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_17_fu_775_p2),26));

        sext_ln1116_8_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_5_reg_1737),24));

        sext_ln1116_9_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1792),24));

        sext_ln1116_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1687),24));

        sext_ln1118_14_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_14_fu_603_p2),26));

        sext_ln1118_2_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_fu_432_p4),26));

        sext_ln1118_4_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0_reg_1563),24));

        sext_ln1118_7_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_33_reg_1625),25));

        sext_ln1253_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_16_6_5_3_0_s_fu_345_ap_return),13));

        sext_ln700_11_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_803_p3),25));

        sext_ln700_13_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_842_p3),36));

        sext_ln703_1_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1574),17));

        sext_ln703_4_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1605),13));

        sext_ln703_5_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1589_pp0_iter4_reg),13));

    shl_ln700_1_fu_1055_p3 <= (sub_ln700_reg_1767 & ap_const_lv20_0);
    shl_ln_fu_994_p3 <= (add_ln700_1_reg_1707 & ap_const_lv20_0);
    sub_ln700_1_fu_1062_p2 <= std_logic_vector(unsigned(shl_ln700_1_fu_1055_p3) - unsigned(mul_ln700_2_reg_1772));
    sub_ln700_fu_1001_p2 <= std_logic_vector(unsigned(shl_ln_fu_994_p3) - unsigned(mul_ln700_1_fu_988_p2));
    sub_ln703_fu_570_p2 <= std_logic_vector(unsigned(p_Val2_10_reg_1443_pp0_iter1_reg) - unsigned(p_Val2_3_reg_1472_pp0_iter1_reg));
    tmp_1_fu_944_p3 <= (r_V_29_fu_1412_p2 & ap_const_lv10_0);
    tmp_2_fu_736_p3 <= (p_Val2_5_reg_1584 & ap_const_lv10_0);
    tmp_7_fu_1067_p3 <= (p_Val2_8_reg_1777 & ap_const_lv60_0);
    tmp_fu_803_p3 <= (r_V_32_reg_1620 & ap_const_lv10_0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln708_1_reg_1757_pp0_iter9_reg;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= ret_V_34_fu_1160_p2(75 downto 60);

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_5_reg_1817_pp0_iter9_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= ret_V_42_fu_1176_p2(95 downto 80);

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= ret_V_46_fu_1192_p2(85 downto 70);

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
