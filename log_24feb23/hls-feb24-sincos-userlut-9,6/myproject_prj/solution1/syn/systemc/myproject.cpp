// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myproject.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myproject::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myproject::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> myproject::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> myproject::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool myproject::ap_const_boolean_1 = true;
const bool myproject::ap_const_boolean_0 = false;
const sc_lv<144> myproject::ap_const_lv144_lc_1 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<9> myproject::ap_const_lv9_1F9 = "111111001";
const sc_lv<9> myproject::ap_const_lv9_1F8 = "111111000";
const sc_lv<32> myproject::ap_const_lv32_7E = "1111110";
const sc_lv<32> myproject::ap_const_lv32_86 = "10000110";
const sc_lv<32> myproject::ap_const_lv32_24 = "100100";
const sc_lv<32> myproject::ap_const_lv32_2C = "101100";
const sc_lv<32> myproject::ap_const_lv32_87 = "10000111";
const sc_lv<32> myproject::ap_const_lv32_8F = "10001111";
const sc_lv<2> myproject::ap_const_lv2_0 = "00";
const sc_lv<12> myproject::ap_const_lv12_0 = "000000000000";
const sc_lv<3> myproject::ap_const_lv3_0 = "000";
const sc_lv<14> myproject::ap_const_lv14_3B8 = "1110111000";
const sc_lv<32> myproject::ap_const_lv32_6 = "110";
const sc_lv<32> myproject::ap_const_lv32_D = "1101";
const sc_lv<10> myproject::ap_const_lv10_18 = "11000";
const sc_lv<10> myproject::ap_const_lv10_38 = "111000";
const sc_lv<15> myproject::ap_const_lv15_2F0 = "1011110000";
const sc_lv<29> myproject::ap_const_lv29_18000000 = "11000000000000000000000000000";
const sc_lv<32> myproject::ap_const_lv32_18 = "11000";
const sc_lv<32> myproject::ap_const_lv32_1C = "11100";
const sc_lv<17> myproject::ap_const_lv17_39 = "111001";
const sc_lv<27> myproject::ap_const_lv27_3 = "11";
const sc_lv<27> myproject::ap_const_lv27_0 = "000000000000000000000000000";
const sc_lv<27> myproject::ap_const_lv27_7E40000 = "111111001000000000000000000";
const sc_lv<32> myproject::ap_const_lv32_12 = "10010";
const sc_lv<32> myproject::ap_const_lv32_1A = "11010";

myproject::myproject(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1192_2_fu_344_p2);
    sensitive << ( sub_ln1192_fu_326_p2 );
    sensitive << ( sub_ln1192_3_fu_338_p2 );

    SC_METHOD(thread_add_ln1192_fu_271_p2);
    sensitive << ( lhs_V_2_fu_263_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_lhs_V_1_fu_167_p1);
    sensitive << ( p_Val2_4_fu_147_p4 );

    SC_METHOD(thread_lhs_V_2_fu_263_p3);
    sensitive << ( r_V_3_fu_213_p2 );

    SC_METHOD(thread_lhs_V_fu_219_p3);
    sensitive << ( ret_V_6_fu_175_p2 );

    SC_METHOD(thread_p_Val2_1_fu_157_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_p_Val2_4_fu_147_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_p_Val2_s_fu_181_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_r_V_2_fu_304_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ret_V_3_reg_376 );

    SC_METHOD(thread_r_V_2_fu_304_p2);
    sensitive << ( r_V_2_fu_304_p0 );

    SC_METHOD(thread_r_V_3_fu_213_p2);
    sensitive << ( sub_ln1118_fu_207_p2 );
    sensitive << ( sext_ln1118_fu_191_p1 );

    SC_METHOD(thread_r_V_fu_247_p1);
    sensitive << ( p_Val2_s_fu_181_p4 );

    SC_METHOD(thread_ret_V_3_fu_257_p2);
    sensitive << ( ret_V_fu_251_p2 );

    SC_METHOD(thread_ret_V_6_fu_175_p2);
    sensitive << ( lhs_V_1_fu_167_p1 );
    sensitive << ( sext_ln703_1_fu_171_p1 );

    SC_METHOD(thread_ret_V_7_fu_231_p2);
    sensitive << ( sext_ln728_fu_227_p1 );

    SC_METHOD(thread_ret_V_8_fu_350_p2);
    sensitive << ( add_ln1192_2_fu_344_p2 );

    SC_METHOD(thread_ret_V_9_fu_281_p2);
    sensitive << ( sext_ln1192_2_fu_277_p1 );

    SC_METHOD(thread_ret_V_fu_251_p2);
    sensitive << ( r_V_fu_247_p1 );

    SC_METHOD(thread_sext_ln1118_1_fu_203_p1);
    sensitive << ( shl_ln_fu_195_p3 );

    SC_METHOD(thread_sext_ln1118_fu_191_p1);
    sensitive << ( p_Val2_s_fu_181_p4 );

    SC_METHOD(thread_sext_ln1192_1_fu_322_p1);
    sensitive << ( tmp_1_fu_314_p3 );

    SC_METHOD(thread_sext_ln1192_2_fu_277_p1);
    sensitive << ( add_ln1192_fu_271_p2 );

    SC_METHOD(thread_sext_ln1192_fu_310_p1);
    sensitive << ( r_V_2_fu_304_p2 );

    SC_METHOD(thread_sext_ln703_1_fu_171_p1);
    sensitive << ( p_Val2_1_fu_157_p4 );

    SC_METHOD(thread_sext_ln728_fu_227_p1);
    sensitive << ( lhs_V_fu_219_p3 );

    SC_METHOD(thread_shl_ln1192_fu_332_p2);
    sensitive << ( sub_ln1192_fu_326_p2 );

    SC_METHOD(thread_shl_ln_fu_195_p3);
    sensitive << ( p_Val2_s_fu_181_p4 );

    SC_METHOD(thread_sub_ln1118_fu_207_p2);
    sensitive << ( sext_ln1118_1_fu_203_p1 );

    SC_METHOD(thread_sub_ln1192_3_fu_338_p2);
    sensitive << ( shl_ln1192_fu_332_p2 );

    SC_METHOD(thread_sub_ln1192_fu_326_p2);
    sensitive << ( sext_ln1192_fu_310_p1 );
    sensitive << ( sext_ln1192_1_fu_322_p1 );

    SC_METHOD(thread_tmp_1_fu_314_p3);
    sensitive << ( r_V_2_fu_304_p2 );

    SC_METHOD(thread_x_V_ap_vld_in_sig);
    sensitive << ( x_V_ap_vld );
    sensitive << ( x_V_ap_vld_preg );

    SC_METHOD(thread_x_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( x_V_ap_vld );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_x_V_in_sig);
    sensitive << ( x_V_ap_vld );
    sensitive << ( x_V );
    sensitive << ( x_V_preg );

    SC_METHOD(thread_y_0_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_reg_371 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_0_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_1_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ret_V_8_fu_350_p2 );

    SC_METHOD(thread_y_1_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_2_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_2_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_3_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_381 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_3_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_4_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_4_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    x_V_preg = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    x_V_ap_vld_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myproject_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_V_ap_vld, "(port)x_V_ap_vld");
    sc_trace(mVcdFile, x_V, "(port)x_V");
    sc_trace(mVcdFile, y_0_V, "(port)y_0_V");
    sc_trace(mVcdFile, y_0_V_ap_vld, "(port)y_0_V_ap_vld");
    sc_trace(mVcdFile, y_1_V, "(port)y_1_V");
    sc_trace(mVcdFile, y_1_V_ap_vld, "(port)y_1_V_ap_vld");
    sc_trace(mVcdFile, y_2_V, "(port)y_2_V");
    sc_trace(mVcdFile, y_2_V_ap_vld, "(port)y_2_V_ap_vld");
    sc_trace(mVcdFile, y_3_V, "(port)y_3_V");
    sc_trace(mVcdFile, y_3_V_ap_vld, "(port)y_3_V_ap_vld");
    sc_trace(mVcdFile, y_4_V, "(port)y_4_V");
    sc_trace(mVcdFile, y_4_V_ap_vld, "(port)y_4_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, x_V_ap_vld_in_sig, "x_V_ap_vld_in_sig");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, x_V_preg, "x_V_preg");
    sc_trace(mVcdFile, x_V_in_sig, "x_V_in_sig");
    sc_trace(mVcdFile, x_V_ap_vld_preg, "x_V_ap_vld_preg");
    sc_trace(mVcdFile, x_V_blk_n, "x_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_reg_371, "tmp_reg_371");
    sc_trace(mVcdFile, ret_V_3_fu_257_p2, "ret_V_3_fu_257_p2");
    sc_trace(mVcdFile, ret_V_3_reg_376, "ret_V_3_reg_376");
    sc_trace(mVcdFile, tmp_2_reg_381, "tmp_2_reg_381");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, p_Val2_4_fu_147_p4, "p_Val2_4_fu_147_p4");
    sc_trace(mVcdFile, p_Val2_1_fu_157_p4, "p_Val2_1_fu_157_p4");
    sc_trace(mVcdFile, lhs_V_1_fu_167_p1, "lhs_V_1_fu_167_p1");
    sc_trace(mVcdFile, sext_ln703_1_fu_171_p1, "sext_ln703_1_fu_171_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_181_p4, "p_Val2_s_fu_181_p4");
    sc_trace(mVcdFile, shl_ln_fu_195_p3, "shl_ln_fu_195_p3");
    sc_trace(mVcdFile, sext_ln1118_1_fu_203_p1, "sext_ln1118_1_fu_203_p1");
    sc_trace(mVcdFile, sub_ln1118_fu_207_p2, "sub_ln1118_fu_207_p2");
    sc_trace(mVcdFile, sext_ln1118_fu_191_p1, "sext_ln1118_fu_191_p1");
    sc_trace(mVcdFile, ret_V_6_fu_175_p2, "ret_V_6_fu_175_p2");
    sc_trace(mVcdFile, lhs_V_fu_219_p3, "lhs_V_fu_219_p3");
    sc_trace(mVcdFile, sext_ln728_fu_227_p1, "sext_ln728_fu_227_p1");
    sc_trace(mVcdFile, ret_V_7_fu_231_p2, "ret_V_7_fu_231_p2");
    sc_trace(mVcdFile, r_V_fu_247_p1, "r_V_fu_247_p1");
    sc_trace(mVcdFile, ret_V_fu_251_p2, "ret_V_fu_251_p2");
    sc_trace(mVcdFile, r_V_3_fu_213_p2, "r_V_3_fu_213_p2");
    sc_trace(mVcdFile, lhs_V_2_fu_263_p3, "lhs_V_2_fu_263_p3");
    sc_trace(mVcdFile, add_ln1192_fu_271_p2, "add_ln1192_fu_271_p2");
    sc_trace(mVcdFile, sext_ln1192_2_fu_277_p1, "sext_ln1192_2_fu_277_p1");
    sc_trace(mVcdFile, ret_V_9_fu_281_p2, "ret_V_9_fu_281_p2");
    sc_trace(mVcdFile, r_V_2_fu_304_p0, "r_V_2_fu_304_p0");
    sc_trace(mVcdFile, r_V_2_fu_304_p2, "r_V_2_fu_304_p2");
    sc_trace(mVcdFile, tmp_1_fu_314_p3, "tmp_1_fu_314_p3");
    sc_trace(mVcdFile, sext_ln1192_fu_310_p1, "sext_ln1192_fu_310_p1");
    sc_trace(mVcdFile, sext_ln1192_1_fu_322_p1, "sext_ln1192_1_fu_322_p1");
    sc_trace(mVcdFile, sub_ln1192_fu_326_p2, "sub_ln1192_fu_326_p2");
    sc_trace(mVcdFile, shl_ln1192_fu_332_p2, "shl_ln1192_fu_332_p2");
    sc_trace(mVcdFile, sub_ln1192_3_fu_338_p2, "sub_ln1192_3_fu_338_p2");
    sc_trace(mVcdFile, add_ln1192_2_fu_344_p2, "add_ln1192_2_fu_344_p2");
    sc_trace(mVcdFile, ret_V_8_fu_350_p2, "ret_V_8_fu_350_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("myproject.hdltvin.dat");
    mHdltvoutHandle.open("myproject.hdltvout.dat");
}

myproject::~myproject() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void myproject::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_V_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            x_V_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())))) {
            x_V_ap_vld_preg = x_V_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_V_preg = ap_const_lv144_lc_1;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())))) {
            x_V_preg = x_V.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ret_V_3_reg_376 = ret_V_3_fu_257_p2.read();
        tmp_2_reg_381 = ret_V_9_fu_281_p2.read().range(28, 24);
        tmp_reg_371 = ret_V_7_fu_231_p2.read().range(13, 6);
    }
}

void myproject::thread_add_ln1192_2_fu_344_p2() {
    add_ln1192_2_fu_344_p2 = (!sub_ln1192_fu_326_p2.read().is_01() || !sub_ln1192_3_fu_338_p2.read().is_01())? sc_lv<27>(): (sc_biguint<27>(sub_ln1192_fu_326_p2.read()) + sc_biguint<27>(sub_ln1192_3_fu_338_p2.read()));
}

void myproject::thread_add_ln1192_fu_271_p2() {
    add_ln1192_fu_271_p2 = (!lhs_V_2_fu_263_p3.read().is_01() || !ap_const_lv15_2F0.is_01())? sc_lv<15>(): (sc_biguint<15>(lhs_V_2_fu_263_p3.read()) + sc_biguint<15>(ap_const_lv15_2F0));
}

void myproject::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void myproject::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read()));
}

void myproject::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myproject::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void myproject::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void myproject::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void myproject::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myproject::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void myproject::thread_lhs_V_1_fu_167_p1() {
    lhs_V_1_fu_167_p1 = esl_sext<10,9>(p_Val2_4_fu_147_p4.read());
}

void myproject::thread_lhs_V_2_fu_263_p3() {
    lhs_V_2_fu_263_p3 = esl_concat<12,3>(r_V_3_fu_213_p2.read(), ap_const_lv3_0);
}

void myproject::thread_lhs_V_fu_219_p3() {
    lhs_V_fu_219_p3 = esl_concat<10,3>(ret_V_6_fu_175_p2.read(), ap_const_lv3_0);
}

void myproject::thread_p_Val2_1_fu_157_p4() {
    p_Val2_1_fu_157_p4 = x_V_in_sig.read().range(44, 36);
}

void myproject::thread_p_Val2_4_fu_147_p4() {
    p_Val2_4_fu_147_p4 = x_V_in_sig.read().range(134, 126);
}

void myproject::thread_p_Val2_s_fu_181_p4() {
    p_Val2_s_fu_181_p4 = x_V_in_sig.read().range(143, 135);
}

void myproject::thread_r_V_2_fu_304_p0() {
    r_V_2_fu_304_p0 = ret_V_3_reg_376.read();
}

void myproject::thread_r_V_2_fu_304_p2() {
    r_V_2_fu_304_p2 = (!r_V_2_fu_304_p0.read().is_01() || !ap_const_lv17_39.is_01())? sc_lv<17>(): sc_bigint<10>(r_V_2_fu_304_p0.read()) * sc_biguint<17>(ap_const_lv17_39);
}

void myproject::thread_r_V_3_fu_213_p2() {
    r_V_3_fu_213_p2 = (!sub_ln1118_fu_207_p2.read().is_01() || !sext_ln1118_fu_191_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(sub_ln1118_fu_207_p2.read()) - sc_bigint<12>(sext_ln1118_fu_191_p1.read()));
}

void myproject::thread_r_V_fu_247_p1() {
    r_V_fu_247_p1 = esl_sext<10,9>(p_Val2_s_fu_181_p4.read());
}

void myproject::thread_ret_V_3_fu_257_p2() {
    ret_V_3_fu_257_p2 = (!ret_V_fu_251_p2.read().is_01() || !ap_const_lv10_38.is_01())? sc_lv<10>(): (sc_biguint<10>(ret_V_fu_251_p2.read()) + sc_biguint<10>(ap_const_lv10_38));
}

void myproject::thread_ret_V_6_fu_175_p2() {
    ret_V_6_fu_175_p2 = (!lhs_V_1_fu_167_p1.read().is_01() || !sext_ln703_1_fu_171_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(lhs_V_1_fu_167_p1.read()) - sc_bigint<10>(sext_ln703_1_fu_171_p1.read()));
}

void myproject::thread_ret_V_7_fu_231_p2() {
    ret_V_7_fu_231_p2 = (!sext_ln728_fu_227_p1.read().is_01() || !ap_const_lv14_3B8.is_01())? sc_lv<14>(): (sc_bigint<14>(sext_ln728_fu_227_p1.read()) + sc_biguint<14>(ap_const_lv14_3B8));
}

void myproject::thread_ret_V_8_fu_350_p2() {
    ret_V_8_fu_350_p2 = (!add_ln1192_2_fu_344_p2.read().is_01() || !ap_const_lv27_7E40000.is_01())? sc_lv<27>(): (sc_biguint<27>(add_ln1192_2_fu_344_p2.read()) + sc_bigint<27>(ap_const_lv27_7E40000));
}

void myproject::thread_ret_V_9_fu_281_p2() {
    ret_V_9_fu_281_p2 = (!sext_ln1192_2_fu_277_p1.read().is_01() || !ap_const_lv29_18000000.is_01())? sc_lv<29>(): (sc_bigint<29>(sext_ln1192_2_fu_277_p1.read()) + sc_bigint<29>(ap_const_lv29_18000000));
}

void myproject::thread_ret_V_fu_251_p2() {
    ret_V_fu_251_p2 = (!ap_const_lv10_18.is_01() || !r_V_fu_247_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_18) - sc_bigint<10>(r_V_fu_247_p1.read()));
}

void myproject::thread_sext_ln1118_1_fu_203_p1() {
    sext_ln1118_1_fu_203_p1 = esl_sext<12,11>(shl_ln_fu_195_p3.read());
}

void myproject::thread_sext_ln1118_fu_191_p1() {
    sext_ln1118_fu_191_p1 = esl_sext<12,9>(p_Val2_s_fu_181_p4.read());
}

void myproject::thread_sext_ln1192_1_fu_322_p1() {
    sext_ln1192_1_fu_322_p1 = esl_sext<27,20>(tmp_1_fu_314_p3.read());
}

void myproject::thread_sext_ln1192_2_fu_277_p1() {
    sext_ln1192_2_fu_277_p1 = esl_sext<29,15>(add_ln1192_fu_271_p2.read());
}

void myproject::thread_sext_ln1192_fu_310_p1() {
    sext_ln1192_fu_310_p1 = esl_sext<27,17>(r_V_2_fu_304_p2.read());
}

void myproject::thread_sext_ln703_1_fu_171_p1() {
    sext_ln703_1_fu_171_p1 = esl_sext<10,9>(p_Val2_1_fu_157_p4.read());
}

void myproject::thread_sext_ln728_fu_227_p1() {
    sext_ln728_fu_227_p1 = esl_sext<14,13>(lhs_V_fu_219_p3.read());
}

void myproject::thread_shl_ln1192_fu_332_p2() {
    shl_ln1192_fu_332_p2 = (!ap_const_lv27_3.is_01())? sc_lv<27>(): sub_ln1192_fu_326_p2.read() << (unsigned short)ap_const_lv27_3.to_uint();
}

void myproject::thread_shl_ln_fu_195_p3() {
    shl_ln_fu_195_p3 = esl_concat<9,2>(p_Val2_s_fu_181_p4.read(), ap_const_lv2_0);
}

void myproject::thread_sub_ln1118_fu_207_p2() {
    sub_ln1118_fu_207_p2 = (!ap_const_lv12_0.is_01() || !sext_ln1118_1_fu_203_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_0) - sc_bigint<12>(sext_ln1118_1_fu_203_p1.read()));
}

void myproject::thread_sub_ln1192_3_fu_338_p2() {
    sub_ln1192_3_fu_338_p2 = (!ap_const_lv27_0.is_01() || !shl_ln1192_fu_332_p2.read().is_01())? sc_lv<27>(): (sc_biguint<27>(ap_const_lv27_0) - sc_biguint<27>(shl_ln1192_fu_332_p2.read()));
}

void myproject::thread_sub_ln1192_fu_326_p2() {
    sub_ln1192_fu_326_p2 = (!sext_ln1192_fu_310_p1.read().is_01() || !sext_ln1192_1_fu_322_p1.read().is_01())? sc_lv<27>(): (sc_bigint<27>(sext_ln1192_fu_310_p1.read()) - sc_bigint<27>(sext_ln1192_1_fu_322_p1.read()));
}

void myproject::thread_tmp_1_fu_314_p3() {
    tmp_1_fu_314_p3 = esl_concat<17,3>(r_V_2_fu_304_p2.read(), ap_const_lv3_0);
}

void myproject::thread_x_V_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read())) {
        x_V_ap_vld_in_sig = x_V_ap_vld.read();
    } else {
        x_V_ap_vld_in_sig = x_V_ap_vld_preg.read();
    }
}

void myproject::thread_x_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        x_V_blk_n = x_V_ap_vld.read();
    } else {
        x_V_blk_n = ap_const_logic_1;
    }
}

void myproject::thread_x_V_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read())) {
        x_V_in_sig = x_V.read();
    } else {
        x_V_in_sig = x_V_preg.read();
    }
}

void myproject::thread_y_0_V() {
    y_0_V = esl_sext<9,8>(tmp_reg_371.read());
}

void myproject::thread_y_0_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_0_V_ap_vld = ap_const_logic_1;
    } else {
        y_0_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_1_V() {
    y_1_V = ret_V_8_fu_350_p2.read().range(26, 18);
}

void myproject::thread_y_1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_1_V_ap_vld = ap_const_logic_1;
    } else {
        y_1_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_2_V() {
    y_2_V = ap_const_lv9_1F9;
}

void myproject::thread_y_2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_2_V_ap_vld = ap_const_logic_1;
    } else {
        y_2_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_3_V() {
    y_3_V = esl_sext<9,5>(tmp_2_reg_381.read());
}

void myproject::thread_y_3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_3_V_ap_vld = ap_const_logic_1;
    } else {
        y_3_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_4_V() {
    y_4_V = ap_const_lv9_1F8;
}

void myproject::thread_y_4_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_4_V_ap_vld = ap_const_logic_1;
    } else {
        y_4_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void myproject::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V_ap_vld\" :  \"" << x_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V\" :  \"" << x_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_0_V\" :  \"" << y_0_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_0_V_ap_vld\" :  \"" << y_0_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_1_V\" :  \"" << y_1_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_1_V_ap_vld\" :  \"" << y_1_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_2_V\" :  \"" << y_2_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_2_V_ap_vld\" :  \"" << y_2_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_3_V\" :  \"" << y_3_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_3_V_ap_vld\" :  \"" << y_3_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_4_V\" :  \"" << y_4_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_4_V_ap_vld\" :  \"" << y_4_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

