-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (159 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.339000,HLS_SYN_LAT=8,HLS_SYN_TPT=1,HLS_SYN_MEM=38,HLS_SYN_DSP=44,HLS_SYN_FF=14332,HLS_SYN_LUT=26830,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv160_lc_1 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv10_3F9 : STD_LOGIC_VECTOR (9 downto 0) := "1111111001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv14_B : STD_LOGIC_VECTOR (13 downto 0) := "00000000001011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_60 : STD_LOGIC_VECTOR (13 downto 0) := "00000001100000";
    constant ap_const_lv14_C0 : STD_LOGIC_VECTOR (13 downto 0) := "00000011000000";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_33 : STD_LOGIC_VECTOR (10 downto 0) := "00000110011";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv19_1A00 : STD_LOGIC_VECTOR (18 downto 0) := "0000001101000000000";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv11_6C0 : STD_LOGIC_VECTOR (10 downto 0) := "11011000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv38_3F00000000 : STD_LOGIC_VECTOR (37 downto 0) := "11111100000000000000000000000000000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv34_3F2000000 : STD_LOGIC_VECTOR (33 downto 0) := "1111110010000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv42_3F000000000 : STD_LOGIC_VECTOR (41 downto 0) := "111111000000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv14_4E : STD_LOGIC_VECTOR (13 downto 0) := "00000001001110";
    constant ap_const_lv14_3FF5 : STD_LOGIC_VECTOR (13 downto 0) := "11111111110101";
    constant ap_const_lv14_25 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100101";
    constant ap_const_lv14_D0 : STD_LOGIC_VECTOR (13 downto 0) := "00000011010000";
    constant ap_const_lv16_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100101";
    constant ap_const_lv16_460 : STD_LOGIC_VECTOR (15 downto 0) := "0000010001100000";
    constant ap_const_lv14_2D : STD_LOGIC_VECTOR (13 downto 0) := "00000000101101";
    constant ap_const_lv14_20 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (159 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_10_fu_388_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_10_reg_1280 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_10_reg_1280_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_fu_402_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1290 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_reg_1290_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1296 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1296_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1296_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_reg_1296_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_3_fu_422_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_3_reg_1305 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_3_reg_1305_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_7_fu_451_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_7_reg_1314 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_7_reg_1314_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_8_reg_1325 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1185_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_2_reg_1330 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_26_fu_539_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_26_reg_1335 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_26_reg_1335_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_26_reg_1335_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_5_reg_1340 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1202_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_16_reg_1345 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_9_reg_1350 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_24_fu_634_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_24_reg_1355 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_24_reg_1355_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_24_reg_1355_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_24_reg_1355_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_4_reg_1360 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_6_reg_1365 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_s_reg_1370 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_4_reg_1375 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_5_reg_1380 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_9_reg_1385 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_fu_742_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_reg_1390 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1237_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_reg_1395 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_6_reg_1400 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_4_reg_1405 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1192_10_fu_854_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1192_10_reg_1410 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_19_fu_864_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_19_reg_1415 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_7_reg_1420 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_11_reg_1425 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_11_reg_1425_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1192_fu_889_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_reg_1430 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_1_reg_1435 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_2_reg_1440 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1245_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1192_2_reg_1445 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_8_reg_1450 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_9_reg_1455 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_9_reg_1455_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_3_reg_1460 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_3_reg_1460_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_3_reg_1460_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1192_6_fu_1253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1192_6_reg_1465 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_5_reg_1470 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_14_fu_1259_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_14_reg_1475 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_10_reg_1480 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln708_1_reg_1485 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_1_reg_1485_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_3_fu_1028_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln1192_3_reg_1490 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_8_reg_1495 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_8_reg_1495_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1192_8_fu_1050_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_ln1192_8_reg_1500 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_11_fu_1060_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_11_reg_1505 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_11_fu_1274_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln1192_11_reg_1510 : STD_LOGIC_VECTOR (37 downto 0);
    signal r_V_18_fu_1085_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_18_reg_1515 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_4_fu_1094_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln1192_4_reg_1520 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln1192_9_fu_1102_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_ln1192_9_reg_1525 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln708_10_reg_1530 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call58 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call58 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call58 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call58 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call58 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call58 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call58 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call58 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call58 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp17 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call63 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call63 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call63 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call63 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call63 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call63 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call63 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call63 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call63 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp19 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call82 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call82 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call82 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call82 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call82 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call82 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call82 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call82 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call82 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp44 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call195 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call195 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call195 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call195 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call195 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call195 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call195 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call195 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call195 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp65 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call28 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call28 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call28 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call28 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call28 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call28 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call28 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call28 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call28 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp73 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call100 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call100 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call100 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call100 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call100 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call100 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call100 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call100 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call100 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp88 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call144 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call144 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call144 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call144 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call144 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call144 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call144 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call144 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call144 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp100 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call182 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call182 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call182 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call182 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call182 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call182 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call182 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call182 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call182 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp108 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_done : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_idle : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_ready : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_ce : STD_LOGIC;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call157 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call157 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call157 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call157 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call157 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call157 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call157 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call157 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call157 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp125 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call68 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call68 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call68 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call68 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call68 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call68 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call68 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call68 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call68 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp21 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call121 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call121 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call121 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call121 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call121 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call121 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call121 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call121 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call121 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp23 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call78 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call78 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call78 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call78 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call78 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call78 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call78 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call78 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call78 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp43 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call173 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call173 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call173 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call173 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call173 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call173 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call173 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call173 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call173 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp54 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_return : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call22 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call22 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call22 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call22 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call22 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call22 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call22 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call22 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call22 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp71 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call38 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call38 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call38 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call38 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call38 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call38 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call38 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call38 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call38 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp76 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call48 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call48 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call48 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call48 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call48 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call48 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call48 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call48 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call48 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp79 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call93 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call93 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call93 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call93 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call93 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call93 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call93 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call93 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call93 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp85 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_ce : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_input_V : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call97 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call97 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call97 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call97 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call97 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call97 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call97 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call97 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call97 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp87 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_done : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_idle : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_ready : STD_LOGIC;
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call116 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call116 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call116 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call116 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call116 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call116 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call116 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call116 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call116 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp122 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start_reg : STD_LOGIC := '0';
    signal grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_1176_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_1_fu_488_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_494_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_1_fu_505_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_fu_501_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_1_fu_512_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_23_fu_516_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_fu_533_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1193_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1210_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_fu_482_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_6_fu_572_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_9_fu_579_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_7_fu_545_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_29_fu_583_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_28_fu_566_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_18_fu_589_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_39_fu_595_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_19_fu_612_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_20_fu_619_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_1_fu_626_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_2_fu_630_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_27_fu_645_p2 : STD_LOGIC_VECTOR (13 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_27_fu_645_p2 : signal is "no";
    signal sub_ln703_fu_661_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_1_fu_678_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_1_fu_681_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_31_fu_684_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_2_fu_690_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_11_fu_694_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1219_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1228_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_22_fu_745_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_5_fu_751_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_29_fu_754_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_fu_760_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_fu_773_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_9_fu_784_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_13_fu_787_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_8_fu_797_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_2_fu_793_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_8_fu_797_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_8_fu_797_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_803_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1_fu_815_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_5_fu_823_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_4_fu_811_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_27_fu_827_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_4_fu_837_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_4_fu_844_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_6_fu_833_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_33_fu_848_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_10_fu_860_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln703_10_fu_860_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln703_4_fu_870_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_25_fu_874_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1193_fu_879_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_26_fu_883_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1253_fu_895_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_25_fu_907_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_1_fu_904_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_25_fu_907_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_25_fu_907_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_24_fu_898_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_917_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_12_fu_942_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_5_fu_939_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_12_fu_942_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_13_fu_951_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_6_fu_948_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_13_fu_951_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_12_fu_942_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_13_fu_951_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_971_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1265_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_21_fu_988_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_fu_985_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_21_fu_988_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_21_fu_988_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_994_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln700_3_fu_982_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_fu_1002_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_28_fu_1006_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_3_fu_1028_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1192_3_fu_1028_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_10_fu_1040_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_3_fu_1037_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_10_fu_1040_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_10_fu_1040_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_8_fu_1050_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_8_fu_1050_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_11_fu_1060_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_4_fu_1056_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_11_fu_1060_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_15_fu_1069_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_8_fu_1066_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_15_fu_1069_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_15_fu_1069_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_18_fu_1085_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_9_fu_1082_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_18_fu_1085_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1192_4_fu_1094_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1192_9_fu_1102_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_12_fu_1110_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_12_fu_1110_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal ret_V_40_fu_1115_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln1192_5_fu_1134_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1192_5_fu_1134_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ret_V_30_fu_1139_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ret_V_36_fu_1160_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_1176_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1176_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1185_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1185_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1185_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1193_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1193_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1193_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1202_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1202_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1210_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1210_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1210_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1219_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_3_fu_700_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1219_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1219_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1228_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component cos_lut_ap_fixed_10_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component sin_lut_ap_fixed_10_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component myproject_mac_muladd_8ns_10s_14ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_muladd_5s_10s_14ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_muladd_7ns_10s_9ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_muladd_7ns_10s_12ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mac_muladd_7ns_10s_7ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_mulsub_12s_12s_14ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_muladd_10s_16s_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_mul_sub_6s_11s_10s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_am_addmul_12s_11s_16s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mul_mul_12s_19s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_mul_mul_12s_14s_26_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mac_muladd_6s_11s_16s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_mul_mul_12s_26s_38_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (37 downto 0) );
    end component;



begin
    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_ce,
        input_V => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_input_V,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_return);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_ce,
        input_V => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_input_V,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_return);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_ce,
        input_V => p_Val2_7_reg_1314,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_return);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_ce,
        input_V => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_input_V,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_return);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_ce,
        input_V => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_input_V,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_return);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_ce,
        input_V => p_Val2_3_reg_1305_pp0_iter1_reg,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_return);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_ce,
        input_V => trunc_ln708_5_reg_1340,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_return);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_ce,
        input_V => trunc_ln708_9_reg_1350,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_return);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289 : component cos_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start,
        ap_done => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_done,
        ap_idle => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_idle,
        ap_ready => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_ready,
        ap_ce => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_ce,
        input_V => trunc_ln708_6_reg_1365,
        ap_return => grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_ce,
        input_V => trunc_ln708_8_reg_1325,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_ce,
        input_V => p_Val2_3_reg_1305_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_ce,
        input_V => p_Val2_10_reg_1280_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_ce,
        input_V => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_input_V,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_return);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379 : component sin_lut_ap_fixed_10_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start,
        ap_done => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_done,
        ap_idle => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_idle,
        ap_ready => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_ready,
        ap_ce => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_ce,
        input_V => trunc_ln708_4_reg_1360,
        ap_return => grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_return);

    myproject_mac_muladd_8ns_10s_14ns_14_1_1_U17 : component myproject_mac_muladd_8ns_10s_14ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1176_p0,
        din1 => p_Val2_10_fu_388_p4,
        din2 => grp_fu_1176_p2,
        dout => grp_fu_1176_p3);

    myproject_mac_muladd_5s_10s_14ns_14_1_1_U18 : component myproject_mac_muladd_5s_10s_14ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 10,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1185_p0,
        din1 => grp_fu_1185_p1,
        din2 => grp_fu_1185_p2,
        dout => grp_fu_1185_p3);

    myproject_mac_muladd_7ns_10s_9ns_14_1_1_U19 : component myproject_mac_muladd_7ns_10s_9ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 10,
        din2_WIDTH => 9,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1193_p0,
        din1 => grp_fu_1193_p1,
        din2 => grp_fu_1193_p2,
        dout => grp_fu_1193_p3);

    myproject_mac_muladd_7ns_10s_12ns_16_1_1_U20 : component myproject_mac_muladd_7ns_10s_12ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 10,
        din2_WIDTH => 12,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_1202_p0,
        din1 => p_Val2_10_reg_1280,
        din2 => grp_fu_1202_p2,
        dout => grp_fu_1202_p3);

    myproject_mac_muladd_7ns_10s_7ns_14_1_1_U21 : component myproject_mac_muladd_7ns_10s_7ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 10,
        din2_WIDTH => 7,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1210_p0,
        din1 => grp_fu_1210_p1,
        din2 => grp_fu_1210_p2,
        dout => grp_fu_1210_p3);

    myproject_mac_mulsub_12s_12s_14ns_14_1_1_U22 : component myproject_mac_mulsub_12s_12s_14ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1219_p0,
        din1 => grp_fu_1219_p1,
        din2 => grp_fu_1219_p2,
        dout => grp_fu_1219_p3);

    myproject_mac_muladd_10s_16s_18ns_18_1_1_U23 : component myproject_mac_muladd_10s_16s_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 16,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => p_Val2_10_reg_1280_pp0_iter1_reg,
        din1 => ret_V_16_reg_1345,
        din2 => grp_fu_1228_p2,
        dout => grp_fu_1228_p3);

    myproject_mac_mul_sub_6s_11s_10s_16_1_1_U24 : component myproject_mac_mul_sub_6s_11s_10s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 11,
        din2_WIDTH => 10,
        dout_WIDTH => 16)
    port map (
        din0 => p_4_reg_1375,
        din1 => ret_V_fu_760_p2,
        din2 => tmp_4_fu_773_p3,
        dout => grp_fu_1237_p3);

    myproject_am_addmul_12s_11s_16s_32_1_1_U25 : component myproject_am_addmul_12s_11s_16s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 11,
        din2_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_25_fu_907_p2,
        din1 => tmp_fu_917_p3,
        din2 => ret_V_7_reg_1395,
        dout => grp_fu_1245_p3);

    myproject_mul_mul_12s_19s_32_1_1_U26 : component myproject_mul_mul_12s_19s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 19,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_25_fu_907_p2,
        din1 => add_ln1192_10_reg_1410,
        dout => mul_ln1192_6_fu_1253_p2);

    myproject_mul_mul_12s_14s_26_1_1_U27 : component myproject_mul_mul_12s_14s_26_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 14,
        dout_WIDTH => 26)
    port map (
        din0 => r_V_13_fu_951_p2,
        din1 => r_V_12_fu_942_p2,
        dout => r_V_14_fu_1259_p2);

    myproject_mac_muladd_6s_11s_16s_17_1_1_U28 : component myproject_mac_muladd_6s_11s_16s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 11,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => p_1_reg_1435,
        din1 => add_ln1192_reg_1430,
        din2 => lhs_V_fu_971_p3,
        dout => grp_fu_1265_p3);

    myproject_mul_mul_12s_26s_38_1_1_U29 : component myproject_mul_mul_12s_26s_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 26,
        dout_WIDTH => 38)
    port map (
        din0 => r_V_15_fu_1069_p2,
        din1 => r_V_14_reg_1475,
        dout => mul_ln1192_11_fu_1274_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_ready = ap_const_logic_1)) then 
                    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_ready = ap_const_logic_1)) then 
                    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv160_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    add_ln1192_10_reg_1410(18 downto 1) <= add_ln1192_10_fu_854_p2(18 downto 1);
                add_ln1192_reg_1430 <= add_ln1192_fu_889_p2;
                mul_ln1192_11_reg_1510 <= mul_ln1192_11_fu_1274_p2;
                mul_ln1192_3_reg_1490 <= mul_ln1192_3_fu_1028_p2;
                mul_ln1192_4_reg_1520 <= mul_ln1192_4_fu_1094_p2;
                mul_ln1192_6_reg_1465 <= mul_ln1192_6_fu_1253_p2;
                mul_ln1192_8_reg_1500 <= mul_ln1192_8_fu_1050_p2;
                mul_ln1192_9_reg_1525 <= mul_ln1192_9_fu_1102_p2;
                p_10_reg_1480 <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_return;
                p_11_reg_1425 <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_return;
                p_11_reg_1425_pp0_iter5_reg <= p_11_reg_1425;
                p_1_reg_1435 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_return;
                p_2_reg_1440 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_return;
                p_3_reg_1460 <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_return;
                p_3_reg_1460_pp0_iter6_reg <= p_3_reg_1460;
                p_3_reg_1460_pp0_iter7_reg <= p_3_reg_1460_pp0_iter6_reg;
                p_4_reg_1375 <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_return;
                p_5_reg_1470 <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_return;
                p_7_reg_1420 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_return;
                p_8_reg_1450 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_return;
                p_9_reg_1455 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_return;
                p_9_reg_1455_pp0_iter6_reg <= p_9_reg_1455;
                p_Val2_2_reg_1296_pp0_iter2_reg <= p_Val2_2_reg_1296_pp0_iter1_reg;
                p_Val2_2_reg_1296_pp0_iter3_reg <= p_Val2_2_reg_1296_pp0_iter2_reg;
                p_Val2_4_reg_1405 <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_return;
                p_Val2_5_reg_1380 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_return;
                p_Val2_6_reg_1400 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_return;
                p_Val2_8_reg_1495 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_return;
                p_Val2_8_reg_1495_pp0_iter7_reg <= p_Val2_8_reg_1495;
                p_Val2_9_reg_1385 <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_return;
                p_Val2_s_reg_1370 <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_return;
                r_V_11_reg_1505 <= r_V_11_fu_1060_p2;
                r_V_14_reg_1475 <= r_V_14_fu_1259_p2;
                r_V_18_reg_1515 <= r_V_18_fu_1085_p2;
                    r_V_26_reg_1335_pp0_iter2_reg(13 downto 1) <= r_V_26_reg_1335(13 downto 1);
                    r_V_26_reg_1335_pp0_iter3_reg(13 downto 1) <= r_V_26_reg_1335_pp0_iter2_reg(13 downto 1);
                r_V_reg_1390 <= r_V_fu_742_p1;
                ret_V_19_reg_1415 <= ret_V_19_fu_864_p2;
                    ret_V_24_reg_1355(11 downto 1) <= ret_V_24_fu_634_p2(11 downto 1);
                    ret_V_24_reg_1355_pp0_iter3_reg(11 downto 1) <= ret_V_24_reg_1355(11 downto 1);
                    ret_V_24_reg_1355_pp0_iter4_reg(11 downto 1) <= ret_V_24_reg_1355_pp0_iter3_reg(11 downto 1);
                    ret_V_24_reg_1355_pp0_iter5_reg(11 downto 1) <= ret_V_24_reg_1355_pp0_iter4_reg(11 downto 1);
                trunc_ln708_10_reg_1530 <= ret_V_40_fu_1115_p2(37 downto 28);
                trunc_ln708_1_reg_1485 <= ret_V_28_fu_1006_p2(17 downto 8);
                trunc_ln708_1_reg_1485_pp0_iter7_reg <= trunc_ln708_1_reg_1485;
                trunc_ln708_4_reg_1360 <= grp_fu_1219_p3(13 downto 4);
                trunc_ln708_6_reg_1365 <= grp_fu_1228_p3(17 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln1192_2_reg_1330 <= grp_fu_1185_p3;
                ret_V_16_reg_1345 <= grp_fu_1202_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                mul_ln1192_2_reg_1445 <= grp_fu_1245_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_10_reg_1280 <= x_V_in_sig(149 downto 140);
                p_Val2_10_reg_1280_pp0_iter1_reg <= p_Val2_10_reg_1280;
                p_Val2_1_reg_1290 <= x_V_in_sig(49 downto 40);
                p_Val2_1_reg_1290_pp0_iter1_reg <= p_Val2_1_reg_1290;
                p_Val2_2_reg_1296 <= x_V_in_sig(159 downto 150);
                p_Val2_2_reg_1296_pp0_iter1_reg <= p_Val2_2_reg_1296;
                p_Val2_3_reg_1305 <= x_V_in_sig(29 downto 20);
                p_Val2_3_reg_1305_pp0_iter1_reg <= p_Val2_3_reg_1305;
                p_Val2_7_reg_1314 <= x_V_in_sig(39 downto 30);
                p_Val2_7_reg_1314_pp0_iter1_reg <= p_Val2_7_reg_1314;
                    r_V_26_reg_1335(13 downto 1) <= r_V_26_fu_539_p2(13 downto 1);
                trunc_ln708_5_reg_1340 <= grp_fu_1193_p3(13 downto 4);
                trunc_ln708_8_reg_1325 <= grp_fu_1176_p3(13 downto 4);
                trunc_ln708_9_reg_1350 <= grp_fu_1210_p3(13 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ret_V_7_reg_1395 <= grp_fu_1237_p3;
            end if;
        end if;
    end process;
    r_V_26_reg_1335(0) <= '0';
    r_V_26_reg_1335_pp0_iter2_reg(0) <= '0';
    r_V_26_reg_1335_pp0_iter3_reg(0) <= '0';
    ret_V_24_reg_1355(0) <= '0';
    ret_V_24_reg_1355_pp0_iter3_reg(0) <= '0';
    ret_V_24_reg_1355_pp0_iter4_reg(0) <= '0';
    ret_V_24_reg_1355_pp0_iter5_reg(0) <= '0';
    add_ln1192_10_reg_1410(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_10_fu_854_p2 <= std_logic_vector(unsigned(ap_const_lv19_1A00) + unsigned(ret_V_33_fu_848_p2));
    add_ln1192_18_fu_589_p2 <= std_logic_vector(unsigned(r_V_29_fu_583_p2) + unsigned(r_V_28_fu_566_p2));
    add_ln1192_fu_889_p2 <= std_logic_vector(signed(ap_const_lv11_6C0) + signed(ret_V_26_fu_883_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp100_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp100 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp108_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp108 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp122_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp122 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp125_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp125 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp17_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp17 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp19_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp19 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp21_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp21 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp23_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp23 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp43_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp43 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp44_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp44 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp54_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp54 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp65_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp65 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp71_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp71 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp73_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp73 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp76_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp76 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp79_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp79 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp85_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp85 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp87_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp87 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp88_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp88 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call100_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call100 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call116_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call116 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call121_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call121 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call144_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call144 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call157_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call157 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call173_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call173 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call182_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call182 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call195_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call195 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call22_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call22 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call28_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call28 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call38_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call38 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call48_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call48 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call58_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call58 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call63_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call63 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call68_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call68 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call78_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call78 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call82_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call82 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call93_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call93 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call97_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call97 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call116 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call121 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call144 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call173 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call182 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call195 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call97 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to7)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to7 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp17)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_start <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_217_input_V <= x_V_in_sig(10 - 1 downto 0);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp19)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_start <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_226_input_V <= std_logic_vector(signed(p_Val2_10_fu_388_p4) - signed(p_Val2_1_fu_402_p4));

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp44)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp44) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_start_reg;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp65)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp65) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_ap_start_reg;
    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_244_input_V <= ret_V_39_fu_595_p2(13 downto 4);

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp73)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp73) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_start_reg;
    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_input_V <= std_logic_vector(unsigned(p_Val2_1_reg_1290_pp0_iter1_reg) + unsigned(p_Val2_2_reg_1296_pp0_iter1_reg));

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp88)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp88) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_262_ap_start_reg;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp100)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp100) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_271_ap_start_reg;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp108)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp108) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_280_ap_start_reg;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp125)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp125) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_start_reg;
    grp_fu_1176_p0 <= ap_const_lv14_4E(8 - 1 downto 0);
    grp_fu_1176_p2 <= (p_Val2_7_fu_451_p4 & ap_const_lv4_0);
    grp_fu_1185_p0 <= ap_const_lv14_3FF5(5 - 1 downto 0);
    grp_fu_1185_p1 <= sext_ln1192_fu_482_p1(10 - 1 downto 0);
    grp_fu_1185_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv14_B) * signed(mul_ln1192_1_fu_488_p1))), 14));
    grp_fu_1193_p0 <= ap_const_lv14_25(7 - 1 downto 0);
    grp_fu_1193_p1 <= sext_ln1118_7_fu_545_p1(10 - 1 downto 0);
    grp_fu_1193_p2 <= ap_const_lv14_D0(9 - 1 downto 0);
    grp_fu_1202_p0 <= ap_const_lv16_25(7 - 1 downto 0);
    grp_fu_1202_p2 <= ap_const_lv16_460(12 - 1 downto 0);
    grp_fu_1210_p0 <= ap_const_lv14_2D(7 - 1 downto 0);
    grp_fu_1210_p1 <= sext_ln1118_7_fu_545_p1(10 - 1 downto 0);
    grp_fu_1210_p2 <= ap_const_lv14_20(7 - 1 downto 0);
    grp_fu_1219_p0 <= sext_ln1118_3_fu_700_p1(12 - 1 downto 0);
    grp_fu_1219_p1 <= sext_ln1118_3_fu_700_p1(12 - 1 downto 0);
    grp_fu_1219_p2 <= (p_Val2_3_reg_1305_pp0_iter1_reg & ap_const_lv4_0);
    grp_fu_1228_p2 <= (p_Val2_7_reg_1314_pp0_iter1_reg & ap_const_lv8_0);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp21)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_298_input_V <= std_logic_vector(signed(ap_const_lv10_3F9) + signed(p_Val2_3_fu_422_p4));

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp23)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_start <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_307_input_V <= x_V_in_sig(39 downto 30);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp43)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp43) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_316_input_V <= r_V_23_fu_516_p2(13 downto 4);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp54)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp54) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_325_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp71)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp71) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp76)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp76) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_343_input_V <= ret_V_27_fu_645_p2(13 downto 4);

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp79)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp79) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_352_input_V <= std_logic_vector(unsigned(ap_const_lv10_4) + unsigned(sub_ln703_fu_661_p2));

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp85)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp85) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_361_ap_start_reg;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp87)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp87) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_ap_start_reg;
    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_370_input_V <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(p_Val2_7_reg_1314_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp122) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start <= grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_379_ap_start_reg;
        lhs_V_1_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_10_reg_1280_pp0_iter1_reg),11));

        lhs_V_2_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_31_fu_684_p2),12));

    lhs_V_4_fu_837_p3 <= (r_V_26_reg_1335_pp0_iter3_reg & ap_const_lv4_0);
    lhs_V_fu_971_p3 <= (ret_V_24_reg_1355_pp0_iter5_reg & ap_const_lv4_0);
    mul_ln1192_12_fu_1110_p0 <= r_V_18_reg_1515;
    mul_ln1192_12_fu_1110_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_12_fu_1110_p0) * signed(mul_ln1192_11_reg_1510))), 38));
    mul_ln1192_1_fu_488_p1 <= p_Val2_3_reg_1305;
    mul_ln1192_3_fu_1028_p0 <= p_8_reg_1450;
    mul_ln1192_3_fu_1028_p1 <= mul_ln1192_2_reg_1445(29 - 1 downto 0);
    mul_ln1192_3_fu_1028_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_3_fu_1028_p0) * signed(mul_ln1192_3_fu_1028_p1))), 34));
    mul_ln1192_4_fu_1094_p0 <= p_9_reg_1455_pp0_iter6_reg;
    mul_ln1192_4_fu_1094_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_4_fu_1094_p0) * signed(mul_ln1192_3_reg_1490))), 34));
    mul_ln1192_5_fu_1134_p0 <= p_3_reg_1460_pp0_iter7_reg;
    mul_ln1192_5_fu_1134_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_5_fu_1134_p0) * signed(mul_ln1192_4_reg_1520))), 34));
    mul_ln1192_8_fu_1050_p0 <= r_V_10_fu_1040_p2;
    mul_ln1192_8_fu_1050_p1 <= mul_ln1192_6_reg_1465(31 - 1 downto 0);
    mul_ln1192_8_fu_1050_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_8_fu_1050_p0) * signed(mul_ln1192_8_fu_1050_p1))), 42));
    mul_ln1192_9_fu_1102_p0 <= r_V_11_reg_1505;
    mul_ln1192_9_fu_1102_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_9_fu_1102_p0) * signed(mul_ln1192_8_reg_1500))), 42));
    p_Val2_10_fu_388_p4 <= x_V_in_sig(149 downto 140);
    p_Val2_1_fu_402_p4 <= x_V_in_sig(49 downto 40);
    p_Val2_3_fu_422_p4 <= x_V_in_sig(29 downto 20);
    p_Val2_7_fu_451_p4 <= x_V_in_sig(39 downto 30);
    r_V_10_fu_1040_p0 <= sext_ln1116_3_fu_1037_p1(6 - 1 downto 0);
    r_V_10_fu_1040_p1 <= sext_ln1116_3_fu_1037_p1(6 - 1 downto 0);
    r_V_10_fu_1040_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_10_fu_1040_p0) * signed(r_V_10_fu_1040_p1))), 12));
    r_V_11_fu_1060_p0 <= sext_ln1116_4_fu_1056_p1(6 - 1 downto 0);
    r_V_11_fu_1060_p1 <= sext_ln1116_4_fu_1056_p1(6 - 1 downto 0);
    r_V_11_fu_1060_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_11_fu_1060_p0) * signed(r_V_11_fu_1060_p1))), 12));
    r_V_12_fu_942_p0 <= sext_ln1116_5_fu_939_p1(7 - 1 downto 0);
    r_V_12_fu_942_p1 <= sext_ln1116_5_fu_939_p1(7 - 1 downto 0);
    r_V_12_fu_942_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_fu_942_p0) * signed(r_V_12_fu_942_p1))), 14));
    r_V_13_fu_951_p0 <= sext_ln1116_6_fu_948_p1(6 - 1 downto 0);
    r_V_13_fu_951_p1 <= sext_ln1116_6_fu_948_p1(6 - 1 downto 0);
    r_V_13_fu_951_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_13_fu_951_p0) * signed(r_V_13_fu_951_p1))), 12));
    r_V_15_fu_1069_p0 <= sext_ln1116_8_fu_1066_p1(6 - 1 downto 0);
    r_V_15_fu_1069_p1 <= sext_ln1116_8_fu_1066_p1(6 - 1 downto 0);
    r_V_15_fu_1069_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_15_fu_1069_p0) * signed(r_V_15_fu_1069_p1))), 12));
    r_V_18_fu_1085_p0 <= sext_ln1116_9_fu_1082_p1(6 - 1 downto 0);
    r_V_18_fu_1085_p1 <= sext_ln1116_9_fu_1082_p1(6 - 1 downto 0);
    r_V_18_fu_1085_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_18_fu_1085_p0) * signed(r_V_18_fu_1085_p1))), 12));
    r_V_19_fu_612_p3 <= (p_Val2_10_reg_1280_pp0_iter1_reg & ap_const_lv1_0);
    r_V_20_fu_619_p3 <= (p_Val2_1_reg_1290_pp0_iter1_reg & ap_const_lv1_0);
    r_V_21_fu_988_p0 <= sext_ln1116_fu_985_p1(6 - 1 downto 0);
    r_V_21_fu_988_p1 <= sext_ln1116_fu_985_p1(6 - 1 downto 0);
    r_V_21_fu_988_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_21_fu_988_p0) * signed(r_V_21_fu_988_p1))), 12));
    r_V_22_fu_745_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(r_V_fu_742_p1));
    r_V_23_fu_516_p2 <= std_logic_vector(signed(sext_ln1118_fu_501_p1) - signed(sext_ln1118_1_fu_512_p1));
    r_V_24_fu_898_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(sext_ln1253_fu_895_p1));
    r_V_25_fu_907_p0 <= sext_ln1116_1_fu_904_p1(6 - 1 downto 0);
    r_V_25_fu_907_p1 <= sext_ln1116_1_fu_904_p1(6 - 1 downto 0);
    r_V_25_fu_907_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_25_fu_907_p0) * signed(r_V_25_fu_907_p1))), 12));
    r_V_26_fu_539_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_533_p2) - unsigned(sext_ln1118_1_fu_512_p1));
    r_V_27_fu_827_p2 <= std_logic_vector(signed(sext_ln1118_5_fu_823_p1) + signed(sext_ln1118_4_fu_811_p1));
    r_V_28_fu_566_p2 <= std_logic_vector(signed(sext_ln1118_fu_501_p1) - signed(sext_ln1192_fu_482_p1));
    r_V_29_fu_583_p2 <= std_logic_vector(signed(sext_ln1118_9_fu_579_p1) - signed(sext_ln1118_7_fu_545_p1));
    r_V_8_fu_797_p0 <= sext_ln1116_2_fu_793_p1(7 - 1 downto 0);
    r_V_8_fu_797_p1 <= sext_ln1116_2_fu_793_p1(7 - 1 downto 0);
    r_V_8_fu_797_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_fu_797_p0) * signed(r_V_8_fu_797_p1))), 14));
        r_V_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1296_pp0_iter3_reg),11));

    ret_V_11_fu_694_p2 <= std_logic_vector(unsigned(ap_const_lv12_B) + unsigned(lhs_V_2_fu_690_p1));
    ret_V_13_fu_787_p2 <= std_logic_vector(unsigned(ap_const_lv7_6) + unsigned(sext_ln703_9_fu_784_p1));
    ret_V_19_fu_864_p2 <= std_logic_vector(unsigned(ap_const_lv7_7) + unsigned(sext_ln703_10_fu_860_p1));
    ret_V_24_fu_634_p2 <= std_logic_vector(signed(sext_ln703_1_fu_626_p1) - signed(sext_ln703_2_fu_630_p1));
    ret_V_25_fu_874_p2 <= std_logic_vector(signed(sext_ln703_4_fu_870_p1) + signed(r_V_reg_1390));
    ret_V_26_fu_883_p2 <= std_logic_vector(unsigned(ret_V_25_fu_874_p2) - unsigned(sext_ln1193_fu_879_p1));
    ret_V_27_fu_645_p2 <= std_logic_vector(unsigned(ap_const_lv14_C0) + unsigned(add_ln1192_2_reg_1330));
    ret_V_28_fu_1006_p2 <= std_logic_vector(signed(sext_ln700_3_fu_982_p1) + signed(rhs_V_fu_1002_p1));
    ret_V_29_fu_754_p2 <= std_logic_vector(unsigned(r_V_22_fu_745_p2) - unsigned(sext_ln703_5_fu_751_p1));
    ret_V_30_fu_1139_p2 <= std_logic_vector(signed(ap_const_lv34_3F2000000) + signed(mul_ln1192_5_fu_1134_p2));
    ret_V_31_fu_684_p2 <= std_logic_vector(signed(lhs_V_1_fu_678_p1) - signed(rhs_V_1_fu_681_p1));
    ret_V_33_fu_848_p2 <= std_logic_vector(signed(sext_ln728_4_fu_844_p1) - signed(sext_ln1118_6_fu_833_p1));
    ret_V_36_fu_1160_p2 <= std_logic_vector(signed(ap_const_lv42_3F000000000) + signed(mul_ln1192_9_reg_1525));
    ret_V_39_fu_595_p2 <= std_logic_vector(unsigned(ap_const_lv14_60) + unsigned(add_ln1192_18_fu_589_p2));
    ret_V_40_fu_1115_p2 <= std_logic_vector(signed(ap_const_lv38_3F00000000) + signed(mul_ln1192_12_fu_1110_p2));
    ret_V_fu_760_p2 <= std_logic_vector(unsigned(ap_const_lv11_33) + unsigned(ret_V_29_fu_754_p2));
        rhs_V_1_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1314_pp0_iter1_reg),11));

        rhs_V_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_994_p3),18));

        sext_ln1116_1_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_1405),12));

        sext_ln1116_2_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_13_fu_787_p2),14));

        sext_ln1116_3_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_5_reg_1470),12));

        sext_ln1116_4_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_289_ap_return),12));

        sext_ln1116_5_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_19_reg_1415),14));

        sext_ln1116_6_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_7_reg_1420),12));

        sext_ln1116_8_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_10_reg_1480),12));

        sext_ln1116_9_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_11_reg_1425_pp0_iter5_reg),12));

        sext_ln1116_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1440),12));

        sext_ln1118_1_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_505_p3),14));

        sext_ln1118_3_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_11_fu_694_p2),14));

        sext_ln1118_4_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_803_p3),18));

        sext_ln1118_5_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_815_p3),18));

        sext_ln1118_6_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_27_fu_827_p2),19));

        sext_ln1118_7_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1314),14));

        sext_ln1118_9_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_572_p3),14));

        sext_ln1118_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_494_p3),14));

        sext_ln1192_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1296),14));

        sext_ln1193_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_253_ap_return),11));

        sext_ln1253_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_reg_1400),7));

        sext_ln700_3_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1265_p3),18));

    sext_ln703_10_fu_860_p0 <= grp_cos_lut_ap_fixed_10_6_5_3_0_s_fu_235_ap_return;
        sext_ln703_10_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_10_fu_860_p0),7));

        sext_ln703_1_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_19_fu_612_p3),12));

        sext_ln703_2_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_20_fu_619_p3),12));

        sext_ln703_4_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_10_6_5_3_0_s_fu_334_ap_return),11));

        sext_ln703_5_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1370),11));

        sext_ln703_9_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1385),7));

        sext_ln728_4_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_4_fu_837_p3),19));

    shl_ln1118_1_fu_505_p3 <= (p_Val2_2_reg_1296 & ap_const_lv1_0);
    shl_ln1118_6_fu_572_p3 <= (p_Val2_7_reg_1314 & ap_const_lv3_0);
    shl_ln_fu_494_p3 <= (p_Val2_2_reg_1296 & ap_const_lv3_0);
    sub_ln1118_fu_533_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(sext_ln1118_fu_501_p1));
    sub_ln703_fu_661_p2 <= std_logic_vector(unsigned(p_Val2_10_reg_1280_pp0_iter1_reg) - unsigned(p_Val2_3_reg_1305_pp0_iter1_reg));
    tmp_1_fu_815_p3 <= (r_V_8_fu_797_p2 & ap_const_lv1_0);
    tmp_3_fu_994_p3 <= (r_V_21_fu_988_p2 & ap_const_lv4_0);
    tmp_4_fu_773_p3 <= (p_Val2_5_reg_1380 & ap_const_lv4_0);
    tmp_fu_917_p3 <= (r_V_24_fu_898_p2 & ap_const_lv4_0);
    tmp_s_fu_803_p3 <= (r_V_8_fu_797_p2 & ap_const_lv3_0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln708_1_reg_1485_pp0_iter7_reg;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= ret_V_30_fu_1139_p2(33 downto 24);

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_2_V <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1495_pp0_iter7_reg),10));


    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= ret_V_36_fu_1160_p2(41 downto 32);

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= trunc_ln708_10_reg_1530;

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
