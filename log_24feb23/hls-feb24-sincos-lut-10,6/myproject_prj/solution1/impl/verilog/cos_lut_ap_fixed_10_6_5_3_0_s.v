// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cos_lut_ap_fixed_10_6_5_3_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        input_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [9:0] input_V;
output  [5:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] sincos1_1_address0;
reg    sincos1_1_ce0;
wire   [3:0] sincos1_1_q0;
wire   [8:0] sincos1_0_address0;
reg    sincos1_0_ce0;
wire   [4:0] sincos1_0_q0;
reg   [3:0] p_Val2_60_reg_760;
reg   [3:0] p_Val2_60_reg_760_pp0_iter1_reg;
reg   [0:0] luTdex1_V_reg_769;
reg   [0:0] luTdex1_V_reg_769_pp0_iter1_reg;
reg   [2:0] octant_V_reg_774;
reg   [2:0] octant_V_reg_774_pp0_iter1_reg;
reg   [2:0] octant_V_reg_774_pp0_iter2_reg;
reg   [0:0] tmp_12_reg_785;
reg   [0:0] tmp_12_reg_785_pp0_iter1_reg;
reg   [3:0] p_Result_s_fu_208_p4;
reg   [3:0] p_Result_s_reg_790;
wire   [10:0] trunc_ln893_fu_232_p1;
reg   [10:0] trunc_ln893_reg_795;
wire   [31:0] sub_ln894_fu_236_p2;
reg   [31:0] sub_ln894_reg_800;
wire   [31:0] or_ln899_s_fu_344_p3;
reg   [31:0] or_ln899_s_reg_806;
wire   [0:0] icmp_ln908_fu_352_p2;
reg   [0:0] icmp_ln908_reg_811;
wire   [63:0] bitcast_ln729_fu_497_p1;
wire   [0:0] or_ln924_fu_527_p2;
reg   [0:0] or_ln924_reg_834;
wire   [0:0] icmp_ln885_fu_533_p2;
reg   [0:0] icmp_ln885_reg_840;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_fu_378_p1;
wire  signed [24:0] r_V_fu_749_p2;
wire   [31:0] p_Result_27_fu_217_p3;
reg   [31:0] l_fu_224_p3;
wire   [31:0] lsb_index_fu_246_p2;
wire   [30:0] tmp_14_fu_252_p4;
wire   [2:0] trunc_ln897_fu_268_p1;
wire   [2:0] sub_ln897_fu_272_p2;
wire   [3:0] zext_ln897_fu_278_p1;
wire   [3:0] lshr_ln897_fu_282_p2;
wire   [3:0] p_Result_17_fu_288_p2;
wire   [0:0] icmp_ln897_fu_262_p2;
wire   [0:0] icmp_ln897_2_fu_293_p2;
wire   [0:0] tmp_15_fu_305_p3;
wire   [3:0] trunc_ln894_fu_242_p1;
wire   [3:0] add_ln899_fu_319_p2;
wire   [0:0] p_Result_18_fu_325_p3;
wire   [0:0] xor_ln899_fu_313_p2;
wire   [0:0] and_ln899_fu_332_p2;
wire   [0:0] a_fu_299_p2;
wire   [0:0] or_ln899_fu_338_p2;
wire   [8:0] p_Result_26_fu_358_p3;
wire   [8:0] sub_ln214_fu_365_p2;
wire   [8:0] luTdex_V_2_fu_371_p3;
wire   [31:0] zext_ln907_2_fu_387_p1;
wire   [31:0] add_ln908_fu_390_p2;
wire   [31:0] lshr_ln908_fu_395_p2;
wire   [31:0] sub_ln908_fu_405_p2;
wire   [63:0] m_fu_384_p1;
wire   [63:0] zext_ln908_2_fu_410_p1;
wire   [63:0] zext_ln908_fu_401_p1;
wire   [63:0] shl_ln908_fu_414_p2;
wire   [63:0] zext_ln911_fu_427_p1;
wire   [63:0] m_12_fu_420_p3;
wire   [63:0] m_13_fu_430_p2;
wire   [62:0] m_s_fu_436_p4;
wire   [10:0] sub_ln915_fu_458_p2;
wire   [0:0] tmp_16_fu_450_p3;
wire   [10:0] add_ln915_fu_463_p2;
wire   [10:0] select_ln915_fu_469_p3;
wire   [63:0] m_22_fu_446_p1;
wire   [11:0] tmp_8_fu_477_p3;
wire   [63:0] p_Result_28_fu_485_p5;
wire   [51:0] trunc_ln6_fu_505_p4;
wire   [0:0] icmp_ln924_2_fu_521_p2;
wire   [0:0] icmp_ln924_fu_515_p2;
wire   [2:0] add_ln147_fu_538_p2;
wire   [1:0] tmp_13_fu_543_p4;
wire   [4:0] sub_ln703_fu_567_p2;
wire   [4:0] zext_ln1265_fu_559_p1;
wire   [0:0] icmp_ln146_fu_583_p2;
wire   [0:0] icmp_ln146_1_fu_588_p2;
wire   [0:0] icmp_ln146_2_fu_599_p2;
wire   [0:0] icmp_ln146_3_fu_604_p2;
wire   [0:0] and_ln146_fu_609_p2;
wire   [0:0] icmp_ln147_fu_553_p2;
wire   [0:0] xor_ln147_fu_621_p2;
wire   [0:0] icmp_ln148_fu_627_p2;
wire   [0:0] icmp_ln148_1_fu_632_p2;
wire   [0:0] and_ln148_1_fu_643_p2;
wire   [0:0] and_ln148_fu_637_p2;
wire   [0:0] grp_fu_152_p2;
wire   [0:0] grp_fu_157_p2;
wire   [0:0] or_ln154_1_fu_655_p2;
wire   [0:0] and_ln154_1_fu_661_p2;
wire   [0:0] grp_fu_162_p2;
wire   [0:0] grp_fu_167_p2;
wire   [0:0] or_ln155_fu_671_p2;
wire   [0:0] and_ln155_1_fu_677_p2;
wire   [0:0] and_ln154_fu_666_p2;
wire   [0:0] and_ln155_fu_682_p2;
wire   [0:0] and_ln148_2_fu_649_p2;
wire   [5:0] zext_ln1265_1_fu_563_p1;
wire  signed [5:0] sext_ln703_fu_573_p1;
wire   [0:0] and_ln147_fu_615_p2;
wire   [0:0] or_ln146_fu_593_p2;
wire   [4:0] sub_ln703_1_fu_577_p2;
wire   [4:0] select_ln154_2_fu_715_p3;
wire   [0:0] or_ln154_fu_695_p2;
wire   [5:0] select_ln154_fu_687_p3;
wire   [5:0] select_ln154_1_fu_701_p3;
wire   [0:0] or_ln154_2_fu_709_p2;
wire   [0:0] or_ln154_3_fu_735_p2;
wire   [5:0] select_ln154_3_fu_727_p3;
wire  signed [5:0] sext_ln154_fu_723_p1;
wire   [14:0] r_V_fu_749_p0;
reg    grp_fu_152_ce;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_157_ce;
reg    grp_fu_162_ce;
reg    grp_fu_167_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

sin_lut_ap_fixed_10_6_5_3_0_s_sincos1_1 #(
    .DataWidth( 4 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
sincos1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sincos1_1_address0),
    .ce0(sincos1_1_ce0),
    .q0(sincos1_1_q0)
);

sin_lut_ap_fixed_10_6_5_3_0_s_sincos1_0 #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
sincos1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sincos1_0_address0),
    .ce0(sincos1_0_ce0),
    .q0(sincos1_0_q0)
);

myproject_dcmp_64ns_64ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
myproject_dcmp_64ns_64ns_1_2_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln729_fu_497_p1),
    .din1(64'd4593671619917905920),
    .ce(grp_fu_152_ce),
    .opcode(5'd1),
    .dout(grp_fu_152_p2)
);

myproject_dcmp_64ns_64ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
myproject_dcmp_64ns_64ns_1_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln729_fu_497_p1),
    .din1(64'd4606056518893174784),
    .ce(grp_fu_157_ce),
    .opcode(5'd1),
    .dout(grp_fu_157_p2)
);

myproject_dcmp_64ns_64ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
myproject_dcmp_64ns_64ns_1_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln729_fu_497_p1),
    .din1(64'd4600427019358961664),
    .ce(grp_fu_162_ce),
    .opcode(5'd1),
    .dout(grp_fu_162_p2)
);

myproject_dcmp_64ns_64ns_1_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
myproject_dcmp_64ns_64ns_1_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln729_fu_497_p1),
    .din1(64'd4603804719079489536),
    .ce(grp_fu_167_ce),
    .opcode(5'd1),
    .dout(grp_fu_167_p2)
);

myproject_mul_mul_15ns_10s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 25 ))
myproject_mul_mul_15ns_10s_25_1_1_U15(
    .din0(r_V_fu_749_p0),
    .din1(input_V),
    .dout(r_V_fu_749_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln885_reg_840 <= icmp_ln885_fu_533_p2;
        octant_V_reg_774_pp0_iter2_reg <= octant_V_reg_774_pp0_iter1_reg;
        or_ln924_reg_834 <= or_ln924_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln908_reg_811 <= icmp_ln908_fu_352_p2;
        luTdex1_V_reg_769 <= r_V_fu_749_p2[32'd16];
        luTdex1_V_reg_769_pp0_iter1_reg <= luTdex1_V_reg_769;
        octant_V_reg_774 <= {{r_V_fu_749_p2[19:17]}};
        octant_V_reg_774_pp0_iter1_reg <= octant_V_reg_774;
        or_ln899_s_reg_806[0] <= or_ln899_s_fu_344_p3[0];
        p_Result_s_reg_790 <= p_Result_s_fu_208_p4;
        p_Val2_60_reg_760 <= {{r_V_fu_749_p2[19:16]}};
        p_Val2_60_reg_760_pp0_iter1_reg <= p_Val2_60_reg_760;
        sub_ln894_reg_800 <= sub_ln894_fu_236_p2;
        tmp_12_reg_785 <= r_V_fu_749_p2[32'd17];
        tmp_12_reg_785_pp0_iter1_reg <= tmp_12_reg_785;
        trunc_ln893_reg_795 <= trunc_ln893_fu_232_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_152_ce = 1'b1;
    end else begin
        grp_fu_152_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_157_ce = 1'b1;
    end else begin
        grp_fu_157_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_162_ce = 1'b1;
    end else begin
        grp_fu_162_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_167_ce = 1'b1;
    end else begin
        grp_fu_167_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sincos1_0_ce0 = 1'b1;
    end else begin
        sincos1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sincos1_1_ce0 = 1'b1;
    end else begin
        sincos1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_299_p2 = (icmp_ln897_fu_262_p2 & icmp_ln897_2_fu_293_p2);

assign add_ln147_fu_538_p2 = ($signed(3'd5) + $signed(octant_V_reg_774_pp0_iter2_reg));

assign add_ln899_fu_319_p2 = ($signed(4'd11) + $signed(trunc_ln894_fu_242_p1));

assign add_ln908_fu_390_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_800));

assign add_ln915_fu_463_p2 = (11'd1 + sub_ln915_fu_458_p2);

assign and_ln146_fu_609_p2 = (icmp_ln146_3_fu_604_p2 & icmp_ln146_2_fu_599_p2);

assign and_ln147_fu_615_p2 = (icmp_ln147_fu_553_p2 & and_ln146_fu_609_p2);

assign and_ln148_1_fu_643_p2 = (icmp_ln148_fu_627_p2 & icmp_ln148_1_fu_632_p2);

assign and_ln148_2_fu_649_p2 = (and_ln148_fu_637_p2 & and_ln148_1_fu_643_p2);

assign and_ln148_fu_637_p2 = (xor_ln147_fu_621_p2 & and_ln146_fu_609_p2);

assign and_ln154_1_fu_661_p2 = (or_ln924_reg_834 & or_ln154_1_fu_655_p2);

assign and_ln154_fu_666_p2 = (icmp_ln885_reg_840 & and_ln154_1_fu_661_p2);

assign and_ln155_1_fu_677_p2 = (or_ln924_reg_834 & or_ln155_fu_671_p2);

assign and_ln155_fu_682_p2 = (icmp_ln885_reg_840 & and_ln155_1_fu_677_p2);

assign and_ln899_fu_332_p2 = (xor_ln899_fu_313_p2 & p_Result_18_fu_325_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln154_3_fu_735_p2[0:0] === 1'b1) ? select_ln154_3_fu_727_p3 : sext_ln154_fu_723_p1);

assign bitcast_ln729_fu_497_p1 = p_Result_28_fu_485_p5;

assign icmp_ln146_1_fu_588_p2 = ((octant_V_reg_774_pp0_iter2_reg == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln146_2_fu_599_p2 = ((octant_V_reg_774_pp0_iter2_reg != 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln146_3_fu_604_p2 = ((octant_V_reg_774_pp0_iter2_reg != 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln146_fu_583_p2 = ((octant_V_reg_774_pp0_iter2_reg == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln147_fu_553_p2 = ((tmp_13_fu_543_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln148_1_fu_632_p2 = ((octant_V_reg_774_pp0_iter2_reg != 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_627_p2 = ((octant_V_reg_774_pp0_iter2_reg != 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_533_p2 = ((p_Val2_60_reg_760_pp0_iter1_reg != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_2_fu_293_p2 = ((p_Result_17_fu_288_p2 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_262_p2 = (($signed(tmp_14_fu_252_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_352_p2 = (($signed(lsb_index_fu_246_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_2_fu_521_p2 = ((trunc_ln6_fu_505_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_515_p2 = ((select_ln915_fu_469_p3 != 11'd2047) ? 1'b1 : 1'b0);


always @ (p_Result_27_fu_217_p3) begin
    if (p_Result_27_fu_217_p3[0] == 1'b1) begin
        l_fu_224_p3 = 32'd0;
    end else if (p_Result_27_fu_217_p3[1] == 1'b1) begin
        l_fu_224_p3 = 32'd1;
    end else if (p_Result_27_fu_217_p3[2] == 1'b1) begin
        l_fu_224_p3 = 32'd2;
    end else if (p_Result_27_fu_217_p3[3] == 1'b1) begin
        l_fu_224_p3 = 32'd3;
    end else if (p_Result_27_fu_217_p3[4] == 1'b1) begin
        l_fu_224_p3 = 32'd4;
    end else if (p_Result_27_fu_217_p3[5] == 1'b1) begin
        l_fu_224_p3 = 32'd5;
    end else if (p_Result_27_fu_217_p3[6] == 1'b1) begin
        l_fu_224_p3 = 32'd6;
    end else if (p_Result_27_fu_217_p3[7] == 1'b1) begin
        l_fu_224_p3 = 32'd7;
    end else if (p_Result_27_fu_217_p3[8] == 1'b1) begin
        l_fu_224_p3 = 32'd8;
    end else if (p_Result_27_fu_217_p3[9] == 1'b1) begin
        l_fu_224_p3 = 32'd9;
    end else if (p_Result_27_fu_217_p3[10] == 1'b1) begin
        l_fu_224_p3 = 32'd10;
    end else if (p_Result_27_fu_217_p3[11] == 1'b1) begin
        l_fu_224_p3 = 32'd11;
    end else if (p_Result_27_fu_217_p3[12] == 1'b1) begin
        l_fu_224_p3 = 32'd12;
    end else if (p_Result_27_fu_217_p3[13] == 1'b1) begin
        l_fu_224_p3 = 32'd13;
    end else if (p_Result_27_fu_217_p3[14] == 1'b1) begin
        l_fu_224_p3 = 32'd14;
    end else if (p_Result_27_fu_217_p3[15] == 1'b1) begin
        l_fu_224_p3 = 32'd15;
    end else if (p_Result_27_fu_217_p3[16] == 1'b1) begin
        l_fu_224_p3 = 32'd16;
    end else if (p_Result_27_fu_217_p3[17] == 1'b1) begin
        l_fu_224_p3 = 32'd17;
    end else if (p_Result_27_fu_217_p3[18] == 1'b1) begin
        l_fu_224_p3 = 32'd18;
    end else if (p_Result_27_fu_217_p3[19] == 1'b1) begin
        l_fu_224_p3 = 32'd19;
    end else if (p_Result_27_fu_217_p3[20] == 1'b1) begin
        l_fu_224_p3 = 32'd20;
    end else if (p_Result_27_fu_217_p3[21] == 1'b1) begin
        l_fu_224_p3 = 32'd21;
    end else if (p_Result_27_fu_217_p3[22] == 1'b1) begin
        l_fu_224_p3 = 32'd22;
    end else if (p_Result_27_fu_217_p3[23] == 1'b1) begin
        l_fu_224_p3 = 32'd23;
    end else if (p_Result_27_fu_217_p3[24] == 1'b1) begin
        l_fu_224_p3 = 32'd24;
    end else if (p_Result_27_fu_217_p3[25] == 1'b1) begin
        l_fu_224_p3 = 32'd25;
    end else if (p_Result_27_fu_217_p3[26] == 1'b1) begin
        l_fu_224_p3 = 32'd26;
    end else if (p_Result_27_fu_217_p3[27] == 1'b1) begin
        l_fu_224_p3 = 32'd27;
    end else if (p_Result_27_fu_217_p3[28] == 1'b1) begin
        l_fu_224_p3 = 32'd28;
    end else if (p_Result_27_fu_217_p3[29] == 1'b1) begin
        l_fu_224_p3 = 32'd29;
    end else if (p_Result_27_fu_217_p3[30] == 1'b1) begin
        l_fu_224_p3 = 32'd30;
    end else if (p_Result_27_fu_217_p3[31] == 1'b1) begin
        l_fu_224_p3 = 32'd31;
    end else begin
        l_fu_224_p3 = 32'd32;
    end
end

assign lsb_index_fu_246_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_236_p2));

assign lshr_ln897_fu_282_p2 = 4'd15 >> zext_ln897_fu_278_p1;

assign lshr_ln908_fu_395_p2 = zext_ln907_2_fu_387_p1 >> add_ln908_fu_390_p2;

assign luTdex_V_2_fu_371_p3 = ((tmp_12_reg_785_pp0_iter1_reg[0:0] === 1'b1) ? sub_ln214_fu_365_p2 : p_Result_26_fu_358_p3);

assign m_12_fu_420_p3 = ((icmp_ln908_reg_811[0:0] === 1'b1) ? zext_ln908_fu_401_p1 : shl_ln908_fu_414_p2);

assign m_13_fu_430_p2 = (zext_ln911_fu_427_p1 + m_12_fu_420_p3);

assign m_22_fu_446_p1 = m_s_fu_436_p4;

assign m_fu_384_p1 = p_Val2_60_reg_760_pp0_iter1_reg;

assign m_s_fu_436_p4 = {{m_13_fu_430_p2[63:1]}};

assign or_ln146_fu_593_p2 = (icmp_ln146_fu_583_p2 | icmp_ln146_1_fu_588_p2);

assign or_ln154_1_fu_655_p2 = (grp_fu_157_p2 | grp_fu_152_p2);

assign or_ln154_2_fu_709_p2 = (and_ln148_2_fu_649_p2 | and_ln147_fu_615_p2);

assign or_ln154_3_fu_735_p2 = (or_ln154_fu_695_p2 | or_ln154_2_fu_709_p2);

assign or_ln154_fu_695_p2 = (and_ln155_fu_682_p2 | and_ln154_fu_666_p2);

assign or_ln155_fu_671_p2 = (grp_fu_167_p2 | grp_fu_162_p2);

assign or_ln899_fu_338_p2 = (and_ln899_fu_332_p2 | a_fu_299_p2);

assign or_ln899_s_fu_344_p3 = {{31'd0}, {or_ln899_fu_338_p2}};

assign or_ln924_fu_527_p2 = (icmp_ln924_fu_515_p2 | icmp_ln924_2_fu_521_p2);

assign p_Result_17_fu_288_p2 = (p_Val2_60_reg_760 & lshr_ln897_fu_282_p2);

assign p_Result_18_fu_325_p3 = p_Val2_60_reg_760[add_ln899_fu_319_p2];

assign p_Result_26_fu_358_p3 = {{luTdex1_V_reg_769_pp0_iter1_reg}, {8'd0}};

assign p_Result_27_fu_217_p3 = {{28'd268435455}, {p_Result_s_reg_790}};

assign p_Result_28_fu_485_p5 = {{tmp_8_fu_477_p3}, {m_22_fu_446_p1[51:0]}};

integer ap_tvar_int_0;

always @ (r_V_fu_749_p2) begin
    for (ap_tvar_int_0 = 4 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 19 - 16) begin
            p_Result_s_fu_208_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_208_p4[ap_tvar_int_0] = r_V_fu_749_p2[19 - ap_tvar_int_0];
        end
    end
end

assign r_V_fu_749_p0 = 25'd10430;

assign select_ln154_1_fu_701_p3 = ((and_ln148_2_fu_649_p2[0:0] === 1'b1) ? zext_ln1265_1_fu_563_p1 : sext_ln703_fu_573_p1);

assign select_ln154_2_fu_715_p3 = ((or_ln146_fu_593_p2[0:0] === 1'b1) ? zext_ln1265_fu_559_p1 : sub_ln703_1_fu_577_p2);

assign select_ln154_3_fu_727_p3 = ((or_ln154_fu_695_p2[0:0] === 1'b1) ? select_ln154_fu_687_p3 : select_ln154_1_fu_701_p3);

assign select_ln154_fu_687_p3 = ((and_ln154_fu_666_p2[0:0] === 1'b1) ? 6'd11 : 6'd52);

assign select_ln915_fu_469_p3 = ((tmp_16_fu_450_p3[0:0] === 1'b1) ? add_ln915_fu_463_p2 : sub_ln915_fu_458_p2);

assign sext_ln154_fu_723_p1 = $signed(select_ln154_2_fu_715_p3);

assign sext_ln703_fu_573_p1 = $signed(sub_ln703_fu_567_p2);

assign shl_ln908_fu_414_p2 = m_fu_384_p1 << zext_ln908_2_fu_410_p1;

assign sincos1_0_address0 = zext_ln544_fu_378_p1;

assign sincos1_1_address0 = zext_ln544_fu_378_p1;

assign sub_ln214_fu_365_p2 = (9'd0 - p_Result_26_fu_358_p3);

assign sub_ln703_1_fu_577_p2 = (5'd0 - zext_ln1265_fu_559_p1);

assign sub_ln703_fu_567_p2 = (5'd0 - sincos1_0_q0);

assign sub_ln894_fu_236_p2 = (32'd4 - l_fu_224_p3);

assign sub_ln897_fu_272_p2 = (3'd2 - trunc_ln897_fu_268_p1);

assign sub_ln908_fu_405_p2 = (32'd54 - sub_ln894_reg_800);

assign sub_ln915_fu_458_p2 = (11'd1022 - trunc_ln893_reg_795);

assign tmp_13_fu_543_p4 = {{add_ln147_fu_538_p2[2:1]}};

assign tmp_14_fu_252_p4 = {{lsb_index_fu_246_p2[31:1]}};

assign tmp_15_fu_305_p3 = lsb_index_fu_246_p2[32'd31];

assign tmp_16_fu_450_p3 = m_13_fu_430_p2[32'd54];

assign tmp_8_fu_477_p3 = {{1'd0}, {select_ln915_fu_469_p3}};

assign trunc_ln6_fu_505_p4 = {{m_13_fu_430_p2[52:1]}};

assign trunc_ln893_fu_232_p1 = l_fu_224_p3[10:0];

assign trunc_ln894_fu_242_p1 = sub_ln894_fu_236_p2[3:0];

assign trunc_ln897_fu_268_p1 = sub_ln894_fu_236_p2[2:0];

assign xor_ln147_fu_621_p2 = (icmp_ln147_fu_553_p2 ^ 1'd1);

assign xor_ln899_fu_313_p2 = (tmp_15_fu_305_p3 ^ 1'd1);

assign zext_ln1265_1_fu_563_p1 = sincos1_0_q0;

assign zext_ln1265_fu_559_p1 = sincos1_1_q0;

assign zext_ln544_fu_378_p1 = luTdex_V_2_fu_371_p3;

assign zext_ln897_fu_278_p1 = sub_ln897_fu_272_p2;

assign zext_ln907_2_fu_387_p1 = p_Val2_60_reg_760_pp0_iter1_reg;

assign zext_ln908_2_fu_410_p1 = sub_ln908_fu_405_p2;

assign zext_ln908_fu_401_p1 = lshr_ln908_fu_395_p2;

assign zext_ln911_fu_427_p1 = or_ln899_s_reg_806;

always @ (posedge ap_clk) begin
    or_ln899_s_reg_806[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //cos_lut_ap_fixed_10_6_5_3_0_s
