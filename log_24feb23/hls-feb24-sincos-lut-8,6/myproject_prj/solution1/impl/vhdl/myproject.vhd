-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (127 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (7 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.339000,HLS_SYN_LAT=9,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=30,HLS_SYN_FF=10176,HLS_SYN_LUT=21288,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv9_44 : STD_LOGIC_VECTOR (8 downto 0) := "001000100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_C : STD_LOGIC_VECTOR (8 downto 0) := "000001100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_60 : STD_LOGIC_VECTOR (13 downto 0) := "00000001100000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv10_13 : STD_LOGIC_VECTOR (9 downto 0) := "0000010011";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv24_FC0000 : STD_LOGIC_VECTOR (23 downto 0) := "111111000000000000000000";
    constant ap_const_lv22_3F0000 : STD_LOGIC_VECTOR (21 downto 0) := "1111110000000000000000";
    constant ap_const_lv20_FC000 : STD_LOGIC_VECTOR (19 downto 0) := "11111100000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (127 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_9_fu_300_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_reg_1101 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_reg_1101_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_reg_1101_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_reg_1101_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_reg_1101_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_310_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1110 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1110_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1110_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1110_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1110_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_fu_337_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_1122 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_reg_1122_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_reg_1152 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_reg_1152_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_1163 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_reg_1163_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln708_8_reg_1168 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_4_reg_1183 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_6_reg_1193 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_26_reg_1208 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_3_reg_1213 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_4_reg_1218 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_5_reg_1223 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_5_reg_1223_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1118_1_fu_596_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_1_reg_1228 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1043_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_4_reg_1238 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_3_reg_1243 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_10_fu_680_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_10_reg_1249 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_reg_1254 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_reg_1254_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_1_reg_1254_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1051_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1192_reg_1259 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_7_reg_1264 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_8_reg_1269 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_8_reg_1269_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1192_4_fu_1059_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1192_4_reg_1274 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_2_reg_1279 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_10_fu_794_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_10_reg_1284 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_11_fu_804_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_11_reg_1289 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_6_reg_1294 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_10_reg_1299 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_10_reg_1299_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1192_1_fu_813_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1192_1_reg_1304 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_7_reg_1309 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_7_reg_1309_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1192_5_fu_1065_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1192_5_reg_1314 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_4_reg_1319 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1192_7_fu_1071_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_7_reg_1324 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_2_fu_866_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1192_2_reg_1329 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_9_reg_1334 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln708_7_reg_1339 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_1_reg_1344 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call16 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call16 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call16 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call16 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call16 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call16 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call16 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call16 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call16 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call16 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp16 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call49 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call49 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call49 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call49 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call49 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call49 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call49 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call49 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call49 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call49 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp19 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call54 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call54 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call54 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call54 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call54 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call54 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call54 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call54 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call54 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call54 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp21 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call69 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call69 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call69 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call69 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call69 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call69 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call69 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call69 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call69 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call69 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp34 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call125 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call125 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call125 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call125 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call125 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call125 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call125 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call125 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call125 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call125 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp69 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call165 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call165 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call165 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call165 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call165 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call165 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call165 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call165 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call165 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call165 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp83 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call175 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call175 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call175 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call175 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call175 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call175 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call175 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call175 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call175 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call175 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp88 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call141 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call141 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call141 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call141 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call141 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call141 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call141 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call141 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call141 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call141 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp101 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call86 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call86 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call86 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call86 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call86 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call86 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call86 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call86 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call86 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call86 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp114 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call59 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call59 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call59 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call59 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call59 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call59 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call59 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call59 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call59 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call59 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp23 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call65 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call65 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call65 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call65 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call65 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call65 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call65 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call65 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call65 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call65 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp26 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call104 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call104 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call104 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call104 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call104 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call104 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call104 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call104 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call104 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call104 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp35 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call37 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call37 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call37 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call37 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call37 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call37 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call37 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call37 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call37 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call37 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp45 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call79 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call79 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call79 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call79 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call79 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call79 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call79 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call79 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call79 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call79 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp51 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call83 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call83 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call83 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call83 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call83 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call83 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call83 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call83 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call83 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call83 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp53 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call157 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call157 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call157 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call157 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call157 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call157 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call157 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call157 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call157 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call157 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp80 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call101 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call101 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call101 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call101 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call101 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call101 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call101 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call101 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call101 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call101 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp98 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_290_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_290_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call12 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call12 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call12 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call12 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call12 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call12 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call12 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call12 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call12 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call12 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp122 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_input_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call26 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call26 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call26 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call26 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call26 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call26 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call26 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call26 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call26 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call26 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp130 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Val2_1_fu_320_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_2_fu_366_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1014_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln703_fu_423_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_fu_440_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_fu_443_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_22_fu_446_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1023_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_5_fu_472_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1_fu_475_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_10_fu_482_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_25_fu_488_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1118_5_fu_505_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_12_fu_516_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1032_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_22_fu_545_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_22_fu_545_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_17_fu_562_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_fu_420_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_13_fu_568_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1192_8_fu_572_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_589_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_17_fu_600_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1192_fu_607_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1192_fu_611_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_18_fu_617_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_fu_634_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_19_fu_637_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_fu_643_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_20_fu_646_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_652_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_665_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1192_6_fu_676_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1253_fu_691_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_21_fu_703_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_1_fu_700_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_21_fu_703_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_21_fu_703_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_20_fu_694_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_713_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_7_fu_731_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_3_fu_728_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_7_fu_731_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_7_fu_731_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_737_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_16_fu_686_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_3_fu_749_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_3_fu_757_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_4_fu_745_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_24_fu_761_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_fu_767_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_17_fu_781_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_15_fu_784_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_10_fu_794_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_7_fu_790_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_10_fu_794_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_11_fu_804_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_4_fu_800_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_11_fu_804_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1192_1_fu_813_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_8_fu_824_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_2_fu_821_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_fu_824_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_8_fu_824_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_fu_840_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_12_fu_840_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_14_fu_849_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_5_fu_846_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_14_fu_849_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_12_fu_840_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_14_fu_849_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1192_2_fu_866_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_9_fu_874_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_3_fu_871_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_9_fu_874_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_9_fu_874_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1077_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_15_fu_896_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_6_fu_893_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_15_fu_896_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_15_fu_896_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1085_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_3_fu_915_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln700_fu_923_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_933_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln700_fu_927_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln700_3_fu_941_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln700_1_fu_945_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_18_fu_958_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1116_fu_955_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_18_fu_958_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_18_fu_958_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_964_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln700_4_fu_951_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln728_fu_972_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_19_fu_976_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_982_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1093_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1014_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1014_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1023_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1023_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1032_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_5_fu_1065_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1077_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1085_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1093_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to8 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component cos_lut_ap_fixed_8_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component sin_lut_ap_fixed_8_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_mac_muladd_6ns_8s_10ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component myproject_ama_addmulsub_3ns_9s_10ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component myproject_ama_addmuladd_11s_9s_8s_12ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mac_mul_sub_4s_9s_6s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_am_addmul_8s_7s_12s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mul_mul_8s_14s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mul_mul_8s_22s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_8s_18s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_muladd_8s_24s_19s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mac_muladd_8s_22s_17s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_muladd_4s_20s_15s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;



begin
    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_input_V,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_ap_ce);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_input_V,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_ap_ce);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_input_V,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_ap_ce);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_6_reg_1152,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220_ap_ce);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_input_V,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_ap_ce);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_input_V,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_ap_ce);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_input_V,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_ap_ce);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_6_reg_1193,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240_ap_ce);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245 : component cos_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_9_reg_1101_pp0_iter3_reg,
        ap_return => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_6_reg_1152,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_2_reg_1122_pp0_iter1_reg,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_8_reg_1168,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_4_reg_1183,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_290 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_9_reg_1101_pp0_iter4_reg,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_290_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_290_ap_ce);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295 : component sin_lut_ap_fixed_8_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_input_V,
        ap_return => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_ce);

    myproject_mac_muladd_6ns_8s_10ns_10_1_1_U13 : component myproject_mac_muladd_6ns_8s_10ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1014_p0,
        din1 => p_Val2_2_reg_1122,
        din2 => grp_fu_1014_p2,
        dout => grp_fu_1014_p3);

    myproject_ama_addmulsub_3ns_9s_10ns_10_1_1_U14 : component myproject_ama_addmulsub_3ns_9s_10ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 9,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1023_p0,
        din1 => ret_V_22_fu_446_p2,
        din2 => grp_fu_1023_p2,
        dout => grp_fu_1023_p3);

    myproject_ama_addmuladd_11s_9s_8s_12ns_12_1_1_U15 : component myproject_ama_addmuladd_11s_9s_8s_12ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 9,
        din2_WIDTH => 8,
        din3_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => shl_ln1118_5_fu_505_p3,
        din1 => add_ln1192_12_fu_516_p2,
        din2 => p_Val2_2_reg_1122_pp0_iter1_reg,
        din3 => grp_fu_1032_p3,
        dout => grp_fu_1032_p4);

    myproject_mac_mul_sub_4s_9s_6s_12_1_1_U16 : component myproject_mac_mul_sub_4s_9s_6s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 9,
        din2_WIDTH => 6,
        dout_WIDTH => 12)
    port map (
        din0 => p_3_reg_1213,
        din1 => ret_V_fu_652_p2,
        din2 => tmp_6_fu_665_p3,
        dout => grp_fu_1043_p3);

    myproject_am_addmul_8s_7s_12s_20_1_1_U17 : component myproject_am_addmul_8s_7s_12s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        din2_WIDTH => 12,
        dout_WIDTH => 20)
    port map (
        din0 => r_V_21_fu_703_p2,
        din1 => tmp_7_fu_713_p3,
        din2 => ret_V_4_reg_1238,
        dout => grp_fu_1051_p3);

    myproject_mul_mul_8s_14s_23_1_1_U18 : component myproject_mul_mul_8s_14s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 14,
        dout_WIDTH => 23)
    port map (
        din0 => r_V_21_fu_703_p2,
        din1 => add_ln1192_fu_767_p2,
        dout => mul_ln1192_4_fu_1059_p2);

    myproject_mul_mul_8s_22s_24_1_1_U19 : component myproject_mul_mul_8s_22s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 22,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_8_fu_824_p2,
        din1 => mul_ln1192_5_fu_1065_p1,
        dout => mul_ln1192_5_fu_1065_p2);

    myproject_mul_mul_8s_18s_22_1_1_U20 : component myproject_mul_mul_8s_18s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 18,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_14_fu_849_p2,
        din1 => r_V_12_fu_840_p2,
        dout => mul_ln1192_7_fu_1071_p2);

    myproject_mac_muladd_8s_24s_19s_24_1_1_U21 : component myproject_mac_muladd_8s_24s_19s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 24,
        din2_WIDTH => 19,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_9_fu_874_p2,
        din1 => mul_ln1192_5_reg_1314,
        din2 => grp_fu_1077_p2,
        dout => grp_fu_1077_p3);

    myproject_mac_muladd_8s_22s_17s_22_1_1_U22 : component myproject_mac_muladd_8s_22s_17s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 22,
        din2_WIDTH => 17,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_15_fu_896_p2,
        din1 => mul_ln1192_7_reg_1324,
        din2 => grp_fu_1085_p2,
        dout => grp_fu_1085_p3);

    myproject_mac_muladd_4s_20s_15s_20_1_1_U23 : component myproject_mac_muladd_4s_20s_15s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 20,
        din2_WIDTH => 15,
        dout_WIDTH => 20)
    port map (
        din0 => p_9_reg_1334,
        din1 => mul_ln1192_2_reg_1329,
        din2 => grp_fu_1093_p2,
        dout => grp_fu_1093_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv128_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                mul_ln1192_1_reg_1304 <= mul_ln1192_1_fu_813_p2;
                mul_ln1192_2_reg_1329 <= mul_ln1192_2_fu_866_p2;
                mul_ln1192_4_reg_1274 <= mul_ln1192_4_fu_1059_p2;
                mul_ln1192_5_reg_1314 <= mul_ln1192_5_fu_1065_p2;
                mul_ln1192_7_reg_1324 <= mul_ln1192_7_fu_1071_p2;
                p_10_reg_1299 <= grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_ap_return;
                p_10_reg_1299_pp0_iter7_reg <= p_10_reg_1299;
                p_1_reg_1254 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_ap_return;
                p_1_reg_1254_pp0_iter7_reg <= p_1_reg_1254;
                p_1_reg_1254_pp0_iter8_reg <= p_1_reg_1254_pp0_iter7_reg;
                p_2_reg_1279 <= grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_ap_return;
                p_3_reg_1213 <= grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_ap_return;
                p_4_reg_1319 <= grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240_ap_return;
                p_6_reg_1294 <= grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_ap_return;
                p_7_reg_1264 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270_ap_return;
                p_8_reg_1269 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_ap_return;
                p_8_reg_1269_pp0_iter7_reg <= p_8_reg_1269;
                p_9_reg_1334 <= grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245_ap_return;
                p_Val2_3_reg_1243 <= grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220_ap_return;
                p_Val2_4_reg_1218 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_ap_return;
                p_Val2_5_reg_1223 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_ap_return;
                p_Val2_5_reg_1223_pp0_iter5_reg <= p_Val2_5_reg_1223;
                p_Val2_7_reg_1309 <= grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285_ap_return;
                p_Val2_7_reg_1309_pp0_iter8_reg <= p_Val2_7_reg_1309;
                p_Val2_9_reg_1101_pp0_iter2_reg <= p_Val2_9_reg_1101_pp0_iter1_reg;
                p_Val2_9_reg_1101_pp0_iter3_reg <= p_Val2_9_reg_1101_pp0_iter2_reg;
                p_Val2_9_reg_1101_pp0_iter4_reg <= p_Val2_9_reg_1101_pp0_iter3_reg;
                p_Val2_s_26_reg_1208 <= grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_ap_return;
                p_Val2_s_reg_1110_pp0_iter2_reg <= p_Val2_s_reg_1110_pp0_iter1_reg;
                p_Val2_s_reg_1110_pp0_iter3_reg <= p_Val2_s_reg_1110_pp0_iter2_reg;
                p_Val2_s_reg_1110_pp0_iter4_reg <= p_Val2_s_reg_1110_pp0_iter3_reg;
                r_V_10_reg_1284 <= r_V_10_fu_794_p2;
                r_V_11_reg_1289 <= r_V_11_fu_804_p2;
                ret_V_10_reg_1249 <= ret_V_10_fu_680_p2;
                    sext_ln1118_1_reg_1228(9 downto 1) <= sext_ln1118_1_fu_596_p1(9 downto 1);
                trunc_ln708_1_reg_1344 <= grp_fu_1085_p3(21 downto 14);
                trunc_ln708_4_reg_1183 <= grp_fu_1023_p3(9 downto 2);
                trunc_ln708_6_reg_1193 <= grp_fu_1032_p4(11 downto 4);
                trunc_ln708_7_reg_1339 <= grp_fu_1077_p3(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                mul_ln1192_reg_1259 <= grp_fu_1051_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_2_reg_1122 <= x_V_in_sig(119 downto 112);
                p_Val2_2_reg_1122_pp0_iter1_reg <= p_Val2_2_reg_1122;
                p_Val2_6_reg_1152 <= x_V_in_sig(31 downto 24);
                p_Val2_6_reg_1152_pp0_iter1_reg <= p_Val2_6_reg_1152;
                p_Val2_9_reg_1101 <= x_V_in_sig(23 downto 16);
                p_Val2_9_reg_1101_pp0_iter1_reg <= p_Val2_9_reg_1101;
                p_Val2_s_reg_1110 <= x_V_in_sig(127 downto 120);
                p_Val2_s_reg_1110_pp0_iter1_reg <= p_Val2_s_reg_1110;
                tmp_s_reg_1163 <= x_V_in_sig(30 downto 24);
                tmp_s_reg_1163_pp0_iter1_reg <= tmp_s_reg_1163;
                trunc_ln708_8_reg_1168 <= grp_fu_1014_p3(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ret_V_4_reg_1238 <= grp_fu_1043_p3;
            end if;
        end if;
    end process;
    sext_ln1118_1_reg_1228(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_10_fu_482_p2 <= std_logic_vector(signed(sext_ln1118_5_fu_472_p1) + signed(shl_ln1_fu_475_p3));
    add_ln1192_12_fu_516_p2 <= std_logic_vector(unsigned(ap_const_lv9_44) + unsigned(lhs_V_fu_440_p1));
    add_ln1192_17_fu_562_p2 <= std_logic_vector(unsigned(ap_const_lv9_4) + unsigned(rhs_V_fu_443_p1));
    add_ln1192_8_fu_572_p2 <= std_logic_vector(signed(sext_ln1118_fu_420_p1) + signed(sext_ln1192_13_fu_568_p1));
    add_ln1192_fu_767_p2 <= std_logic_vector(unsigned(ap_const_lv14_60) + unsigned(ret_V_24_fu_761_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp101_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp101 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp114_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp114 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp122_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp122 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp130_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp130 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp16_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp16 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp19_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp19 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp21_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp21 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp23_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp23 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp26_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp26 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp34_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp34 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp35_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp35 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp45_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp45 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp51_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp51 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp53_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp53 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp69_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp69 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp80_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp80 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp83_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp83 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp88_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp88 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp98_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp98 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call101_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call101 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call104_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call104 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call12_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call12 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call125_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call125 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call141_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call141 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call157_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call157 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call16_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call16 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call165_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call165 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call175_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call175 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call26_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call26 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call37_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call37 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call49_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call49 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call54_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call54 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call59_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call59 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call65_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call65 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call69_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call69 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call79_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call79 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call83_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call83 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call86_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call86 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call125 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call141 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call157 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call165 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call86 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to8)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_205_input_V <= std_logic_vector(unsigned(p_Val2_1_fu_320_p4) + unsigned(p_Val2_s_fu_310_p4));

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp19)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_210_input_V <= x_V_in_sig(8 - 1 downto 0);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp21)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_215_input_V <= std_logic_vector(signed(p_Val2_2_fu_337_p4) - signed(p_Val2_1_fu_320_p4));

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp34)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_220_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp69)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp69) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_225_input_V <= ret_V_25_fu_488_p2(9 downto 2);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp83)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp83) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_230_input_V <= r_V_22_fu_545_p2(9 downto 2);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp88)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp88) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_235_input_V <= add_ln1192_8_fu_572_p2(9 downto 2);

    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp101)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp101) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_240_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp114)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp114) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_8_6_5_3_0_s_fu_245_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1014_p0 <= ap_const_lv10_13(6 - 1 downto 0);
    grp_fu_1014_p2 <= (p_Val2_6_reg_1152 & ap_const_lv2_0);
    grp_fu_1023_p0 <= ap_const_lv10_2(3 - 1 downto 0);
    grp_fu_1023_p2 <= (p_Val2_9_reg_1101_pp0_iter1_reg & ap_const_lv2_0);
    grp_fu_1032_p3 <= (p_Val2_6_reg_1152_pp0_iter1_reg & ap_const_lv4_0);
    grp_fu_1077_p2 <= ap_const_lv24_FC0000(19 - 1 downto 0);
    grp_fu_1085_p2 <= ap_const_lv22_3F0000(17 - 1 downto 0);
    grp_fu_1093_p2 <= ap_const_lv20_FC000(15 - 1 downto 0);

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp23)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_250_input_V <= std_logic_vector(signed(ap_const_lv8_FE) + signed(p_Val2_9_fu_300_p4));

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp26)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp26) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_255_input_V <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_2_fu_366_p4),8));


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp35)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp45)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp45) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_265_input_V <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(sub_ln703_fu_423_p2));

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp51)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp51) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_270_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp53)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp53) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_275_input_V <= std_logic_vector(signed(ap_const_lv8_FF) + signed(p_Val2_6_reg_1152_pp0_iter1_reg));

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp80)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp80) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp98) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_285_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_290_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp122) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_290_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_290_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp130)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp130) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_input_V <= ret_V_18_fu_617_p2(9 downto 2);
    lhs_V_3_fu_749_p3 <= (r_V_16_fu_686_p2 & ap_const_lv2_0);
        lhs_V_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1122_pp0_iter1_reg),9));

    mul_ln1192_1_fu_813_p0 <= p_7_reg_1264;
    mul_ln1192_1_fu_813_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_1_fu_813_p0) * signed(mul_ln1192_reg_1259))), 20));
    mul_ln1192_2_fu_866_p0 <= p_8_reg_1269_pp0_iter7_reg;
    mul_ln1192_2_fu_866_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_2_fu_866_p0) * signed(mul_ln1192_1_reg_1304))), 20));
    mul_ln1192_5_fu_1065_p1 <= mul_ln1192_4_reg_1274(22 - 1 downto 0);
    p_Val2_1_fu_320_p4 <= x_V_in_sig(39 downto 32);
    p_Val2_2_fu_337_p4 <= x_V_in_sig(119 downto 112);
    p_Val2_9_fu_300_p4 <= x_V_in_sig(23 downto 16);
    p_Val2_s_fu_310_p4 <= x_V_in_sig(127 downto 120);
    r_V_10_fu_794_p0 <= sext_ln1118_7_fu_790_p1(5 - 1 downto 0);
    r_V_10_fu_794_p1 <= sext_ln1118_7_fu_790_p1(5 - 1 downto 0);
    r_V_10_fu_794_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_10_fu_794_p0) * signed(r_V_10_fu_794_p1))), 10));
    r_V_11_fu_804_p0 <= sext_ln1116_4_fu_800_p1(4 - 1 downto 0);
    r_V_11_fu_804_p1 <= sext_ln1116_4_fu_800_p1(4 - 1 downto 0);
    r_V_11_fu_804_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_11_fu_804_p0) * signed(r_V_11_fu_804_p1))), 8));
    r_V_12_fu_840_p0 <= r_V_11_reg_1289;
    r_V_12_fu_840_p1 <= r_V_10_reg_1284;
    r_V_12_fu_840_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_fu_840_p0) * signed(r_V_12_fu_840_p1))), 18));
    r_V_14_fu_849_p0 <= sext_ln1116_5_fu_846_p1(4 - 1 downto 0);
    r_V_14_fu_849_p1 <= sext_ln1116_5_fu_846_p1(4 - 1 downto 0);
    r_V_14_fu_849_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_14_fu_849_p0) * signed(r_V_14_fu_849_p1))), 8));
    r_V_15_fu_896_p0 <= sext_ln1116_6_fu_893_p1(4 - 1 downto 0);
    r_V_15_fu_896_p1 <= sext_ln1116_6_fu_893_p1(4 - 1 downto 0);
    r_V_15_fu_896_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_15_fu_896_p0) * signed(r_V_15_fu_896_p1))), 8));
    r_V_16_fu_686_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(sext_ln1118_1_reg_1228));
    r_V_17_fu_600_p3 <= (p_Val2_9_reg_1101_pp0_iter4_reg & ap_const_lv1_0);
    r_V_18_fu_958_p0 <= sext_ln1116_fu_955_p1(4 - 1 downto 0);
    r_V_18_fu_958_p1 <= sext_ln1116_fu_955_p1(4 - 1 downto 0);
    r_V_18_fu_958_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_18_fu_958_p0) * signed(r_V_18_fu_958_p1))), 8));
    r_V_19_fu_637_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_fu_634_p1));
    r_V_20_fu_694_p2 <= std_logic_vector(unsigned(ap_const_lv5_0) - unsigned(sext_ln1253_fu_691_p1));
    r_V_21_fu_703_p0 <= sext_ln1116_1_fu_700_p1(4 - 1 downto 0);
    r_V_21_fu_703_p1 <= sext_ln1116_1_fu_700_p1(4 - 1 downto 0);
    r_V_21_fu_703_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_21_fu_703_p0) * signed(r_V_21_fu_703_p1))), 8));
    r_V_22_fu_545_p1 <= sext_ln1118_5_fu_472_p1(8 - 1 downto 0);
    r_V_22_fu_545_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv10_B) * signed(r_V_22_fu_545_p1))), 10));
    r_V_7_fu_731_p0 <= sext_ln1118_3_fu_728_p1(5 - 1 downto 0);
    r_V_7_fu_731_p1 <= sext_ln1118_3_fu_728_p1(5 - 1 downto 0);
    r_V_7_fu_731_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_7_fu_731_p0) * signed(r_V_7_fu_731_p1))), 10));
    r_V_8_fu_824_p0 <= sext_ln1116_2_fu_821_p1(4 - 1 downto 0);
    r_V_8_fu_824_p1 <= sext_ln1116_2_fu_821_p1(4 - 1 downto 0);
    r_V_8_fu_824_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_fu_824_p0) * signed(r_V_8_fu_824_p1))), 8));
    r_V_9_fu_874_p0 <= sext_ln1116_3_fu_871_p1(4 - 1 downto 0);
    r_V_9_fu_874_p1 <= sext_ln1116_3_fu_871_p1(4 - 1 downto 0);
    r_V_9_fu_874_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_9_fu_874_p0) * signed(r_V_9_fu_874_p1))), 8));
        r_V_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1110_pp0_iter4_reg),9));

    ret_V_10_fu_680_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(sext_ln1192_6_fu_676_p1));
    ret_V_15_fu_784_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(sext_ln1192_17_fu_781_p1));
    ret_V_18_fu_617_p2 <= std_logic_vector(unsigned(ap_const_lv10_C) + unsigned(sub_ln1192_fu_611_p2));
    ret_V_19_fu_976_p2 <= std_logic_vector(signed(sext_ln700_4_fu_951_p1) + signed(sext_ln728_fu_972_p1));
    ret_V_20_fu_646_p2 <= std_logic_vector(unsigned(r_V_19_fu_637_p2) - unsigned(sext_ln703_fu_643_p1));
    ret_V_22_fu_446_p2 <= std_logic_vector(signed(lhs_V_fu_440_p1) - signed(rhs_V_fu_443_p1));
    ret_V_24_fu_761_p2 <= std_logic_vector(signed(sext_ln728_3_fu_757_p1) - signed(sext_ln1118_4_fu_745_p1));
    ret_V_25_fu_488_p2 <= std_logic_vector(unsigned(ap_const_lv10_C) + unsigned(add_ln1192_10_fu_482_p2));
    ret_V_fu_652_p2 <= std_logic_vector(unsigned(ap_const_lv9_C) + unsigned(ret_V_20_fu_646_p2));
        rhs_V_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_reg_1152_pp0_iter1_reg),9));

        sext_ln1116_1_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1243),8));

        sext_ln1116_2_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1279),8));

        sext_ln1116_3_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_4_reg_1319),8));

        sext_ln1116_4_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_280_ap_return),8));

        sext_ln1116_5_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1294),8));

        sext_ln1116_6_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_10_reg_1299_pp0_iter7_reg),8));

        sext_ln1116_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_reg_1254_pp0_iter8_reg),8));

        sext_ln1118_1_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_589_p3),10));

        sext_ln1118_3_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_10_reg_1249),10));

        sext_ln1118_4_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_737_p3),14));

        sext_ln1118_5_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_reg_1152_pp0_iter1_reg),10));

        sext_ln1118_7_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_15_fu_784_p2),10));

        sext_ln1118_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1110_pp0_iter1_reg),10));

        sext_ln1192_13_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1192_17_fu_562_p2),10));

        sext_ln1192_17_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1243),5));

        sext_ln1192_6_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_260_ap_return),5));

        sext_ln1192_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_17_fu_600_p3),10));

        sext_ln1253_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1223_pp0_iter5_reg),5));

        sext_ln700_3_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_933_p3),9));

        sext_ln700_4_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln700_1_fu_945_p2),11));

        sext_ln700_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_915_p3),9));

        sext_ln703_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_26_reg_1208),9));

        sext_ln728_3_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_3_fu_749_p3),14));

        sext_ln728_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_964_p3),11));

    shl_ln1118_5_fu_505_p3 <= (p_Val2_2_reg_1122_pp0_iter1_reg & ap_const_lv3_0);
    shl_ln1_fu_475_p3 <= (tmp_s_reg_1163_pp0_iter1_reg & ap_const_lv3_0);
    shl_ln_fu_589_p3 <= (p_Val2_s_reg_1110_pp0_iter4_reg & ap_const_lv1_0);
    sub_ln1192_fu_611_p2 <= std_logic_vector(signed(sext_ln1192_fu_607_p1) - signed(sext_ln1118_1_fu_596_p1));
    sub_ln700_1_fu_945_p2 <= std_logic_vector(unsigned(sub_ln700_fu_927_p2) - unsigned(sext_ln700_3_fu_941_p1));
    sub_ln700_fu_927_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sext_ln700_fu_923_p1));
    sub_ln703_fu_423_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_1122_pp0_iter1_reg) - unsigned(p_Val2_9_reg_1101_pp0_iter1_reg));
    tmp_3_fu_915_p3 <= (grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_return & ap_const_lv4_0);
    tmp_4_fu_933_p3 <= (grp_sin_lut_ap_fixed_8_6_5_3_0_s_fu_295_ap_return & ap_const_lv2_0);
    tmp_5_fu_964_p3 <= (r_V_18_fu_958_p2 & ap_const_lv2_0);
    tmp_6_fu_665_p3 <= (p_Val2_4_reg_1218 & ap_const_lv2_0);
    tmp_7_fu_713_p3 <= (r_V_20_fu_694_p2 & ap_const_lv2_0);
    tmp_8_fu_737_p3 <= (r_V_7_fu_731_p2 & ap_const_lv1_0);
    tmp_fu_982_p4 <= ret_V_19_fu_976_p2(10 downto 4);
    trunc_ln708_2_fu_366_p4 <= x_V_in_sig(127 downto 122);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

        y_0_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_982_p4),8));


    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= grp_fu_1093_p3(19 downto 12);

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_2_V <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1309_pp0_iter8_reg),8));


    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_7_reg_1339;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= trunc_ln708_1_reg_1344;

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
