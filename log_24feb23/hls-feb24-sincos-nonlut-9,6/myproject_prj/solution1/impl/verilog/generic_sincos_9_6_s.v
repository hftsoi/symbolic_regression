// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generic_sincos_9_6_s (
        ap_clk,
        ap_rst,
        in_V,
        ap_return_0,
        ap_return_1,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [8:0] in_V;
output  [4:0] ap_return_0;
output  [4:0] ap_return_1;
input   ap_ce;

reg[4:0] ap_return_0;
reg[4:0] ap_return_1;

wire   [0:0] sign0_V_fu_75_p2;
reg   [0:0] sign0_V_reg_379;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] sign0_V_reg_379_pp0_iter1_reg;
reg   [0:0] sign0_V_reg_379_pp0_iter2_reg;
reg   [0:0] sign0_V_reg_379_pp0_iter3_reg;
reg   [0:0] sign0_V_reg_379_pp0_iter4_reg;
reg   [0:0] sign0_V_reg_379_pp0_iter5_reg;
wire   [8:0] p_Val2_s_fu_87_p3;
reg   [8:0] p_Val2_s_reg_384;
reg   [5:0] ret_V_reg_389;
reg   [1:0] k_V_reg_394;
reg   [1:0] k_V_reg_394_pp0_iter1_reg;
reg   [1:0] k_V_reg_394_pp0_iter2_reg;
reg   [1:0] k_V_reg_394_pp0_iter3_reg;
reg   [1:0] k_V_reg_394_pp0_iter4_reg;
reg   [1:0] k_V_reg_394_pp0_iter5_reg;
wire   [0:0] icmp_ln879_fu_140_p2;
reg   [0:0] icmp_ln879_reg_402;
reg   [0:0] icmp_ln879_reg_402_pp0_iter2_reg;
reg   [0:0] icmp_ln879_reg_402_pp0_iter3_reg;
reg   [0:0] icmp_ln879_reg_402_pp0_iter4_reg;
reg   [0:0] icmp_ln879_reg_402_pp0_iter5_reg;
wire   [9:0] z_V_1_fu_189_p3;
reg   [9:0] z_V_1_reg_408;
reg   [10:0] x_V_reg_413;
reg   [4:0] trunc_ln1_reg_418;
reg   [4:0] trunc_ln708_12_reg_424;
reg   [4:0] trunc_ln708_13_reg_430;
wire   [10:0] grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_return_0;
wire   [10:0] grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_return_1;
reg    grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call24;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call24;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call24;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call24;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call24;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call24;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call24;
wire    ap_block_pp0_stage0_11001_ignoreCallOp32;
wire    ap_block_pp0_stage0;
wire   [8:0] inabs_V_fu_81_p2;
wire   [24:0] r_V_46_fu_361_p2;
wire   [15:0] lhs_V_fu_120_p3;
wire   [17:0] grp_fu_369_p3;
wire   [9:0] p_Val2_40_fu_131_p4;
wire   [8:0] trunc_ln708_s_fu_149_p4;
wire   [10:0] rhs_V_5_fu_145_p1;
wire   [10:0] ret_V_37_fu_162_p2;
wire   [0:0] icmp_ln251_fu_178_p2;
wire   [0:0] or_ln251_fu_183_p2;
wire   [9:0] trunc_ln708_11_fu_168_p4;
wire   [9:0] z_V_fu_158_p1;
wire   [9:0] trunc_ln1253_fu_219_p1;
wire   [9:0] r_V_48_fu_223_p2;
wire   [9:0] trunc_ln266_fu_205_p1;
wire   [9:0] r_V_49_fu_239_p2;
wire   [0:0] icmp_ln879_1_fu_255_p2;
wire   [0:0] xor_ln879_fu_271_p2;
wire   [0:0] and_ln879_fu_277_p2;
wire   [4:0] select_ln879_fu_265_p3;
wire   [0:0] or_ln879_fu_289_p2;
wire   [0:0] icmp_ln879_2_fu_260_p2;
wire   [0:0] xor_ln879_1_fu_294_p2;
wire   [0:0] and_ln879_1_fu_300_p2;
wire   [4:0] select_ln879_1_fu_282_p3;
wire   [4:0] trunc_ln3_fu_313_p4;
wire   [4:0] select_ln879_3_fu_322_p3;
wire   [4:0] p_Val2_46_fu_306_p3;
wire   [4:0] sub_ln703_fu_336_p2;
wire   [4:0] p_Val2_47_fu_342_p3;
wire   [4:0] select_ln879_4_fu_329_p3;
wire   [16:0] r_V_46_fu_361_p0;
wire   [8:0] r_V_46_fu_361_p1;
wire   [11:0] grp_fu_369_p0;
wire   [5:0] grp_fu_369_p1;
wire   [15:0] grp_fu_369_p2;
reg    ap_ce_reg;
reg   [8:0] in_V_int_reg;
reg   [4:0] ap_return_0_int_reg;
reg   [4:0] ap_return_1_int_reg;
wire   [16:0] grp_fu_369_p10;
wire   [17:0] grp_fu_369_p20;
wire   [24:0] r_V_46_fu_361_p10;

cordic_circ_apfixed_11_3_0_s grp_cordic_circ_apfixed_11_3_0_s_fu_70(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .z_V_read(z_V_1_reg_408),
    .ap_return_0(grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_return_0),
    .ap_return_1(grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_return_1),
    .ap_ce(grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_ce)
);

myproject_mul_mul_17ns_9ns_25_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 25 ))
myproject_mul_mul_17ns_9ns_25_1_0_U2(
    .din0(r_V_46_fu_361_p0),
    .din1(r_V_46_fu_361_p1),
    .dout(r_V_46_fu_361_p2)
);

myproject_mac_mulsub_12ns_6ns_16ns_18_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 18 ))
myproject_mac_mulsub_12ns_6ns_16ns_18_1_0_U3(
    .din0(grp_fu_369_p0),
    .din1(grp_fu_369_p1),
    .din2(grp_fu_369_p2),
    .dout(grp_fu_369_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= p_Val2_47_fu_342_p3;
        ap_return_1_int_reg <= select_ln879_4_fu_329_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln879_reg_402 <= icmp_ln879_fu_140_p2;
        icmp_ln879_reg_402_pp0_iter2_reg <= icmp_ln879_reg_402;
        icmp_ln879_reg_402_pp0_iter3_reg <= icmp_ln879_reg_402_pp0_iter2_reg;
        icmp_ln879_reg_402_pp0_iter4_reg <= icmp_ln879_reg_402_pp0_iter3_reg;
        icmp_ln879_reg_402_pp0_iter5_reg <= icmp_ln879_reg_402_pp0_iter4_reg;
        k_V_reg_394 <= {{r_V_46_fu_361_p2[20:19]}};
        k_V_reg_394_pp0_iter1_reg <= k_V_reg_394;
        k_V_reg_394_pp0_iter2_reg <= k_V_reg_394_pp0_iter1_reg;
        k_V_reg_394_pp0_iter3_reg <= k_V_reg_394_pp0_iter2_reg;
        k_V_reg_394_pp0_iter4_reg <= k_V_reg_394_pp0_iter3_reg;
        k_V_reg_394_pp0_iter5_reg <= k_V_reg_394_pp0_iter4_reg;
        p_Val2_s_reg_384 <= p_Val2_s_fu_87_p3;
        ret_V_reg_389 <= {{r_V_46_fu_361_p2[24:19]}};
        sign0_V_reg_379 <= sign0_V_fu_75_p2;
        sign0_V_reg_379_pp0_iter1_reg <= sign0_V_reg_379;
        sign0_V_reg_379_pp0_iter2_reg <= sign0_V_reg_379_pp0_iter1_reg;
        sign0_V_reg_379_pp0_iter3_reg <= sign0_V_reg_379_pp0_iter2_reg;
        sign0_V_reg_379_pp0_iter4_reg <= sign0_V_reg_379_pp0_iter3_reg;
        sign0_V_reg_379_pp0_iter5_reg <= sign0_V_reg_379_pp0_iter4_reg;
        trunc_ln1_reg_418 <= {{grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_return_1[9:5]}};
        trunc_ln708_12_reg_424 <= {{r_V_48_fu_223_p2[9:5]}};
        trunc_ln708_13_reg_430 <= {{r_V_49_fu_239_p2[9:5]}};
        x_V_reg_413 <= grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_return_0;
        z_V_1_reg_408 <= z_V_1_fu_189_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        in_V_int_reg <= in_V;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = p_Val2_47_fu_342_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = select_ln879_4_fu_329_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp32) & (1'b1 == ap_ce_reg))) begin
        grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_ce = 1'b1;
    end else begin
        grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_ce = 1'b0;
    end
end

assign and_ln879_1_fu_300_p2 = (xor_ln879_1_fu_294_p2 & icmp_ln879_2_fu_260_p2);

assign and_ln879_fu_277_p2 = (xor_ln879_fu_271_p2 & icmp_ln879_reg_402_pp0_iter5_reg);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp32 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign grp_fu_369_p0 = 17'd1608;

assign grp_fu_369_p1 = grp_fu_369_p10;

assign grp_fu_369_p10 = ret_V_reg_389;

assign grp_fu_369_p2 = grp_fu_369_p20;

assign grp_fu_369_p20 = lhs_V_fu_120_p3;

assign icmp_ln251_fu_178_p2 = ((k_V_reg_394 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_255_p2 = ((k_V_reg_394_pp0_iter5_reg == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_260_p2 = ((k_V_reg_394_pp0_iter5_reg == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_140_p2 = ((k_V_reg_394 == 2'd1) ? 1'b1 : 1'b0);

assign inabs_V_fu_81_p2 = (9'd0 - in_V_int_reg);

assign lhs_V_fu_120_p3 = {{p_Val2_s_reg_384}, {7'd0}};

assign or_ln251_fu_183_p2 = (icmp_ln879_fu_140_p2 | icmp_ln251_fu_178_p2);

assign or_ln879_fu_289_p2 = (icmp_ln879_reg_402_pp0_iter5_reg | icmp_ln879_1_fu_255_p2);

assign p_Val2_40_fu_131_p4 = {{grp_fu_369_p3[10:1]}};

assign p_Val2_46_fu_306_p3 = ((and_ln879_1_fu_300_p2[0:0] === 1'b1) ? trunc_ln708_13_reg_430 : select_ln879_1_fu_282_p3);

assign p_Val2_47_fu_342_p3 = ((sign0_V_reg_379_pp0_iter5_reg[0:0] === 1'b1) ? p_Val2_46_fu_306_p3 : sub_ln703_fu_336_p2);

assign p_Val2_s_fu_87_p3 = ((sign0_V_fu_75_p2[0:0] === 1'b1) ? in_V_int_reg : inabs_V_fu_81_p2);

assign r_V_46_fu_361_p0 = 25'd41721;

assign r_V_46_fu_361_p1 = r_V_46_fu_361_p10;

assign r_V_46_fu_361_p10 = p_Val2_s_fu_87_p3;

assign r_V_48_fu_223_p2 = (10'd0 - trunc_ln1253_fu_219_p1);

assign r_V_49_fu_239_p2 = (10'd0 - trunc_ln266_fu_205_p1);

assign ret_V_37_fu_162_p2 = (11'd804 - rhs_V_5_fu_145_p1);

assign rhs_V_5_fu_145_p1 = p_Val2_40_fu_131_p4;

assign select_ln879_1_fu_282_p3 = ((and_ln879_fu_277_p2[0:0] === 1'b1) ? trunc_ln1_reg_418 : select_ln879_fu_265_p3);

assign select_ln879_3_fu_322_p3 = ((and_ln879_fu_277_p2[0:0] === 1'b1) ? trunc_ln708_12_reg_424 : trunc_ln3_fu_313_p4);

assign select_ln879_4_fu_329_p3 = ((and_ln879_1_fu_300_p2[0:0] === 1'b1) ? trunc_ln708_12_reg_424 : select_ln879_3_fu_322_p3);

assign select_ln879_fu_265_p3 = ((icmp_ln879_1_fu_255_p2[0:0] === 1'b1) ? trunc_ln1_reg_418 : trunc_ln708_13_reg_430);

assign sign0_V_fu_75_p2 = (($signed(in_V_int_reg) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign sub_ln703_fu_336_p2 = (5'd0 - p_Val2_46_fu_306_p3);

assign trunc_ln1253_fu_219_p1 = grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_return_0[9:0];

assign trunc_ln266_fu_205_p1 = grp_cordic_circ_apfixed_11_3_0_s_fu_70_ap_return_1[9:0];

assign trunc_ln3_fu_313_p4 = {{x_V_reg_413[9:5]}};

assign trunc_ln708_11_fu_168_p4 = {{ret_V_37_fu_162_p2[10:1]}};

assign trunc_ln708_s_fu_149_p4 = {{grp_fu_369_p3[10:2]}};

assign xor_ln879_1_fu_294_p2 = (or_ln879_fu_289_p2 ^ 1'd1);

assign xor_ln879_fu_271_p2 = (icmp_ln879_1_fu_255_p2 ^ 1'd1);

assign z_V_1_fu_189_p3 = ((or_ln251_fu_183_p2[0:0] === 1'b1) ? trunc_ln708_11_fu_168_p4 : z_V_fu_158_p1);

assign z_V_fu_158_p1 = trunc_ln708_s_fu_149_p4;

endmodule //generic_sincos_9_6_s
