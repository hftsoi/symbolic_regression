// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myproject.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myproject::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myproject::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> myproject::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> myproject::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool myproject::ap_const_boolean_1 = true;
const bool myproject::ap_const_boolean_0 = false;
const sc_lv<160> myproject::ap_const_lv160_lc_1 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<10> myproject::ap_const_lv10_3F1 = "1111110001";
const sc_lv<10> myproject::ap_const_lv10_3F0 = "1111110000";
const sc_lv<32> myproject::ap_const_lv32_8C = "10001100";
const sc_lv<32> myproject::ap_const_lv32_95 = "10010101";
const sc_lv<1> myproject::ap_const_lv1_0 = "0";
const sc_lv<32> myproject::ap_const_lv32_28 = "101000";
const sc_lv<32> myproject::ap_const_lv32_31 = "110001";
const sc_lv<32> myproject::ap_const_lv32_96 = "10010110";
const sc_lv<32> myproject::ap_const_lv32_9F = "10011111";
const sc_lv<11> myproject::ap_const_lv11_6AF = "11010101111";
const sc_lv<4> myproject::ap_const_lv4_0 = "0000";
const sc_lv<17> myproject::ap_const_lv17_E10 = "111000010000";
const sc_lv<32> myproject::ap_const_lv32_8 = "1000";
const sc_lv<32> myproject::ap_const_lv32_10 = "10000";
const sc_lv<11> myproject::ap_const_lv11_7FE = "11111111110";
const sc_lv<11> myproject::ap_const_lv11_33 = "110011";
const sc_lv<12> myproject::ap_const_lv12_F0 = "11110000";
const sc_lv<3> myproject::ap_const_lv3_0 = "000";
const sc_lv<14> myproject::ap_const_lv14_0 = "00000000000000";
const sc_lv<18> myproject::ap_const_lv18_16D6 = "1011011010110";
const sc_lv<6> myproject::ap_const_lv6_0 = "000000";
const sc_lv<38> myproject::ap_const_lv38_3000000000 = "11000000000000000000000000000000000000";
const sc_lv<32> myproject::ap_const_lv32_20 = "100000";
const sc_lv<32> myproject::ap_const_lv32_25 = "100101";
const sc_lv<5> myproject::ap_const_lv5_0 = "00000";
const sc_lv<34> myproject::ap_const_lv34_4 = "100";
const sc_lv<34> myproject::ap_const_lv34_0 = "0000000000000000000000000000000000";
const sc_lv<34> myproject::ap_const_lv34_3F2000000 = "1111110010000000000000000000000000";
const sc_lv<32> myproject::ap_const_lv32_18 = "11000";
const sc_lv<32> myproject::ap_const_lv32_21 = "100001";
const sc_lv<21> myproject::ap_const_lv21_F4 = "11110100";

myproject::myproject(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myproject_mul_mul_12s_9ns_21_1_1_U1 = new myproject_mul_mul_12s_9ns_21_1_1<1,1,12,9,21>("myproject_mul_mul_12s_9ns_21_1_1_U1");
    myproject_mul_mul_12s_9ns_21_1_1_U1->din0(ret_V_4_fu_317_p2);
    myproject_mul_mul_12s_9ns_21_1_1_U1->din1(r_V_4_fu_476_p1);
    myproject_mul_mul_12s_9ns_21_1_1_U1->dout(r_V_4_fu_476_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1192_3_fu_449_p2);
    sensitive << ( sub_ln1192_fu_431_p2 );
    sensitive << ( sub_ln1192_2_fu_443_p2 );

    SC_METHOD(thread_add_ln1192_4_fu_371_p2);
    sensitive << ( lhs_V_1_fu_363_p3 );

    SC_METHOD(thread_add_ln1192_fu_231_p2);
    sensitive << ( r_V_fu_227_p1 );

    SC_METHOD(thread_add_ln700_fu_275_p2);
    sensitive << ( sext_ln1118_4_fu_259_p1 );
    sensitive << ( sext_ln728_fu_271_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_lhs_V_1_fu_363_p3);
    sensitive << ( r_V_9_fu_357_p2 );

    SC_METHOD(thread_lhs_V_fu_263_p3);
    sensitive << ( ret_V_7_fu_211_p2 );

    SC_METHOD(thread_mul_ln_fu_309_p3);
    sensitive << ( ret_V_fu_303_p2 );

    SC_METHOD(thread_p_Val2_2_fu_217_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_r_V_4_fu_476_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_r_V_6_fu_177_p3);
    sensitive << ( tmp_fu_167_p4 );

    SC_METHOD(thread_r_V_7_fu_195_p3);
    sensitive << ( tmp_1_fu_185_p4 );

    SC_METHOD(thread_r_V_8_fu_253_p2);
    sensitive << ( sext_ln1118_fu_237_p1 );
    sensitive << ( sext_ln1118_3_fu_249_p1 );

    SC_METHOD(thread_r_V_9_fu_357_p2);
    sensitive << ( sub_ln1118_fu_339_p2 );
    sensitive << ( sext_ln1118_2_fu_353_p1 );

    SC_METHOD(thread_r_V_fu_227_p1);
    sensitive << ( p_Val2_2_fu_217_p4 );

    SC_METHOD(thread_ret_V_10_fu_455_p2);
    sensitive << ( add_ln1192_3_fu_449_p2 );

    SC_METHOD(thread_ret_V_11_fu_389_p2);
    sensitive << ( sext_ln1192_2_fu_385_p1 );

    SC_METHOD(thread_ret_V_4_fu_317_p2);
    sensitive << ( mul_ln_fu_309_p3 );

    SC_METHOD(thread_ret_V_7_fu_211_p2);
    sensitive << ( sext_ln703_fu_203_p1 );
    sensitive << ( sext_ln703_1_fu_207_p1 );

    SC_METHOD(thread_ret_V_8_fu_281_p2);
    sensitive << ( add_ln700_fu_275_p2 );

    SC_METHOD(thread_ret_V_9_fu_297_p2);
    sensitive << ( r_V_fu_227_p1 );

    SC_METHOD(thread_ret_V_fu_303_p2);
    sensitive << ( ret_V_9_fu_297_p2 );

    SC_METHOD(thread_sext_ln1118_1_fu_331_p1);
    sensitive << ( shl_ln_fu_323_p3 );

    SC_METHOD(thread_sext_ln1118_2_fu_353_p1);
    sensitive << ( shl_ln1118_3_fu_345_p3 );

    SC_METHOD(thread_sext_ln1118_3_fu_249_p1);
    sensitive << ( tmp_2_fu_241_p3 );

    SC_METHOD(thread_sext_ln1118_4_fu_259_p1);
    sensitive << ( r_V_8_fu_253_p2 );

    SC_METHOD(thread_sext_ln1118_fu_237_p1);
    sensitive << ( add_ln1192_fu_231_p2 );

    SC_METHOD(thread_sext_ln1192_1_fu_427_p1);
    sensitive << ( tmp_5_fu_420_p3 );

    SC_METHOD(thread_sext_ln1192_2_fu_385_p1);
    sensitive << ( tmp_7_fu_377_p3 );

    SC_METHOD(thread_sext_ln1192_fu_416_p1);
    sensitive << ( tmp_4_fu_409_p3 );

    SC_METHOD(thread_sext_ln703_1_fu_207_p1);
    sensitive << ( r_V_7_fu_195_p3 );

    SC_METHOD(thread_sext_ln703_fu_203_p1);
    sensitive << ( r_V_6_fu_177_p3 );

    SC_METHOD(thread_sext_ln728_fu_271_p1);
    sensitive << ( lhs_V_fu_263_p3 );

    SC_METHOD(thread_shl_ln1118_3_fu_345_p3);
    sensitive << ( p_Val2_2_fu_217_p4 );

    SC_METHOD(thread_shl_ln1192_fu_437_p2);
    sensitive << ( sub_ln1192_fu_431_p2 );

    SC_METHOD(thread_shl_ln_fu_323_p3);
    sensitive << ( p_Val2_2_fu_217_p4 );

    SC_METHOD(thread_sub_ln1118_fu_339_p2);
    sensitive << ( sext_ln1118_1_fu_331_p1 );

    SC_METHOD(thread_sub_ln1192_2_fu_443_p2);
    sensitive << ( shl_ln1192_fu_437_p2 );

    SC_METHOD(thread_sub_ln1192_fu_431_p2);
    sensitive << ( sext_ln1192_fu_416_p1 );
    sensitive << ( sext_ln1192_1_fu_427_p1 );

    SC_METHOD(thread_tmp_1_fu_185_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_tmp_2_fu_241_p3);
    sensitive << ( add_ln1192_fu_231_p2 );

    SC_METHOD(thread_tmp_4_fu_409_p3);
    sensitive << ( r_V_4_reg_487 );

    SC_METHOD(thread_tmp_5_fu_420_p3);
    sensitive << ( r_V_4_reg_487 );

    SC_METHOD(thread_tmp_7_fu_377_p3);
    sensitive << ( add_ln1192_4_fu_371_p2 );

    SC_METHOD(thread_tmp_fu_167_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_x_V_ap_vld_in_sig);
    sensitive << ( x_V_ap_vld );
    sensitive << ( x_V_ap_vld_preg );

    SC_METHOD(thread_x_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( x_V_ap_vld );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_x_V_in_sig);
    sensitive << ( x_V_ap_vld );
    sensitive << ( x_V );
    sensitive << ( x_V_preg );

    SC_METHOD(thread_y_0_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_3_reg_482 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_0_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_1_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ret_V_10_fu_455_p2 );

    SC_METHOD(thread_y_1_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_2_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_2_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_3_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_493 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_3_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_y_4_V);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_y_4_V_ap_vld);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    x_V_preg = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    x_V_ap_vld_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myproject_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_V_ap_vld, "(port)x_V_ap_vld");
    sc_trace(mVcdFile, x_V, "(port)x_V");
    sc_trace(mVcdFile, y_0_V, "(port)y_0_V");
    sc_trace(mVcdFile, y_0_V_ap_vld, "(port)y_0_V_ap_vld");
    sc_trace(mVcdFile, y_1_V, "(port)y_1_V");
    sc_trace(mVcdFile, y_1_V_ap_vld, "(port)y_1_V_ap_vld");
    sc_trace(mVcdFile, y_2_V, "(port)y_2_V");
    sc_trace(mVcdFile, y_2_V_ap_vld, "(port)y_2_V_ap_vld");
    sc_trace(mVcdFile, y_3_V, "(port)y_3_V");
    sc_trace(mVcdFile, y_3_V_ap_vld, "(port)y_3_V_ap_vld");
    sc_trace(mVcdFile, y_4_V, "(port)y_4_V");
    sc_trace(mVcdFile, y_4_V_ap_vld, "(port)y_4_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, x_V_ap_vld_in_sig, "x_V_ap_vld_in_sig");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, x_V_preg, "x_V_preg");
    sc_trace(mVcdFile, x_V_in_sig, "x_V_in_sig");
    sc_trace(mVcdFile, x_V_ap_vld_preg, "x_V_ap_vld_preg");
    sc_trace(mVcdFile, x_V_blk_n, "x_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_3_reg_482, "tmp_3_reg_482");
    sc_trace(mVcdFile, r_V_4_fu_476_p2, "r_V_4_fu_476_p2");
    sc_trace(mVcdFile, r_V_4_reg_487, "r_V_4_reg_487");
    sc_trace(mVcdFile, tmp_6_reg_493, "tmp_6_reg_493");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_167_p4, "tmp_fu_167_p4");
    sc_trace(mVcdFile, tmp_1_fu_185_p4, "tmp_1_fu_185_p4");
    sc_trace(mVcdFile, r_V_6_fu_177_p3, "r_V_6_fu_177_p3");
    sc_trace(mVcdFile, r_V_7_fu_195_p3, "r_V_7_fu_195_p3");
    sc_trace(mVcdFile, sext_ln703_fu_203_p1, "sext_ln703_fu_203_p1");
    sc_trace(mVcdFile, sext_ln703_1_fu_207_p1, "sext_ln703_1_fu_207_p1");
    sc_trace(mVcdFile, p_Val2_2_fu_217_p4, "p_Val2_2_fu_217_p4");
    sc_trace(mVcdFile, r_V_fu_227_p1, "r_V_fu_227_p1");
    sc_trace(mVcdFile, add_ln1192_fu_231_p2, "add_ln1192_fu_231_p2");
    sc_trace(mVcdFile, tmp_2_fu_241_p3, "tmp_2_fu_241_p3");
    sc_trace(mVcdFile, sext_ln1118_fu_237_p1, "sext_ln1118_fu_237_p1");
    sc_trace(mVcdFile, sext_ln1118_3_fu_249_p1, "sext_ln1118_3_fu_249_p1");
    sc_trace(mVcdFile, r_V_8_fu_253_p2, "r_V_8_fu_253_p2");
    sc_trace(mVcdFile, ret_V_7_fu_211_p2, "ret_V_7_fu_211_p2");
    sc_trace(mVcdFile, lhs_V_fu_263_p3, "lhs_V_fu_263_p3");
    sc_trace(mVcdFile, sext_ln1118_4_fu_259_p1, "sext_ln1118_4_fu_259_p1");
    sc_trace(mVcdFile, sext_ln728_fu_271_p1, "sext_ln728_fu_271_p1");
    sc_trace(mVcdFile, add_ln700_fu_275_p2, "add_ln700_fu_275_p2");
    sc_trace(mVcdFile, ret_V_8_fu_281_p2, "ret_V_8_fu_281_p2");
    sc_trace(mVcdFile, ret_V_9_fu_297_p2, "ret_V_9_fu_297_p2");
    sc_trace(mVcdFile, ret_V_fu_303_p2, "ret_V_fu_303_p2");
    sc_trace(mVcdFile, mul_ln_fu_309_p3, "mul_ln_fu_309_p3");
    sc_trace(mVcdFile, shl_ln_fu_323_p3, "shl_ln_fu_323_p3");
    sc_trace(mVcdFile, ret_V_4_fu_317_p2, "ret_V_4_fu_317_p2");
    sc_trace(mVcdFile, sext_ln1118_1_fu_331_p1, "sext_ln1118_1_fu_331_p1");
    sc_trace(mVcdFile, shl_ln1118_3_fu_345_p3, "shl_ln1118_3_fu_345_p3");
    sc_trace(mVcdFile, sub_ln1118_fu_339_p2, "sub_ln1118_fu_339_p2");
    sc_trace(mVcdFile, sext_ln1118_2_fu_353_p1, "sext_ln1118_2_fu_353_p1");
    sc_trace(mVcdFile, r_V_9_fu_357_p2, "r_V_9_fu_357_p2");
    sc_trace(mVcdFile, lhs_V_1_fu_363_p3, "lhs_V_1_fu_363_p3");
    sc_trace(mVcdFile, add_ln1192_4_fu_371_p2, "add_ln1192_4_fu_371_p2");
    sc_trace(mVcdFile, tmp_7_fu_377_p3, "tmp_7_fu_377_p3");
    sc_trace(mVcdFile, sext_ln1192_2_fu_385_p1, "sext_ln1192_2_fu_385_p1");
    sc_trace(mVcdFile, ret_V_11_fu_389_p2, "ret_V_11_fu_389_p2");
    sc_trace(mVcdFile, tmp_4_fu_409_p3, "tmp_4_fu_409_p3");
    sc_trace(mVcdFile, tmp_5_fu_420_p3, "tmp_5_fu_420_p3");
    sc_trace(mVcdFile, sext_ln1192_fu_416_p1, "sext_ln1192_fu_416_p1");
    sc_trace(mVcdFile, sext_ln1192_1_fu_427_p1, "sext_ln1192_1_fu_427_p1");
    sc_trace(mVcdFile, sub_ln1192_fu_431_p2, "sub_ln1192_fu_431_p2");
    sc_trace(mVcdFile, shl_ln1192_fu_437_p2, "shl_ln1192_fu_437_p2");
    sc_trace(mVcdFile, sub_ln1192_2_fu_443_p2, "sub_ln1192_2_fu_443_p2");
    sc_trace(mVcdFile, add_ln1192_3_fu_449_p2, "add_ln1192_3_fu_449_p2");
    sc_trace(mVcdFile, ret_V_10_fu_455_p2, "ret_V_10_fu_455_p2");
    sc_trace(mVcdFile, r_V_4_fu_476_p1, "r_V_4_fu_476_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("myproject.hdltvin.dat");
    mHdltvoutHandle.open("myproject.hdltvout.dat");
}

myproject::~myproject() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete myproject_mul_mul_12s_9ns_21_1_1_U1;
}

void myproject::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_V_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            x_V_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())))) {
            x_V_ap_vld_preg = x_V_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_V_preg = ap_const_lv160_lc_1;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())))) {
            x_V_preg = x_V.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        r_V_4_reg_487 = r_V_4_fu_476_p2.read();
        tmp_3_reg_482 = ret_V_8_fu_281_p2.read().range(16, 8);
        tmp_6_reg_493 = ret_V_11_fu_389_p2.read().range(37, 32);
    }
}

void myproject::thread_add_ln1192_3_fu_449_p2() {
    add_ln1192_3_fu_449_p2 = (!sub_ln1192_fu_431_p2.read().is_01() || !sub_ln1192_2_fu_443_p2.read().is_01())? sc_lv<34>(): (sc_biguint<34>(sub_ln1192_fu_431_p2.read()) + sc_biguint<34>(sub_ln1192_2_fu_443_p2.read()));
}

void myproject::thread_add_ln1192_4_fu_371_p2() {
    add_ln1192_4_fu_371_p2 = (!lhs_V_1_fu_363_p3.read().is_01() || !ap_const_lv18_16D6.is_01())? sc_lv<18>(): (sc_biguint<18>(lhs_V_1_fu_363_p3.read()) + sc_biguint<18>(ap_const_lv18_16D6));
}

void myproject::thread_add_ln1192_fu_231_p2() {
    add_ln1192_fu_231_p2 = (!r_V_fu_227_p1.read().is_01() || !ap_const_lv11_6AF.is_01())? sc_lv<11>(): (sc_bigint<11>(r_V_fu_227_p1.read()) + sc_bigint<11>(ap_const_lv11_6AF));
}

void myproject::thread_add_ln700_fu_275_p2() {
    add_ln700_fu_275_p2 = (!sext_ln1118_4_fu_259_p1.read().is_01() || !sext_ln728_fu_271_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(sext_ln1118_4_fu_259_p1.read()) + sc_bigint<17>(sext_ln728_fu_271_p1.read()));
}

void myproject::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void myproject::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())));
}

void myproject::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read()));
}

void myproject::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myproject::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void myproject::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void myproject::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void myproject::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myproject::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void myproject::thread_lhs_V_1_fu_363_p3() {
    lhs_V_1_fu_363_p3 = esl_concat<14,4>(r_V_9_fu_357_p2.read(), ap_const_lv4_0);
}

void myproject::thread_lhs_V_fu_263_p3() {
    lhs_V_fu_263_p3 = esl_concat<12,4>(ret_V_7_fu_211_p2.read(), ap_const_lv4_0);
}

void myproject::thread_mul_ln_fu_309_p3() {
    mul_ln_fu_309_p3 = esl_concat<11,1>(ret_V_fu_303_p2.read(), ap_const_lv1_0);
}

void myproject::thread_p_Val2_2_fu_217_p4() {
    p_Val2_2_fu_217_p4 = x_V_in_sig.read().range(159, 150);
}

void myproject::thread_r_V_4_fu_476_p1() {
    r_V_4_fu_476_p1 =  (sc_lv<9>) (ap_const_lv21_F4);
}

void myproject::thread_r_V_6_fu_177_p3() {
    r_V_6_fu_177_p3 = esl_concat<10,1>(tmp_fu_167_p4.read(), ap_const_lv1_0);
}

void myproject::thread_r_V_7_fu_195_p3() {
    r_V_7_fu_195_p3 = esl_concat<10,1>(tmp_1_fu_185_p4.read(), ap_const_lv1_0);
}

void myproject::thread_r_V_8_fu_253_p2() {
    r_V_8_fu_253_p2 = (!sext_ln1118_fu_237_p1.read().is_01() || !sext_ln1118_3_fu_249_p1.read().is_01())? sc_lv<16>(): (sc_bigint<16>(sext_ln1118_fu_237_p1.read()) - sc_bigint<16>(sext_ln1118_3_fu_249_p1.read()));
}

void myproject::thread_r_V_9_fu_357_p2() {
    r_V_9_fu_357_p2 = (!sub_ln1118_fu_339_p2.read().is_01() || !sext_ln1118_2_fu_353_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(sub_ln1118_fu_339_p2.read()) - sc_bigint<14>(sext_ln1118_2_fu_353_p1.read()));
}

void myproject::thread_r_V_fu_227_p1() {
    r_V_fu_227_p1 = esl_sext<11,10>(p_Val2_2_fu_217_p4.read());
}

void myproject::thread_ret_V_10_fu_455_p2() {
    ret_V_10_fu_455_p2 = (!add_ln1192_3_fu_449_p2.read().is_01() || !ap_const_lv34_3F2000000.is_01())? sc_lv<34>(): (sc_biguint<34>(add_ln1192_3_fu_449_p2.read()) + sc_bigint<34>(ap_const_lv34_3F2000000));
}

void myproject::thread_ret_V_11_fu_389_p2() {
    ret_V_11_fu_389_p2 = (!sext_ln1192_2_fu_385_p1.read().is_01() || !ap_const_lv38_3000000000.is_01())? sc_lv<38>(): (sc_bigint<38>(sext_ln1192_2_fu_385_p1.read()) + sc_bigint<38>(ap_const_lv38_3000000000));
}

void myproject::thread_ret_V_4_fu_317_p2() {
    ret_V_4_fu_317_p2 = (!mul_ln_fu_309_p3.read().is_01() || !ap_const_lv12_F0.is_01())? sc_lv<12>(): (sc_biguint<12>(mul_ln_fu_309_p3.read()) + sc_biguint<12>(ap_const_lv12_F0));
}

void myproject::thread_ret_V_7_fu_211_p2() {
    ret_V_7_fu_211_p2 = (!sext_ln703_fu_203_p1.read().is_01() || !sext_ln703_1_fu_207_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(sext_ln703_fu_203_p1.read()) - sc_bigint<12>(sext_ln703_1_fu_207_p1.read()));
}

void myproject::thread_ret_V_8_fu_281_p2() {
    ret_V_8_fu_281_p2 = (!add_ln700_fu_275_p2.read().is_01() || !ap_const_lv17_E10.is_01())? sc_lv<17>(): (sc_biguint<17>(add_ln700_fu_275_p2.read()) + sc_biguint<17>(ap_const_lv17_E10));
}

void myproject::thread_ret_V_9_fu_297_p2() {
    ret_V_9_fu_297_p2 = (!ap_const_lv11_7FE.is_01() || !r_V_fu_227_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(ap_const_lv11_7FE) - sc_bigint<11>(r_V_fu_227_p1.read()));
}

void myproject::thread_ret_V_fu_303_p2() {
    ret_V_fu_303_p2 = (!ret_V_9_fu_297_p2.read().is_01() || !ap_const_lv11_33.is_01())? sc_lv<11>(): (sc_biguint<11>(ret_V_9_fu_297_p2.read()) + sc_biguint<11>(ap_const_lv11_33));
}

void myproject::thread_sext_ln1118_1_fu_331_p1() {
    sext_ln1118_1_fu_331_p1 = esl_sext<14,13>(shl_ln_fu_323_p3.read());
}

void myproject::thread_sext_ln1118_2_fu_353_p1() {
    sext_ln1118_2_fu_353_p1 = esl_sext<14,11>(shl_ln1118_3_fu_345_p3.read());
}

void myproject::thread_sext_ln1118_3_fu_249_p1() {
    sext_ln1118_3_fu_249_p1 = esl_sext<16,15>(tmp_2_fu_241_p3.read());
}

void myproject::thread_sext_ln1118_4_fu_259_p1() {
    sext_ln1118_4_fu_259_p1 = esl_sext<17,16>(r_V_8_fu_253_p2.read());
}

void myproject::thread_sext_ln1118_fu_237_p1() {
    sext_ln1118_fu_237_p1 = esl_sext<16,11>(add_ln1192_fu_231_p2.read());
}

void myproject::thread_sext_ln1192_1_fu_427_p1() {
    sext_ln1192_1_fu_427_p1 = esl_sext<34,26>(tmp_5_fu_420_p3.read());
}

void myproject::thread_sext_ln1192_2_fu_385_p1() {
    sext_ln1192_2_fu_385_p1 = esl_sext<38,24>(tmp_7_fu_377_p3.read());
}

void myproject::thread_sext_ln1192_fu_416_p1() {
    sext_ln1192_fu_416_p1 = esl_sext<34,22>(tmp_4_fu_409_p3.read());
}

void myproject::thread_sext_ln703_1_fu_207_p1() {
    sext_ln703_1_fu_207_p1 = esl_sext<12,11>(r_V_7_fu_195_p3.read());
}

void myproject::thread_sext_ln703_fu_203_p1() {
    sext_ln703_fu_203_p1 = esl_sext<12,11>(r_V_6_fu_177_p3.read());
}

void myproject::thread_sext_ln728_fu_271_p1() {
    sext_ln728_fu_271_p1 = esl_sext<17,16>(lhs_V_fu_263_p3.read());
}

void myproject::thread_shl_ln1118_3_fu_345_p3() {
    shl_ln1118_3_fu_345_p3 = esl_concat<10,1>(p_Val2_2_fu_217_p4.read(), ap_const_lv1_0);
}

void myproject::thread_shl_ln1192_fu_437_p2() {
    shl_ln1192_fu_437_p2 = (!ap_const_lv34_4.is_01())? sc_lv<34>(): sub_ln1192_fu_431_p2.read() << (unsigned short)ap_const_lv34_4.to_uint();
}

void myproject::thread_shl_ln_fu_323_p3() {
    shl_ln_fu_323_p3 = esl_concat<10,3>(p_Val2_2_fu_217_p4.read(), ap_const_lv3_0);
}

void myproject::thread_sub_ln1118_fu_339_p2() {
    sub_ln1118_fu_339_p2 = (!ap_const_lv14_0.is_01() || !sext_ln1118_1_fu_331_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ap_const_lv14_0) - sc_bigint<14>(sext_ln1118_1_fu_331_p1.read()));
}

void myproject::thread_sub_ln1192_2_fu_443_p2() {
    sub_ln1192_2_fu_443_p2 = (!ap_const_lv34_0.is_01() || !shl_ln1192_fu_437_p2.read().is_01())? sc_lv<34>(): (sc_biguint<34>(ap_const_lv34_0) - sc_biguint<34>(shl_ln1192_fu_437_p2.read()));
}

void myproject::thread_sub_ln1192_fu_431_p2() {
    sub_ln1192_fu_431_p2 = (!sext_ln1192_fu_416_p1.read().is_01() || !sext_ln1192_1_fu_427_p1.read().is_01())? sc_lv<34>(): (sc_bigint<34>(sext_ln1192_fu_416_p1.read()) - sc_bigint<34>(sext_ln1192_1_fu_427_p1.read()));
}

void myproject::thread_tmp_1_fu_185_p4() {
    tmp_1_fu_185_p4 = x_V_in_sig.read().range(49, 40);
}

void myproject::thread_tmp_2_fu_241_p3() {
    tmp_2_fu_241_p3 = esl_concat<11,4>(add_ln1192_fu_231_p2.read(), ap_const_lv4_0);
}

void myproject::thread_tmp_4_fu_409_p3() {
    tmp_4_fu_409_p3 = esl_concat<21,1>(r_V_4_reg_487.read(), ap_const_lv1_0);
}

void myproject::thread_tmp_5_fu_420_p3() {
    tmp_5_fu_420_p3 = esl_concat<21,5>(r_V_4_reg_487.read(), ap_const_lv5_0);
}

void myproject::thread_tmp_7_fu_377_p3() {
    tmp_7_fu_377_p3 = esl_concat<18,6>(add_ln1192_4_fu_371_p2.read(), ap_const_lv6_0);
}

void myproject::thread_tmp_fu_167_p4() {
    tmp_fu_167_p4 = x_V_in_sig.read().range(149, 140);
}

void myproject::thread_x_V_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read())) {
        x_V_ap_vld_in_sig = x_V_ap_vld.read();
    } else {
        x_V_ap_vld_in_sig = x_V_ap_vld_preg.read();
    }
}

void myproject::thread_x_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        x_V_blk_n = x_V_ap_vld.read();
    } else {
        x_V_blk_n = ap_const_logic_1;
    }
}

void myproject::thread_x_V_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read())) {
        x_V_in_sig = x_V.read();
    } else {
        x_V_in_sig = x_V_preg.read();
    }
}

void myproject::thread_y_0_V() {
    y_0_V = esl_sext<10,9>(tmp_3_reg_482.read());
}

void myproject::thread_y_0_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_0_V_ap_vld = ap_const_logic_1;
    } else {
        y_0_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_1_V() {
    y_1_V = ret_V_10_fu_455_p2.read().range(33, 24);
}

void myproject::thread_y_1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_1_V_ap_vld = ap_const_logic_1;
    } else {
        y_1_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_2_V() {
    y_2_V = ap_const_lv10_3F1;
}

void myproject::thread_y_2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_2_V_ap_vld = ap_const_logic_1;
    } else {
        y_2_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_3_V() {
    y_3_V = esl_sext<10,6>(tmp_6_reg_493.read());
}

void myproject::thread_y_3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_3_V_ap_vld = ap_const_logic_1;
    } else {
        y_3_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_4_V() {
    y_4_V = ap_const_lv10_3F0;
}

void myproject::thread_y_4_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_4_V_ap_vld = ap_const_logic_1;
    } else {
        y_4_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void myproject::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V_ap_vld\" :  \"" << x_V_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V\" :  \"" << x_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_0_V\" :  \"" << y_0_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_0_V_ap_vld\" :  \"" << y_0_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_1_V\" :  \"" << y_1_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_1_V_ap_vld\" :  \"" << y_1_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_2_V\" :  \"" << y_2_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_2_V_ap_vld\" :  \"" << y_2_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_3_V\" :  \"" << y_3_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_3_V_ap_vld\" :  \"" << y_3_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_4_V\" :  \"" << y_4_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_4_V_ap_vld\" :  \"" << y_4_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

