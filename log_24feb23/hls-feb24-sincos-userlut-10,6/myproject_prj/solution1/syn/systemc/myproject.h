// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mul_mul_12s_9ns_21_1_1.h"

namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > x_V_ap_vld;
    sc_in< sc_lv<160> > x_V;
    sc_out< sc_lv<10> > y_0_V;
    sc_out< sc_logic > y_0_V_ap_vld;
    sc_out< sc_lv<10> > y_1_V;
    sc_out< sc_logic > y_1_V_ap_vld;
    sc_out< sc_lv<10> > y_2_V;
    sc_out< sc_logic > y_2_V_ap_vld;
    sc_out< sc_lv<10> > y_3_V;
    sc_out< sc_logic > y_3_V_ap_vld;
    sc_out< sc_lv<10> > y_4_V;
    sc_out< sc_logic > y_4_V_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    myproject_mul_mul_12s_9ns_21_1_1<1,1,12,9,21>* myproject_mul_mul_12s_9ns_21_1_1_U1;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > x_V_ap_vld_in_sig;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<160> > x_V_preg;
    sc_signal< sc_lv<160> > x_V_in_sig;
    sc_signal< sc_logic > x_V_ap_vld_preg;
    sc_signal< sc_logic > x_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<9> > tmp_3_reg_482;
    sc_signal< sc_lv<21> > r_V_4_fu_476_p2;
    sc_signal< sc_lv<21> > r_V_4_reg_487;
    sc_signal< sc_lv<6> > tmp_6_reg_493;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<10> > tmp_fu_167_p4;
    sc_signal< sc_lv<10> > tmp_1_fu_185_p4;
    sc_signal< sc_lv<11> > r_V_6_fu_177_p3;
    sc_signal< sc_lv<11> > r_V_7_fu_195_p3;
    sc_signal< sc_lv<12> > sext_ln703_fu_203_p1;
    sc_signal< sc_lv<12> > sext_ln703_1_fu_207_p1;
    sc_signal< sc_lv<10> > p_Val2_2_fu_217_p4;
    sc_signal< sc_lv<11> > r_V_fu_227_p1;
    sc_signal< sc_lv<11> > add_ln1192_fu_231_p2;
    sc_signal< sc_lv<15> > tmp_2_fu_241_p3;
    sc_signal< sc_lv<16> > sext_ln1118_fu_237_p1;
    sc_signal< sc_lv<16> > sext_ln1118_3_fu_249_p1;
    sc_signal< sc_lv<16> > r_V_8_fu_253_p2;
    sc_signal< sc_lv<12> > ret_V_7_fu_211_p2;
    sc_signal< sc_lv<16> > lhs_V_fu_263_p3;
    sc_signal< sc_lv<17> > sext_ln1118_4_fu_259_p1;
    sc_signal< sc_lv<17> > sext_ln728_fu_271_p1;
    sc_signal< sc_lv<17> > add_ln700_fu_275_p2;
    sc_signal< sc_lv<17> > ret_V_8_fu_281_p2;
    sc_signal< sc_lv<11> > ret_V_9_fu_297_p2;
    sc_signal< sc_lv<11> > ret_V_fu_303_p2;
    sc_signal< sc_lv<12> > mul_ln_fu_309_p3;
    sc_signal< sc_lv<13> > shl_ln_fu_323_p3;
    sc_signal< sc_lv<12> > ret_V_4_fu_317_p2;
    sc_signal< sc_lv<14> > sext_ln1118_1_fu_331_p1;
    sc_signal< sc_lv<11> > shl_ln1118_3_fu_345_p3;
    sc_signal< sc_lv<14> > sub_ln1118_fu_339_p2;
    sc_signal< sc_lv<14> > sext_ln1118_2_fu_353_p1;
    sc_signal< sc_lv<14> > r_V_9_fu_357_p2;
    sc_signal< sc_lv<18> > lhs_V_1_fu_363_p3;
    sc_signal< sc_lv<18> > add_ln1192_4_fu_371_p2;
    sc_signal< sc_lv<24> > tmp_7_fu_377_p3;
    sc_signal< sc_lv<38> > sext_ln1192_2_fu_385_p1;
    sc_signal< sc_lv<38> > ret_V_11_fu_389_p2;
    sc_signal< sc_lv<22> > tmp_4_fu_409_p3;
    sc_signal< sc_lv<26> > tmp_5_fu_420_p3;
    sc_signal< sc_lv<34> > sext_ln1192_fu_416_p1;
    sc_signal< sc_lv<34> > sext_ln1192_1_fu_427_p1;
    sc_signal< sc_lv<34> > sub_ln1192_fu_431_p2;
    sc_signal< sc_lv<34> > shl_ln1192_fu_437_p2;
    sc_signal< sc_lv<34> > sub_ln1192_2_fu_443_p2;
    sc_signal< sc_lv<34> > add_ln1192_3_fu_449_p2;
    sc_signal< sc_lv<34> > ret_V_10_fu_455_p2;
    sc_signal< sc_lv<9> > r_V_4_fu_476_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<160> ap_const_lv160_lc_1;
    static const sc_lv<10> ap_const_lv10_3F1;
    static const sc_lv<10> ap_const_lv10_3F0;
    static const sc_lv<32> ap_const_lv32_8C;
    static const sc_lv<32> ap_const_lv32_95;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_96;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<11> ap_const_lv11_6AF;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<17> ap_const_lv17_E10;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<11> ap_const_lv11_7FE;
    static const sc_lv<11> ap_const_lv11_33;
    static const sc_lv<12> ap_const_lv12_F0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<18> ap_const_lv18_16D6;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<38> ap_const_lv38_3000000000;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<34> ap_const_lv34_4;
    static const sc_lv<34> ap_const_lv34_0;
    static const sc_lv<34> ap_const_lv34_3F2000000;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<21> ap_const_lv21_F4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_3_fu_449_p2();
    void thread_add_ln1192_4_fu_371_p2();
    void thread_add_ln1192_fu_231_p2();
    void thread_add_ln700_fu_275_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_lhs_V_1_fu_363_p3();
    void thread_lhs_V_fu_263_p3();
    void thread_mul_ln_fu_309_p3();
    void thread_p_Val2_2_fu_217_p4();
    void thread_r_V_4_fu_476_p1();
    void thread_r_V_6_fu_177_p3();
    void thread_r_V_7_fu_195_p3();
    void thread_r_V_8_fu_253_p2();
    void thread_r_V_9_fu_357_p2();
    void thread_r_V_fu_227_p1();
    void thread_ret_V_10_fu_455_p2();
    void thread_ret_V_11_fu_389_p2();
    void thread_ret_V_4_fu_317_p2();
    void thread_ret_V_7_fu_211_p2();
    void thread_ret_V_8_fu_281_p2();
    void thread_ret_V_9_fu_297_p2();
    void thread_ret_V_fu_303_p2();
    void thread_sext_ln1118_1_fu_331_p1();
    void thread_sext_ln1118_2_fu_353_p1();
    void thread_sext_ln1118_3_fu_249_p1();
    void thread_sext_ln1118_4_fu_259_p1();
    void thread_sext_ln1118_fu_237_p1();
    void thread_sext_ln1192_1_fu_427_p1();
    void thread_sext_ln1192_2_fu_385_p1();
    void thread_sext_ln1192_fu_416_p1();
    void thread_sext_ln703_1_fu_207_p1();
    void thread_sext_ln703_fu_203_p1();
    void thread_sext_ln728_fu_271_p1();
    void thread_shl_ln1118_3_fu_345_p3();
    void thread_shl_ln1192_fu_437_p2();
    void thread_shl_ln_fu_323_p3();
    void thread_sub_ln1118_fu_339_p2();
    void thread_sub_ln1192_2_fu_443_p2();
    void thread_sub_ln1192_fu_431_p2();
    void thread_tmp_1_fu_185_p4();
    void thread_tmp_2_fu_241_p3();
    void thread_tmp_4_fu_409_p3();
    void thread_tmp_5_fu_420_p3();
    void thread_tmp_7_fu_377_p3();
    void thread_tmp_fu_167_p4();
    void thread_x_V_ap_vld_in_sig();
    void thread_x_V_blk_n();
    void thread_x_V_in_sig();
    void thread_y_0_V();
    void thread_y_0_V_ap_vld();
    void thread_y_1_V();
    void thread_y_1_V_ap_vld();
    void thread_y_2_V();
    void thread_y_2_V_ap_vld();
    void thread_y_3_V();
    void thread_y_3_V_ap_vld();
    void thread_y_4_V();
    void thread_y_4_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
