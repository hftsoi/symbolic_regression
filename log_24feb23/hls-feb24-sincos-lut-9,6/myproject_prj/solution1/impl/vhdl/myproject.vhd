-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (143 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (8 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.339000,HLS_SYN_LAT=9,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=36,HLS_SYN_FF=14279,HLS_SYN_LUT=25681,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv144_lc_1 : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_86 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000110";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv9_1FC : STD_LOGIC_VECTOR (8 downto 0) := "111111100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_30 : STD_LOGIC_VECTOR (11 downto 0) := "000000110000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_118 : STD_LOGIC_VECTOR (10 downto 0) := "00100011000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_19 : STD_LOGIC_VECTOR (9 downto 0) := "0000011001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv16_340 : STD_LOGIC_VECTOR (15 downto 0) := "0000001101000000";
    constant ap_const_lv33_1F8000000 : STD_LOGIC_VECTOR (32 downto 0) := "111111000000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv30_3F000000 : STD_LOGIC_VECTOR (29 downto 0) := "111111000000000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv12_27 : STD_LOGIC_VECTOR (11 downto 0) := "000000100111";
    constant ap_const_lv12_16 : STD_LOGIC_VECTOR (11 downto 0) := "000000010110";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv27_7E40000 : STD_LOGIC_VECTOR (26 downto 0) := "111111001000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (143 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (143 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_9_fu_300_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_9_reg_1214 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_1_fu_310_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_1_reg_1224 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_fu_320_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_reg_1230 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1240 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1240_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1240_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_reg_1240_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_6_fu_359_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_6_reg_1263 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_8_reg_1279 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_21_fu_450_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_21_reg_1284 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_21_reg_1284_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_21_reg_1284_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_21_reg_1284_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_18_fu_481_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_18_reg_1294 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_18_reg_1294_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_18_reg_1294_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_18_reg_1294_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_4_reg_1319 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_6_reg_1324 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_9_reg_1329 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_725_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_reg_1339 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_3_reg_1344 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_4_reg_1349 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_8_reg_1354 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_2_reg_1359 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_2_reg_1359_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_2_reg_1359_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln700_fu_782_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln700_reg_1364 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_1_reg_1369 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1166_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_5_reg_1374 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_5_reg_1379 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_3_reg_1384 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_7_reg_1389 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_7_reg_1389_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_8_reg_1394 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_8_reg_1394_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_8_reg_1394_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_9_reg_1399 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_9_reg_1399_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_9_reg_1399_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_9_reg_1399_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1192_fu_867_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_reg_1404 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_16_fu_877_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_16_reg_1409 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_5_reg_1414 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_10_reg_1419 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_10_reg_1419_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln708_1_reg_1424 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_1_reg_1424_pp0_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_1_reg_1424_pp0_iter8_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1174_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln1192_reg_1429 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_7_reg_1434 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_7_reg_1434_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_7_reg_1434_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1192_4_fu_1182_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln1192_4_reg_1439 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_4_reg_1444 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_14_fu_1188_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_14_reg_1449 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal p_6_reg_1454 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1192_1_fu_999_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln1192_1_reg_1459 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln1192_5_fu_1194_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln1192_5_reg_1464 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_11_fu_1024_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_11_reg_1469 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_8_fu_1200_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1192_8_reg_1474 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_17_fu_1049_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_17_reg_1479 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_2_fu_1058_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_ln1192_2_reg_1484 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln708_7_reg_1489 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_10_reg_1494 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call58 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call58 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call58 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call58 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call58 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call58 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call58 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call58 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call58 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call58 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp17 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call63 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call63 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call63 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call63 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call63 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call63 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call63 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call63 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call63 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call63 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp19 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call140 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call140 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call140 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call140 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call140 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call140 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call140 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call140 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call140 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call140 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp31 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call20 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call20 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call20 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call20 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call20 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call20 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call20 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call20 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call20 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp42 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call78 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call78 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call78 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call78 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call78 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call78 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call78 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call78 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call78 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call78 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp65 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call96 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call96 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call96 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call96 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call96 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call96 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call96 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call96 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call96 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call96 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp69 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call196 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call196 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call196 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call196 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call196 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call196 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call196 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call196 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call196 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call196 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp105 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call159 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call159 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call159 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call159 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call159 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call159 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call159 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call159 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call159 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call159 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp121 : BOOLEAN;
    signal grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call184 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call184 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call184 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call184 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call184 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call184 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call184 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call184 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call184 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call184 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp123 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call68 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call68 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call68 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call68 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call68 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call68 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call68 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call68 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call68 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call68 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp21 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call114 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call114 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call114 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call114 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call114 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call114 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call114 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call114 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call114 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call114 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp23 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_260_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_260_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call17 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call17 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call17 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call17 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call17 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call17 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp40 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_return : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call33 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call33 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call33 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call33 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call33 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call33 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call33 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call33 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call33 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call33 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp55 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call47 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call47 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call47 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call47 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call47 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call47 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call47 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call47 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp58 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call74 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call74 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call74 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call74 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call74 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call74 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call74 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call74 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call74 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call74 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp64 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call89 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call89 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call89 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call89 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call89 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call89 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call89 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call89 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call89 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call89 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp66 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_input_V : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call93 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call93 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call93 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call93 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call93 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call93 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call93 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call93 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call93 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call93 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp68 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call175 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call175 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call175 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call175 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call175 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call175 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call175 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call175 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call175 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call175 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp95 : BOOLEAN;
    signal grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call111 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call111 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call111 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call111 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call111 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call111 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call111 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call111 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call111 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call111 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp118 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_s_fu_370_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_6_fu_388_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_8_fu_396_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1_fu_380_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_10_fu_400_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_29_fu_406_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1128_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_1_fu_444_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_1_fu_447_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_464_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_1_fu_471_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_fu_475_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_fu_461_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_1_fu_490_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_2_fu_487_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_3_fu_497_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_19_fu_501_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_1_fu_507_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_22_fu_513_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln703_fu_530_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_22_fu_541_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_V_1_fu_564_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_26_fu_567_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_2_fu_573_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_9_fu_577_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1137_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_7_fu_606_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_8_fu_617_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_10_fu_624_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_12_fu_628_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1146_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1157_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_9_fu_666_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_12_fu_673_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_7_fu_603_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_26_fu_677_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_18_fu_683_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_34_fu_689_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_fu_706_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_21_fu_709_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_4_fu_715_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_24_fu_719_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_731_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln700_fu_739_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_749_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln700_fu_743_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln700_1_fu_757_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln700_1_fu_761_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_771_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln700_5_fu_767_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln728_fu_778_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_6_fu_794_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln703_fu_805_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_11_fu_808_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_8_fu_818_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_2_fu_814_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_fu_818_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_8_fu_818_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_828_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_6_fu_824_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_7_fu_836_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_25_fu_840_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lhs_V_4_fu_850_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_4_fu_857_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_8_fu_846_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_28_fu_861_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_7_fu_873_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln703_7_fu_873_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_20_fu_889_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_fu_886_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_20_fu_889_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_20_fu_889_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_895_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln700_6_fu_883_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_fu_903_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_23_fu_907_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1253_fu_923_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_24_fu_935_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_1_fu_932_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_24_fu_935_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_24_fu_935_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_23_fu_926_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_945_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_12_fu_970_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_5_fu_967_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_12_fu_970_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_13_fu_979_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_6_fu_976_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_13_fu_979_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_12_fu_970_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_13_fu_979_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_1_fu_999_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1192_1_fu_999_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_10_fu_1011_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_3_fu_1008_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_10_fu_1011_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_10_fu_1011_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_11_fu_1024_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_4_fu_1021_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_11_fu_1024_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_15_fu_1033_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_8_fu_1030_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_15_fu_1033_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_15_fu_1033_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_17_fu_1049_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_9_fu_1046_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_17_fu_1049_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1192_2_fu_1058_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1192_6_fu_1066_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_6_fu_1066_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_31_fu_1071_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln1192_9_fu_1090_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_9_fu_1090_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_35_fu_1095_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1206_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1128_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1128_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1137_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_5_fu_583_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1137_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1137_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1146_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1157_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1157_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1157_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1192_5_fu_1194_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1206_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to8 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component cos_lut_ap_fixed_9_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component sin_lut_ap_fixed_9_6_5_3_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_V : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (4 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component myproject_mac_muladd_7ns_9s_12ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mac_mulsub_11s_11s_12ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_ama_addmuladd_13s_11s_9s_15ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        din3 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_mac_muladd_6ns_9s_5ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mac_mul_sub_5s_10s_8s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_am_addmul_10s_9s_14s_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mul_mul_10s_16s_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component myproject_mul_mul_10s_12s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_10s_26s_33_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;


    component myproject_mul_mul_10s_22s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mac_muladd_5s_27s_22s_27_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (26 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;



begin
    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_input_V,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_ap_ce);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_input_V,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_ap_ce);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_input_V,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_ap_ce);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_input_V,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_ap_ce);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_6_reg_1263,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_ce);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_2_reg_1230,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230_ap_ce);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_input_V,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_ap_ce);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_6_reg_1324,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240_ap_ce);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245 : component cos_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_9_reg_1329,
        ap_return => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245_ap_return,
        ap_ce => grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_260 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_2_reg_1230,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_260_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_260_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => p_Val2_9_reg_1214,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_input_V,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_8_reg_1279,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290_ap_ce);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295 : component sin_lut_ap_fixed_9_6_5_3_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        input_V => trunc_ln708_4_reg_1319,
        ap_return => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295_ap_return,
        ap_ce => grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295_ap_ce);

    myproject_mac_muladd_7ns_9s_12ns_12_1_1_U15 : component myproject_mac_muladd_7ns_9s_12ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1128_p0,
        din1 => p_Val2_9_fu_300_p4,
        din2 => grp_fu_1128_p2,
        dout => grp_fu_1128_p3);

    myproject_mac_mulsub_11s_11s_12ns_12_1_1_U16 : component myproject_mac_mulsub_11s_11s_12ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1137_p0,
        din1 => grp_fu_1137_p1,
        din2 => grp_fu_1137_p2,
        dout => grp_fu_1137_p3);

    myproject_ama_addmuladd_13s_11s_9s_15ns_15_1_1_U17 : component myproject_ama_addmuladd_13s_11s_9s_15ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 11,
        din2_WIDTH => 9,
        din3_WIDTH => 15,
        dout_WIDTH => 15)
    port map (
        din0 => shl_ln1118_7_fu_606_p3,
        din1 => add_ln1192_12_fu_628_p2,
        din2 => p_Val2_9_reg_1214,
        din3 => grp_fu_1146_p3,
        dout => grp_fu_1146_p4);

    myproject_mac_muladd_6ns_9s_5ns_12_1_1_U18 : component myproject_mac_muladd_6ns_9s_5ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 9,
        din2_WIDTH => 5,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1157_p0,
        din1 => grp_fu_1157_p1,
        din2 => grp_fu_1157_p2,
        dout => grp_fu_1157_p3);

    myproject_mac_mul_sub_5s_10s_8s_14_1_1_U19 : component myproject_mac_mul_sub_5s_10s_8s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 10,
        din2_WIDTH => 8,
        dout_WIDTH => 14)
    port map (
        din0 => p_3_reg_1344,
        din1 => ret_V_reg_1339,
        din2 => tmp_6_fu_794_p3,
        dout => grp_fu_1166_p3);

    myproject_am_addmul_10s_9s_14s_25_1_1_U20 : component myproject_am_addmul_10s_9s_14s_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 9,
        din2_WIDTH => 14,
        dout_WIDTH => 25)
    port map (
        din0 => r_V_24_fu_935_p2,
        din1 => tmp_fu_945_p3,
        din2 => ret_V_5_reg_1374,
        dout => grp_fu_1174_p3);

    myproject_mul_mul_10s_16s_27_1_1_U21 : component myproject_mul_mul_10s_16s_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 16,
        dout_WIDTH => 27)
    port map (
        din0 => r_V_24_fu_935_p2,
        din1 => add_ln1192_reg_1404,
        dout => mul_ln1192_4_fu_1182_p2);

    myproject_mul_mul_10s_12s_22_1_1_U22 : component myproject_mul_mul_10s_12s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_13_fu_979_p2,
        din1 => r_V_12_fu_970_p2,
        dout => r_V_14_fu_1188_p2);

    myproject_mul_mul_10s_26s_33_1_1_U23 : component myproject_mul_mul_10s_26s_33_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 26,
        dout_WIDTH => 33)
    port map (
        din0 => r_V_10_fu_1011_p2,
        din1 => mul_ln1192_5_fu_1194_p1,
        dout => mul_ln1192_5_fu_1194_p2);

    myproject_mul_mul_10s_22s_30_1_1_U24 : component myproject_mul_mul_10s_22s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 22,
        dout_WIDTH => 30)
    port map (
        din0 => r_V_15_fu_1033_p2,
        din1 => r_V_14_reg_1449,
        dout => mul_ln1192_8_fu_1200_p2);

    myproject_mac_muladd_5s_27s_22s_27_1_1_U25 : component myproject_mac_muladd_5s_27s_22s_27_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 27,
        din2_WIDTH => 22,
        dout_WIDTH => 27)
    port map (
        din0 => p_9_reg_1399_pp0_iter8_reg,
        din1 => mul_ln1192_2_reg_1484,
        din2 => grp_fu_1206_p2,
        dout => grp_fu_1206_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv144_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_reg_1404 <= add_ln1192_fu_867_p2;
                    add_ln700_reg_1364(13 downto 3) <= add_ln700_fu_782_p2(13 downto 3);
                mul_ln1192_1_reg_1459 <= mul_ln1192_1_fu_999_p2;
                mul_ln1192_2_reg_1484 <= mul_ln1192_2_fu_1058_p2;
                mul_ln1192_4_reg_1439 <= mul_ln1192_4_fu_1182_p2;
                mul_ln1192_5_reg_1464 <= mul_ln1192_5_fu_1194_p2;
                mul_ln1192_8_reg_1474 <= mul_ln1192_8_fu_1200_p2;
                p_10_reg_1419 <= grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_ap_return;
                p_10_reg_1419_pp0_iter6_reg <= p_10_reg_1419;
                p_1_reg_1369 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_ap_return;
                p_2_reg_1359 <= grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_ap_return;
                p_2_reg_1359_pp0_iter5_reg <= p_2_reg_1359;
                p_2_reg_1359_pp0_iter6_reg <= p_2_reg_1359_pp0_iter5_reg;
                p_3_reg_1344 <= grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_ap_return;
                p_4_reg_1444 <= grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240_ap_return;
                p_5_reg_1414 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290_ap_return;
                p_6_reg_1454 <= grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245_ap_return;
                p_7_reg_1389 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280_ap_return;
                p_7_reg_1389_pp0_iter6_reg <= p_7_reg_1389;
                p_8_reg_1394 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_ap_return;
                p_8_reg_1394_pp0_iter6_reg <= p_8_reg_1394;
                p_8_reg_1394_pp0_iter7_reg <= p_8_reg_1394_pp0_iter6_reg;
                p_9_reg_1399 <= grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230_ap_return;
                p_9_reg_1399_pp0_iter6_reg <= p_9_reg_1399;
                p_9_reg_1399_pp0_iter7_reg <= p_9_reg_1399_pp0_iter6_reg;
                p_9_reg_1399_pp0_iter8_reg <= p_9_reg_1399_pp0_iter7_reg;
                p_Val2_3_reg_1384 <= grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_return;
                p_Val2_4_reg_1349 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_ap_return;
                p_Val2_5_reg_1379 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_ap_return;
                p_Val2_7_reg_1434 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295_ap_return;
                p_Val2_7_reg_1434_pp0_iter7_reg <= p_Val2_7_reg_1434;
                p_Val2_7_reg_1434_pp0_iter8_reg <= p_Val2_7_reg_1434_pp0_iter7_reg;
                p_Val2_8_reg_1354 <= grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_ap_return;
                p_Val2_s_reg_1240_pp0_iter2_reg <= p_Val2_s_reg_1240_pp0_iter1_reg;
                p_Val2_s_reg_1240_pp0_iter3_reg <= p_Val2_s_reg_1240_pp0_iter2_reg;
                r_V_11_reg_1469 <= r_V_11_fu_1024_p2;
                r_V_14_reg_1449 <= r_V_14_fu_1188_p2;
                r_V_17_reg_1479 <= r_V_17_fu_1049_p2;
                r_V_18_reg_1294_pp0_iter2_reg <= r_V_18_reg_1294;
                r_V_18_reg_1294_pp0_iter3_reg <= r_V_18_reg_1294_pp0_iter2_reg;
                r_V_18_reg_1294_pp0_iter4_reg <= r_V_18_reg_1294_pp0_iter3_reg;
                ret_V_16_reg_1409 <= ret_V_16_fu_877_p2;
                ret_V_21_reg_1284_pp0_iter2_reg <= ret_V_21_reg_1284;
                ret_V_21_reg_1284_pp0_iter3_reg <= ret_V_21_reg_1284_pp0_iter2_reg;
                ret_V_21_reg_1284_pp0_iter4_reg <= ret_V_21_reg_1284_pp0_iter3_reg;
                ret_V_reg_1339 <= ret_V_fu_725_p2;
                trunc_ln708_10_reg_1494 <= ret_V_35_fu_1095_p2(29 downto 21);
                trunc_ln708_1_reg_1424 <= ret_V_23_fu_907_p2(14 downto 6);
                trunc_ln708_1_reg_1424_pp0_iter7_reg <= trunc_ln708_1_reg_1424;
                trunc_ln708_1_reg_1424_pp0_iter8_reg <= trunc_ln708_1_reg_1424_pp0_iter7_reg;
                trunc_ln708_7_reg_1489 <= ret_V_31_fu_1071_p2(32 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                mul_ln1192_reg_1429 <= grp_fu_1174_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_1_reg_1224 <= x_V_in_sig(44 downto 36);
                p_Val2_2_reg_1230 <= x_V_in_sig(26 downto 18);
                p_Val2_6_reg_1263 <= x_V_in_sig(35 downto 27);
                p_Val2_9_reg_1214 <= x_V_in_sig(134 downto 126);
                p_Val2_s_reg_1240 <= x_V_in_sig(143 downto 135);
                p_Val2_s_reg_1240_pp0_iter1_reg <= p_Val2_s_reg_1240;
                r_V_18_reg_1294 <= r_V_18_fu_481_p2;
                ret_V_21_reg_1284 <= ret_V_21_fu_450_p2;
                trunc_ln708_4_reg_1319 <= grp_fu_1137_p3(11 downto 3);
                trunc_ln708_6_reg_1324 <= grp_fu_1146_p4(14 downto 6);
                trunc_ln708_8_reg_1279 <= grp_fu_1128_p3(11 downto 3);
                trunc_ln708_9_reg_1329 <= grp_fu_1157_p3(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ret_V_5_reg_1374 <= grp_fu_1166_p3;
            end if;
        end if;
    end process;
    add_ln700_reg_1364(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_10_fu_400_p2 <= std_logic_vector(signed(sext_ln1192_8_fu_396_p1) + signed(shl_ln1_fu_380_p3));
    add_ln1192_12_fu_628_p2 <= std_logic_vector(unsigned(ap_const_lv11_118) + unsigned(sext_ln1118_10_fu_624_p1));
    add_ln1192_18_fu_683_p2 <= std_logic_vector(unsigned(r_V_26_fu_677_p2) + unsigned(r_V_22_fu_541_p2));
    add_ln1192_1_fu_507_p2 <= std_logic_vector(unsigned(r_V_19_fu_501_p2) + unsigned(r_V_18_fu_481_p2));
    add_ln1192_fu_867_p2 <= std_logic_vector(unsigned(ap_const_lv16_340) + unsigned(ret_V_28_fu_861_p2));
    add_ln700_fu_782_p2 <= std_logic_vector(signed(sext_ln700_5_fu_767_p1) + signed(sext_ln728_fu_778_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp105_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp105 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp118_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp118 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp121_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp121 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp123_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp123 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp17_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp17 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp19_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp19 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp21_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp21 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp23_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp23 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp31_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp31 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp40_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp40 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp42_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp42 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp55_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp55 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp58_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp58 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp64_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp64 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp65_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp65 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp66_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp66 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp68_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp68 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp69_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp69 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp95_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp95 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call111_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call111 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call114_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call114 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call140_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call140 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call159_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call159 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call17_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call17 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call175_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call175 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call184_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call184 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call196_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call196 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call20_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call20 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call33_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call33 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call47_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call47 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call58_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call58 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call63_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call63 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call68_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call68 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call74_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call74 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call78_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call78 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call89_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call89 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call93_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call93 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call96_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call96 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call111 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call114 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call140 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call159 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call175 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call184 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call196 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call96 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to8)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp17)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_input_V <= x_V_in_sig(9 - 1 downto 0);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp19)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_210_input_V <= std_logic_vector(signed(p_Val2_9_fu_300_p4) - signed(p_Val2_1_fu_310_p4));

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp31)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_215_input_V <= ret_V_29_fu_406_p2(11 downto 3);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp42)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp42) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_220_input_V <= std_logic_vector(signed(p_Val2_1_reg_1224) + signed(p_Val2_s_reg_1240));

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp65)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp65) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp69)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp69) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_230_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp105)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp105) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_235_input_V <= ret_V_34_fu_689_p2(11 downto 3);

    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp121)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp121) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_240_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp123)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp123) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245_ap_ce <= ap_const_logic_1;
        else 
            grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_245_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1128_p0 <= ap_const_lv12_27(7 - 1 downto 0);
    grp_fu_1128_p2 <= (p_Val2_6_fu_359_p4 & ap_const_lv3_0);
    grp_fu_1137_p0 <= sext_ln1118_5_fu_583_p1(11 - 1 downto 0);
    grp_fu_1137_p1 <= sext_ln1118_5_fu_583_p1(11 - 1 downto 0);
    grp_fu_1137_p2 <= (p_Val2_2_reg_1230 & ap_const_lv3_0);
    grp_fu_1146_p3 <= (p_Val2_6_reg_1263 & ap_const_lv6_0);
    grp_fu_1157_p0 <= ap_const_lv12_16(6 - 1 downto 0);
    grp_fu_1157_p1 <= sext_ln1192_7_fu_603_p1(9 - 1 downto 0);
    grp_fu_1157_p2 <= ap_const_lv12_8(5 - 1 downto 0);
    grp_fu_1206_p2 <= ap_const_lv27_7E40000(22 - 1 downto 0);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp21)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp21) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_250_input_V <= std_logic_vector(signed(ap_const_lv9_1FC) + signed(p_Val2_2_fu_320_p4));

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp23)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_255_input_V <= x_V_in_sig(35 downto 27);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_260_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp40)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp40) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_260_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_260_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp55)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp55) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_input_V <= ret_V_22_fu_513_p2(11 downto 3);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp58)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp58) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_270_input_V <= std_logic_vector(unsigned(ap_const_lv9_2) + unsigned(sub_ln703_fu_530_p2));

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp64)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp64) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_275_input_V <= r_V_22_fu_541_p2(11 downto 3);

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp66)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp66) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_280_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp68)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp68) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_285_input_V <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(p_Val2_6_reg_1263));

    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp95)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp95) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_290_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp118) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295_ap_ce <= ap_const_logic_1;
        else 
            grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_295_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

        lhs_V_1_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_9_reg_1214),10));

        lhs_V_2_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_26_fu_567_p2),11));

    lhs_V_4_fu_850_p3 <= (r_V_18_reg_1294_pp0_iter4_reg & ap_const_lv3_0);
    lhs_V_fu_771_p3 <= (ret_V_21_reg_1284_pp0_iter4_reg & ap_const_lv3_0);
    mul_ln1192_1_fu_999_p0 <= p_7_reg_1389_pp0_iter6_reg;
    mul_ln1192_1_fu_999_p1 <= mul_ln1192_reg_1429;
    mul_ln1192_1_fu_999_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_1_fu_999_p0) * signed(mul_ln1192_1_fu_999_p1))), 27));
    mul_ln1192_2_fu_1058_p0 <= p_8_reg_1394_pp0_iter7_reg;
    mul_ln1192_2_fu_1058_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_2_fu_1058_p0) * signed(mul_ln1192_1_reg_1459))), 27));
    mul_ln1192_5_fu_1194_p1 <= mul_ln1192_4_reg_1439(26 - 1 downto 0);
    mul_ln1192_6_fu_1066_p0 <= r_V_11_reg_1469;
    mul_ln1192_6_fu_1066_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_6_fu_1066_p0) * signed(mul_ln1192_5_reg_1464))), 33));
    mul_ln1192_9_fu_1090_p0 <= r_V_17_reg_1479;
    mul_ln1192_9_fu_1090_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_9_fu_1090_p0) * signed(mul_ln1192_8_reg_1474))), 30));
    p_Val2_1_fu_310_p4 <= x_V_in_sig(44 downto 36);
    p_Val2_2_fu_320_p4 <= x_V_in_sig(26 downto 18);
    p_Val2_6_fu_359_p4 <= x_V_in_sig(35 downto 27);
    p_Val2_9_fu_300_p4 <= x_V_in_sig(134 downto 126);
    r_V_10_fu_1011_p0 <= sext_ln1116_3_fu_1008_p1(5 - 1 downto 0);
    r_V_10_fu_1011_p1 <= sext_ln1116_3_fu_1008_p1(5 - 1 downto 0);
    r_V_10_fu_1011_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_10_fu_1011_p0) * signed(r_V_10_fu_1011_p1))), 10));
    r_V_11_fu_1024_p0 <= sext_ln1116_4_fu_1021_p1(5 - 1 downto 0);
    r_V_11_fu_1024_p1 <= sext_ln1116_4_fu_1021_p1(5 - 1 downto 0);
    r_V_11_fu_1024_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_11_fu_1024_p0) * signed(r_V_11_fu_1024_p1))), 10));
    r_V_12_fu_970_p0 <= sext_ln1116_5_fu_967_p1(6 - 1 downto 0);
    r_V_12_fu_970_p1 <= sext_ln1116_5_fu_967_p1(6 - 1 downto 0);
    r_V_12_fu_970_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_12_fu_970_p0) * signed(r_V_12_fu_970_p1))), 12));
    r_V_13_fu_979_p0 <= sext_ln1116_6_fu_976_p1(5 - 1 downto 0);
    r_V_13_fu_979_p1 <= sext_ln1116_6_fu_976_p1(5 - 1 downto 0);
    r_V_13_fu_979_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_13_fu_979_p0) * signed(r_V_13_fu_979_p1))), 10));
    r_V_15_fu_1033_p0 <= sext_ln1116_8_fu_1030_p1(5 - 1 downto 0);
    r_V_15_fu_1033_p1 <= sext_ln1116_8_fu_1030_p1(5 - 1 downto 0);
    r_V_15_fu_1033_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_15_fu_1033_p0) * signed(r_V_15_fu_1033_p1))), 10));
    r_V_17_fu_1049_p0 <= sext_ln1116_9_fu_1046_p1(5 - 1 downto 0);
    r_V_17_fu_1049_p1 <= sext_ln1116_9_fu_1046_p1(5 - 1 downto 0);
    r_V_17_fu_1049_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_17_fu_1049_p0) * signed(r_V_17_fu_1049_p1))), 10));
    r_V_18_fu_481_p2 <= std_logic_vector(unsigned(sub_ln1118_fu_475_p2) - unsigned(sext_ln1118_fu_461_p1));
    r_V_19_fu_501_p2 <= std_logic_vector(signed(sext_ln1118_2_fu_487_p1) + signed(sext_ln1118_3_fu_497_p1));
    r_V_20_fu_889_p0 <= sext_ln1116_fu_886_p1(5 - 1 downto 0);
    r_V_20_fu_889_p1 <= sext_ln1116_fu_886_p1(5 - 1 downto 0);
    r_V_20_fu_889_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_20_fu_889_p0) * signed(r_V_20_fu_889_p1))), 10));
    r_V_21_fu_709_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(r_V_fu_706_p1));
    r_V_22_fu_541_p2 <= std_logic_vector(signed(sext_ln1118_1_fu_471_p1) - signed(sext_ln1118_fu_461_p1));
    r_V_23_fu_926_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(sext_ln1253_fu_923_p1));
    r_V_24_fu_935_p0 <= sext_ln1116_1_fu_932_p1(5 - 1 downto 0);
    r_V_24_fu_935_p1 <= sext_ln1116_1_fu_932_p1(5 - 1 downto 0);
    r_V_24_fu_935_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_24_fu_935_p0) * signed(r_V_24_fu_935_p1))), 10));
    r_V_25_fu_840_p2 <= std_logic_vector(signed(sext_ln1118_6_fu_824_p1) + signed(sext_ln1118_7_fu_836_p1));
    r_V_26_fu_677_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_673_p1) - signed(sext_ln1192_7_fu_603_p1));
    r_V_8_fu_818_p0 <= sext_ln1116_2_fu_814_p1(6 - 1 downto 0);
    r_V_8_fu_818_p1 <= sext_ln1116_2_fu_814_p1(6 - 1 downto 0);
    r_V_8_fu_818_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_fu_818_p0) * signed(r_V_8_fu_818_p1))), 12));
        r_V_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1240_pp0_iter3_reg),10));

    ret_V_11_fu_808_p2 <= std_logic_vector(unsigned(ap_const_lv6_3) + unsigned(sext_ln703_fu_805_p1));
    ret_V_16_fu_877_p2 <= std_logic_vector(unsigned(ap_const_lv6_3) + unsigned(sext_ln703_7_fu_873_p1));
    ret_V_21_fu_450_p2 <= std_logic_vector(signed(lhs_V_1_fu_444_p1) - signed(sext_ln703_1_fu_447_p1));
    ret_V_22_fu_513_p2 <= std_logic_vector(unsigned(ap_const_lv12_30) + unsigned(add_ln1192_1_fu_507_p2));
    ret_V_23_fu_907_p2 <= std_logic_vector(signed(sext_ln700_6_fu_883_p1) + signed(rhs_V_fu_903_p1));
    ret_V_24_fu_719_p2 <= std_logic_vector(unsigned(r_V_21_fu_709_p2) - unsigned(sext_ln703_4_fu_715_p1));
    ret_V_26_fu_567_p2 <= std_logic_vector(signed(lhs_V_1_fu_444_p1) - signed(rhs_V_1_fu_564_p1));
    ret_V_28_fu_861_p2 <= std_logic_vector(signed(sext_ln728_4_fu_857_p1) - signed(sext_ln1118_8_fu_846_p1));
    ret_V_29_fu_406_p2 <= std_logic_vector(unsigned(ap_const_lv12_30) + unsigned(add_ln1192_10_fu_400_p2));
    ret_V_31_fu_1071_p2 <= std_logic_vector(signed(ap_const_lv33_1F8000000) + signed(mul_ln1192_6_fu_1066_p2));
    ret_V_34_fu_689_p2 <= std_logic_vector(unsigned(ap_const_lv12_18) + unsigned(add_ln1192_18_fu_683_p2));
    ret_V_35_fu_1095_p2 <= std_logic_vector(signed(ap_const_lv30_3F000000) + signed(mul_ln1192_9_fu_1090_p2));
    ret_V_9_fu_577_p2 <= std_logic_vector(unsigned(ap_const_lv11_5) + unsigned(lhs_V_2_fu_573_p1));
    ret_V_fu_725_p2 <= std_logic_vector(unsigned(ap_const_lv10_19) + unsigned(ret_V_24_fu_719_p2));
        rhs_V_1_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_reg_1263),10));

        rhs_V_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_895_p3),15));

        sext_ln1116_1_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_reg_1384),10));

        sext_ln1116_2_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_11_fu_808_p2),12));

        sext_ln1116_3_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_2_reg_1359_pp0_iter6_reg),10));

        sext_ln1116_4_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_4_reg_1444),10));

        sext_ln1116_5_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_16_reg_1409),12));

        sext_ln1116_6_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_5_reg_1414),10));

        sext_ln1116_8_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_reg_1454),10));

        sext_ln1116_9_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_10_reg_1419_pp0_iter6_reg),10));

        sext_ln1116_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_reg_1369),10));

        sext_ln1118_10_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_617_p3),11));

        sext_ln1118_12_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_9_fu_666_p3),12));

        sext_ln1118_1_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_464_p3),12));

        sext_ln1118_2_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_reg_1230),12));

        sext_ln1118_3_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_490_p3),12));

        sext_ln1118_5_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_9_fu_577_p2),12));

        sext_ln1118_6_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_fu_818_p2),15));

        sext_ln1118_7_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_828_p3),15));

        sext_ln1118_8_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_25_fu_840_p2),16));

        sext_ln1118_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1240),12));

        sext_ln1192_7_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_reg_1263),12));

        sext_ln1192_8_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_388_p3),12));

        sext_ln1253_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_1379),6));

        sext_ln700_1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_749_p3),12));

        sext_ln700_5_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln700_1_fu_761_p2),14));

        sext_ln700_6_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_reg_1364),15));

        sext_ln700_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_731_p3),12));

        sext_ln703_1_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1224),10));

        sext_ln703_4_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_205_ap_return),10));

    sext_ln703_7_fu_873_p0 <= grp_cos_lut_ap_fixed_9_6_5_3_0_s_fu_225_ap_return;
        sext_ln703_7_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_7_fu_873_p0),6));

        sext_ln703_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1354),6));

        sext_ln728_4_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_4_fu_850_p3),16));

        sext_ln728_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_771_p3),14));

    shl_ln1118_1_fu_490_p3 <= (p_Val2_2_reg_1230 & ap_const_lv2_0);
    shl_ln1118_6_fu_388_p3 <= (p_Val2_6_fu_359_p4 & ap_const_lv1_0);
    shl_ln1118_7_fu_606_p3 <= (p_Val2_9_reg_1214 & ap_const_lv4_0);
    shl_ln1118_8_fu_617_p3 <= (p_Val2_9_reg_1214 & ap_const_lv1_0);
    shl_ln1118_9_fu_666_p3 <= (p_Val2_6_reg_1263 & ap_const_lv2_0);
    shl_ln1_fu_380_p3 <= (tmp_s_fu_370_p4 & ap_const_lv4_0);
    shl_ln_fu_464_p3 <= (p_Val2_s_reg_1240 & ap_const_lv2_0);
    sub_ln1118_fu_475_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_1_fu_471_p1));
    sub_ln700_1_fu_761_p2 <= std_logic_vector(unsigned(sub_ln700_fu_743_p2) - unsigned(sext_ln700_1_fu_757_p1));
    sub_ln700_fu_743_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln700_fu_739_p1));
    sub_ln703_fu_530_p2 <= std_logic_vector(unsigned(p_Val2_9_reg_1214) - unsigned(p_Val2_2_reg_1230));
    tmp_3_fu_731_p3 <= (grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_return & ap_const_lv6_0);
    tmp_4_fu_749_p3 <= (grp_sin_lut_ap_fixed_9_6_5_3_0_s_fu_265_ap_return & ap_const_lv4_0);
    tmp_5_fu_895_p3 <= (r_V_20_fu_889_p2 & ap_const_lv3_0);
    tmp_6_fu_794_p3 <= (p_Val2_4_reg_1349 & ap_const_lv3_0);
    tmp_9_fu_828_p3 <= (r_V_8_fu_818_p2 & ap_const_lv2_0);
    tmp_fu_945_p3 <= (r_V_23_fu_926_p2 & ap_const_lv3_0);
    tmp_s_fu_370_p4 <= x_V_in_sig(34 downto 27);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln708_1_reg_1424_pp0_iter8_reg;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= grp_fu_1206_p3(26 downto 18);

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_2_V <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_reg_1434_pp0_iter8_reg),9));


    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_7_reg_1489;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= trunc_ln708_10_reg_1494;

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
