// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sin_lut_ap_fixed_9_6_5_3_0_s (
        ap_clk,
        ap_rst,
        input_V,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [8:0] input_V;
output  [4:0] ap_return;
input   ap_ce;

reg[4:0] ap_return;

reg   [2:0] p_Val2_14_reg_621;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] p_Val2_14_reg_621_pp0_iter1_reg;
reg   [2:0] p_Val2_14_reg_621_pp0_iter2_reg;
reg   [2:0] p_Result_s_fu_141_p4;
reg   [2:0] p_Result_s_reg_636;
wire   [10:0] trunc_ln893_fu_165_p1;
reg   [10:0] trunc_ln893_reg_641;
wire   [31:0] sub_ln894_fu_169_p2;
reg   [31:0] sub_ln894_reg_646;
wire   [31:0] or_ln_fu_277_p3;
reg   [31:0] or_ln_reg_652;
wire   [0:0] icmp_ln908_fu_285_p2;
reg   [0:0] icmp_ln908_reg_657;
wire   [63:0] bitcast_ln729_fu_404_p1;
wire   [0:0] or_ln924_fu_434_p2;
reg   [0:0] or_ln924_reg_670;
wire    ap_block_pp0_stage0;
wire  signed [23:0] r_V_fu_613_p2;
wire   [31:0] p_Result_12_fu_150_p3;
reg   [31:0] l_fu_157_p3;
wire   [31:0] lsb_index_fu_179_p2;
wire   [30:0] tmp_6_fu_185_p4;
wire   [1:0] trunc_ln897_fu_201_p1;
wire   [1:0] sub_ln897_fu_205_p2;
wire   [2:0] zext_ln897_fu_211_p1;
wire   [2:0] lshr_ln897_fu_215_p2;
wire   [2:0] p_Result_4_fu_221_p2;
wire   [0:0] icmp_ln897_fu_195_p2;
wire   [0:0] icmp_ln897_1_fu_226_p2;
wire   [0:0] tmp_7_fu_238_p3;
wire   [2:0] trunc_ln894_fu_175_p1;
wire   [2:0] add_ln899_fu_252_p2;
wire   [0:0] p_Result_3_fu_258_p3;
wire   [0:0] xor_ln899_fu_246_p2;
wire   [0:0] and_ln899_fu_265_p2;
wire   [0:0] a_fu_232_p2;
wire   [0:0] or_ln899_fu_271_p2;
wire   [31:0] zext_ln907_1_fu_294_p1;
wire   [31:0] add_ln908_fu_297_p2;
wire   [31:0] lshr_ln908_fu_302_p2;
wire   [31:0] sub_ln908_fu_312_p2;
wire   [63:0] m_fu_291_p1;
wire   [63:0] zext_ln908_1_fu_317_p1;
wire   [63:0] zext_ln908_fu_308_p1;
wire   [63:0] shl_ln908_fu_321_p2;
wire   [63:0] zext_ln911_fu_334_p1;
wire   [63:0] m_1_fu_327_p3;
wire   [63:0] m_2_fu_337_p2;
wire   [62:0] m_s_fu_343_p4;
wire   [10:0] sub_ln915_fu_365_p2;
wire   [0:0] tmp_8_fu_357_p3;
wire   [10:0] add_ln915_fu_370_p2;
wire   [10:0] select_ln915_fu_376_p3;
wire   [63:0] m_11_fu_353_p1;
wire   [11:0] tmp_1_fu_384_p3;
wire   [63:0] p_Result_13_fu_392_p5;
wire   [51:0] trunc_ln3_fu_412_p4;
wire   [0:0] icmp_ln924_1_fu_428_p2;
wire   [0:0] icmp_ln924_fu_422_p2;
wire   [2:0] add_ln142_fu_440_p2;
wire   [1:0] tmp_5_fu_445_p4;
wire   [0:0] icmp_ln879_fu_461_p2;
wire   [0:0] icmp_ln879_1_fu_466_p2;
wire   [0:0] icmp_ln141_fu_477_p2;
wire   [0:0] icmp_ln141_1_fu_482_p2;
wire   [0:0] icmp_ln141_3_fu_498_p2;
wire   [0:0] icmp_ln142_fu_455_p2;
wire   [0:0] and_ln142_fu_503_p2;
wire   [0:0] icmp_ln141_2_fu_493_p2;
wire   [0:0] grp_fu_108_p2;
wire   [0:0] grp_fu_113_p2;
wire   [0:0] or_ln151_1_fu_521_p2;
wire   [0:0] and_ln151_1_fu_527_p2;
wire   [0:0] xor_ln885_fu_515_p2;
wire   [0:0] grp_fu_118_p2;
wire   [0:0] grp_fu_123_p2;
wire   [0:0] or_ln152_fu_538_p2;
wire   [0:0] and_ln152_1_fu_544_p2;
wire   [0:0] and_ln151_fu_532_p2;
wire   [0:0] and_ln152_fu_549_p2;
wire   [0:0] and_ln142_1_fu_509_p2;
wire   [0:0] or_ln141_fu_487_p2;
wire   [0:0] or_ln143_fu_471_p2;
wire   [0:0] or_ln151_fu_563_p2;
wire   [4:0] select_ln151_fu_555_p3;
wire   [4:0] select_ln151_1_fu_569_p3;
wire   [0:0] or_ln151_2_fu_577_p2;
wire   [0:0] or_ln151_3_fu_599_p2;
wire   [4:0] select_ln151_3_fu_591_p3;
wire   [4:0] select_ln151_2_fu_583_p3;
wire   [14:0] r_V_fu_613_p0;
reg    grp_fu_108_ce;
wire    ap_block_pp0_stage0_00001;
reg    grp_fu_113_ce;
reg    grp_fu_118_ce;
reg    grp_fu_123_ce;
wire   [4:0] select_ln151_4_fu_605_p3;
reg    ap_ce_reg;
reg  signed [8:0] input_V_int_reg;
reg   [4:0] ap_return_int_reg;

myproject_dcmp_64ns_64ns_1_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
myproject_dcmp_64ns_64ns_1_2_0_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln729_fu_404_p1),
    .din1(64'd4593671619917905920),
    .ce(grp_fu_108_ce),
    .opcode(5'd1),
    .dout(grp_fu_108_p2)
);

myproject_dcmp_64ns_64ns_1_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
myproject_dcmp_64ns_64ns_1_2_0_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln729_fu_404_p1),
    .din1(64'd4600427019358961664),
    .ce(grp_fu_113_ce),
    .opcode(5'd1),
    .dout(grp_fu_113_p2)
);

myproject_dcmp_64ns_64ns_1_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
myproject_dcmp_64ns_64ns_1_2_0_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln729_fu_404_p1),
    .din1(64'd4603804719079489536),
    .ce(grp_fu_118_ce),
    .opcode(5'd1),
    .dout(grp_fu_118_p2)
);

myproject_dcmp_64ns_64ns_1_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
myproject_dcmp_64ns_64ns_1_2_0_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln729_fu_404_p1),
    .din1(64'd4606056518893174784),
    .ce(grp_fu_123_ce),
    .opcode(5'd1),
    .dout(grp_fu_123_p2)
);

myproject_mul_mul_15ns_9s_24_1_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
myproject_mul_mul_15ns_9s_24_1_0_U5(
    .din0(r_V_fu_613_p0),
    .din1(input_V_int_reg),
    .dout(r_V_fu_613_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln151_4_fu_605_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln908_reg_657 <= icmp_ln908_fu_285_p2;
        or_ln924_reg_670 <= or_ln924_fu_434_p2;
        or_ln_reg_652[0] <= or_ln_fu_277_p3[0];
        p_Result_s_reg_636 <= p_Result_s_fu_141_p4;
        p_Val2_14_reg_621 <= {{r_V_fu_613_p2[18:16]}};
        p_Val2_14_reg_621_pp0_iter1_reg <= p_Val2_14_reg_621;
        p_Val2_14_reg_621_pp0_iter2_reg <= p_Val2_14_reg_621_pp0_iter1_reg;
        sub_ln894_reg_646 <= sub_ln894_fu_169_p2;
        trunc_ln893_reg_641 <= trunc_ln893_fu_165_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        input_V_int_reg <= input_V;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln151_4_fu_605_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_108_ce = 1'b1;
    end else begin
        grp_fu_108_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_113_ce = 1'b1;
    end else begin
        grp_fu_113_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_118_ce = 1'b1;
    end else begin
        grp_fu_118_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_123_ce = 1'b1;
    end else begin
        grp_fu_123_ce = 1'b0;
    end
end

assign a_fu_232_p2 = (icmp_ln897_fu_195_p2 & icmp_ln897_1_fu_226_p2);

assign add_ln142_fu_440_p2 = ($signed(3'd7) + $signed(p_Val2_14_reg_621_pp0_iter2_reg));

assign add_ln899_fu_252_p2 = (3'd3 + trunc_ln894_fu_175_p1);

assign add_ln908_fu_297_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_646));

assign add_ln915_fu_370_p2 = (11'd1 + sub_ln915_fu_365_p2);

assign and_ln142_1_fu_509_p2 = (icmp_ln141_2_fu_493_p2 & and_ln142_fu_503_p2);

assign and_ln142_fu_503_p2 = (icmp_ln142_fu_455_p2 & icmp_ln141_3_fu_498_p2);

assign and_ln151_1_fu_527_p2 = (or_ln924_reg_670 & or_ln151_1_fu_521_p2);

assign and_ln151_fu_532_p2 = (xor_ln885_fu_515_p2 & and_ln151_1_fu_527_p2);

assign and_ln152_1_fu_544_p2 = (or_ln924_reg_670 & or_ln152_fu_538_p2);

assign and_ln152_fu_549_p2 = (xor_ln885_fu_515_p2 & and_ln152_1_fu_544_p2);

assign and_ln899_fu_265_p2 = (xor_ln899_fu_246_p2 & p_Result_3_fu_258_p3);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign bitcast_ln729_fu_404_p1 = p_Result_13_fu_392_p5;

assign icmp_ln141_1_fu_482_p2 = ((p_Val2_14_reg_621_pp0_iter2_reg == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln141_2_fu_493_p2 = ((p_Val2_14_reg_621_pp0_iter2_reg != 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln141_3_fu_498_p2 = ((p_Val2_14_reg_621_pp0_iter2_reg != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_477_p2 = ((p_Val2_14_reg_621_pp0_iter2_reg == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln142_fu_455_p2 = ((tmp_5_fu_445_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_466_p2 = ((p_Val2_14_reg_621_pp0_iter2_reg == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_461_p2 = ((p_Val2_14_reg_621_pp0_iter2_reg == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_226_p2 = ((p_Result_4_fu_221_p2 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_195_p2 = (($signed(tmp_6_fu_185_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_285_p2 = (($signed(lsb_index_fu_179_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_1_fu_428_p2 = ((trunc_ln3_fu_412_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_422_p2 = ((select_ln915_fu_376_p3 != 11'd2047) ? 1'b1 : 1'b0);


always @ (p_Result_12_fu_150_p3) begin
    if (p_Result_12_fu_150_p3[0] == 1'b1) begin
        l_fu_157_p3 = 32'd0;
    end else if (p_Result_12_fu_150_p3[1] == 1'b1) begin
        l_fu_157_p3 = 32'd1;
    end else if (p_Result_12_fu_150_p3[2] == 1'b1) begin
        l_fu_157_p3 = 32'd2;
    end else if (p_Result_12_fu_150_p3[3] == 1'b1) begin
        l_fu_157_p3 = 32'd3;
    end else if (p_Result_12_fu_150_p3[4] == 1'b1) begin
        l_fu_157_p3 = 32'd4;
    end else if (p_Result_12_fu_150_p3[5] == 1'b1) begin
        l_fu_157_p3 = 32'd5;
    end else if (p_Result_12_fu_150_p3[6] == 1'b1) begin
        l_fu_157_p3 = 32'd6;
    end else if (p_Result_12_fu_150_p3[7] == 1'b1) begin
        l_fu_157_p3 = 32'd7;
    end else if (p_Result_12_fu_150_p3[8] == 1'b1) begin
        l_fu_157_p3 = 32'd8;
    end else if (p_Result_12_fu_150_p3[9] == 1'b1) begin
        l_fu_157_p3 = 32'd9;
    end else if (p_Result_12_fu_150_p3[10] == 1'b1) begin
        l_fu_157_p3 = 32'd10;
    end else if (p_Result_12_fu_150_p3[11] == 1'b1) begin
        l_fu_157_p3 = 32'd11;
    end else if (p_Result_12_fu_150_p3[12] == 1'b1) begin
        l_fu_157_p3 = 32'd12;
    end else if (p_Result_12_fu_150_p3[13] == 1'b1) begin
        l_fu_157_p3 = 32'd13;
    end else if (p_Result_12_fu_150_p3[14] == 1'b1) begin
        l_fu_157_p3 = 32'd14;
    end else if (p_Result_12_fu_150_p3[15] == 1'b1) begin
        l_fu_157_p3 = 32'd15;
    end else if (p_Result_12_fu_150_p3[16] == 1'b1) begin
        l_fu_157_p3 = 32'd16;
    end else if (p_Result_12_fu_150_p3[17] == 1'b1) begin
        l_fu_157_p3 = 32'd17;
    end else if (p_Result_12_fu_150_p3[18] == 1'b1) begin
        l_fu_157_p3 = 32'd18;
    end else if (p_Result_12_fu_150_p3[19] == 1'b1) begin
        l_fu_157_p3 = 32'd19;
    end else if (p_Result_12_fu_150_p3[20] == 1'b1) begin
        l_fu_157_p3 = 32'd20;
    end else if (p_Result_12_fu_150_p3[21] == 1'b1) begin
        l_fu_157_p3 = 32'd21;
    end else if (p_Result_12_fu_150_p3[22] == 1'b1) begin
        l_fu_157_p3 = 32'd22;
    end else if (p_Result_12_fu_150_p3[23] == 1'b1) begin
        l_fu_157_p3 = 32'd23;
    end else if (p_Result_12_fu_150_p3[24] == 1'b1) begin
        l_fu_157_p3 = 32'd24;
    end else if (p_Result_12_fu_150_p3[25] == 1'b1) begin
        l_fu_157_p3 = 32'd25;
    end else if (p_Result_12_fu_150_p3[26] == 1'b1) begin
        l_fu_157_p3 = 32'd26;
    end else if (p_Result_12_fu_150_p3[27] == 1'b1) begin
        l_fu_157_p3 = 32'd27;
    end else if (p_Result_12_fu_150_p3[28] == 1'b1) begin
        l_fu_157_p3 = 32'd28;
    end else if (p_Result_12_fu_150_p3[29] == 1'b1) begin
        l_fu_157_p3 = 32'd29;
    end else if (p_Result_12_fu_150_p3[30] == 1'b1) begin
        l_fu_157_p3 = 32'd30;
    end else if (p_Result_12_fu_150_p3[31] == 1'b1) begin
        l_fu_157_p3 = 32'd31;
    end else begin
        l_fu_157_p3 = 32'd32;
    end
end

assign lsb_index_fu_179_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_169_p2));

assign lshr_ln897_fu_215_p2 = 3'd7 >> zext_ln897_fu_211_p1;

assign lshr_ln908_fu_302_p2 = zext_ln907_1_fu_294_p1 >> add_ln908_fu_297_p2;

assign m_11_fu_353_p1 = m_s_fu_343_p4;

assign m_1_fu_327_p3 = ((icmp_ln908_reg_657[0:0] === 1'b1) ? zext_ln908_fu_308_p1 : shl_ln908_fu_321_p2);

assign m_2_fu_337_p2 = (zext_ln911_fu_334_p1 + m_1_fu_327_p3);

assign m_fu_291_p1 = p_Val2_14_reg_621_pp0_iter1_reg;

assign m_s_fu_343_p4 = {{m_2_fu_337_p2[63:1]}};

assign or_ln141_fu_487_p2 = (icmp_ln141_fu_477_p2 | icmp_ln141_1_fu_482_p2);

assign or_ln143_fu_471_p2 = (icmp_ln879_fu_461_p2 | icmp_ln879_1_fu_466_p2);

assign or_ln151_1_fu_521_p2 = (grp_fu_113_p2 | grp_fu_108_p2);

assign or_ln151_2_fu_577_p2 = (or_ln141_fu_487_p2 | and_ln142_1_fu_509_p2);

assign or_ln151_3_fu_599_p2 = (or_ln151_fu_563_p2 | or_ln151_2_fu_577_p2);

assign or_ln151_fu_563_p2 = (and_ln152_fu_549_p2 | and_ln151_fu_532_p2);

assign or_ln152_fu_538_p2 = (grp_fu_123_p2 | grp_fu_118_p2);

assign or_ln899_fu_271_p2 = (and_ln899_fu_265_p2 | a_fu_232_p2);

assign or_ln924_fu_434_p2 = (icmp_ln924_fu_422_p2 | icmp_ln924_1_fu_428_p2);

assign or_ln_fu_277_p3 = {{31'd0}, {or_ln899_fu_271_p2}};

assign p_Result_12_fu_150_p3 = {{29'd536870911}, {p_Result_s_reg_636}};

assign p_Result_13_fu_392_p5 = {{tmp_1_fu_384_p3}, {m_11_fu_353_p1[51:0]}};

assign p_Result_3_fu_258_p3 = p_Val2_14_reg_621[add_ln899_fu_252_p2];

assign p_Result_4_fu_221_p2 = (p_Val2_14_reg_621 & lshr_ln897_fu_215_p2);

integer ap_tvar_int_0;

always @ (r_V_fu_613_p2) begin
    for (ap_tvar_int_0 = 3 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 18 - 16) begin
            p_Result_s_fu_141_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_141_p4[ap_tvar_int_0] = r_V_fu_613_p2[18 - ap_tvar_int_0];
        end
    end
end

assign r_V_fu_613_p0 = 24'd10430;

assign select_ln151_1_fu_569_p3 = ((and_ln142_1_fu_509_p2[0:0] === 1'b1) ? 5'd8 : 5'd0);

assign select_ln151_2_fu_583_p3 = ((or_ln143_fu_471_p2[0:0] === 1'b1) ? 5'd0 : 5'd24);

assign select_ln151_3_fu_591_p3 = ((or_ln151_fu_563_p2[0:0] === 1'b1) ? select_ln151_fu_555_p3 : select_ln151_1_fu_569_p3);

assign select_ln151_4_fu_605_p3 = ((or_ln151_3_fu_599_p2[0:0] === 1'b1) ? select_ln151_3_fu_591_p3 : select_ln151_2_fu_583_p3);

assign select_ln151_fu_555_p3 = ((and_ln151_fu_532_p2[0:0] === 1'b1) ? 5'd5 : 5'd26);

assign select_ln915_fu_376_p3 = ((tmp_8_fu_357_p3[0:0] === 1'b1) ? add_ln915_fu_370_p2 : sub_ln915_fu_365_p2);

assign shl_ln908_fu_321_p2 = m_fu_291_p1 << zext_ln908_1_fu_317_p1;

assign sub_ln894_fu_169_p2 = (32'd3 - l_fu_157_p3);

assign sub_ln897_fu_205_p2 = (2'd1 - trunc_ln897_fu_201_p1);

assign sub_ln908_fu_312_p2 = (32'd54 - sub_ln894_reg_646);

assign sub_ln915_fu_365_p2 = (11'd1022 - trunc_ln893_reg_641);

assign tmp_1_fu_384_p3 = {{1'd0}, {select_ln915_fu_376_p3}};

assign tmp_5_fu_445_p4 = {{add_ln142_fu_440_p2[2:1]}};

assign tmp_6_fu_185_p4 = {{lsb_index_fu_179_p2[31:1]}};

assign tmp_7_fu_238_p3 = lsb_index_fu_179_p2[32'd31];

assign tmp_8_fu_357_p3 = m_2_fu_337_p2[32'd54];

assign trunc_ln3_fu_412_p4 = {{m_2_fu_337_p2[52:1]}};

assign trunc_ln893_fu_165_p1 = l_fu_157_p3[10:0];

assign trunc_ln894_fu_175_p1 = sub_ln894_fu_169_p2[2:0];

assign trunc_ln897_fu_201_p1 = sub_ln894_fu_169_p2[1:0];

assign xor_ln885_fu_515_p2 = (icmp_ln141_1_fu_482_p2 ^ 1'd1);

assign xor_ln899_fu_246_p2 = (tmp_7_fu_238_p3 ^ 1'd1);

assign zext_ln897_fu_211_p1 = sub_ln897_fu_205_p2;

assign zext_ln907_1_fu_294_p1 = p_Val2_14_reg_621_pp0_iter1_reg;

assign zext_ln908_1_fu_317_p1 = sub_ln908_fu_312_p2;

assign zext_ln908_fu_308_p1 = lshr_ln908_fu_302_p2;

assign zext_ln911_fu_334_p1 = or_ln_reg_652;

always @ (posedge ap_clk) begin
    or_ln_reg_652[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //sin_lut_ap_fixed_9_6_5_3_0_s
