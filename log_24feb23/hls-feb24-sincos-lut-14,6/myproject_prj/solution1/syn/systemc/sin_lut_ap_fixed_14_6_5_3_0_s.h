// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sin_lut_ap_fixed_14_6_5_3_0_s_HH_
#define _sin_lut_ap_fixed_14_6_5_3_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_dcmp_64ns_64ns_1_2_1.h"
#include "myproject_mul_mul_15ns_14s_29_1_1.h"
#include "sin_lut_ap_fixed_14_6_5_3_0_s_sincos1_1.h"
#include "sin_lut_ap_fixed_14_6_5_3_0_s_sincos1_0.h"

namespace ap_rtl {

struct sin_lut_ap_fixed_14_6_5_3_0_s : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<14> > input_V;
    sc_out< sc_lv<10> > ap_return;
    sc_signal< sc_lv<64> > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const2;
    sc_signal< sc_lv<64> > ap_var_for_const3;
    sc_signal< sc_lv<64> > ap_var_for_const4;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    sin_lut_ap_fixed_14_6_5_3_0_s(sc_module_name name);
    SC_HAS_PROCESS(sin_lut_ap_fixed_14_6_5_3_0_s);

    ~sin_lut_ap_fixed_14_6_5_3_0_s();

    sc_trace_file* mVcdFile;

    sin_lut_ap_fixed_14_6_5_3_0_s_sincos1_1* sincos1_1_U;
    sin_lut_ap_fixed_14_6_5_3_0_s_sincos1_0* sincos1_0_U;
    myproject_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* myproject_dcmp_64ns_64ns_1_2_1_U1;
    myproject_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* myproject_dcmp_64ns_64ns_1_2_1_U2;
    myproject_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* myproject_dcmp_64ns_64ns_1_2_1_U3;
    myproject_dcmp_64ns_64ns_1_2_1<1,2,64,64,1>* myproject_dcmp_64ns_64ns_1_2_1_U4;
    myproject_mul_mul_15ns_14s_29_1_1<1,1,15,14,29>* myproject_mul_mul_15ns_14s_29_1_1_U5;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > sincos1_1_address0;
    sc_signal< sc_logic > sincos1_1_ce0;
    sc_signal< sc_lv<8> > sincos1_1_q0;
    sc_signal< sc_lv<9> > sincos1_0_address0;
    sc_signal< sc_logic > sincos1_0_ce0;
    sc_signal< sc_lv<9> > sincos1_0_q0;
    sc_signal< sc_lv<8> > p_Val2_16_reg_738;
    sc_signal< sc_lv<8> > p_Val2_16_reg_738_pp0_iter1_reg;
    sc_signal< sc_lv<5> > luTdex1_V_reg_747;
    sc_signal< sc_lv<5> > luTdex1_V_reg_747_pp0_iter1_reg;
    sc_signal< sc_lv<3> > octant_V_reg_752;
    sc_signal< sc_lv<3> > octant_V_reg_752_pp0_iter1_reg;
    sc_signal< sc_lv<3> > octant_V_reg_752_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_5_reg_763;
    sc_signal< sc_lv<1> > tmp_5_reg_763_pp0_iter1_reg;
    sc_signal< sc_lv<8> > p_Result_s_fu_214_p4;
    sc_signal< sc_lv<8> > p_Result_s_reg_768;
    sc_signal< sc_lv<11> > trunc_ln893_fu_238_p1;
    sc_signal< sc_lv<11> > trunc_ln893_reg_773;
    sc_signal< sc_lv<32> > sub_ln894_fu_242_p2;
    sc_signal< sc_lv<32> > sub_ln894_reg_778;
    sc_signal< sc_lv<32> > or_ln_fu_350_p3;
    sc_signal< sc_lv<32> > or_ln_reg_784;
    sc_signal< sc_lv<1> > icmp_ln908_fu_358_p2;
    sc_signal< sc_lv<1> > icmp_ln908_reg_789;
    sc_signal< sc_lv<64> > bitcast_ln729_fu_503_p1;
    sc_signal< sc_lv<1> > or_ln924_fu_533_p2;
    sc_signal< sc_lv<1> > or_ln924_reg_812;
    sc_signal< sc_lv<1> > icmp_ln885_fu_539_p2;
    sc_signal< sc_lv<1> > icmp_ln885_reg_818;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln544_fu_384_p1;
    sc_signal< sc_lv<29> > r_V_fu_727_p2;
    sc_signal< sc_lv<32> > p_Result_13_fu_223_p3;
    sc_signal< sc_lv<32> > l_fu_230_p3;
    sc_signal< sc_lv<32> > lsb_index_fu_252_p2;
    sc_signal< sc_lv<31> > tmp_7_fu_258_p4;
    sc_signal< sc_lv<4> > trunc_ln897_fu_274_p1;
    sc_signal< sc_lv<4> > sub_ln897_fu_278_p2;
    sc_signal< sc_lv<8> > zext_ln897_fu_284_p1;
    sc_signal< sc_lv<8> > lshr_ln897_fu_288_p2;
    sc_signal< sc_lv<8> > p_Result_4_fu_294_p2;
    sc_signal< sc_lv<1> > icmp_ln897_fu_268_p2;
    sc_signal< sc_lv<1> > icmp_ln897_1_fu_299_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_311_p3;
    sc_signal< sc_lv<8> > trunc_ln894_fu_248_p1;
    sc_signal< sc_lv<8> > add_ln899_fu_325_p2;
    sc_signal< sc_lv<1> > p_Result_3_fu_331_p3;
    sc_signal< sc_lv<1> > xor_ln899_fu_319_p2;
    sc_signal< sc_lv<1> > and_ln899_fu_338_p2;
    sc_signal< sc_lv<1> > a_fu_305_p2;
    sc_signal< sc_lv<1> > or_ln899_fu_344_p2;
    sc_signal< sc_lv<9> > p_Result_12_fu_364_p3;
    sc_signal< sc_lv<9> > sub_ln214_fu_371_p2;
    sc_signal< sc_lv<9> > luTdex_V_1_fu_377_p3;
    sc_signal< sc_lv<32> > zext_ln907_1_fu_393_p1;
    sc_signal< sc_lv<32> > add_ln908_fu_396_p2;
    sc_signal< sc_lv<32> > lshr_ln908_fu_401_p2;
    sc_signal< sc_lv<32> > sub_ln908_fu_411_p2;
    sc_signal< sc_lv<64> > m_fu_390_p1;
    sc_signal< sc_lv<64> > zext_ln908_1_fu_416_p1;
    sc_signal< sc_lv<64> > zext_ln908_fu_407_p1;
    sc_signal< sc_lv<64> > shl_ln908_fu_420_p2;
    sc_signal< sc_lv<64> > zext_ln911_fu_433_p1;
    sc_signal< sc_lv<64> > m_1_fu_426_p3;
    sc_signal< sc_lv<64> > m_2_fu_436_p2;
    sc_signal< sc_lv<63> > m_s_fu_442_p4;
    sc_signal< sc_lv<11> > sub_ln915_fu_464_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_456_p3;
    sc_signal< sc_lv<11> > add_ln915_fu_469_p2;
    sc_signal< sc_lv<11> > select_ln915_fu_475_p3;
    sc_signal< sc_lv<64> > m_11_fu_452_p1;
    sc_signal< sc_lv<12> > tmp_1_fu_483_p3;
    sc_signal< sc_lv<64> > p_Result_14_fu_491_p5;
    sc_signal< sc_lv<52> > trunc_ln3_fu_511_p4;
    sc_signal< sc_lv<1> > icmp_ln924_1_fu_527_p2;
    sc_signal< sc_lv<1> > icmp_ln924_fu_521_p2;
    sc_signal< sc_lv<3> > add_ln142_fu_544_p2;
    sc_signal< sc_lv<2> > tmp_6_fu_549_p4;
    sc_signal< sc_lv<1> > icmp_ln143_fu_569_p2;
    sc_signal< sc_lv<1> > icmp_ln143_1_fu_574_p2;
    sc_signal< sc_lv<1> > or_ln143_fu_579_p2;
    sc_signal< sc_lv<9> > zext_ln1265_fu_565_p1;
    sc_signal< sc_lv<9> > select_ln143_fu_585_p3;
    sc_signal< sc_lv<9> > sub_ln703_fu_593_p2;
    sc_signal< sc_lv<1> > icmp_ln141_fu_603_p2;
    sc_signal< sc_lv<1> > icmp_ln141_1_fu_608_p2;
    sc_signal< sc_lv<1> > icmp_ln141_3_fu_624_p2;
    sc_signal< sc_lv<1> > icmp_ln142_fu_559_p2;
    sc_signal< sc_lv<1> > and_ln142_fu_629_p2;
    sc_signal< sc_lv<1> > icmp_ln141_2_fu_619_p2;
    sc_signal< sc_lv<1> > grp_fu_156_p2;
    sc_signal< sc_lv<1> > grp_fu_161_p2;
    sc_signal< sc_lv<1> > or_ln151_1_fu_641_p2;
    sc_signal< sc_lv<1> > and_ln151_1_fu_647_p2;
    sc_signal< sc_lv<1> > grp_fu_166_p2;
    sc_signal< sc_lv<1> > grp_fu_171_p2;
    sc_signal< sc_lv<1> > or_ln152_fu_657_p2;
    sc_signal< sc_lv<1> > and_ln152_1_fu_663_p2;
    sc_signal< sc_lv<1> > and_ln151_fu_652_p2;
    sc_signal< sc_lv<1> > and_ln152_fu_668_p2;
    sc_signal< sc_lv<1> > and_ln142_1_fu_635_p2;
    sc_signal< sc_lv<9> > select_ln151_1_fu_687_p3;
    sc_signal< sc_lv<1> > or_ln141_fu_613_p2;
    sc_signal< sc_lv<1> > or_ln151_fu_681_p2;
    sc_signal< sc_lv<10> > select_ln151_fu_673_p3;
    sc_signal< sc_lv<10> > zext_ln151_fu_695_p1;
    sc_signal< sc_lv<1> > or_ln151_2_fu_699_p2;
    sc_signal< sc_lv<1> > or_ln151_3_fu_713_p2;
    sc_signal< sc_lv<10> > select_ln151_2_fu_705_p3;
    sc_signal< sc_lv<10> > sext_ln703_fu_599_p1;
    sc_signal< sc_lv<15> > r_V_fu_727_p0;
    sc_signal< sc_logic > grp_fu_156_ce;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > grp_fu_161_ce;
    sc_signal< sc_logic > grp_fu_166_ce;
    sc_signal< sc_logic > grp_fu_171_ce;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<64> ap_const_lv64_3FC0000000000000;
    static const sc_lv<64> ap_const_lv64_3FD8000000000000;
    static const sc_lv<64> ap_const_lv64_3FE4000000000000;
    static const sc_lv<64> ap_const_lv64_3FEC000000000000;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<24> ap_const_lv24_FFFFFF;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_FFFFFFCB;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_CB;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFCA;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<11> ap_const_lv11_3FE;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<52> ap_const_lv52_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<10> ap_const_lv10_B5;
    static const sc_lv<10> ap_const_lv10_34A;
    static const sc_lv<29> ap_const_lv29_28BE;
    static const sc_lv<5> ap_const_lv5_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_a_fu_305_p2();
    void thread_add_ln142_fu_544_p2();
    void thread_add_ln899_fu_325_p2();
    void thread_add_ln908_fu_396_p2();
    void thread_add_ln915_fu_469_p2();
    void thread_and_ln142_1_fu_635_p2();
    void thread_and_ln142_fu_629_p2();
    void thread_and_ln151_1_fu_647_p2();
    void thread_and_ln151_fu_652_p2();
    void thread_and_ln152_1_fu_663_p2();
    void thread_and_ln152_fu_668_p2();
    void thread_and_ln899_fu_338_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_bitcast_ln729_fu_503_p1();
    void thread_grp_fu_156_ce();
    void thread_grp_fu_161_ce();
    void thread_grp_fu_166_ce();
    void thread_grp_fu_171_ce();
    void thread_icmp_ln141_1_fu_608_p2();
    void thread_icmp_ln141_2_fu_619_p2();
    void thread_icmp_ln141_3_fu_624_p2();
    void thread_icmp_ln141_fu_603_p2();
    void thread_icmp_ln142_fu_559_p2();
    void thread_icmp_ln143_1_fu_574_p2();
    void thread_icmp_ln143_fu_569_p2();
    void thread_icmp_ln885_fu_539_p2();
    void thread_icmp_ln897_1_fu_299_p2();
    void thread_icmp_ln897_fu_268_p2();
    void thread_icmp_ln908_fu_358_p2();
    void thread_icmp_ln924_1_fu_527_p2();
    void thread_icmp_ln924_fu_521_p2();
    void thread_l_fu_230_p3();
    void thread_lsb_index_fu_252_p2();
    void thread_lshr_ln897_fu_288_p2();
    void thread_lshr_ln908_fu_401_p2();
    void thread_luTdex_V_1_fu_377_p3();
    void thread_m_11_fu_452_p1();
    void thread_m_1_fu_426_p3();
    void thread_m_2_fu_436_p2();
    void thread_m_fu_390_p1();
    void thread_m_s_fu_442_p4();
    void thread_or_ln141_fu_613_p2();
    void thread_or_ln143_fu_579_p2();
    void thread_or_ln151_1_fu_641_p2();
    void thread_or_ln151_2_fu_699_p2();
    void thread_or_ln151_3_fu_713_p2();
    void thread_or_ln151_fu_681_p2();
    void thread_or_ln152_fu_657_p2();
    void thread_or_ln899_fu_344_p2();
    void thread_or_ln924_fu_533_p2();
    void thread_or_ln_fu_350_p3();
    void thread_p_Result_12_fu_364_p3();
    void thread_p_Result_13_fu_223_p3();
    void thread_p_Result_14_fu_491_p5();
    void thread_p_Result_3_fu_331_p3();
    void thread_p_Result_4_fu_294_p2();
    void thread_p_Result_s_fu_214_p4();
    void thread_r_V_fu_727_p0();
    void thread_select_ln143_fu_585_p3();
    void thread_select_ln151_1_fu_687_p3();
    void thread_select_ln151_2_fu_705_p3();
    void thread_select_ln151_fu_673_p3();
    void thread_select_ln915_fu_475_p3();
    void thread_sext_ln703_fu_599_p1();
    void thread_shl_ln908_fu_420_p2();
    void thread_sincos1_0_address0();
    void thread_sincos1_0_ce0();
    void thread_sincos1_1_address0();
    void thread_sincos1_1_ce0();
    void thread_sub_ln214_fu_371_p2();
    void thread_sub_ln703_fu_593_p2();
    void thread_sub_ln894_fu_242_p2();
    void thread_sub_ln897_fu_278_p2();
    void thread_sub_ln908_fu_411_p2();
    void thread_sub_ln915_fu_464_p2();
    void thread_tmp_1_fu_483_p3();
    void thread_tmp_6_fu_549_p4();
    void thread_tmp_7_fu_258_p4();
    void thread_tmp_8_fu_311_p3();
    void thread_tmp_9_fu_456_p3();
    void thread_trunc_ln3_fu_511_p4();
    void thread_trunc_ln893_fu_238_p1();
    void thread_trunc_ln894_fu_248_p1();
    void thread_trunc_ln897_fu_274_p1();
    void thread_xor_ln899_fu_319_p2();
    void thread_zext_ln1265_fu_565_p1();
    void thread_zext_ln151_fu_695_p1();
    void thread_zext_ln544_fu_384_p1();
    void thread_zext_ln897_fu_284_p1();
    void thread_zext_ln907_1_fu_393_p1();
    void thread_zext_ln908_1_fu_416_p1();
    void thread_zext_ln908_fu_407_p1();
    void thread_zext_ln911_fu_433_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
