-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (191 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.299375,HLS_SYN_LAT=7,HLS_SYN_TPT=1,HLS_SYN_MEM=10,HLS_SYN_DSP=39,HLS_SYN_FF=1599,HLS_SYN_LUT=2674,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv192_lc_1 : STD_LOGIC_VECTOR (191 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_B3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_B4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110100";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv13_200 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_3FF : STD_LOGIC_VECTOR (11 downto 0) := "001111111111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv18_C80 : STD_LOGIC_VECTOR (17 downto 0) := "000000110010000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv12_FE7 : STD_LOGIC_VECTOR (11 downto 0) := "111111100111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_23 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100011";
    constant ap_const_lv14_2C : STD_LOGIC_VECTOR (13 downto 0) := "00000000101100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv15_6C80 : STD_LOGIC_VECTOR (14 downto 0) := "110110010000000";
    constant ap_const_lv12_12 : STD_LOGIC_VECTOR (11 downto 0) := "000000010010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_CF : STD_LOGIC_VECTOR (12 downto 0) := "0000011001111";
    constant ap_const_lv12_FFC : STD_LOGIC_VECTOR (11 downto 0) := "111111111100";
    constant ap_const_lv24_2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv18_600 : STD_LOGIC_VECTOR (17 downto 0) := "000000011000000000";
    constant ap_const_lv17_B : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001011";
    constant ap_const_lv24_6B000 : STD_LOGIC_VECTOR (23 downto 0) := "000001101011000000000000";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv55_42000000000000 : STD_LOGIC_VECTOR (54 downto 0) := "1000010000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv49_1040000000000 : STD_LOGIC_VECTOR (48 downto 0) := "1000001000000000000000000000000000000000000000000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv45_1C8000000000 : STD_LOGIC_VECTOR (44 downto 0) := "111001000000000000000000000000000000000000000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv18_2D : STD_LOGIC_VECTOR (17 downto 0) := "000000000000101101";
    constant ap_const_lv18_3FFD3 : STD_LOGIC_VECTOR (17 downto 0) := "111111111111010011";
    constant ap_const_lv18_3FFD5 : STD_LOGIC_VECTOR (17 downto 0) := "111111111111010101";
    constant ap_const_lv18_97 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010010111";
    constant ap_const_lv18_D80 : STD_LOGIC_VECTOR (17 downto 0) := "000000110110000000";
    constant ap_const_lv20_97 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010010111";
    constant ap_const_lv20_4680 : STD_LOGIC_VECTOR (19 downto 0) := "00000100011010000000";
    constant ap_const_lv18_B7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010110111";
    constant ap_const_lv18_2C0 : STD_LOGIC_VECTOR (17 downto 0) := "000000001011000000";
    constant ap_const_lv23_7FFFD5 : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111010101";
    constant ap_const_lv18_138 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100111000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (191 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (191 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal cos_lut_samples_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce0 : STD_LOGIC;
    signal cos_lut_samples_V_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce1 : STD_LOGIC;
    signal cos_lut_samples_V_q1 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce2 : STD_LOGIC;
    signal cos_lut_samples_V_q2 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce3 : STD_LOGIC;
    signal cos_lut_samples_V_q3 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce4 : STD_LOGIC;
    signal cos_lut_samples_V_q4 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce5 : STD_LOGIC;
    signal cos_lut_samples_V_q5 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce6 : STD_LOGIC;
    signal cos_lut_samples_V_q6 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce7 : STD_LOGIC;
    signal cos_lut_samples_V_q7 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_lut_samples_V_ce8 : STD_LOGIC;
    signal cos_lut_samples_V_q8 : STD_LOGIC_VECTOR (4 downto 0);
    signal sin_lut_samples_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce0 : STD_LOGIC;
    signal sin_lut_samples_V_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce1 : STD_LOGIC;
    signal sin_lut_samples_V_q1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce2 : STD_LOGIC;
    signal sin_lut_samples_V_q2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce3 : STD_LOGIC;
    signal sin_lut_samples_V_q3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce4 : STD_LOGIC;
    signal sin_lut_samples_V_q4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce5 : STD_LOGIC;
    signal sin_lut_samples_V_q5 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce6 : STD_LOGIC;
    signal sin_lut_samples_V_q6 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce7 : STD_LOGIC;
    signal sin_lut_samples_V_q7 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address8 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce8 : STD_LOGIC;
    signal sin_lut_samples_V_q8 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_address9 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_lut_samples_V_ce9 : STD_LOGIC;
    signal sin_lut_samples_V_q9 : STD_LOGIC_VECTOR (6 downto 0);
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Val2_12_reg_3080 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_12_reg_3080_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_3090 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_1_reg_3090_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_3098 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_s_reg_3098_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_5_fu_507_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_5_reg_3111 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_5_reg_3111_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_fu_2918_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1192_reg_3120 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_22_fu_610_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_22_reg_3130 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_22_reg_3130_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_17_fu_620_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_17_reg_3141 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_54_fu_715_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_54_reg_3156 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_54_reg_3156_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_10_reg_3171 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_17_reg_3176 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_46_reg_3191 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_46_reg_3191_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_12_fu_1099_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_12_reg_3197 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_18_fu_2932_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_18_reg_3217 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_21_fu_2938_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_21_reg_3223 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_35_reg_3228 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_1_fu_2953_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln728_1_reg_3233 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_30_fu_1352_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_30_reg_3238 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_41_reg_3243 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2968_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_35_reg_3248 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_48_reg_3253 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_6_fu_1476_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_6_reg_3258 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_2985_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_15_reg_3273 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_26_reg_3278 : STD_LOGIC_VECTOR (6 downto 0);
    signal cos_lut_samples_V_load_4_reg_3283 : STD_LOGIC_VECTOR (4 downto 0);
    signal cos_lut_samples_V_load_4_reg_3283_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sin_lut_samples_V_load_5_reg_3288 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_load_5_reg_3288_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_load_5_reg_3288_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_14_fu_3001_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_14_reg_3298 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_3007_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_22_reg_3304 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln700_1_fu_1841_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_1_reg_3309 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln700_2_fu_1870_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln700_2_reg_3314 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_22_fu_1876_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_22_reg_3319 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_3015_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_58_reg_3329 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_43_reg_3339 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_52_reg_3349 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_54_reg_3354 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_3041_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_reg_3359 : STD_LOGIC_VECTOR (23 downto 0);
    signal sin_lut_samples_V_load_2_reg_3364 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_7_fu_3049_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_7_reg_3369 : STD_LOGIC_VECTOR (29 downto 0);
    signal sin_lut_samples_V_load_6_reg_3374 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_load_6_reg_3374_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_lut_samples_V_load_6_reg_3374_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln700_fu_2342_p2 : STD_LOGIC_VECTOR (35 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of sub_ln700_fu_2342_p2 : signal is "no";
    signal sub_ln700_reg_3379 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln700_3_fu_2350_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal mul_ln700_3_reg_3384 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_36_reg_3389 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_24_fu_3062_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_24_reg_3394 : STD_LOGIC_VECTOR (33 downto 0);
    signal cos_lut_samples_V_load_5_reg_3399 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_39_fu_2455_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_39_reg_3409 : STD_LOGIC_VECTOR (5 downto 0);
    signal cos_lut_samples_V_load_7_reg_3414 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln_reg_3429 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln_reg_3429_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln_reg_3429_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_fu_2671_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_8_reg_3434 : STD_LOGIC_VECTOR (34 downto 0);
    signal trunc_ln708_4_reg_3439 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_4_reg_3439_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_4_reg_3439_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1116_1_fu_2732_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln1116_1_reg_3444 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_26_fu_2742_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_26_reg_3449 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_30_fu_3068_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_30_reg_3454 : STD_LOGIC_VECTOR (21 downto 0);
    signal cos_lut_samples_V_load_8_reg_3459 : STD_LOGIC_VECTOR (4 downto 0);
    signal sin_lut_samples_V_load_9_reg_3464 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1116_fu_2780_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_ln1116_reg_3469 : STD_LOGIC_VECTOR (41 downto 0);
    signal r_V_46_fu_2792_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_46_reg_3474 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_34_fu_3074_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_34_reg_3479 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_35_fu_2817_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_35_reg_3484 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_43_fu_2829_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_43_reg_3489 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_59_reg_3494 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_70_reg_3499 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln57_4_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_7_fu_700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_fu_805_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_1_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_5_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_6_fu_1087_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_8_fu_1210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_9_fu_1291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_2_fu_1564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_3_fu_1659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_10_fu_1793_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_11_fu_1961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_12_fu_2065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_14_fu_2171_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_13_fu_2447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_15_fu_2540_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln57_16_fu_2624_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Val2_15_fu_521_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_5_fu_525_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_11_fu_529_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_19_fu_543_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_fu_559_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_567_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_8_fu_577_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_4_fu_581_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_17_fu_535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_4_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_4_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_9_fu_587_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_4_fu_597_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_16_fu_624_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_31_fu_638_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_33_fu_654_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_662_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_14_fu_672_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_7_fu_676_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_30_fu_630_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_7_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_7_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_15_fu_682_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_7_fu_692_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_10_fu_709_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_4_fu_712_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_2_fu_721_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_fu_725_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_2_fu_729_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_743_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_759_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_767_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_fu_777_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_fu_781_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_735_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_1_fu_787_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_fu_797_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_1_fu_810_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_4_fu_813_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_827_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_7_fu_843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_851_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_2_fu_861_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_1_fu_865_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_819_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_1_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_1_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_3_fu_871_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_1_fu_881_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_2924_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_50_fu_898_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of ret_V_50_fu_898_p2 : signal is "no";
    signal p_Val2_19_fu_913_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_6_fu_917_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_13_fu_921_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_23_fu_935_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_951_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_959_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_10_fu_969_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_5_fu_973_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_927_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_5_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_5_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_11_fu_979_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_5_fu_989_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_20_fu_1002_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_7_fu_1007_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_14_fu_1011_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_fu_1025_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_28_fu_1041_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1049_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_12_fu_1059_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_6_fu_1063_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_1017_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_6_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_6_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_13_fu_1069_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_6_fu_1079_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_3_fu_1092_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_4_fu_1103_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_13_fu_1110_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_42_fu_1114_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_24_fu_1120_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_9_fu_1130_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_17_fu_1134_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_36_fu_1148_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_37_fu_1164_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1172_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_16_fu_1182_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_8_fu_1186_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_fu_1140_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_8_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_8_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_17_fu_1192_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_8_fu_1202_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_19_fu_1215_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_39_fu_1229_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_40_fu_1245_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1253_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_18_fu_1263_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_9_fu_1267_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_38_fu_1221_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_9_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_9_fu_1277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_19_fu_1273_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_9_fu_1283_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_13_fu_1299_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_24_fu_1303_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_55_fu_1313_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_14_fu_1318_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_26_fu_1322_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_2944_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_22_fu_1348_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2959_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2976_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln_fu_1391_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_2_fu_1388_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_4_fu_1402_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_5_fu_1412_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1118_1_fu_1416_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_5_fu_1412_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1118_1_fu_1416_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_38_fu_1424_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_37_fu_1406_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_2_fu_1430_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_6_fu_1440_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_7_fu_1444_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1118_2_fu_1448_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1118_2_fu_1448_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_7_fu_1444_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_8_fu_1456_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_39_fu_1460_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_4_fu_1466_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_48_fu_1434_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_49_fu_1470_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lhs_V_2_fu_1485_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_8_fu_1488_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_10_fu_1502_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_1518_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1526_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_4_fu_1536_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_2_fu_1540_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_1494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_2_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_2_fu_1550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_5_fu_1546_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_2_fu_1556_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln703_fu_1569_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_13_fu_1573_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_4_fu_1579_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_9_fu_1583_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_14_fu_1597_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_1613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1621_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_6_fu_1631_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_3_fu_1635_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_1589_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_3_fu_1607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_3_fu_1645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_7_fu_1641_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_3_fu_1651_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_fu_1664_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_40_fu_1667_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_9_fu_1673_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_52_fu_1676_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_fu_1682_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_1_fu_1696_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_27_fu_1708_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_11_fu_1713_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_20_fu_1717_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_43_fu_1731_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_44_fu_1747_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1755_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_20_fu_1765_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_10_fu_1769_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_41_fu_1723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_10_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_10_fu_1779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_21_fu_1775_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_10_fu_1785_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_11_fu_2993_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_44_fu_1803_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln703_fu_1798_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_V_3_fu_1809_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal lhs_V_12_fu_1830_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1192_fu_1817_p2 : STD_LOGIC_VECTOR (23 downto 0);
    attribute use_dsp48 of sub_ln1192_fu_1817_p2 : signal is "no";
    signal sext_ln1192_2_fu_1822_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_6_fu_1850_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_20_fu_1847_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_19_fu_1857_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln700_2_fu_1870_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln700_2_fu_1870_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_22_fu_1876_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_6_fu_1440_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_22_fu_1876_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lhs_V_16_fu_1882_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_28_fu_1885_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_48_fu_1899_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_50_fu_1915_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1923_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_22_fu_1933_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_11_fu_1937_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_47_fu_1891_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_11_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_11_fu_1947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_23_fu_1943_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_11_fu_1953_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_23_fu_1969_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_25_fu_1966_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_23_fu_1969_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_23_fu_1969_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_19_fu_1986_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_34_fu_1989_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_53_fu_2003_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_54_fu_2019_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_2027_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_24_fu_2037_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_12_fu_2041_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_51_fu_1995_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_12_fu_2013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_12_fu_2051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_25_fu_2047_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_12_fu_2057_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_3023_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal lhs_V_21_fu_2092_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_41_fu_2095_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_62_fu_2109_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_63_fu_2125_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_2133_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_28_fu_2143_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_14_fu_2147_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_60_fu_2101_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_14_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_14_fu_2157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_29_fu_2153_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_14_fu_2163_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_3_fu_1398_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln1118_7_fu_2181_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_8_fu_2192_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_26_fu_2188_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_27_fu_2199_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_47_fu_2176_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_48_fu_2203_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_18_fu_2209_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_63_fu_2215_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_3032_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_47_fu_2250_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_47_fu_2250_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_3_fu_2263_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_41_fu_2278_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_11_fu_2275_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_41_fu_2278_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_41_fu_2278_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_2_fu_2288_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_16_fu_2284_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln728_3_fu_2295_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_18_fu_2299_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_5_fu_2315_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_18_fu_2312_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_15_fu_2322_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1_fu_2335_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln700_1_fu_3055_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln700_3_fu_2350_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_32_fu_2355_p2 : STD_LOGIC_VECTOR (23 downto 0);
    attribute use_dsp48 of ret_V_32_fu_2355_p2 : signal is "no";
    signal lhs_V_20_fu_2368_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_37_fu_2371_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_56_fu_2385_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_58_fu_2401_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_2409_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_26_fu_2419_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_13_fu_2423_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_55_fu_2377_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_13_fu_2395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_13_fu_2433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_27_fu_2429_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_13_fu_2439_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_25_fu_2452_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal lhs_V_22_fu_2461_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_fu_2464_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_65_fu_2478_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_66_fu_2494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_2502_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_30_fu_2512_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_15_fu_2516_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_64_fu_2470_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_15_fu_2488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_15_fu_2526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_31_fu_2522_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_15_fu_2532_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal lhs_V_23_fu_2545_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_45_fu_2548_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_68_fu_2562_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_69_fu_2578_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_2586_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln55_32_fu_2596_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln55_16_fu_2600_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_67_fu_2554_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_16_fu_2572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_16_fu_2610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln55_33_fu_2606_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln55_16_fu_2616_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_fu_2632_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_10_fu_2629_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_fu_2632_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_fu_2632_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_fu_2638_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln728_1_fu_2646_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_51_fu_2650_p2 : STD_LOGIC_VECTOR (23 downto 0);
    attribute use_dsp48 of ret_V_51_fu_2650_p2 : signal is "no";
    signal r_V_8_fu_2671_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_8_fu_2671_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln700_1_fu_2677_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal rhs_V_6_fu_2689_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal sub_ln700_1_fu_2684_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln728_5_fu_2696_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal ret_V_57_fu_2700_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_25_fu_2719_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_31_fu_2716_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_25_fu_2719_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_25_fu_2719_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1116_1_fu_2732_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1116_1_fu_2732_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_26_fu_2742_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_32_fu_2738_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_26_fu_2742_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_28_fu_2751_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1118_fu_2748_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_28_fu_2751_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_28_fu_2751_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_29_fu_2764_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_33_fu_2761_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_29_fu_2764_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_29_fu_2764_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1116_fu_2780_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1116_fu_2780_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal r_V_46_fu_2792_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_46_fu_2792_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal r_V_33_fu_2801_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_35_fu_2798_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_33_fu_2801_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_33_fu_2801_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_35_fu_2817_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_39_fu_2814_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_35_fu_2817_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_43_fu_2829_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_43_fu_2829_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln1192_3_fu_2835_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal ret_V_61_fu_2838_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal r_V_49_fu_2860_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_49_fu_2860_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_49_fu_2860_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal sext_ln1192_4_fu_2866_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal ret_V_65_fu_2870_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1192_1_fu_2886_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal ret_V_53_fu_2889_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_46_fu_2895_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln1192_fu_2918_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2924_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_fu_895_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2924_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_18_fu_2932_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_17_fu_1296_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_18_fu_2932_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_21_fu_2938_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_20_fu_1309_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_21_fu_2938_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_2944_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_21_fu_1328_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2944_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_2944_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln728_1_fu_2953_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_1_fu_2953_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2959_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_23_fu_1358_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2959_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2959_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_2968_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2968_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_2976_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2976_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2976_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_11_fu_2993_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_10_fu_1385_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_11_fu_2993_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_14_fu_3001_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_13_fu_1482_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_14_fu_3001_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_3015_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_3015_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_3023_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_3032_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3032_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_30_fu_3068_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal r_V_30_fu_3068_p10 : STD_LOGIC_VECTOR (21 downto 0);

    component myproject_mul_mul_12s_7ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_12s_7s_18s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_12s_12s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_14s_14s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mac_mulsub_14s_14s_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_12s_7s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_12s_9ns_13ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_12s_9ns_16ns_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_muladd_12s_9ns_11ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_mul_sub_5s_13s_13s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mac_muladd_12s_5s_18s_19_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component myproject_mac_muladd_16s_7s_24ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mac_muladd_12s_20s_24ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mac_muladd_12s_10ns_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_muladd_7s_15s_23s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_14s_16s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_mul_mul_19s_26s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component myproject_mul_mul_10s_24s_34_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component myproject_mul_mul_10s_12ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_10s_22s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_cos_lut_samples_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (4 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (4 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (4 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (4 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (4 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (4 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component myproject_sin_lut_samples_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address8 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address9 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;



begin
    cos_lut_samples_V_U : component myproject_cos_lut_samples_V
    generic map (
        DataWidth => 5,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cos_lut_samples_V_address0,
        ce0 => cos_lut_samples_V_ce0,
        q0 => cos_lut_samples_V_q0,
        address1 => cos_lut_samples_V_address1,
        ce1 => cos_lut_samples_V_ce1,
        q1 => cos_lut_samples_V_q1,
        address2 => cos_lut_samples_V_address2,
        ce2 => cos_lut_samples_V_ce2,
        q2 => cos_lut_samples_V_q2,
        address3 => cos_lut_samples_V_address3,
        ce3 => cos_lut_samples_V_ce3,
        q3 => cos_lut_samples_V_q3,
        address4 => cos_lut_samples_V_address4,
        ce4 => cos_lut_samples_V_ce4,
        q4 => cos_lut_samples_V_q4,
        address5 => cos_lut_samples_V_address5,
        ce5 => cos_lut_samples_V_ce5,
        q5 => cos_lut_samples_V_q5,
        address6 => cos_lut_samples_V_address6,
        ce6 => cos_lut_samples_V_ce6,
        q6 => cos_lut_samples_V_q6,
        address7 => cos_lut_samples_V_address7,
        ce7 => cos_lut_samples_V_ce7,
        q7 => cos_lut_samples_V_q7,
        address8 => cos_lut_samples_V_address8,
        ce8 => cos_lut_samples_V_ce8,
        q8 => cos_lut_samples_V_q8);

    sin_lut_samples_V_U : component myproject_sin_lut_samples_V
    generic map (
        DataWidth => 7,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sin_lut_samples_V_address0,
        ce0 => sin_lut_samples_V_ce0,
        q0 => sin_lut_samples_V_q0,
        address1 => sin_lut_samples_V_address1,
        ce1 => sin_lut_samples_V_ce1,
        q1 => sin_lut_samples_V_q1,
        address2 => sin_lut_samples_V_address2,
        ce2 => sin_lut_samples_V_ce2,
        q2 => sin_lut_samples_V_q2,
        address3 => sin_lut_samples_V_address3,
        ce3 => sin_lut_samples_V_ce3,
        q3 => sin_lut_samples_V_q3,
        address4 => sin_lut_samples_V_address4,
        ce4 => sin_lut_samples_V_ce4,
        q4 => sin_lut_samples_V_q4,
        address5 => sin_lut_samples_V_address5,
        ce5 => sin_lut_samples_V_ce5,
        q5 => sin_lut_samples_V_q5,
        address6 => sin_lut_samples_V_address6,
        ce6 => sin_lut_samples_V_ce6,
        q6 => sin_lut_samples_V_q6,
        address7 => sin_lut_samples_V_address7,
        ce7 => sin_lut_samples_V_ce7,
        q7 => sin_lut_samples_V_q7,
        address8 => sin_lut_samples_V_address8,
        ce8 => sin_lut_samples_V_ce8,
        q8 => sin_lut_samples_V_q8,
        address9 => sin_lut_samples_V_address9,
        ce9 => sin_lut_samples_V_ce9,
        q9 => sin_lut_samples_V_q9);

    myproject_mul_mul_12s_7ns_18_1_1_U1 : component myproject_mul_mul_12s_7ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 7,
        dout_WIDTH => 18)
    port map (
        din0 => p_Val2_5_fu_507_p4,
        din1 => mul_ln1192_fu_2918_p1,
        dout => mul_ln1192_fu_2918_p2);

    myproject_mac_muladd_12s_7s_18s_18_1_1_U2 : component myproject_mac_muladd_12s_7s_18s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 7,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2924_p0,
        din1 => grp_fu_2924_p1,
        din2 => mul_ln1192_reg_3120,
        dout => grp_fu_2924_p3);

    myproject_mul_mul_12s_12s_24_1_1_U3 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_18_fu_2932_p0,
        din1 => r_V_18_fu_2932_p1,
        dout => r_V_18_fu_2932_p2);

    myproject_mul_mul_14s_14s_28_1_1_U4 : component myproject_mul_mul_14s_14s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        dout_WIDTH => 28)
    port map (
        din0 => r_V_21_fu_2938_p0,
        din1 => r_V_21_fu_2938_p1,
        dout => r_V_21_fu_2938_p2);

    myproject_mac_mulsub_14s_14s_18ns_18_1_1_U5 : component myproject_mac_mulsub_14s_14s_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 14,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2944_p0,
        din1 => grp_fu_2944_p1,
        din2 => grp_fu_2944_p2,
        dout => grp_fu_2944_p3);

    myproject_mul_mul_12s_7s_18_1_1_U6 : component myproject_mul_mul_12s_7s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 7,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln728_1_fu_2953_p0,
        din1 => mul_ln728_1_fu_2953_p1,
        dout => mul_ln728_1_fu_2953_p2);

    myproject_mac_muladd_12s_9ns_13ns_18_1_1_U7 : component myproject_mac_muladd_12s_9ns_13ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 13,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2959_p0,
        din1 => grp_fu_2959_p1,
        din2 => grp_fu_2959_p2,
        dout => grp_fu_2959_p3);

    myproject_mac_muladd_12s_9ns_16ns_20_1_1_U8 : component myproject_mac_muladd_12s_9ns_16ns_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 16,
        dout_WIDTH => 20)
    port map (
        din0 => p_Val2_12_reg_3080,
        din1 => grp_fu_2968_p1,
        din2 => grp_fu_2968_p2,
        dout => grp_fu_2968_p3);

    myproject_mac_muladd_12s_9ns_11ns_18_1_1_U9 : component myproject_mac_muladd_12s_9ns_11ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 11,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_2976_p0,
        din1 => grp_fu_2976_p1,
        din2 => grp_fu_2976_p2,
        dout => grp_fu_2976_p3);

    myproject_mac_mul_sub_5s_13s_13s_16_1_1_U10 : component myproject_mac_mul_sub_5s_13s_13s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        dout_WIDTH => 16)
    port map (
        din0 => cos_lut_samples_V_q3,
        din1 => ret_V_fu_1682_p2,
        din2 => rhs_V_1_fu_1696_p3,
        dout => grp_fu_2985_p3);

    myproject_mul_mul_12s_12s_24_1_1_U11 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_11_fu_2993_p0,
        din1 => r_V_11_fu_2993_p1,
        dout => r_V_11_fu_2993_p2);

    myproject_mul_mul_12s_12s_24_1_1_U12 : component myproject_mul_mul_12s_12s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_14_fu_3001_p0,
        din1 => r_V_14_fu_3001_p1,
        dout => r_V_14_fu_3001_p2);

    myproject_mac_muladd_12s_5s_18s_19_1_1_U13 : component myproject_mac_muladd_12s_5s_18s_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 5,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => p_Val2_1_reg_3090_pp0_iter1_reg,
        din1 => cos_lut_samples_V_q4,
        din2 => lhs_V_12_fu_1830_p3,
        dout => grp_fu_3007_p3);

    myproject_mac_muladd_16s_7s_24ns_24_1_1_U14 : component myproject_mac_muladd_16s_7s_24ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        din0 => r_V_23_fu_1969_p2,
        din1 => grp_fu_3015_p1,
        din2 => grp_fu_3015_p2,
        dout => grp_fu_3015_p3);

    myproject_mac_muladd_12s_20s_24ns_24_1_1_U15 : component myproject_mac_muladd_12s_20s_24ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 20,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        din0 => p_Val2_12_reg_3080_pp0_iter1_reg,
        din1 => ret_V_35_reg_3248,
        din2 => grp_fu_3023_p2,
        dout => grp_fu_3023_p3);

    myproject_mac_muladd_12s_10ns_18ns_18_1_1_U16 : component myproject_mac_muladd_12s_10ns_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => p_Val2_12_reg_3080_pp0_iter1_reg,
        din1 => grp_fu_3032_p1,
        din2 => grp_fu_3032_p2,
        dout => grp_fu_3032_p3);

    myproject_mac_muladd_7s_15s_23s_24_1_1_U17 : component myproject_mac_muladd_7s_15s_23s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 15,
        din2_WIDTH => 23,
        dout_WIDTH => 24)
    port map (
        din0 => sin_lut_samples_V_q5,
        din1 => ret_V_6_reg_3258,
        din2 => lhs_V_3_fu_2263_p3,
        dout => grp_fu_3041_p3);

    myproject_mul_mul_14s_16s_30_1_1_U18 : component myproject_mul_mul_14s_16s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_18_fu_2299_p2,
        din1 => ret_V_15_reg_3273,
        dout => r_V_7_fu_3049_p2);

    myproject_mul_mul_19s_26s_36_1_1_U19 : component myproject_mul_mul_19s_26s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 26,
        dout_WIDTH => 36)
    port map (
        din0 => ret_V_22_reg_3304,
        din1 => r_V_15_fu_2322_p2,
        dout => mul_ln700_1_fu_3055_p2);

    myproject_mul_mul_10s_24s_34_1_1_U20 : component myproject_mul_mul_10s_24s_34_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 24,
        dout_WIDTH => 34)
    port map (
        din0 => r_V_41_fu_2278_p2,
        din1 => ret_V_32_fu_2355_p2,
        dout => r_V_24_fu_3062_p2);

    myproject_mul_mul_10s_12ns_22_1_1_U21 : component myproject_mul_mul_10s_12ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_29_fu_2764_p2,
        din1 => r_V_30_fu_3068_p1,
        dout => r_V_30_fu_3068_p2);

    myproject_mul_mul_10s_22s_32_1_1_U22 : component myproject_mul_mul_10s_22s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 22,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_33_fu_2801_p2,
        din1 => r_V_30_reg_3454,
        dout => r_V_34_fu_3074_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv192_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln700_1_reg_3309 <= add_ln700_1_fu_1841_p2;
                cos_lut_samples_V_load_4_reg_3283_pp0_iter3_reg <= cos_lut_samples_V_load_4_reg_3283;
                mul_ln1116_1_reg_3444 <= mul_ln1116_1_fu_2732_p2;
                mul_ln1116_reg_3469 <= mul_ln1116_fu_2780_p2;
                mul_ln700_2_reg_3314 <= mul_ln700_2_fu_1870_p2;
                mul_ln700_3_reg_3384 <= mul_ln700_3_fu_2350_p2;
                p_Val2_43_reg_3339 <= grp_fu_3023_p3(23 downto 12);
                p_Val2_46_reg_3191_pp0_iter2_reg <= p_Val2_46_reg_3191;
                p_Val2_52_reg_3349 <= ret_V_63_fu_2215_p2(17 downto 6);
                p_Val2_54_reg_3354 <= grp_fu_3032_p3(17 downto 6);
                r_V_14_reg_3298 <= r_V_14_fu_3001_p2;
                r_V_22_reg_3319 <= r_V_22_fu_1876_p2;
                r_V_24_reg_3394 <= r_V_24_fu_3062_p2;
                r_V_26_reg_3449 <= r_V_26_fu_2742_p2;
                r_V_30_reg_3454 <= r_V_30_fu_3068_p2;
                r_V_34_reg_3479 <= r_V_34_fu_3074_p2;
                r_V_35_reg_3484 <= r_V_35_fu_2817_p2;
                r_V_43_reg_3489 <= r_V_43_fu_2829_p2;
                r_V_46_reg_3474 <= r_V_46_fu_2792_p2;
                r_V_7_reg_3369 <= r_V_7_fu_3049_p2;
                r_V_8_reg_3434 <= r_V_8_fu_2671_p2;
                ret_V_39_reg_3409 <= ret_V_39_fu_2455_p2;
                ret_V_54_reg_3156_pp0_iter2_reg <= ret_V_54_reg_3156;
                ret_V_6_reg_3258 <= ret_V_6_fu_1476_p2;
                sin_lut_samples_V_load_5_reg_3288_pp0_iter3_reg <= sin_lut_samples_V_load_5_reg_3288;
                sin_lut_samples_V_load_5_reg_3288_pp0_iter4_reg <= sin_lut_samples_V_load_5_reg_3288_pp0_iter3_reg;
                sin_lut_samples_V_load_6_reg_3374_pp0_iter4_reg <= sin_lut_samples_V_load_6_reg_3374;
                sin_lut_samples_V_load_6_reg_3374_pp0_iter5_reg <= sin_lut_samples_V_load_6_reg_3374_pp0_iter4_reg;
                sub_ln700_reg_3379 <= sub_ln700_fu_2342_p2;
                tmp_59_reg_3494 <= ret_V_61_fu_2838_p2(54 downto 48);
                tmp_70_reg_3499 <= ret_V_65_fu_2870_p2(48 downto 42);
                trunc_ln708_4_reg_3439 <= ret_V_57_fu_2700_p2(47 downto 36);
                trunc_ln708_4_reg_3439_pp0_iter5_reg <= trunc_ln708_4_reg_3439;
                trunc_ln708_4_reg_3439_pp0_iter6_reg <= trunc_ln708_4_reg_3439_pp0_iter5_reg;
                trunc_ln_reg_3429 <= ret_V_51_fu_2650_p2(23 downto 12);
                trunc_ln_reg_3429_pp0_iter5_reg <= trunc_ln_reg_3429;
                trunc_ln_reg_3429_pp0_iter6_reg <= trunc_ln_reg_3429_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                add_ln700_reg_3359 <= grp_fu_3041_p3;
                cos_lut_samples_V_load_5_reg_3399 <= cos_lut_samples_V_q5;
                cos_lut_samples_V_load_7_reg_3414 <= cos_lut_samples_V_q6;
                p_Val2_36_reg_3389 <= sin_lut_samples_V_q8;
                sin_lut_samples_V_load_2_reg_3364 <= sin_lut_samples_V_q6;
                sin_lut_samples_V_load_6_reg_3374 <= sin_lut_samples_V_q7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                cos_lut_samples_V_load_4_reg_3283 <= cos_lut_samples_V_q4;
                p_Val2_26_reg_3278 <= sin_lut_samples_V_q3;
                ret_V_15_reg_3273 <= grp_fu_2985_p3;
                ret_V_22_reg_3304 <= grp_fu_3007_p3;
                ret_V_58_reg_3329 <= grp_fu_3015_p3;
                sin_lut_samples_V_load_5_reg_3288 <= sin_lut_samples_V_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                cos_lut_samples_V_load_8_reg_3459 <= cos_lut_samples_V_q8;
                sin_lut_samples_V_load_9_reg_3464 <= sin_lut_samples_V_q9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lhs_V_17_reg_3141 <= lhs_V_17_fu_620_p1;
                mul_ln1192_reg_3120 <= mul_ln1192_fu_2918_p2;
                mul_ln728_1_reg_3233 <= mul_ln728_1_fu_2953_p2;
                p_Val2_10_reg_3171 <= ret_V_50_fu_898_p2(17 downto 6);
                p_Val2_12_reg_3080 <= x_V_in_sig(179 downto 168);
                p_Val2_12_reg_3080_pp0_iter1_reg <= p_Val2_12_reg_3080;
                p_Val2_1_reg_3090 <= x_V_in_sig(59 downto 48);
                p_Val2_1_reg_3090_pp0_iter1_reg <= p_Val2_1_reg_3090;
                p_Val2_22_reg_3130 <= x_V_in_sig(47 downto 36);
                p_Val2_22_reg_3130_pp0_iter1_reg <= p_Val2_22_reg_3130;
                p_Val2_35_reg_3228 <= grp_fu_2944_p3(17 downto 6);
                p_Val2_41_reg_3243 <= grp_fu_2959_p3(17 downto 6);
                p_Val2_48_reg_3253 <= grp_fu_2976_p3(17 downto 6);
                p_Val2_5_reg_3111 <= x_V_in_sig(35 downto 24);
                p_Val2_5_reg_3111_pp0_iter1_reg <= p_Val2_5_reg_3111;
                p_Val2_s_reg_3098 <= x_V_in_sig(191 downto 180);
                p_Val2_s_reg_3098_pp0_iter1_reg <= p_Val2_s_reg_3098;
                r_V_18_reg_3217 <= r_V_18_fu_2932_p2;
                r_V_21_reg_3223 <= r_V_21_fu_2938_p2;
                ret_V_30_reg_3238 <= ret_V_30_fu_1352_p2;
                ret_V_54_reg_3156 <= ret_V_54_fu_715_p2;
                    sext_ln1118_12_reg_3197(17 downto 5) <= sext_ln1118_12_fu_1099_p1(17 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_17_reg_3176 <= cos_lut_samples_V_q0;
                p_Val2_46_reg_3191 <= cos_lut_samples_V_q1;
                ret_V_35_reg_3248 <= grp_fu_2968_p3;
            end if;
        end if;
    end process;
    sext_ln1118_12_reg_3197(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_18_fu_2209_p2 <= std_logic_vector(unsigned(r_V_47_fu_2176_p2) + unsigned(r_V_48_fu_2203_p2));
    add_ln55_10_fu_1769_p2 <= std_logic_vector(signed(sext_ln55_20_fu_1765_p1) + signed(ap_const_lv12_3FF));
    add_ln55_11_fu_1937_p2 <= std_logic_vector(signed(sext_ln55_22_fu_1933_p1) + signed(ap_const_lv12_3FF));
    add_ln55_12_fu_2041_p2 <= std_logic_vector(signed(sext_ln55_24_fu_2037_p1) + signed(ap_const_lv12_3FF));
    add_ln55_13_fu_2423_p2 <= std_logic_vector(signed(sext_ln55_26_fu_2419_p1) + signed(ap_const_lv12_3FF));
    add_ln55_14_fu_2147_p2 <= std_logic_vector(signed(sext_ln55_28_fu_2143_p1) + signed(ap_const_lv12_3FF));
    add_ln55_15_fu_2516_p2 <= std_logic_vector(signed(sext_ln55_30_fu_2512_p1) + signed(ap_const_lv12_3FF));
    add_ln55_16_fu_2600_p2 <= std_logic_vector(signed(sext_ln55_32_fu_2596_p1) + signed(ap_const_lv12_3FF));
    add_ln55_1_fu_865_p2 <= std_logic_vector(signed(sext_ln55_2_fu_861_p1) + signed(ap_const_lv12_3FF));
    add_ln55_2_fu_1540_p2 <= std_logic_vector(signed(sext_ln55_4_fu_1536_p1) + signed(ap_const_lv12_3FF));
    add_ln55_3_fu_1635_p2 <= std_logic_vector(signed(sext_ln55_6_fu_1631_p1) + signed(ap_const_lv12_3FF));
    add_ln55_4_fu_581_p2 <= std_logic_vector(signed(sext_ln55_8_fu_577_p1) + signed(ap_const_lv12_3FF));
    add_ln55_5_fu_973_p2 <= std_logic_vector(signed(sext_ln55_10_fu_969_p1) + signed(ap_const_lv12_3FF));
    add_ln55_6_fu_1063_p2 <= std_logic_vector(signed(sext_ln55_12_fu_1059_p1) + signed(ap_const_lv12_3FF));
    add_ln55_7_fu_676_p2 <= std_logic_vector(signed(sext_ln55_14_fu_672_p1) + signed(ap_const_lv12_3FF));
    add_ln55_8_fu_1186_p2 <= std_logic_vector(signed(sext_ln55_16_fu_1182_p1) + signed(ap_const_lv12_3FF));
    add_ln55_9_fu_1267_p2 <= std_logic_vector(signed(sext_ln55_18_fu_1263_p1) + signed(ap_const_lv12_3FF));
    add_ln55_fu_781_p2 <= std_logic_vector(signed(sext_ln55_fu_777_p1) + signed(ap_const_lv12_3FF));
    add_ln700_1_fu_1841_p2 <= std_logic_vector(unsigned(sub_ln1192_fu_1817_p2) + unsigned(sext_ln1192_2_fu_1822_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to6)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    cos_lut_samples_V_address0 <= zext_ln57_4_fu_605_p1(10 - 1 downto 0);
    cos_lut_samples_V_address1 <= zext_ln57_7_fu_700_p1(10 - 1 downto 0);
    cos_lut_samples_V_address2 <= zext_ln57_fu_805_p1(10 - 1 downto 0);
    cos_lut_samples_V_address3 <= zext_ln57_5_fu_997_p1(10 - 1 downto 0);
    cos_lut_samples_V_address4 <= zext_ln57_1_fu_889_p1(10 - 1 downto 0);
    cos_lut_samples_V_address5 <= zext_ln57_12_fu_2065_p1(10 - 1 downto 0);
    cos_lut_samples_V_address6 <= zext_ln57_14_fu_2171_p1(10 - 1 downto 0);
    cos_lut_samples_V_address7 <= zext_ln57_13_fu_2447_p1(10 - 1 downto 0);
    cos_lut_samples_V_address8 <= zext_ln57_15_fu_2540_p1(10 - 1 downto 0);

    cos_lut_samples_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cos_lut_samples_V_ce0 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cos_lut_samples_V_ce1_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cos_lut_samples_V_ce1 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cos_lut_samples_V_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cos_lut_samples_V_ce2 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    cos_lut_samples_V_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cos_lut_samples_V_ce3 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    cos_lut_samples_V_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cos_lut_samples_V_ce4 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    cos_lut_samples_V_ce5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            cos_lut_samples_V_ce5 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    cos_lut_samples_V_ce6_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            cos_lut_samples_V_ce6 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    cos_lut_samples_V_ce7_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            cos_lut_samples_V_ce7 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    cos_lut_samples_V_ce8_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            cos_lut_samples_V_ce8 <= ap_const_logic_1;
        else 
            cos_lut_samples_V_ce8 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2924_p0 <= sext_ln728_fu_895_p1(12 - 1 downto 0);
    grp_fu_2924_p1 <= ap_const_lv18_3FFD3(7 - 1 downto 0);
    grp_fu_2944_p0 <= sext_ln1118_21_fu_1328_p1(14 - 1 downto 0);
    grp_fu_2944_p1 <= sext_ln1118_21_fu_1328_p1(14 - 1 downto 0);
    grp_fu_2944_p2 <= (p_Val2_5_reg_3111 & ap_const_lv6_0);
    grp_fu_2959_p0 <= sext_ln1118_23_fu_1358_p1(12 - 1 downto 0);
    grp_fu_2959_p1 <= ap_const_lv18_97(9 - 1 downto 0);
    grp_fu_2959_p2 <= ap_const_lv18_D80(13 - 1 downto 0);
    grp_fu_2968_p1 <= ap_const_lv20_97(9 - 1 downto 0);
    grp_fu_2968_p2 <= ap_const_lv20_4680(16 - 1 downto 0);
    grp_fu_2976_p0 <= sext_ln1118_23_fu_1358_p1(12 - 1 downto 0);
    grp_fu_2976_p1 <= ap_const_lv18_B7(9 - 1 downto 0);
    grp_fu_2976_p2 <= ap_const_lv18_2C0(11 - 1 downto 0);
    grp_fu_3015_p1 <= ap_const_lv23_7FFFD5(7 - 1 downto 0);
    grp_fu_3015_p2 <= (mul_ln728_1_reg_3233 & ap_const_lv6_0);
    grp_fu_3023_p2 <= (p_Val2_22_reg_3130_pp0_iter1_reg & ap_const_lv12_0);
    grp_fu_3032_p1 <= ap_const_lv18_138(10 - 1 downto 0);
    grp_fu_3032_p2 <= (p_Val2_22_reg_3130_pp0_iter1_reg & ap_const_lv6_0);
    icmp_ln56_10_fu_1741_p2 <= "0" when (tmp_43_fu_1731_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_11_fu_1909_p2 <= "0" when (tmp_48_fu_1899_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_12_fu_2013_p2 <= "0" when (tmp_53_fu_2003_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_13_fu_2395_p2 <= "0" when (tmp_56_fu_2385_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_14_fu_2119_p2 <= "0" when (tmp_62_fu_2109_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_15_fu_2488_p2 <= "0" when (tmp_65_fu_2478_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_16_fu_2572_p2 <= "0" when (tmp_68_fu_2562_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_1_fu_837_p2 <= "0" when (tmp_5_fu_827_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_2_fu_1512_p2 <= "0" when (tmp_10_fu_1502_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_3_fu_1607_p2 <= "0" when (tmp_14_fu_1597_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_4_fu_553_p2 <= "0" when (tmp_19_fu_543_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_5_fu_945_p2 <= "0" when (tmp_23_fu_935_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_6_fu_1035_p2 <= "0" when (tmp_27_fu_1025_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_7_fu_648_p2 <= "0" when (tmp_31_fu_638_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_8_fu_1158_p2 <= "0" when (tmp_36_fu_1148_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_9_fu_1239_p2 <= "0" when (tmp_39_fu_1229_p4 = ap_const_lv3_0) else "1";
    icmp_ln56_fu_753_p2 <= "0" when (tmp_1_fu_743_p4 = ap_const_lv3_0) else "1";
        lhs_V_10_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_12_reg_3080),13));

        lhs_V_11_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_27_fu_1708_p2),13));

    lhs_V_12_fu_1830_p3 <= (p_Val2_s_reg_3098_pp0_iter1_reg & ap_const_lv6_0);
        lhs_V_13_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_54_fu_715_p2),14));

        lhs_V_14_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_55_fu_1313_p2),14));

        lhs_V_16_fu_1882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_35_reg_3228),13));

        lhs_V_17_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_22_fu_610_p4),13));

        lhs_V_19_fu_1986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_41_reg_3243),13));

        lhs_V_1_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_3111),13));

        lhs_V_20_fu_2368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_43_reg_3339),13));

        lhs_V_21_fu_2092_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_48_reg_3253),13));

        lhs_V_22_fu_2461_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_52_reg_3349),13));

        lhs_V_23_fu_2545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_54_reg_3354),13));

        lhs_V_2_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_10_reg_3171),13));

    lhs_V_3_fu_2263_p3 <= (ret_V_47_fu_2250_p2 & ap_const_lv6_0);
        lhs_V_4_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_13_fu_1573_p2),13));

        lhs_V_5_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_15_fu_521_p1),13));

        lhs_V_6_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_19_fu_913_p2),13));

        lhs_V_7_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_20_fu_1002_p2),13));

        lhs_V_9_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_fu_1120_p4),13));

        lhs_V_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_fu_721_p2),13));

    mul_ln1116_1_fu_2732_p0 <= r_V_25_fu_2719_p2;
    mul_ln1116_1_fu_2732_p1 <= r_V_24_reg_3394;
    mul_ln1116_1_fu_2732_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1116_1_fu_2732_p0) * signed(mul_ln1116_1_fu_2732_p1))), 44));
    mul_ln1116_fu_2780_p0 <= sin_lut_samples_V_load_5_reg_3288_pp0_iter4_reg;
    mul_ln1116_fu_2780_p1 <= r_V_8_reg_3434;
    mul_ln1116_fu_2780_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1116_fu_2780_p0) * signed(mul_ln1116_fu_2780_p1))), 42));
    mul_ln1192_fu_2918_p1 <= ap_const_lv18_2D(7 - 1 downto 0);
    mul_ln700_2_fu_1870_p0 <= r_V_21_reg_3223;
    mul_ln700_2_fu_1870_p1 <= r_V_19_fu_1857_p2;
    mul_ln700_2_fu_1870_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_2_fu_1870_p0) * signed(mul_ln700_2_fu_1870_p1))), 48));
    mul_ln700_3_fu_2350_p0 <= r_V_22_reg_3319;
    mul_ln700_3_fu_2350_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln700_3_fu_2350_p0) * signed(mul_ln700_2_reg_3314))), 48));
    mul_ln728_1_fu_2953_p0 <= sext_ln728_fu_895_p1(12 - 1 downto 0);
    mul_ln728_1_fu_2953_p1 <= ap_const_lv18_3FFD5(7 - 1 downto 0);
    mul_ln728_fu_2632_p0 <= sext_ln1118_10_fu_2629_p1(7 - 1 downto 0);
    mul_ln728_fu_2632_p1 <= sext_ln1118_10_fu_2629_p1(7 - 1 downto 0);
    mul_ln728_fu_2632_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_fu_2632_p0) * signed(mul_ln728_fu_2632_p1))), 13));
    or_ln55_10_fu_1779_p2 <= (tmp_41_fu_1723_p3 or icmp_ln56_10_fu_1741_p2);
    or_ln55_11_fu_1947_p2 <= (tmp_47_fu_1891_p3 or icmp_ln56_11_fu_1909_p2);
    or_ln55_12_fu_2051_p2 <= (tmp_51_fu_1995_p3 or icmp_ln56_12_fu_2013_p2);
    or_ln55_13_fu_2433_p2 <= (tmp_55_fu_2377_p3 or icmp_ln56_13_fu_2395_p2);
    or_ln55_14_fu_2157_p2 <= (tmp_60_fu_2101_p3 or icmp_ln56_14_fu_2119_p2);
    or_ln55_15_fu_2526_p2 <= (tmp_64_fu_2470_p3 or icmp_ln56_15_fu_2488_p2);
    or_ln55_16_fu_2610_p2 <= (tmp_67_fu_2554_p3 or icmp_ln56_16_fu_2572_p2);
    or_ln55_1_fu_875_p2 <= (tmp_4_fu_819_p3 or icmp_ln56_1_fu_837_p2);
    or_ln55_2_fu_1550_p2 <= (tmp_8_fu_1494_p3 or icmp_ln56_2_fu_1512_p2);
    or_ln55_3_fu_1645_p2 <= (tmp_13_fu_1589_p3 or icmp_ln56_3_fu_1607_p2);
    or_ln55_4_fu_591_p2 <= (tmp_17_fu_535_p3 or icmp_ln56_4_fu_553_p2);
    or_ln55_5_fu_983_p2 <= (tmp_22_fu_927_p3 or icmp_ln56_5_fu_945_p2);
    or_ln55_6_fu_1073_p2 <= (tmp_26_fu_1017_p3 or icmp_ln56_6_fu_1035_p2);
    or_ln55_7_fu_686_p2 <= (tmp_30_fu_630_p3 or icmp_ln56_7_fu_648_p2);
    or_ln55_8_fu_1196_p2 <= (tmp_34_fu_1140_p3 or icmp_ln56_8_fu_1158_p2);
    or_ln55_9_fu_1277_p2 <= (tmp_38_fu_1221_p3 or icmp_ln56_9_fu_1239_p2);
    or_ln55_fu_791_p2 <= (tmp_fu_735_p3 or icmp_ln56_fu_753_p2);
    p_Val2_13_fu_1573_p2 <= std_logic_vector(unsigned(sub_ln703_fu_1569_p2) + unsigned(ap_const_lv12_12));
    p_Val2_15_fu_521_p1 <= x_V_in_sig(12 - 1 downto 0);
    p_Val2_19_fu_913_p2 <= std_logic_vector(signed(p_Val2_12_reg_3080) - signed(p_Val2_1_reg_3090));
    p_Val2_20_fu_1002_p2 <= std_logic_vector(signed(p_Val2_5_reg_3111) + signed(ap_const_lv12_FE7));
    p_Val2_22_fu_610_p4 <= x_V_in_sig(47 downto 36);
    p_Val2_24_fu_1120_p4 <= r_V_42_fu_1114_p2(17 downto 6);
    p_Val2_27_fu_1708_p2 <= std_logic_vector(signed(p_Val2_22_reg_3130_pp0_iter1_reg) + signed(ap_const_lv12_FFC));
    p_Val2_2_fu_721_p2 <= std_logic_vector(signed(p_Val2_1_reg_3090) + signed(p_Val2_s_reg_3098));
    p_Val2_5_fu_507_p4 <= x_V_in_sig(35 downto 24);
        r_V_10_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_3098_pp0_iter1_reg),24));

    r_V_11_fu_2993_p0 <= r_V_10_fu_1385_p1(12 - 1 downto 0);
    r_V_11_fu_2993_p1 <= r_V_10_fu_1385_p1(12 - 1 downto 0);
        r_V_13_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_5_reg_3111_pp0_iter1_reg),24));

    r_V_14_fu_3001_p0 <= r_V_13_fu_1482_p1(12 - 1 downto 0);
    r_V_14_fu_3001_p1 <= r_V_13_fu_1482_p1(12 - 1 downto 0);
    r_V_15_fu_2322_p2 <= std_logic_vector(unsigned(shl_ln1118_5_fu_2315_p3) - unsigned(sext_ln1118_18_fu_2312_p1));
        r_V_17_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_22_reg_3130),24));

    r_V_18_fu_2932_p0 <= r_V_17_fu_1296_p1(12 - 1 downto 0);
    r_V_18_fu_2932_p1 <= r_V_17_fu_1296_p1(12 - 1 downto 0);
    r_V_19_fu_1857_p2 <= std_logic_vector(unsigned(shl_ln1118_6_fu_1850_p3) - unsigned(sext_ln1118_20_fu_1847_p1));
        r_V_20_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_24_fu_1303_p2),28));

    r_V_21_fu_2938_p0 <= r_V_20_fu_1309_p1(14 - 1 downto 0);
    r_V_21_fu_2938_p1 <= r_V_20_fu_1309_p1(14 - 1 downto 0);
    r_V_22_fu_1876_p0 <= sext_ln1118_6_fu_1440_p1(7 - 1 downto 0);
    r_V_22_fu_1876_p1 <= sext_ln1118_6_fu_1440_p1(7 - 1 downto 0);
    r_V_22_fu_1876_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_22_fu_1876_p0) * signed(r_V_22_fu_1876_p1))), 14));
    r_V_23_fu_1969_p0 <= sext_ln1118_25_fu_1966_p1(8 - 1 downto 0);
    r_V_23_fu_1969_p1 <= sext_ln1118_25_fu_1966_p1(8 - 1 downto 0);
    r_V_23_fu_1969_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_23_fu_1969_p0) * signed(r_V_23_fu_1969_p1))), 16));
    r_V_25_fu_2719_p0 <= sext_ln1118_31_fu_2716_p1(5 - 1 downto 0);
    r_V_25_fu_2719_p1 <= sext_ln1118_31_fu_2716_p1(5 - 1 downto 0);
    r_V_25_fu_2719_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_25_fu_2719_p0) * signed(r_V_25_fu_2719_p1))), 10));
    r_V_26_fu_2742_p0 <= sext_ln1118_32_fu_2738_p1(5 - 1 downto 0);
    r_V_26_fu_2742_p1 <= sext_ln1118_32_fu_2738_p1(5 - 1 downto 0);
    r_V_26_fu_2742_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_26_fu_2742_p0) * signed(r_V_26_fu_2742_p1))), 10));
    r_V_28_fu_2751_p0 <= zext_ln1118_fu_2748_p1(6 - 1 downto 0);
    r_V_28_fu_2751_p1 <= zext_ln1118_fu_2748_p1(6 - 1 downto 0);
    r_V_28_fu_2751_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_28_fu_2751_p0) * unsigned(r_V_28_fu_2751_p1), 12));
    r_V_29_fu_2764_p0 <= sext_ln1118_33_fu_2761_p1(5 - 1 downto 0);
    r_V_29_fu_2764_p1 <= sext_ln1118_33_fu_2761_p1(5 - 1 downto 0);
    r_V_29_fu_2764_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_29_fu_2764_p0) * signed(r_V_29_fu_2764_p1))), 10));
    r_V_30_fu_3068_p1 <= r_V_30_fu_3068_p10(12 - 1 downto 0);
    r_V_30_fu_3068_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_28_fu_2751_p2),22));
    r_V_33_fu_2801_p0 <= sext_ln1118_35_fu_2798_p1(5 - 1 downto 0);
    r_V_33_fu_2801_p1 <= sext_ln1118_35_fu_2798_p1(5 - 1 downto 0);
    r_V_33_fu_2801_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_33_fu_2801_p0) * signed(r_V_33_fu_2801_p1))), 10));
    r_V_35_fu_2817_p0 <= sext_ln1118_39_fu_2814_p1(7 - 1 downto 0);
    r_V_35_fu_2817_p1 <= sext_ln1118_39_fu_2814_p1(7 - 1 downto 0);
    r_V_35_fu_2817_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_35_fu_2817_p0) * signed(r_V_35_fu_2817_p1))), 14));
    r_V_37_fu_1406_p2 <= std_logic_vector(signed(sext_ln1118_2_fu_1388_p1) + signed(sext_ln1118_4_fu_1402_p1));
    r_V_38_fu_1424_p2 <= std_logic_vector(signed(sext_ln1118_5_fu_1412_p1) + signed(shl_ln1118_1_fu_1416_p3));
    r_V_39_fu_1460_p2 <= std_logic_vector(signed(sext_ln1118_7_fu_1444_p1) + signed(sext_ln1118_8_fu_1456_p1));
    r_V_40_fu_1667_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(r_V_fu_1664_p1));
    r_V_41_fu_2278_p0 <= sext_ln1118_11_fu_2275_p1(5 - 1 downto 0);
    r_V_41_fu_2278_p1 <= sext_ln1118_11_fu_2275_p1(5 - 1 downto 0);
    r_V_41_fu_2278_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_41_fu_2278_p0) * signed(r_V_41_fu_2278_p1))), 10));
    r_V_42_fu_1114_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_1099_p1) - signed(sext_ln1118_13_fu_1110_p1));
    r_V_43_fu_2829_p0 <= sin_lut_samples_V_load_6_reg_3374_pp0_iter5_reg;
    r_V_43_fu_2829_p1 <= mul_ln1116_reg_3469;
    r_V_43_fu_2829_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_43_fu_2829_p0) * signed(r_V_43_fu_2829_p1))), 44));
    r_V_44_fu_1803_p2 <= std_logic_vector(signed(sext_ln1118_4_fu_1402_p1) - signed(sext_ln1118_2_fu_1388_p1));
    r_V_46_fu_2792_p0 <= r_V_26_reg_3449;
    r_V_46_fu_2792_p1 <= mul_ln1116_1_reg_3444;
    r_V_46_fu_2792_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_46_fu_2792_p0) * signed(r_V_46_fu_2792_p1))), 45));
    r_V_47_fu_2176_p2 <= std_logic_vector(signed(sext_ln1118_12_reg_3197) - signed(sext_ln1118_3_fu_1398_p1));
    r_V_48_fu_2203_p2 <= std_logic_vector(signed(sext_ln1118_26_fu_2188_p1) - signed(sext_ln1118_27_fu_2199_p1));
    r_V_49_fu_2860_p0 <= r_V_35_reg_3484;
    r_V_49_fu_2860_p1 <= r_V_34_reg_3479;
    r_V_49_fu_2860_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_49_fu_2860_p0) * signed(r_V_49_fu_2860_p1))), 38));
    r_V_8_fu_2671_p0 <= cos_lut_samples_V_load_4_reg_3283_pp0_iter3_reg;
    r_V_8_fu_2671_p1 <= r_V_7_reg_3369;
    r_V_8_fu_2671_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_fu_2671_p0) * signed(r_V_8_fu_2671_p1))), 35));
        r_V_fu_1664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_3098_pp0_iter1_reg),13));

    ret_V_11_fu_529_p2 <= std_logic_vector(signed(lhs_V_5_fu_525_p1) + signed(ap_const_lv13_200));
    ret_V_13_fu_921_p2 <= std_logic_vector(signed(lhs_V_6_fu_917_p1) + signed(ap_const_lv13_200));
    ret_V_14_fu_1011_p2 <= std_logic_vector(signed(lhs_V_7_fu_1007_p1) + signed(ap_const_lv13_200));
    ret_V_16_fu_624_p2 <= std_logic_vector(signed(lhs_V_17_fu_620_p1) + signed(ap_const_lv13_200));
    ret_V_17_fu_1134_p2 <= std_logic_vector(signed(lhs_V_9_fu_1130_p1) + signed(ap_const_lv13_200));
    ret_V_18_fu_2299_p2 <= std_logic_vector(signed(sext_ln703_16_fu_2284_p1) - signed(sext_ln728_3_fu_2295_p1));
    ret_V_19_fu_1215_p2 <= std_logic_vector(signed(lhs_V_10_fu_709_p1) + signed(ap_const_lv13_200));
    ret_V_20_fu_1717_p2 <= std_logic_vector(signed(lhs_V_11_fu_1713_p1) + signed(ap_const_lv13_200));
    ret_V_24_fu_1303_p2 <= std_logic_vector(signed(lhs_V_13_fu_1299_p1) + signed(ap_const_lv14_23));
    ret_V_26_fu_1322_p2 <= std_logic_vector(signed(lhs_V_14_fu_1318_p1) + signed(ap_const_lv14_2C));
    ret_V_28_fu_1885_p2 <= std_logic_vector(signed(lhs_V_16_fu_1882_p1) + signed(ap_const_lv13_200));
    ret_V_2_fu_729_p2 <= std_logic_vector(signed(lhs_V_fu_725_p1) + signed(ap_const_lv13_200));
    ret_V_30_fu_1352_p2 <= std_logic_vector(signed(sext_ln703_22_fu_1348_p1) + signed(ap_const_lv8_1B));
    ret_V_32_fu_2355_p2 <= std_logic_vector(signed(ret_V_58_reg_3329) + signed(ap_const_lv24_6B000));
    ret_V_34_fu_1989_p2 <= std_logic_vector(signed(lhs_V_19_fu_1986_p1) + signed(ap_const_lv13_200));
    ret_V_37_fu_2371_p2 <= std_logic_vector(signed(lhs_V_20_fu_2368_p1) + signed(ap_const_lv13_200));
    ret_V_39_fu_2455_p2 <= std_logic_vector(signed(sext_ln703_25_fu_2452_p1) + signed(ap_const_lv6_1E));
    ret_V_41_fu_2095_p2 <= std_logic_vector(signed(lhs_V_21_fu_2092_p1) + signed(ap_const_lv13_200));
    ret_V_43_fu_2464_p2 <= std_logic_vector(signed(lhs_V_22_fu_2461_p1) + signed(ap_const_lv13_200));
    ret_V_45_fu_2548_p2 <= std_logic_vector(signed(lhs_V_23_fu_2545_p1) + signed(ap_const_lv13_200));
    ret_V_47_fu_2250_p0 <= ret_V_54_reg_3156_pp0_iter2_reg;
    ret_V_47_fu_2250_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ret_V_47_fu_2250_p0) * signed('0' &ap_const_lv17_B))), 17));
    ret_V_48_fu_1434_p2 <= std_logic_vector(unsigned(r_V_37_fu_1406_p2) - unsigned(sext_ln703_2_fu_1430_p1));
    ret_V_49_fu_1470_p2 <= std_logic_vector(signed(sext_ln703_4_fu_1466_p1) + signed(ret_V_48_fu_1434_p2));
    ret_V_4_fu_813_p2 <= std_logic_vector(signed(lhs_V_1_fu_810_p1) + signed(ap_const_lv13_200));
    ret_V_50_fu_898_p2 <= std_logic_vector(signed(grp_fu_2924_p3) + signed(ap_const_lv18_C80));
    ret_V_51_fu_2650_p2 <= std_logic_vector(signed(add_ln700_reg_3359) + signed(sext_ln728_1_fu_2646_p1));
    ret_V_52_fu_1676_p2 <= std_logic_vector(unsigned(r_V_40_fu_1667_p2) - unsigned(sext_ln703_9_fu_1673_p1));
    ret_V_53_fu_2889_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_2886_p1) + signed(ap_const_lv45_1C8000000000));
    ret_V_54_fu_715_p2 <= std_logic_vector(signed(lhs_V_10_fu_709_p1) - signed(rhs_V_4_fu_712_p1));
    ret_V_55_fu_1313_p2 <= std_logic_vector(signed(lhs_V_10_fu_709_p1) - signed(lhs_V_17_reg_3141));
    ret_V_57_fu_2700_p2 <= std_logic_vector(unsigned(sub_ln700_1_fu_2684_p2) + unsigned(sext_ln728_5_fu_2696_p1));
    ret_V_61_fu_2838_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_2835_p1) + signed(ap_const_lv55_42000000000000));
    ret_V_63_fu_2215_p2 <= std_logic_vector(unsigned(add_ln1192_18_fu_2209_p2) + unsigned(ap_const_lv18_600));
    ret_V_65_fu_2870_p2 <= std_logic_vector(signed(sext_ln1192_4_fu_2866_p1) + signed(ap_const_lv49_1040000000000));
    ret_V_6_fu_1476_p2 <= std_logic_vector(unsigned(ret_V_49_fu_1470_p2) + unsigned(ap_const_lv15_6C80));
    ret_V_8_fu_1488_p2 <= std_logic_vector(signed(lhs_V_2_fu_1485_p1) + signed(ap_const_lv13_200));
    ret_V_9_fu_1583_p2 <= std_logic_vector(signed(lhs_V_4_fu_1579_p1) + signed(ap_const_lv13_200));
    ret_V_fu_1682_p2 <= std_logic_vector(unsigned(ret_V_52_fu_1676_p2) + unsigned(ap_const_lv13_CF));
    rhs_V_1_fu_1696_p3 <= (sin_lut_samples_V_q2 & ap_const_lv6_0);
    rhs_V_2_fu_2288_p3 <= (p_Val2_26_reg_3278 & ap_const_lv6_0);
    rhs_V_3_fu_1809_p3 <= (r_V_44_fu_1803_p2 & ap_const_lv6_0);
        rhs_V_4_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_3090),13));

    rhs_V_6_fu_2689_p3 <= (p_Val2_36_reg_3389 & ap_const_lv36_0);
    rhs_V_fu_2638_p3 <= (mul_ln728_fu_2632_p2 & ap_const_lv6_0);
    select_ln55_10_fu_1785_p3 <= 
        sext_ln55_21_fu_1775_p1 when (or_ln55_10_fu_1779_p2(0) = '1') else 
        ret_V_20_fu_1717_p2;
    select_ln55_11_fu_1953_p3 <= 
        sext_ln55_23_fu_1943_p1 when (or_ln55_11_fu_1947_p2(0) = '1') else 
        ret_V_28_fu_1885_p2;
    select_ln55_12_fu_2057_p3 <= 
        sext_ln55_25_fu_2047_p1 when (or_ln55_12_fu_2051_p2(0) = '1') else 
        ret_V_34_fu_1989_p2;
    select_ln55_13_fu_2439_p3 <= 
        sext_ln55_27_fu_2429_p1 when (or_ln55_13_fu_2433_p2(0) = '1') else 
        ret_V_37_fu_2371_p2;
    select_ln55_14_fu_2163_p3 <= 
        sext_ln55_29_fu_2153_p1 when (or_ln55_14_fu_2157_p2(0) = '1') else 
        ret_V_41_fu_2095_p2;
    select_ln55_15_fu_2532_p3 <= 
        sext_ln55_31_fu_2522_p1 when (or_ln55_15_fu_2526_p2(0) = '1') else 
        ret_V_43_fu_2464_p2;
    select_ln55_16_fu_2616_p3 <= 
        sext_ln55_33_fu_2606_p1 when (or_ln55_16_fu_2610_p2(0) = '1') else 
        ret_V_45_fu_2548_p2;
    select_ln55_1_fu_881_p3 <= 
        sext_ln55_3_fu_871_p1 when (or_ln55_1_fu_875_p2(0) = '1') else 
        ret_V_4_fu_813_p2;
    select_ln55_2_fu_1556_p3 <= 
        sext_ln55_5_fu_1546_p1 when (or_ln55_2_fu_1550_p2(0) = '1') else 
        ret_V_8_fu_1488_p2;
    select_ln55_3_fu_1651_p3 <= 
        sext_ln55_7_fu_1641_p1 when (or_ln55_3_fu_1645_p2(0) = '1') else 
        ret_V_9_fu_1583_p2;
    select_ln55_4_fu_597_p3 <= 
        sext_ln55_9_fu_587_p1 when (or_ln55_4_fu_591_p2(0) = '1') else 
        ret_V_11_fu_529_p2;
    select_ln55_5_fu_989_p3 <= 
        sext_ln55_11_fu_979_p1 when (or_ln55_5_fu_983_p2(0) = '1') else 
        ret_V_13_fu_921_p2;
    select_ln55_6_fu_1079_p3 <= 
        sext_ln55_13_fu_1069_p1 when (or_ln55_6_fu_1073_p2(0) = '1') else 
        ret_V_14_fu_1011_p2;
    select_ln55_7_fu_692_p3 <= 
        sext_ln55_15_fu_682_p1 when (or_ln55_7_fu_686_p2(0) = '1') else 
        ret_V_16_fu_624_p2;
    select_ln55_8_fu_1202_p3 <= 
        sext_ln55_17_fu_1192_p1 when (or_ln55_8_fu_1196_p2(0) = '1') else 
        ret_V_17_fu_1134_p2;
    select_ln55_9_fu_1283_p3 <= 
        sext_ln55_19_fu_1273_p1 when (or_ln55_9_fu_1277_p2(0) = '1') else 
        ret_V_19_fu_1215_p2;
    select_ln55_fu_797_p3 <= 
        sext_ln55_1_fu_787_p1 when (or_ln55_fu_791_p2(0) = '1') else 
        ret_V_2_fu_729_p2;
        sext_ln1118_10_fu_2629_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sin_lut_samples_V_load_2_reg_3364),13));

        sext_ln1118_11_fu_2275_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_46_reg_3191_pp0_iter2_reg),10));

        sext_ln1118_12_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_1092_p3),18));

        sext_ln1118_13_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_1103_p3),18));

        sext_ln1118_18_fu_2312_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_14_reg_3298),26));

        sext_ln1118_20_fu_1847_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_18_reg_3217),26));

        sext_ln1118_21_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_26_fu_1322_p2),18));

        sext_ln1118_23_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_22_reg_3130),18));

        sext_ln1118_25_fu_1966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_30_reg_3238),16));

        sext_ln1118_26_fu_2188_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_7_fu_2181_p3),18));

        sext_ln1118_27_fu_2199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_2192_p3),18));

        sext_ln1118_2_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_3098_pp0_iter1_reg),15));

        sext_ln1118_31_fu_2716_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cos_lut_samples_V_load_5_reg_3399),10));

        sext_ln1118_32_fu_2738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cos_lut_samples_V_q7),10));

        sext_ln1118_33_fu_2761_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cos_lut_samples_V_load_7_reg_3414),10));

        sext_ln1118_35_fu_2798_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cos_lut_samples_V_load_8_reg_3459),10));

        sext_ln1118_39_fu_2814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sin_lut_samples_V_load_9_reg_3464),14));

        sext_ln1118_3_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1391_p3),18));

        sext_ln1118_4_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1391_p3),15));

    sext_ln1118_5_fu_1412_p0 <= cos_lut_samples_V_q2;
        sext_ln1118_5_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_5_fu_1412_p0),7));

    sext_ln1118_6_fu_1440_p0 <= sin_lut_samples_V_q1;
        sext_ln1118_6_fu_1440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_6_fu_1440_p0),14));

    sext_ln1118_7_fu_1444_p0 <= sin_lut_samples_V_q1;
        sext_ln1118_7_fu_1444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_7_fu_1444_p0),10));

        sext_ln1118_8_fu_1456_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1448_p3),10));

        sext_ln1192_1_fu_2886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_43_reg_3489),45));

        sext_ln1192_2_fu_1822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_1809_p3),24));

        sext_ln1192_3_fu_2835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_46_reg_3474),55));

        sext_ln1192_4_fu_2866_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_49_fu_2860_p2),49));

        sext_ln55_10_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_fu_959_p4),12));

        sext_ln55_11_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_5_fu_973_p2),13));

        sext_ln55_12_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_fu_1049_p4),12));

        sext_ln55_13_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_6_fu_1063_p2),13));

        sext_ln55_14_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_662_p4),12));

        sext_ln55_15_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_7_fu_676_p2),13));

        sext_ln55_16_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_1172_p4),12));

        sext_ln55_17_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_8_fu_1186_p2),13));

        sext_ln55_18_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_fu_1253_p4),12));

        sext_ln55_19_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_9_fu_1267_p2),13));

        sext_ln55_1_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_fu_781_p2),13));

        sext_ln55_20_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_32_fu_1755_p4),12));

        sext_ln55_21_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_10_fu_1769_p2),13));

        sext_ln55_22_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_35_fu_1923_p4),12));

        sext_ln55_23_fu_1943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_11_fu_1937_p2),13));

        sext_ln55_24_fu_2037_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_42_fu_2027_p4),12));

        sext_ln55_25_fu_2047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_12_fu_2041_p2),13));

        sext_ln55_26_fu_2419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_45_fu_2409_p4),12));

        sext_ln55_27_fu_2429_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_13_fu_2423_p2),13));

        sext_ln55_28_fu_2143_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_2133_p4),12));

        sext_ln55_29_fu_2153_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_14_fu_2147_p2),13));

        sext_ln55_2_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_851_p4),12));

        sext_ln55_30_fu_2512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_52_fu_2502_p4),12));

        sext_ln55_31_fu_2522_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_15_fu_2516_p2),13));

        sext_ln55_32_fu_2596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_57_fu_2586_p4),12));

        sext_ln55_33_fu_2606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_16_fu_2600_p2),13));

        sext_ln55_3_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_1_fu_865_p2),13));

        sext_ln55_4_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_1526_p4),12));

        sext_ln55_5_fu_1546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_2_fu_1540_p2),13));

        sext_ln55_6_fu_1631_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1621_p4),12));

        sext_ln55_7_fu_1641_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_3_fu_1635_p2),13));

        sext_ln55_8_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_567_p4),12));

        sext_ln55_9_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_4_fu_581_p2),13));

        sext_ln55_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_767_p4),12));

        sext_ln703_16_fu_2284_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_41_fu_2278_p2),14));

        sext_ln703_22_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sin_lut_samples_V_q0),8));

        sext_ln703_25_fu_2452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_46_reg_3191_pp0_iter2_reg),6));

        sext_ln703_2_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_38_fu_1424_p2),15));

        sext_ln703_4_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_39_fu_1460_p2),15));

        sext_ln703_9_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_17_reg_3176),13));

        sext_ln728_1_fu_2646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_2638_p3),24));

        sext_ln728_3_fu_2295_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_2288_p3),14));

        sext_ln728_5_fu_2696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_6_fu_2689_p3),48));

        sext_ln728_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_3098),18));

    shl_ln1118_1_fu_1416_p1 <= cos_lut_samples_V_q2;
    shl_ln1118_1_fu_1416_p3 <= (shl_ln1118_1_fu_1416_p1 & ap_const_lv2_0);
    shl_ln1118_2_fu_1448_p1 <= sin_lut_samples_V_q1;
    shl_ln1118_2_fu_1448_p3 <= (shl_ln1118_2_fu_1448_p1 & ap_const_lv2_0);
    shl_ln1118_3_fu_1092_p3 <= (p_Val2_s_reg_3098 & ap_const_lv5_0);
    shl_ln1118_4_fu_1103_p3 <= (p_Val2_s_reg_3098 & ap_const_lv3_0);
    shl_ln1118_5_fu_2315_p3 <= (r_V_14_reg_3298 & ap_const_lv2_0);
    shl_ln1118_6_fu_1850_p3 <= (r_V_18_reg_3217 & ap_const_lv2_0);
    shl_ln1118_7_fu_2181_p3 <= (p_Val2_22_reg_3130_pp0_iter1_reg & ap_const_lv5_0);
    shl_ln1118_8_fu_2192_p3 <= (p_Val2_22_reg_3130_pp0_iter1_reg & ap_const_lv2_0);
    shl_ln1_fu_2335_p3 <= (add_ln700_1_reg_3309 & ap_const_lv12_0);
    shl_ln700_1_fu_2677_p3 <= (sub_ln700_reg_3379 & ap_const_lv12_0);
    shl_ln703_fu_1798_p2 <= std_logic_vector(shift_left(unsigned(r_V_11_fu_2993_p2),to_integer(unsigned('0' & ap_const_lv24_2(24-1 downto 0)))));
    shl_ln_fu_1391_p3 <= (p_Val2_s_reg_3098_pp0_iter1_reg & ap_const_lv2_0);
    sin_lut_samples_V_address0 <= zext_ln57_7_fu_700_p1(10 - 1 downto 0);
    sin_lut_samples_V_address1 <= zext_ln57_1_fu_889_p1(10 - 1 downto 0);
    sin_lut_samples_V_address2 <= zext_ln57_6_fu_1087_p1(10 - 1 downto 0);
    sin_lut_samples_V_address3 <= zext_ln57_8_fu_1210_p1(10 - 1 downto 0);
    sin_lut_samples_V_address4 <= zext_ln57_9_fu_1291_p1(10 - 1 downto 0);
    sin_lut_samples_V_address5 <= zext_ln57_2_fu_1564_p1(10 - 1 downto 0);
    sin_lut_samples_V_address6 <= zext_ln57_3_fu_1659_p1(10 - 1 downto 0);
    sin_lut_samples_V_address7 <= zext_ln57_10_fu_1793_p1(10 - 1 downto 0);
    sin_lut_samples_V_address8 <= zext_ln57_11_fu_1961_p1(10 - 1 downto 0);
    sin_lut_samples_V_address9 <= zext_ln57_16_fu_2624_p1(10 - 1 downto 0);

    sin_lut_samples_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sin_lut_samples_V_ce0 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sin_lut_samples_V_ce1 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sin_lut_samples_V_ce2 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sin_lut_samples_V_ce3 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sin_lut_samples_V_ce4 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sin_lut_samples_V_ce5 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce6_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sin_lut_samples_V_ce6 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce7_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sin_lut_samples_V_ce7 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce8_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sin_lut_samples_V_ce8 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    sin_lut_samples_V_ce9_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            sin_lut_samples_V_ce9 <= ap_const_logic_1;
        else 
            sin_lut_samples_V_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1192_fu_1817_p2 <= std_logic_vector(signed(r_V_11_fu_2993_p2) - signed(shl_ln703_fu_1798_p2));
    sub_ln700_1_fu_2684_p2 <= std_logic_vector(unsigned(shl_ln700_1_fu_2677_p3) - unsigned(mul_ln700_3_reg_3384));
    sub_ln700_fu_2342_p2 <= std_logic_vector(unsigned(shl_ln1_fu_2335_p3) - unsigned(mul_ln700_1_fu_3055_p2));
    sub_ln703_fu_1569_p2 <= std_logic_vector(signed(p_Val2_12_reg_3080_pp0_iter1_reg) - signed(p_Val2_5_reg_3111_pp0_iter1_reg));
    tmp_10_fu_1502_p4 <= ret_V_8_fu_1488_p2(12 downto 10);
    tmp_11_fu_1518_p3 <= ret_V_8_fu_1488_p2(12 downto 12);
    tmp_12_fu_567_p4 <= ((tmp_20_fu_559_p3 & ap_const_lv9_0) & tmp_20_fu_559_p3);
    tmp_13_fu_1589_p3 <= ret_V_9_fu_1583_p2(12 downto 12);
    tmp_14_fu_1597_p4 <= ret_V_9_fu_1583_p2(12 downto 10);
    tmp_15_fu_959_p4 <= ((tmp_25_fu_951_p3 & ap_const_lv9_0) & tmp_25_fu_951_p3);
    tmp_16_fu_1613_p3 <= ret_V_9_fu_1583_p2(12 downto 12);
    tmp_17_fu_535_p3 <= ret_V_11_fu_529_p2(12 downto 12);
    tmp_18_fu_1049_p4 <= ((tmp_28_fu_1041_p3 & ap_const_lv9_0) & tmp_28_fu_1041_p3);
    tmp_19_fu_543_p4 <= ret_V_11_fu_529_p2(12 downto 10);
    tmp_1_fu_743_p4 <= ret_V_2_fu_729_p2(12 downto 10);
    tmp_20_fu_559_p3 <= ret_V_11_fu_529_p2(12 downto 12);
    tmp_21_fu_662_p4 <= ((tmp_33_fu_654_p3 & ap_const_lv9_0) & tmp_33_fu_654_p3);
    tmp_22_fu_927_p3 <= ret_V_13_fu_921_p2(12 downto 12);
    tmp_23_fu_935_p4 <= ret_V_13_fu_921_p2(12 downto 10);
    tmp_24_fu_1172_p4 <= ((tmp_37_fu_1164_p3 & ap_const_lv9_0) & tmp_37_fu_1164_p3);
    tmp_25_fu_951_p3 <= ret_V_13_fu_921_p2(12 downto 12);
    tmp_26_fu_1017_p3 <= ret_V_14_fu_1011_p2(12 downto 12);
    tmp_27_fu_1025_p4 <= ret_V_14_fu_1011_p2(12 downto 10);
    tmp_28_fu_1041_p3 <= ret_V_14_fu_1011_p2(12 downto 12);
    tmp_29_fu_1253_p4 <= ((tmp_40_fu_1245_p3 & ap_const_lv9_0) & tmp_40_fu_1245_p3);
    tmp_2_fu_759_p3 <= ret_V_2_fu_729_p2(12 downto 12);
    tmp_30_fu_630_p3 <= ret_V_16_fu_624_p2(12 downto 12);
    tmp_31_fu_638_p4 <= ret_V_16_fu_624_p2(12 downto 10);
    tmp_32_fu_1755_p4 <= ((tmp_44_fu_1747_p3 & ap_const_lv9_0) & tmp_44_fu_1747_p3);
    tmp_33_fu_654_p3 <= ret_V_16_fu_624_p2(12 downto 12);
    tmp_34_fu_1140_p3 <= ret_V_17_fu_1134_p2(12 downto 12);
    tmp_35_fu_1923_p4 <= ((tmp_50_fu_1915_p3 & ap_const_lv9_0) & tmp_50_fu_1915_p3);
    tmp_36_fu_1148_p4 <= ret_V_17_fu_1134_p2(12 downto 10);
    tmp_37_fu_1164_p3 <= ret_V_17_fu_1134_p2(12 downto 12);
    tmp_38_fu_1221_p3 <= ret_V_19_fu_1215_p2(12 downto 12);
    tmp_39_fu_1229_p4 <= ret_V_19_fu_1215_p2(12 downto 10);
    tmp_3_fu_767_p4 <= ((tmp_2_fu_759_p3 & ap_const_lv9_0) & tmp_2_fu_759_p3);
    tmp_40_fu_1245_p3 <= ret_V_19_fu_1215_p2(12 downto 12);
    tmp_41_fu_1723_p3 <= ret_V_20_fu_1717_p2(12 downto 12);
    tmp_42_fu_2027_p4 <= ((tmp_54_fu_2019_p3 & ap_const_lv9_0) & tmp_54_fu_2019_p3);
    tmp_43_fu_1731_p4 <= ret_V_20_fu_1717_p2(12 downto 10);
    tmp_44_fu_1747_p3 <= ret_V_20_fu_1717_p2(12 downto 12);
    tmp_45_fu_2409_p4 <= ((tmp_58_fu_2401_p3 & ap_const_lv9_0) & tmp_58_fu_2401_p3);
    tmp_46_fu_2895_p4 <= ret_V_53_fu_2889_p2(44 downto 36);
    tmp_47_fu_1891_p3 <= ret_V_28_fu_1885_p2(12 downto 12);
    tmp_48_fu_1899_p4 <= ret_V_28_fu_1885_p2(12 downto 10);
    tmp_49_fu_2133_p4 <= ((tmp_63_fu_2125_p3 & ap_const_lv9_0) & tmp_63_fu_2125_p3);
    tmp_4_fu_819_p3 <= ret_V_4_fu_813_p2(12 downto 12);
    tmp_50_fu_1915_p3 <= ret_V_28_fu_1885_p2(12 downto 12);
    tmp_51_fu_1995_p3 <= ret_V_34_fu_1989_p2(12 downto 12);
    tmp_52_fu_2502_p4 <= ((tmp_66_fu_2494_p3 & ap_const_lv9_0) & tmp_66_fu_2494_p3);
    tmp_53_fu_2003_p4 <= ret_V_34_fu_1989_p2(12 downto 10);
    tmp_54_fu_2019_p3 <= ret_V_34_fu_1989_p2(12 downto 12);
    tmp_55_fu_2377_p3 <= ret_V_37_fu_2371_p2(12 downto 12);
    tmp_56_fu_2385_p4 <= ret_V_37_fu_2371_p2(12 downto 10);
    tmp_57_fu_2586_p4 <= ((tmp_69_fu_2578_p3 & ap_const_lv9_0) & tmp_69_fu_2578_p3);
    tmp_58_fu_2401_p3 <= ret_V_37_fu_2371_p2(12 downto 12);
    tmp_5_fu_827_p4 <= ret_V_4_fu_813_p2(12 downto 10);
    tmp_60_fu_2101_p3 <= ret_V_41_fu_2095_p2(12 downto 12);
    tmp_62_fu_2109_p4 <= ret_V_41_fu_2095_p2(12 downto 10);
    tmp_63_fu_2125_p3 <= ret_V_41_fu_2095_p2(12 downto 12);
    tmp_64_fu_2470_p3 <= ret_V_43_fu_2464_p2(12 downto 12);
    tmp_65_fu_2478_p4 <= ret_V_43_fu_2464_p2(12 downto 10);
    tmp_66_fu_2494_p3 <= ret_V_43_fu_2464_p2(12 downto 12);
    tmp_67_fu_2554_p3 <= ret_V_45_fu_2548_p2(12 downto 12);
    tmp_68_fu_2562_p4 <= ret_V_45_fu_2548_p2(12 downto 10);
    tmp_69_fu_2578_p3 <= ret_V_45_fu_2548_p2(12 downto 12);
    tmp_6_fu_851_p4 <= ((tmp_7_fu_843_p3 & ap_const_lv9_0) & tmp_7_fu_843_p3);
    tmp_7_fu_843_p3 <= ret_V_4_fu_813_p2(12 downto 12);
    tmp_8_fu_1494_p3 <= ret_V_8_fu_1488_p2(12 downto 12);
    tmp_9_fu_1526_p4 <= ((tmp_11_fu_1518_p3 & ap_const_lv9_0) & tmp_11_fu_1518_p3);
    tmp_fu_735_p3 <= ret_V_2_fu_729_p2(12 downto 12);
    tmp_s_fu_1621_p4 <= ((tmp_16_fu_1613_p3 & ap_const_lv9_0) & tmp_16_fu_1613_p3);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= trunc_ln_reg_3429_pp0_iter6_reg;

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_1_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_46_fu_2895_p4),12));


    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_4_reg_3439_pp0_iter6_reg;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_3_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_59_reg_3494),12));


    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        y_4_V <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_70_reg_3499),12));


    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1118_fu_2748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_39_reg_3409),12));
    zext_ln57_10_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_10_fu_1785_p3),64));
    zext_ln57_11_fu_1961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_11_fu_1953_p3),64));
    zext_ln57_12_fu_2065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_12_fu_2057_p3),64));
    zext_ln57_13_fu_2447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_13_fu_2439_p3),64));
    zext_ln57_14_fu_2171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_14_fu_2163_p3),64));
    zext_ln57_15_fu_2540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_15_fu_2532_p3),64));
    zext_ln57_16_fu_2624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_16_fu_2616_p3),64));
    zext_ln57_1_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_1_fu_881_p3),64));
    zext_ln57_2_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_2_fu_1556_p3),64));
    zext_ln57_3_fu_1659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_3_fu_1651_p3),64));
    zext_ln57_4_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_4_fu_597_p3),64));
    zext_ln57_5_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_5_fu_989_p3),64));
    zext_ln57_6_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_6_fu_1079_p3),64));
    zext_ln57_7_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_7_fu_692_p3),64));
    zext_ln57_8_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_8_fu_1202_p3),64));
    zext_ln57_9_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_9_fu_1283_p3),64));
    zext_ln57_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln55_fu_797_p3),64));
end behav;
