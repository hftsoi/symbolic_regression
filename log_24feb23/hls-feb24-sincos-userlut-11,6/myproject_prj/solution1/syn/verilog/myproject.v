// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.217800,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=15,HLS_SYN_FF=473,HLS_SYN_LUT=830,HLS_VERSION=2020_1}" *)

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V_ap_vld,
        x_V,
        y_0_V,
        y_0_V_ap_vld,
        y_1_V,
        y_1_V_ap_vld,
        y_2_V,
        y_2_V_ap_vld,
        y_3_V,
        y_3_V_ap_vld,
        y_4_V,
        y_4_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   x_V_ap_vld;
input  [175:0] x_V;
output  [10:0] y_0_V;
output   y_0_V_ap_vld;
output  [10:0] y_1_V;
output   y_1_V_ap_vld;
output  [10:0] y_2_V;
output   y_2_V_ap_vld;
output  [10:0] y_3_V;
output   y_3_V_ap_vld;
output  [10:0] y_4_V;
output   y_4_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg y_0_V_ap_vld;
reg y_1_V_ap_vld;
reg y_2_V_ap_vld;
reg y_3_V_ap_vld;
reg y_4_V_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    x_V_ap_vld_in_sig;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [175:0] x_V_preg;
reg   [175:0] x_V_in_sig;
reg    x_V_ap_vld_preg;
reg    x_V_blk_n;
wire    ap_block_pp0_stage0;
reg   [10:0] trunc_ln_reg_699;
reg   [10:0] trunc_ln_reg_699_pp0_iter1_reg;
wire  signed [11:0] ret_V_fu_376_p2;
reg  signed [11:0] ret_V_reg_704;
wire  signed [21:0] r_V_8_fu_646_p2;
reg  signed [21:0] r_V_8_reg_710;
wire   [16:0] ret_V_6_fu_424_p2;
reg  signed [16:0] ret_V_6_reg_715;
wire  signed [20:0] grp_fu_638_p3;
reg  signed [20:0] sub_ln700_1_reg_720;
wire  signed [21:0] r_V_10_fu_652_p2;
reg  signed [21:0] r_V_10_reg_725;
wire  signed [25:0] r_V_12_fu_658_p2;
reg  signed [25:0] r_V_12_reg_730;
wire  signed [15:0] mul_ln728_fu_664_p2;
reg  signed [15:0] mul_ln728_reg_735;
wire  signed [35:0] add_ln1116_fu_498_p2;
reg  signed [35:0] add_ln1116_reg_740;
wire  signed [30:0] grp_fu_678_p3;
reg  signed [30:0] sub_ln700_reg_745;
wire  signed [40:0] mul_ln700_1_fu_523_p2;
reg  signed [40:0] mul_ln700_1_reg_750;
wire  signed [26:0] r_V_13_fu_686_p2;
reg  signed [26:0] r_V_13_reg_755;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire  signed [10:0] p_Val2_8_fu_182_p4;
wire   [12:0] shl_ln_fu_196_p3;
wire  signed [13:0] sext_ln1118_fu_192_p1;
wire  signed [13:0] sext_ln1118_1_fu_204_p1;
wire  signed [10:0] p_Val2_3_fu_214_p4;
wire   [12:0] shl_ln1118_1_fu_228_p3;
wire  signed [13:0] sext_ln1118_2_fu_224_p1;
wire  signed [13:0] sext_ln1118_3_fu_236_p1;
wire   [13:0] r_V_15_fu_208_p2;
wire  signed [13:0] r_V_16_fu_240_p2;
wire  signed [14:0] sext_ln703_fu_246_p1;
wire  signed [14:0] sext_ln703_1_fu_250_p1;
wire  signed [10:0] p_Val2_2_fu_260_p4;
wire   [11:0] r_V_17_fu_270_p3;
wire  signed [12:0] sext_ln703_2_fu_278_p1;
wire   [10:0] p_Val2_5_fu_282_p4;
wire  signed [12:0] add_ln1192_fu_292_p2;
wire   [17:0] tmp_3_fu_310_p3;
wire  signed [18:0] sext_ln1118_5_fu_306_p1;
wire  signed [18:0] sext_ln1118_6_fu_318_p1;
wire   [18:0] r_V_18_fu_322_p2;
wire   [14:0] ret_V_12_fu_254_p2;
wire   [19:0] lhs_V_fu_332_p3;
wire  signed [20:0] sext_ln1118_7_fu_328_p1;
wire  signed [20:0] sext_ln700_fu_340_p1;
wire   [20:0] add_ln700_fu_344_p2;
wire   [20:0] ret_V_13_fu_350_p2;
wire  signed [11:0] r_V_fu_366_p1;
wire   [11:0] ret_V_14_fu_370_p2;
wire  signed [15:0] rhs_V_2_fu_404_p3;
wire  signed [16:0] sext_ln703_6_fu_420_p1;
wire  signed [16:0] sext_ln728_1_fu_416_p1;
wire   [10:0] p_Val2_11_fu_382_p4;
wire  signed [11:0] lhs_V_1_fu_392_p1;
wire  signed [11:0] rhs_V_fu_434_p1;
wire   [11:0] ret_V_16_fu_438_p2;
wire  signed [12:0] lhs_V_3_fu_444_p1;
wire   [12:0] ret_V_8_fu_448_p2;
wire  signed [13:0] sext_ln703_4_fu_458_p1;
wire   [13:0] p_shl5_fu_461_p3;
wire   [13:0] add_ln703_fu_468_p2;
wire  signed [13:0] ret_V_4_fu_474_p2;
wire  signed [24:0] r_V_5_fu_670_p2;
wire   [26:0] tmp_fu_487_p3;
wire  signed [35:0] sext_ln1116_fu_484_p1;
wire  signed [35:0] sext_ln1116_1_fu_494_p1;
wire  signed [21:0] mul_ln700_1_fu_523_p0;
wire  signed [25:0] mul_ln700_1_fu_523_p1;
wire   [20:0] lhs_V_4_fu_529_p3;
wire  signed [20:0] ret_V_10_fu_536_p2;
wire  signed [27:0] r_V_19_fu_546_p0;
wire   [35:0] r_V_19_fu_546_p2;
wire  signed [36:0] sext_ln1192_fu_551_p1;
wire   [36:0] ret_V_15_fu_555_p2;
wire   [6:0] tmp_1_fu_561_p4;
wire   [40:0] mul_ln700_2_fu_583_p2;
wire   [40:0] shl_ln700_1_fu_576_p3;
wire   [40:0] add_ln700_1_fu_588_p2;
wire   [40:0] ret_V_17_fu_594_p2;
wire  signed [34:0] r_V_20_fu_692_p2;
wire  signed [45:0] sext_ln1192_2_fu_614_p1;
wire   [45:0] ret_V_18_fu_617_p2;
wire   [5:0] tmp_2_fu_623_p4;
wire  signed [10:0] r_V_8_fu_646_p0;
wire  signed [21:0] r_V_7_fu_302_p1;
wire  signed [10:0] r_V_8_fu_646_p1;
wire  signed [10:0] r_V_10_fu_652_p0;
wire  signed [21:0] r_V_9_fu_430_p1;
wire  signed [10:0] r_V_10_fu_652_p1;
wire  signed [12:0] r_V_12_fu_658_p0;
wire  signed [25:0] r_V_11_fu_454_p1;
wire  signed [12:0] r_V_12_fu_658_p1;
wire  signed [5:0] mul_ln728_fu_664_p1;
wire   [10:0] r_V_5_fu_670_p1;
wire   [30:0] grp_fu_678_p2;
wire   [5:0] r_V_13_fu_686_p1;
wire   [10:0] r_V_20_fu_692_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 x_V_preg = 176'd0;
#0 x_V_ap_vld_preg = 1'b0;
end

myproject_mac_mulsub_11s_11s_16s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
myproject_mac_mulsub_11s_11s_16s_21_1_1_U1(
    .din0(p_Val2_2_fu_260_p4),
    .din1(p_Val2_2_fu_260_p4),
    .din2(rhs_V_2_fu_404_p3),
    .dout(grp_fu_638_p3)
);

myproject_mul_mul_11s_11s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 22 ))
myproject_mul_mul_11s_11s_22_1_1_U2(
    .din0(r_V_8_fu_646_p0),
    .din1(r_V_8_fu_646_p1),
    .dout(r_V_8_fu_646_p2)
);

myproject_mul_mul_11s_11s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 22 ))
myproject_mul_mul_11s_11s_22_1_1_U3(
    .din0(r_V_10_fu_652_p0),
    .din1(r_V_10_fu_652_p1),
    .dout(r_V_10_fu_652_p2)
);

myproject_mul_mul_13s_13s_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_13s_13s_26_1_1_U4(
    .din0(r_V_12_fu_658_p0),
    .din1(r_V_12_fu_658_p1),
    .dout(r_V_12_fu_658_p2)
);

myproject_mul_mul_11s_6s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
myproject_mul_mul_11s_6s_16_1_1_U5(
    .din0(p_Val2_2_fu_260_p4),
    .din1(mul_ln728_fu_664_p1),
    .dout(mul_ln728_fu_664_p2)
);

myproject_mul_mul_14s_11ns_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 25 ))
myproject_mul_mul_14s_11ns_25_1_1_U6(
    .din0(ret_V_4_fu_474_p2),
    .din1(r_V_5_fu_670_p1),
    .dout(r_V_5_fu_670_p2)
);

myproject_mac_mulsub_22s_17s_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
myproject_mac_mulsub_22s_17s_31ns_31_1_1_U7(
    .din0(r_V_8_reg_710),
    .din1(ret_V_6_reg_715),
    .din2(grp_fu_678_p2),
    .dout(grp_fu_678_p3)
);

myproject_mul_mul_21s_6ns_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 27 ))
myproject_mul_mul_21s_6ns_27_1_1_U8(
    .din0(ret_V_10_fu_536_p2),
    .din1(r_V_13_fu_686_p1),
    .dout(r_V_13_fu_686_p2)
);

myproject_mul_mul_27s_11ns_35_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 35 ))
myproject_mul_mul_27s_11ns_35_1_1_U9(
    .din0(r_V_13_reg_755),
    .din1(r_V_20_fu_692_p1),
    .dout(r_V_20_fu_692_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_ap_vld_preg <= x_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_preg <= 176'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_preg <= x_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1116_reg_740 <= add_ln1116_fu_498_p2;
        mul_ln700_1_reg_750 <= mul_ln700_1_fu_523_p2;
        mul_ln728_reg_735 <= mul_ln728_fu_664_p2;
        r_V_10_reg_725 <= r_V_10_fu_652_p2;
        r_V_12_reg_730 <= r_V_12_fu_658_p2;
        r_V_13_reg_755 <= r_V_13_fu_686_p2;
        r_V_8_reg_710 <= r_V_8_fu_646_p2;
        ret_V_6_reg_715 <= ret_V_6_fu_424_p2;
        ret_V_reg_704 <= ret_V_fu_376_p2;
        trunc_ln_reg_699 <= {{ret_V_13_fu_350_p2[20:10]}};
        trunc_ln_reg_699_pp0_iter1_reg <= trunc_ln_reg_699;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln700_1_reg_720 <= grp_fu_638_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln700_reg_745 <= grp_fu_678_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_ap_vld_in_sig = x_V_ap_vld;
    end else begin
        x_V_ap_vld_in_sig = x_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_blk_n = x_V_ap_vld;
    end else begin
        x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_in_sig = x_V;
    end else begin
        x_V_in_sig = x_V_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_0_V_ap_vld = 1'b1;
    end else begin
        y_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_1_V_ap_vld = 1'b1;
    end else begin
        y_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_2_V_ap_vld = 1'b1;
    end else begin
        y_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_3_V_ap_vld = 1'b1;
    end else begin
        y_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_4_V_ap_vld = 1'b1;
    end else begin
        y_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1116_fu_498_p2 = ($signed(sext_ln1116_fu_484_p1) + $signed(sext_ln1116_1_fu_494_p1));

assign add_ln1192_fu_292_p2 = ($signed(sext_ln703_2_fu_278_p1) + $signed(13'd6872));

assign add_ln700_1_fu_588_p2 = (mul_ln700_2_fu_583_p2 + shl_ln700_1_fu_576_p3);

assign add_ln700_fu_344_p2 = ($signed(sext_ln1118_7_fu_328_p1) + $signed(sext_ln700_fu_340_p1));

assign add_ln703_fu_468_p2 = ($signed(sext_ln703_4_fu_458_p1) + $signed(p_shl5_fu_461_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_678_p2 = {{sub_ln700_1_reg_720}, {10'd0}};

assign lhs_V_1_fu_392_p1 = p_Val2_8_fu_182_p4;

assign lhs_V_3_fu_444_p1 = $signed(ret_V_16_fu_438_p2);

assign lhs_V_4_fu_529_p3 = {{mul_ln728_reg_735}, {5'd0}};

assign lhs_V_fu_332_p3 = {{ret_V_12_fu_254_p2}, {5'd0}};

assign mul_ln700_1_fu_523_p0 = r_V_10_reg_725;

assign mul_ln700_1_fu_523_p1 = r_V_12_reg_730;

assign mul_ln700_1_fu_523_p2 = ($signed(mul_ln700_1_fu_523_p0) * $signed(mul_ln700_1_fu_523_p1));

assign mul_ln700_2_fu_583_p2 = ($signed(mul_ln700_1_reg_750) * $signed(-41'h3C1));

assign mul_ln728_fu_664_p1 = 16'd65515;

assign p_Val2_11_fu_382_p4 = {{x_V_in_sig[43:33]}};

assign p_Val2_2_fu_260_p4 = {{x_V_in_sig[175:165]}};

assign p_Val2_3_fu_214_p4 = {{x_V_in_sig[54:44]}};

assign p_Val2_5_fu_282_p4 = {{x_V_in_sig[32:22]}};

assign p_Val2_8_fu_182_p4 = {{x_V_in_sig[164:154]}};

assign p_shl5_fu_461_p3 = {{ret_V_reg_704}, {2'd0}};

assign r_V_10_fu_652_p0 = r_V_9_fu_430_p1;

assign r_V_10_fu_652_p1 = r_V_9_fu_430_p1;

assign r_V_11_fu_454_p1 = $signed(ret_V_8_fu_448_p2);

assign r_V_12_fu_658_p0 = r_V_11_fu_454_p1;

assign r_V_12_fu_658_p1 = r_V_11_fu_454_p1;

assign r_V_13_fu_686_p1 = 27'd25;

assign r_V_15_fu_208_p2 = ($signed(sext_ln1118_fu_192_p1) + $signed(sext_ln1118_1_fu_204_p1));

assign r_V_16_fu_240_p2 = ($signed(sext_ln1118_2_fu_224_p1) + $signed(sext_ln1118_3_fu_236_p1));

assign r_V_17_fu_270_p3 = {{p_Val2_2_fu_260_p4}, {1'd0}};

assign r_V_18_fu_322_p2 = ($signed(sext_ln1118_5_fu_306_p1) - $signed(sext_ln1118_6_fu_318_p1));

assign r_V_19_fu_546_p0 = add_ln1116_reg_740;

assign r_V_19_fu_546_p2 = ($signed(r_V_19_fu_546_p0) * $signed('h3C1));

assign r_V_20_fu_692_p1 = 35'd625;

assign r_V_5_fu_670_p1 = 25'd1017;

assign r_V_7_fu_302_p1 = $signed(p_Val2_5_fu_282_p4);

assign r_V_8_fu_646_p0 = r_V_7_fu_302_p1;

assign r_V_8_fu_646_p1 = r_V_7_fu_302_p1;

assign r_V_9_fu_430_p1 = $signed(p_Val2_11_fu_382_p4);

assign r_V_fu_366_p1 = p_Val2_2_fu_260_p4;

assign ret_V_10_fu_536_p2 = (lhs_V_4_fu_529_p3 + 21'd47468);

assign ret_V_12_fu_254_p2 = ($signed(sext_ln703_fu_246_p1) - $signed(sext_ln703_1_fu_250_p1));

assign ret_V_13_fu_350_p2 = (add_ln700_fu_344_p2 + 21'd30752);

assign ret_V_14_fu_370_p2 = ($signed(12'd4091) - $signed(r_V_fu_366_p1));

assign ret_V_15_fu_555_p2 = ($signed(sext_ln1192_fu_551_p1) + $signed(37'd107374182400));

assign ret_V_16_fu_438_p2 = ($signed(lhs_V_1_fu_392_p1) - $signed(rhs_V_fu_434_p1));

assign ret_V_17_fu_594_p2 = ($signed(add_ln700_1_fu_588_p2) + $signed(41'd2165737259008));

assign ret_V_18_fu_617_p2 = ($signed(sext_ln1192_2_fu_614_p1) + $signed(46'd36283883716608));

assign ret_V_4_fu_474_p2 = (add_ln703_fu_468_p2 + 14'd992);

assign ret_V_6_fu_424_p2 = ($signed(sext_ln703_6_fu_420_p1) + $signed(sext_ln728_1_fu_416_p1));

assign ret_V_8_fu_448_p2 = ($signed(lhs_V_3_fu_444_p1) + $signed(13'd17));

assign ret_V_fu_376_p2 = (ret_V_14_fu_370_p2 + 12'd103);

assign rhs_V_2_fu_404_p3 = {{p_Val2_2_fu_260_p4}, {5'd0}};

assign rhs_V_fu_434_p1 = p_Val2_3_fu_214_p4;

assign sext_ln1116_1_fu_494_p1 = $signed(tmp_fu_487_p3);

assign sext_ln1116_fu_484_p1 = r_V_5_fu_670_p2;

assign sext_ln1118_1_fu_204_p1 = $signed(shl_ln_fu_196_p3);

assign sext_ln1118_2_fu_224_p1 = p_Val2_3_fu_214_p4;

assign sext_ln1118_3_fu_236_p1 = $signed(shl_ln1118_1_fu_228_p3);

assign sext_ln1118_5_fu_306_p1 = add_ln1192_fu_292_p2;

assign sext_ln1118_6_fu_318_p1 = $signed(tmp_3_fu_310_p3);

assign sext_ln1118_7_fu_328_p1 = $signed(r_V_18_fu_322_p2);

assign sext_ln1118_fu_192_p1 = p_Val2_8_fu_182_p4;

assign sext_ln1192_2_fu_614_p1 = r_V_20_fu_692_p2;

assign sext_ln1192_fu_551_p1 = $signed(r_V_19_fu_546_p2);

assign sext_ln700_fu_340_p1 = $signed(lhs_V_fu_332_p3);

assign sext_ln703_1_fu_250_p1 = r_V_16_fu_240_p2;

assign sext_ln703_2_fu_278_p1 = $signed(r_V_17_fu_270_p3);

assign sext_ln703_4_fu_458_p1 = ret_V_reg_704;

assign sext_ln703_6_fu_420_p1 = r_V_16_fu_240_p2;

assign sext_ln703_fu_246_p1 = $signed(r_V_15_fu_208_p2);

assign sext_ln728_1_fu_416_p1 = rhs_V_2_fu_404_p3;

assign shl_ln1118_1_fu_228_p3 = {{p_Val2_3_fu_214_p4}, {2'd0}};

assign shl_ln700_1_fu_576_p3 = {{sub_ln700_reg_745}, {10'd0}};

assign shl_ln_fu_196_p3 = {{p_Val2_8_fu_182_p4}, {2'd0}};

assign tmp_1_fu_561_p4 = {{ret_V_15_fu_555_p2[36:30]}};

assign tmp_2_fu_623_p4 = {{ret_V_18_fu_617_p2[45:40]}};

assign tmp_3_fu_310_p3 = {{add_ln1192_fu_292_p2}, {5'd0}};

assign tmp_fu_487_p3 = {{r_V_5_fu_670_p2}, {2'd0}};

assign y_0_V = trunc_ln_reg_699_pp0_iter1_reg;

assign y_1_V = $signed(tmp_1_fu_561_p4);

assign y_2_V = {{ret_V_17_fu_594_p2[40:30]}};

assign y_3_V = $signed(tmp_2_fu_623_p4);

assign y_4_V = 11'd2016;

endmodule //myproject
