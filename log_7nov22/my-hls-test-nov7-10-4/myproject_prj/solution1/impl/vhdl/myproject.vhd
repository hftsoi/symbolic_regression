-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (159 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (9 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.233000,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=46,HLS_SYN_FF=2122,HLS_SYN_LUT=2502,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv160_lc_1 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv16_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010101";
    constant ap_const_lv15_B : STD_LOGIC_VECTOR (14 downto 0) := "000000000001011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010111";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv34_3CD000000 : STD_LOGIC_VECTOR (33 downto 0) := "1111001101000000000000000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv16_75 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001110101";
    constant ap_const_lv28_FB40000 : STD_LOGIC_VECTOR (27 downto 0) := "1111101101000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv28_F8C0000 : STD_LOGIC_VECTOR (27 downto 0) := "1111100011000000000000000000";
    constant ap_const_lv34_3E6000000 : STD_LOGIC_VECTOR (33 downto 0) := "1111100110000000000000000000000000";
    constant ap_const_lv28_F540000 : STD_LOGIC_VECTOR (27 downto 0) := "1111010101000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (159 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal trunc_ln1117_fu_191_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1117_reg_1699 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1117_reg_1699_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_195_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_reg_1707 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_reg_1707_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_reg_1707_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_reg_1707_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_fu_205_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_reg_1724 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_reg_1724_pp0_iter1_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_reg_1724_pp0_iter2_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_2_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_reg_1730_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_reg_1730_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_reg_1730_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_1_fu_219_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_1_reg_1742 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_92_fu_1417_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_92_reg_1747 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_8_reg_1752 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_8_reg_1752_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_8_reg_1752_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_reg_1770 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_reg_1770_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_reg_1770_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_reg_1770_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_reg_1780 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_reg_1780_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_reg_1780_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_reg_1780_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_1_fu_264_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_1_reg_1793 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_1_fu_273_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_1_reg_1799 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_1_reg_1799_pp0_iter2_reg : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1423_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln1193_reg_1806 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1118_3_fu_301_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_3_reg_1811 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_3_reg_1811_pp0_iter2_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_93_fu_1431_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_93_reg_1816 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_6_fu_304_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1116_6_reg_1821 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_45_fu_1437_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_45_reg_1827 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1443_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_77_reg_1832 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_101_fu_326_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_101_reg_1837 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln_fu_357_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_reg_1842 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_8_fu_364_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_8_reg_1847 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_9_fu_403_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_9_reg_1852 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1458_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_24_reg_1857 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1451_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln1192_reg_1862 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_9_fu_417_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1192_9_reg_1867 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1192_5_fu_440_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1192_5_reg_1872 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_1466_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_51_reg_1877 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_69_fu_446_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_69_reg_1882 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_52_fu_457_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_52_reg_1887 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_53_fu_1474_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_53_reg_1892 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_55_fu_467_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_55_reg_1897 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_98_fu_1479_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_98_reg_1902 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_2_fu_477_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_2_reg_1907 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1192_18_fu_488_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_18_reg_1913 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_70_fu_1486_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_70_reg_1922 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_74_fu_500_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_74_reg_1927 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1116_13_fu_507_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1116_13_reg_1932 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1492_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_14_reg_1937 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_79_fu_1500_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_79_reg_1942 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln728_fu_525_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln728_reg_1947 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_105_fu_1505_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_105_reg_1952 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1511_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_88_reg_1957 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_90_fu_1519_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_90_reg_1962 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_2_fu_532_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_2_reg_1967 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_1_fu_560_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1192_1_fu_560_p2 : signal is "no";
    signal add_ln1192_1_reg_1972 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_37_fu_1539_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_37_reg_1977 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1192_2_fu_1544_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_2_reg_1982 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1550_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_3_reg_1987 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_6_fu_608_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_6_reg_1992 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln1192_5_fu_642_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln1192_5_reg_1997 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln1192_7_fu_1564_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_7_reg_2002 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_8_fu_1570_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_8_reg_2007 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_9_fu_1576_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_9_reg_2012 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_10_fu_1581_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_10_reg_2017 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1587_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_11_reg_2022 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1594_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_12_reg_2027 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_99_fu_707_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_99_reg_2032 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_11_fu_753_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_11_reg_2037 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_21_fu_759_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_21_reg_2042 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1192_16_fu_1627_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_16_reg_2047 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_100_fu_1632_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_100_reg_2052 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1192_13_fu_785_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of sub_ln1192_13_fu_785_p2 : signal is "no";
    signal sub_ln1192_13_reg_2057 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_10_fu_790_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_10_reg_2062 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln728_fu_1654_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_reg_2067 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_1_fu_1660_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_1_reg_2072 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1665_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_21_reg_2077 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln728_1_fu_803_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln728_1_reg_2082 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1192_18_fu_921_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln1192_18_reg_2087 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln1192_23_fu_1679_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_23_reg_2092 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1685_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_24_reg_2097 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_3_fu_969_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_3_reg_2102 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_96_fu_989_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_96_reg_2107 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_2112 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2_reg_2117 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_3_reg_2122 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_4_reg_2127 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_fu_267_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1116_fu_261_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_fu_267_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_fu_267_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_3_fu_290_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_44_fu_310_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1116_8_fu_307_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_44_fu_310_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_44_fu_310_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_101_fu_326_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_101_fu_326_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_1_fu_335_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1193_1_fu_342_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1118_5_fu_351_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_94_fu_368_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_2_fu_374_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1193_fu_346_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of add_ln1193_fu_346_p2 : signal is "no";
    signal sext_ln1193_2_fu_382_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_15_fu_395_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_15_fu_395_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_15_fu_395_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal lhs_V_fu_423_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_4_fu_434_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_4_fu_434_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1192_4_fu_434_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1192_11_fu_430_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1118_6_fu_354_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_22_fu_453_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_9_fu_514_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_95_fu_1533_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1525_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_3_fu_553_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_34_fu_565_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_41_fu_584_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_41_fu_584_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_4_fu_597_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1192_5_fu_622_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_5_fu_622_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln1192_5_fu_622_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln1192_6_fu_1558_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln1192_4_fu_627_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_2_fu_635_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_97_fu_657_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_4_fu_538_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_97_fu_657_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_8_fu_673_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_s_fu_696_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_31_fu_703_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_7_fu_541_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_1_fu_723_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1611_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1602_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1192_9_fu_734_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1619_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1192_10_fu_741_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of sub_ln1192_10_fu_741_p2 : signal is "no";
    signal shl_ln1192_s_fu_746_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_73_fu_762_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_73_fu_762_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1645_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1637_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1192_12_fu_778_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_102_fu_807_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_103_fu_818_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_18_fu_838_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_4_fu_832_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln728_fu_845_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1118_27_fu_680_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_28_fu_684_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_106_fu_855_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_19_fu_861_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1192_34_fu_869_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_5_fu_849_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_22_fu_873_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_22_fu_1672_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1192_14_fu_879_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_15_fu_890_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1118_43_fu_814_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_13_fu_572_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_107_fu_903_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_20_fu_909_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1192_23_fu_897_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1192_36_fu_917_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_1692_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1_fu_933_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_4_fu_945_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln1192_2_fu_940_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of sub_ln1192_2_fu_940_p2 : signal is "no";
    signal sext_ln1192_7_fu_952_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_2_fu_956_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1192_1_fu_962_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1118_5_fu_975_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_17_fu_982_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_18_fu_986_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1192_3_fu_995_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1192_6_fu_1002_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_4_fu_1007_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1192_7_fu_1014_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_5_fu_1020_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln1192_6_fu_1027_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_6_fu_1033_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1192_8_fu_1040_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_7_fu_1046_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1192_9_fu_1053_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_8_fu_1059_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln1192_7_fu_1066_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal rhs_V_6_fu_1072_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln1192_8_fu_1079_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ret_V_1_fu_1085_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_10_fu_1101_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_8_fu_1113_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln1192_11_fu_1108_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_23_fu_1120_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_17_fu_1130_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_17_fu_1130_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_12_fu_1124_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1192_11_fu_1135_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_12_fu_1143_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_2_fu_1149_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_16_fu_1165_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_11_fu_1169_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln1192_14_fu_1176_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_12_fu_1182_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1192_17_fu_1189_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1192_13_fu_1195_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_13_fu_1208_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_18_fu_1202_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_28_fu_1215_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_14_fu_1225_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_19_fu_1219_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_29_fu_1232_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_15_fu_1242_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1192_15_fu_1236_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_30_fu_1249_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_V_16_fu_1259_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1192_20_fu_1253_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_31_fu_1266_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1118_2_fu_1279_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_46_fu_1286_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_45_fu_1276_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_104_fu_1290_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_17_fu_1296_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln1192_16_fu_1270_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1192_32_fu_1304_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln1192_17_fu_1308_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_3_fu_1314_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1192_16_fu_1330_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1192_24_fu_1337_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln1192_17_fu_1342_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal rhs_V_21_fu_1355_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln1192_19_fu_1349_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1192_39_fu_1362_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sub_ln1192_20_fu_1366_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal ret_V_6_fu_1372_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal rhs_V_5_fu_1388_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln1192_3_fu_1395_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_fu_1400_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1423_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1451_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1451_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1458_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_10_fu_392_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1458_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_12_fu_410_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1458_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_fu_332_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1466_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1466_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_53_fu_1474_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_98_fu_1479_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_98_fu_1479_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1116_11_fu_473_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_79_fu_1500_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_79_fu_1500_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_105_fu_1505_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_32_fu_491_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1511_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1511_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_90_fu_1519_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1525_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_95_fu_1533_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_37_fu_1539_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_2_fu_1544_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_3_fu_535_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1550_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_16_fu_604_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1550_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_6_fu_1558_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_7_fu_1564_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_14_fu_651_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_8_fu_1570_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_25_fu_667_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_9_fu_1576_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_9_fu_1576_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1118_26_fu_670_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_10_fu_1581_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_10_fu_1581_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1587_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1587_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1587_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1594_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1594_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_17_fu_690_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1602_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1602_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1611_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1619_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1619_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_16_fu_1627_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_100_fu_1632_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1637_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1645_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1645_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1645_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_fu_1654_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_1_fu_1660_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1665_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1665_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_22_fu_1672_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1192_33_fu_829_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1192_23_fu_1679_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1685_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1692_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component myproject_mul_mul_10s_12s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_mul_sub_10s_20s_28ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_mul_10s_11s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mul_mul_10s_20s_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component myproject_am_submul_10s_12s_10s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mac_mulsub_10s_20s_28ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_am_addmul_10s_12s_10s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_am_addmul_10s_13s_10s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_mul_10s_13s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mac_muladd_10s_23s_26s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_am_submul_12s_10s_10s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_mac_muladd_10s_23s_28s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_mul_10s_16s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_am_addmul_10s_13s_10s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_10s_24s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_mul_10s_23s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_mul_mul_10s_15s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_am_addmul_14s_11s_10s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_am_submul_14s_12s_10s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_mul_sub_10s_22s_28ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_am_submul_13s_11s_10s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_am_addmul_10s_14s_10s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_10s_13s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_10s_21s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component myproject_am_submul_14s_11s_10s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mac_mulsub_10s_21s_28ns_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;



begin
    myproject_mul_mul_10s_12s_22_1_1_U1 : component myproject_mul_mul_10s_12s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => tmp_1_fu_195_p4,
        din1 => r_V_1_fu_219_p3,
        dout => r_V_92_fu_1417_p2);

    myproject_mac_mul_sub_10s_20s_28ns_28_1_1_U2 : component myproject_mac_mul_sub_10s_20s_28ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 20,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => tmp_1_reg_1707,
        din1 => r_V_fu_267_p2,
        din2 => grp_fu_1423_p2,
        dout => grp_fu_1423_p3);

    myproject_mul_mul_10s_11s_21_1_1_U3 : component myproject_mul_mul_10s_11s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 11,
        dout_WIDTH => 21)
    port map (
        din0 => tmp_2_reg_1730,
        din1 => r_V_3_fu_290_p3,
        dout => r_V_93_fu_1431_p2);

    myproject_mul_mul_10s_20s_30_1_1_U4 : component myproject_mul_mul_10s_20s_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 20,
        dout_WIDTH => 30)
    port map (
        din0 => tmp_1_reg_1707,
        din1 => r_V_44_fu_310_p2,
        dout => r_V_45_fu_1437_p2);

    myproject_am_submul_10s_12s_10s_23_1_1_U5 : component myproject_am_submul_10s_12s_10s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        din2_WIDTH => 10,
        dout_WIDTH => 23)
    port map (
        din0 => trunc_ln1117_reg_1699,
        din1 => r_V_1_reg_1742,
        din2 => p_Val2_8_reg_1752,
        dout => grp_fu_1443_p3);

    myproject_mac_mulsub_10s_20s_28ns_28_1_1_U6 : component myproject_mac_mulsub_10s_20s_28ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 20,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_1451_p0,
        din1 => r_V_15_fu_395_p2,
        din2 => grp_fu_1451_p2,
        dout => grp_fu_1451_p3);

    myproject_am_addmul_10s_12s_10s_23_1_1_U7 : component myproject_am_addmul_10s_12s_10s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        din2_WIDTH => 10,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_1458_p0,
        din1 => grp_fu_1458_p1,
        din2 => grp_fu_1458_p2,
        dout => grp_fu_1458_p3);

    myproject_am_addmul_10s_13s_10s_24_1_1_U8 : component myproject_am_addmul_10s_13s_10s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        din2_WIDTH => 10,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_1466_p0,
        din1 => grp_fu_1466_p1,
        din2 => p_Val2_8_reg_1752_pp0_iter1_reg,
        dout => grp_fu_1466_p3);

    myproject_mul_mul_10s_13s_23_1_1_U9 : component myproject_mul_mul_10s_13s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        din0 => r_V_53_fu_1474_p0,
        din1 => r_V_52_fu_457_p2,
        dout => r_V_53_fu_1474_p2);

    myproject_mul_mul_10s_13s_23_1_1_U10 : component myproject_mul_mul_10s_13s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        din0 => r_V_98_fu_1479_p0,
        din1 => r_V_98_fu_1479_p1,
        dout => r_V_98_fu_1479_p2);

    myproject_mul_mul_10s_12s_22_1_1_U11 : component myproject_mul_mul_10s_12s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => tmp_5_reg_1780_pp0_iter1_reg,
        din1 => r_V_69_fu_446_p3,
        dout => r_V_70_fu_1486_p2);

    myproject_mac_muladd_10s_23s_26s_28_1_1_U12 : component myproject_mac_muladd_10s_23s_26s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 23,
        din2_WIDTH => 26,
        dout_WIDTH => 28)
    port map (
        din0 => p_Val2_8_reg_1752_pp0_iter1_reg,
        din1 => r_V_77_reg_1832,
        din2 => rhs_V_9_fu_514_p3,
        dout => grp_fu_1492_p3);

    myproject_mul_mul_10s_13s_23_1_1_U13 : component myproject_mul_mul_10s_13s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        din0 => r_V_79_fu_1500_p0,
        din1 => r_V_79_fu_1500_p1,
        dout => r_V_79_fu_1500_p2);

    myproject_mul_mul_10s_11s_21_1_1_U14 : component myproject_mul_mul_10s_11s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 11,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_105_fu_1505_p0,
        din1 => r_V_2_fu_477_p3,
        dout => r_V_105_fu_1505_p2);

    myproject_am_submul_12s_10s_10s_23_1_1_U15 : component myproject_am_submul_12s_10s_10s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_1511_p0,
        din1 => grp_fu_1511_p1,
        din2 => tmp_5_reg_1780_pp0_iter1_reg,
        dout => grp_fu_1511_p3);

    myproject_mul_mul_10s_11s_21_1_1_U16 : component myproject_mul_mul_10s_11s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 11,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_90_fu_1519_p0,
        din1 => r_V_74_fu_500_p3,
        dout => r_V_90_fu_1519_p2);

    myproject_mac_muladd_10s_23s_28s_28_1_1_U17 : component myproject_mac_muladd_10s_23s_28s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 23,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_1525_p0,
        din1 => r_V_24_reg_1857,
        din2 => sub_ln1192_reg_1862,
        dout => grp_fu_1525_p3);

    myproject_mul_mul_10s_12s_22_1_1_U18 : component myproject_mul_mul_10s_12s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_95_fu_1533_p0,
        din1 => r_V_9_reg_1852,
        dout => r_V_95_fu_1533_p2);

    myproject_mul_mul_10s_11s_21_1_1_U19 : component myproject_mul_mul_10s_11s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 11,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_37_fu_1539_p0,
        din1 => r_V_34_fu_565_p3,
        dout => r_V_37_fu_1539_p2);

    myproject_mul_mul_10s_16s_22_1_1_U20 : component myproject_mul_mul_10s_16s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 16,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln1192_2_fu_1544_p0,
        din1 => r_V_41_fu_584_p2,
        dout => mul_ln1192_2_fu_1544_p2);

    myproject_am_addmul_10s_13s_10s_22_1_1_U21 : component myproject_am_addmul_10s_13s_10s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        din2_WIDTH => 10,
        dout_WIDTH => 22)
    port map (
        din0 => tmp_2_reg_1730_pp0_iter2_reg,
        din1 => grp_fu_1550_p1,
        din2 => grp_fu_1550_p2,
        dout => grp_fu_1550_p3);

    myproject_mul_mul_10s_24s_28_1_1_U22 : component myproject_mul_mul_10s_24s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 24,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln1192_6_fu_1558_p0,
        din1 => r_V_51_reg_1877,
        dout => mul_ln1192_6_fu_1558_p2);

    myproject_mul_mul_10s_23s_28_1_1_U23 : component myproject_mul_mul_10s_23s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 23,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln1192_7_fu_1564_p0,
        din1 => r_V_53_reg_1892,
        dout => mul_ln1192_7_fu_1564_p2);

    myproject_mul_mul_10s_15s_22_1_1_U24 : component myproject_mul_mul_10s_15s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 15,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln1192_8_fu_1570_p0,
        din1 => r_V_97_fu_657_p2,
        dout => mul_ln1192_8_fu_1570_p2);

    myproject_mul_mul_10s_23s_28_1_1_U25 : component myproject_mul_mul_10s_23s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 23,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln1192_9_fu_1576_p0,
        din1 => mul_ln1192_9_fu_1576_p1,
        dout => mul_ln1192_9_fu_1576_p2);

    myproject_mul_mul_10s_23s_28_1_1_U26 : component myproject_mul_mul_10s_23s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 23,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln1192_10_fu_1581_p0,
        din1 => mul_ln1192_10_fu_1581_p1,
        dout => mul_ln1192_10_fu_1581_p2);

    myproject_am_addmul_14s_11s_10s_22_1_1_U27 : component myproject_am_addmul_14s_11s_10s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 11,
        din2_WIDTH => 10,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1587_p0,
        din1 => grp_fu_1587_p1,
        din2 => grp_fu_1587_p2,
        dout => grp_fu_1587_p3);

    myproject_am_submul_14s_12s_10s_22_1_1_U28 : component myproject_am_submul_14s_12s_10s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 12,
        din2_WIDTH => 10,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1594_p0,
        din1 => r_V_69_reg_1882,
        din2 => grp_fu_1594_p2,
        dout => grp_fu_1594_p3);

    myproject_mac_mul_sub_10s_22s_28ns_28_1_1_U29 : component myproject_mac_mul_sub_10s_22s_28ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 22,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_1602_p0,
        din1 => r_V_70_reg_1922,
        din2 => grp_fu_1602_p2,
        dout => grp_fu_1602_p3);

    myproject_am_submul_13s_11s_10s_22_1_1_U30 : component myproject_am_submul_13s_11s_10s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 11,
        din2_WIDTH => 10,
        dout_WIDTH => 22)
    port map (
        din0 => shl_ln1118_1_fu_723_p3,
        din1 => r_V_34_fu_565_p3,
        din2 => grp_fu_1611_p2,
        dout => grp_fu_1611_p3);

    myproject_am_submul_13s_11s_10s_22_1_1_U31 : component myproject_am_submul_13s_11s_10s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 11,
        din2_WIDTH => 10,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1619_p0,
        din1 => shl_ln1118_6_fu_608_p3,
        din2 => grp_fu_1619_p2,
        dout => grp_fu_1619_p3);

    myproject_mul_mul_10s_16s_22_1_1_U32 : component myproject_mul_mul_10s_16s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 16,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln1192_16_fu_1627_p0,
        din1 => r_V_73_fu_762_p2,
        dout => mul_ln1192_16_fu_1627_p2);

    myproject_mul_mul_10s_11s_21_1_1_U33 : component myproject_mul_mul_10s_11s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 11,
        dout_WIDTH => 21)
    port map (
        din0 => tmp_4_reg_1770_pp0_iter2_reg,
        din1 => r_V_100_fu_1632_p1,
        dout => r_V_100_fu_1632_p2);

    myproject_mac_muladd_10s_23s_28s_28_1_1_U34 : component myproject_mac_muladd_10s_23s_28s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 23,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_1637_p0,
        din1 => r_V_79_reg_1942,
        din2 => add_ln1192_14_reg_1937,
        dout => grp_fu_1637_p3);

    myproject_am_addmul_10s_14s_10s_22_1_1_U35 : component myproject_am_addmul_10s_14s_10s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 14,
        din2_WIDTH => 10,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1645_p0,
        din1 => grp_fu_1645_p1,
        din2 => grp_fu_1645_p2,
        dout => grp_fu_1645_p3);

    myproject_mul_mul_10s_13s_22_1_1_U36 : component myproject_mul_mul_10s_13s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln728_fu_1654_p0,
        din1 => r_V_52_reg_1887,
        dout => mul_ln728_fu_1654_p2);

    myproject_mul_mul_10s_13s_22_1_1_U37 : component myproject_mul_mul_10s_13s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln728_1_fu_1660_p0,
        din1 => r_V_55_reg_1897,
        dout => mul_ln728_1_fu_1660_p2);

    myproject_am_submul_13s_11s_10s_22_1_1_U38 : component myproject_am_submul_13s_11s_10s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 11,
        din2_WIDTH => 10,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1665_p0,
        din1 => r_V_2_reg_1907,
        din2 => grp_fu_1665_p2,
        dout => grp_fu_1665_p3);

    myproject_mul_mul_10s_23s_28_1_1_U39 : component myproject_mul_mul_10s_23s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 23,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln1192_22_fu_1672_p0,
        din1 => r_V_88_reg_1957,
        dout => mul_ln1192_22_fu_1672_p2);

    myproject_mul_mul_10s_21s_28_1_1_U40 : component myproject_mul_mul_10s_21s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 21,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln1192_23_fu_1679_p0,
        din1 => r_V_90_reg_1962,
        dout => mul_ln1192_23_fu_1679_p2);

    myproject_am_submul_14s_11s_10s_22_1_1_U41 : component myproject_am_submul_14s_11s_10s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 11,
        din2_WIDTH => 10,
        dout_WIDTH => 22)
    port map (
        din0 => r_V_103_fu_818_p3,
        din1 => r_V_74_reg_1927,
        din2 => grp_fu_1685_p2,
        dout => grp_fu_1685_p3);

    myproject_mac_mulsub_10s_21s_28ns_28_1_1_U42 : component myproject_mac_mulsub_10s_21s_28ns_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 21,
        din2_WIDTH => 28,
        dout_WIDTH => 28)
    port map (
        din0 => grp_fu_1692_p0,
        din1 => r_V_37_reg_1977,
        din2 => add_ln1192_1_reg_1972,
        dout => grp_fu_1692_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv160_lc_1;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_11_reg_2037 <= add_ln1192_11_fu_753_p2;
                add_ln1192_1_reg_1972 <= add_ln1192_1_fu_560_p2;
                add_ln1192_3_reg_2102 <= add_ln1192_3_fu_969_p2;
                add_ln1192_5_reg_1872 <= add_ln1192_5_fu_440_p2;
                mul_ln1192_10_reg_2017 <= mul_ln1192_10_fu_1581_p2;
                mul_ln1192_16_reg_2047 <= mul_ln1192_16_fu_1627_p2;
                mul_ln1192_23_reg_2092 <= mul_ln1192_23_fu_1679_p2;
                mul_ln1192_2_reg_1982 <= mul_ln1192_2_fu_1544_p2;
                mul_ln1192_7_reg_2002 <= mul_ln1192_7_fu_1564_p2;
                mul_ln1192_8_reg_2007 <= mul_ln1192_8_fu_1570_p2;
                mul_ln1192_9_reg_2012 <= mul_ln1192_9_fu_1576_p2;
                mul_ln728_1_reg_2072 <= mul_ln728_1_fu_1660_p2;
                mul_ln728_reg_2067 <= mul_ln728_fu_1654_p2;
                p_Val2_8_reg_1752_pp0_iter2_reg <= p_Val2_8_reg_1752_pp0_iter1_reg;
                r_V_100_reg_2052 <= r_V_100_fu_1632_p2;
                r_V_105_reg_1952 <= r_V_105_fu_1505_p2;
                    r_V_2_reg_1907(10 downto 1) <= r_V_2_fu_477_p3(10 downto 1);
                r_V_37_reg_1977 <= r_V_37_fu_1539_p2;
                r_V_52_reg_1887 <= r_V_52_fu_457_p2;
                r_V_53_reg_1892 <= r_V_53_fu_1474_p2;
                r_V_55_reg_1897 <= r_V_55_fu_467_p2;
                    r_V_69_reg_1882(11 downto 2) <= r_V_69_fu_446_p3(11 downto 2);
                r_V_70_reg_1922 <= r_V_70_fu_1486_p2;
                    r_V_74_reg_1927(10 downto 1) <= r_V_74_fu_500_p3(10 downto 1);
                r_V_79_reg_1942 <= r_V_79_fu_1500_p2;
                r_V_90_reg_1962 <= r_V_90_fu_1519_p2;
                    r_V_96_reg_2107(15 downto 1) <= r_V_96_fu_989_p2(15 downto 1);
                r_V_98_reg_1902 <= r_V_98_fu_1479_p2;
                    r_V_99_reg_2032(15 downto 3) <= r_V_99_fu_707_p2(15 downto 3);
                    r_V_9_reg_1852(11 downto 2) <= r_V_9_fu_403_p3(11 downto 2);
                    rhs_V_10_reg_2062(27 downto 6) <= rhs_V_10_fu_790_p3(27 downto 6);
                    sext_ln1116_13_reg_1932(20 downto 1) <= sext_ln1116_13_fu_507_p1(20 downto 1);
                sext_ln1118_3_reg_1811_pp0_iter2_reg <= sext_ln1118_3_reg_1811;
                    sext_ln1118_8_reg_1847(13 downto 3) <= sext_ln1118_8_fu_364_p1(13 downto 3);
                sext_ln1192_18_reg_1913 <= sext_ln1192_18_fu_488_p1;
                sext_ln1192_1_reg_1799_pp0_iter2_reg <= sext_ln1192_1_reg_1799;
                sext_ln1192_21_reg_2042 <= sext_ln1192_21_fu_759_p1;
                sext_ln1192_2_reg_1967 <= sext_ln1192_2_fu_532_p1;
                sext_ln1192_9_reg_1867 <= sext_ln1192_9_fu_417_p1;
                sext_ln1192_reg_1724_pp0_iter2_reg <= sext_ln1192_reg_1724_pp0_iter1_reg;
                    shl_ln1118_6_reg_1992(10 downto 1) <= shl_ln1118_6_fu_608_p3(10 downto 1);
                    shl_ln_reg_1842(12 downto 3) <= shl_ln_fu_357_p3(12 downto 3);
                sub_ln1192_13_reg_2057 <= sub_ln1192_13_fu_785_p2;
                    sub_ln1192_18_reg_2087(33 downto 6) <= sub_ln1192_18_fu_921_p2(33 downto 6);
                sub_ln1192_5_reg_1997 <= sub_ln1192_5_fu_642_p2;
                tmp_1_reg_1707_pp0_iter2_reg <= tmp_1_reg_1707_pp0_iter1_reg;
                tmp_1_reg_1707_pp0_iter3_reg <= tmp_1_reg_1707_pp0_iter2_reg;
                tmp_2_reg_1730_pp0_iter2_reg <= tmp_2_reg_1730_pp0_iter1_reg;
                tmp_2_reg_1730_pp0_iter3_reg <= tmp_2_reg_1730_pp0_iter2_reg;
                tmp_4_reg_1770_pp0_iter2_reg <= tmp_4_reg_1770_pp0_iter1_reg;
                tmp_4_reg_1770_pp0_iter3_reg <= tmp_4_reg_1770_pp0_iter2_reg;
                tmp_5_reg_1780_pp0_iter2_reg <= tmp_5_reg_1780_pp0_iter1_reg;
                tmp_5_reg_1780_pp0_iter3_reg <= tmp_5_reg_1780_pp0_iter2_reg;
                trunc_ln708_1_reg_2112 <= ret_V_1_fu_1085_p2(33 downto 24);
                trunc_ln708_2_reg_2117 <= ret_V_2_fu_1149_p2(27 downto 18);
                trunc_ln708_3_reg_2122 <= ret_V_3_fu_1314_p2(27 downto 18);
                trunc_ln708_4_reg_2127 <= ret_V_6_fu_1372_p2(33 downto 24);
                trunc_ln728_1_reg_2082 <= trunc_ln728_1_fu_803_p1;
                trunc_ln728_reg_1947 <= trunc_ln728_fu_525_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                add_ln1192_14_reg_1937 <= grp_fu_1492_p3;
                r_V_24_reg_1857 <= grp_fu_1458_p3;
                r_V_51_reg_1877 <= grp_fu_1466_p3;
                r_V_88_reg_1957 <= grp_fu_1511_p3;
                sub_ln1192_reg_1862 <= grp_fu_1451_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                mul_ln1192_11_reg_2022 <= grp_fu_1587_p3;
                mul_ln1192_12_reg_2027 <= grp_fu_1594_p3;
                mul_ln1192_21_reg_2077 <= grp_fu_1665_p3;
                mul_ln1192_24_reg_2097 <= grp_fu_1685_p3;
                mul_ln1192_3_reg_1987 <= grp_fu_1550_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_8_reg_1752 <= x_V_in_sig(149 downto 140);
                p_Val2_8_reg_1752_pp0_iter1_reg <= p_Val2_8_reg_1752;
                r_V_101_reg_1837 <= r_V_101_fu_326_p2;
                    r_V_1_reg_1742(11 downto 2) <= r_V_1_fu_219_p3(11 downto 2);
                r_V_45_reg_1827 <= r_V_45_fu_1437_p2;
                r_V_92_reg_1747 <= r_V_92_fu_1417_p2;
                r_V_93_reg_1816 <= r_V_93_fu_1431_p2;
                sext_ln1116_6_reg_1821 <= sext_ln1116_6_fu_304_p1;
                sext_ln1118_1_reg_1793 <= sext_ln1118_1_fu_264_p1;
                sext_ln1118_3_reg_1811 <= sext_ln1118_3_fu_301_p1;
                sext_ln1192_1_reg_1799 <= sext_ln1192_1_fu_273_p1;
                sext_ln1192_reg_1724 <= sext_ln1192_fu_205_p1;
                sext_ln1192_reg_1724_pp0_iter1_reg <= sext_ln1192_reg_1724;
                tmp_1_reg_1707 <= x_V_in_sig(159 downto 150);
                tmp_1_reg_1707_pp0_iter1_reg <= tmp_1_reg_1707;
                tmp_2_reg_1730 <= x_V_in_sig(29 downto 20);
                tmp_2_reg_1730_pp0_iter1_reg <= tmp_2_reg_1730;
                tmp_4_reg_1770 <= x_V_in_sig(49 downto 40);
                tmp_4_reg_1770_pp0_iter1_reg <= tmp_4_reg_1770;
                tmp_5_reg_1780 <= x_V_in_sig(39 downto 30);
                tmp_5_reg_1780_pp0_iter1_reg <= tmp_5_reg_1780;
                trunc_ln1117_reg_1699 <= trunc_ln1117_fu_191_p1;
                trunc_ln1117_reg_1699_pp0_iter1_reg <= trunc_ln1117_reg_1699;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                r_V_77_reg_1832 <= grp_fu_1443_p3;
                sub_ln1193_reg_1806 <= grp_fu_1423_p3;
            end if;
        end if;
    end process;
    r_V_1_reg_1742(1 downto 0) <= "00";
    shl_ln_reg_1842(2 downto 0) <= "000";
    sext_ln1118_8_reg_1847(2 downto 0) <= "000";
    r_V_9_reg_1852(1 downto 0) <= "00";
    r_V_69_reg_1882(1 downto 0) <= "00";
    r_V_2_reg_1907(0) <= '0';
    r_V_74_reg_1927(0) <= '0';
    sext_ln1116_13_reg_1932(0) <= '0';
    shl_ln1118_6_reg_1992(0) <= '0';
    r_V_99_reg_2032(2 downto 0) <= "000";
    rhs_V_10_reg_2062(5 downto 0) <= "000000";
    sub_ln1192_18_reg_2087(5 downto 0) <= "000000";
    r_V_96_reg_2107(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_11_fu_753_p2 <= std_logic_vector(unsigned(sub_ln1192_10_fu_741_p2) + unsigned(shl_ln1192_s_fu_746_p3));
    add_ln1192_12_fu_1143_p2 <= std_logic_vector(unsigned(sub_ln1192_12_fu_1124_p2) + unsigned(shl_ln1192_11_fu_1135_p3));
    add_ln1192_16_fu_1165_p2 <= std_logic_vector(unsigned(sub_ln1192_13_reg_2057) + unsigned(rhs_V_10_reg_2062));
    add_ln1192_17_fu_1189_p2 <= std_logic_vector(unsigned(sub_ln1192_14_fu_1176_p2) + unsigned(rhs_V_12_fu_1182_p3));
    add_ln1192_18_fu_1202_p2 <= std_logic_vector(unsigned(add_ln1192_17_fu_1189_p2) + unsigned(shl_ln1192_13_fu_1195_p3));
    add_ln1192_19_fu_1219_p2 <= std_logic_vector(unsigned(add_ln1192_18_fu_1202_p2) + unsigned(sext_ln1192_28_fu_1215_p1));
    add_ln1192_1_fu_560_p2 <= std_logic_vector(signed(grp_fu_1525_p3) + signed(rhs_V_3_fu_553_p3));
    add_ln1192_20_fu_1253_p2 <= std_logic_vector(unsigned(sub_ln1192_15_fu_1236_p2) + unsigned(sext_ln1192_30_fu_1249_p1));
    add_ln1192_22_fu_873_p2 <= std_logic_vector(signed(sext_ln1192_34_fu_869_p1) + signed(ret_V_5_fu_849_p2));
    add_ln1192_23_fu_897_p2 <= std_logic_vector(unsigned(shl_ln1192_14_fu_879_p3) + unsigned(shl_ln1192_15_fu_890_p3));
    add_ln1192_24_fu_1337_p2 <= std_logic_vector(unsigned(sub_ln1192_18_reg_2087) + unsigned(shl_ln1192_16_fu_1330_p3));
    add_ln1192_2_fu_956_p2 <= std_logic_vector(unsigned(sub_ln1192_2_fu_940_p2) + unsigned(sext_ln1192_7_fu_952_p1));
    add_ln1192_3_fu_969_p2 <= std_logic_vector(unsigned(add_ln1192_2_fu_956_p2) + unsigned(shl_ln1192_1_fu_962_p3));
    add_ln1192_5_fu_440_p2 <= std_logic_vector(unsigned(mul_ln1192_4_fu_434_p2) + unsigned(sext_ln1192_11_fu_430_p1));
    add_ln1192_6_fu_1002_p2 <= std_logic_vector(unsigned(sub_ln1192_5_reg_1997) + unsigned(shl_ln1192_3_fu_995_p3));
    add_ln1192_7_fu_1014_p2 <= std_logic_vector(unsigned(add_ln1192_6_fu_1002_p2) + unsigned(shl_ln1192_4_fu_1007_p3));
    add_ln1192_8_fu_1040_p2 <= std_logic_vector(unsigned(sub_ln1192_6_fu_1027_p2) + unsigned(shl_ln1192_6_fu_1033_p3));
    add_ln1192_9_fu_1053_p2 <= std_logic_vector(unsigned(add_ln1192_8_fu_1040_p2) + unsigned(shl_ln1192_7_fu_1046_p3));
    add_ln1193_fu_346_p2 <= std_logic_vector(signed(sub_ln1193_reg_1806) + signed(sext_ln1193_1_fu_342_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1423_p2 <= (r_V_92_reg_1747 & ap_const_lv6_0);
    grp_fu_1451_p0 <= sext_ln1192_1_reg_1799(10 - 1 downto 0);
    grp_fu_1451_p2 <= std_logic_vector(unsigned(add_ln1193_fu_346_p2) + unsigned(sext_ln1193_2_fu_382_p1));
    grp_fu_1458_p0 <= sext_ln1118_10_fu_392_p1(10 - 1 downto 0);
    grp_fu_1458_p1 <= sext_ln1118_12_fu_410_p1(12 - 1 downto 0);
    grp_fu_1458_p2 <= sext_ln1118_fu_332_p1(10 - 1 downto 0);
    grp_fu_1466_p0 <= sext_ln1118_5_fu_351_p1(10 - 1 downto 0);
    grp_fu_1466_p1 <= sext_ln1118_8_fu_364_p1(13 - 1 downto 0);
    grp_fu_1511_p0 <= sext_ln1118_12_fu_410_p1(12 - 1 downto 0);
    grp_fu_1511_p1 <= sext_ln1118_10_fu_392_p1(10 - 1 downto 0);
    grp_fu_1525_p0 <= sext_ln1192_2_fu_532_p1(10 - 1 downto 0);
    grp_fu_1550_p1 <= sext_ln1118_16_fu_604_p1(13 - 1 downto 0);
    grp_fu_1550_p2 <= sext_ln1192_3_fu_535_p1(10 - 1 downto 0);
    grp_fu_1587_p0 <= sext_ln1118_27_fu_680_p1(14 - 1 downto 0);
    grp_fu_1587_p1 <= sext_ln1118_28_fu_684_p1(11 - 1 downto 0);
    grp_fu_1587_p2 <= sext_ln1192_reg_1724_pp0_iter2_reg(10 - 1 downto 0);
    grp_fu_1594_p0 <= sext_ln1118_27_fu_680_p1(14 - 1 downto 0);
    grp_fu_1594_p2 <= sext_ln1192_17_fu_690_p1(10 - 1 downto 0);
    grp_fu_1602_p0 <= sext_ln1192_14_fu_651_p1(10 - 1 downto 0);
    grp_fu_1602_p2 <= (p_Val2_8_reg_1752_pp0_iter2_reg & ap_const_lv18_0);
    grp_fu_1611_p2 <= sext_ln1192_18_reg_1913(10 - 1 downto 0);
    grp_fu_1619_p0 <= sext_ln1118_16_fu_604_p1(13 - 1 downto 0);
    grp_fu_1619_p2 <= sext_ln1192_18_reg_1913(10 - 1 downto 0);
    grp_fu_1637_p0 <= sext_ln1192_2_fu_532_p1(10 - 1 downto 0);
    grp_fu_1645_p0 <= sext_ln1118_4_fu_538_p1(10 - 1 downto 0);
    grp_fu_1645_p1 <= sext_ln1118_27_fu_680_p1(14 - 1 downto 0);
    grp_fu_1645_p2 <= sext_ln1118_25_fu_667_p1(10 - 1 downto 0);
    grp_fu_1665_p0 <= sext_ln1118_8_reg_1847(13 - 1 downto 0);
    grp_fu_1665_p2 <= sext_ln1192_17_fu_690_p1(10 - 1 downto 0);
    grp_fu_1685_p2 <= sext_ln1192_18_reg_1913(10 - 1 downto 0);
    grp_fu_1692_p0 <= sext_ln1192_2_reg_1967(10 - 1 downto 0);
    lhs_V_fu_423_p3 <= (trunc_ln1117_reg_1699_pp0_iter1_reg & ap_const_lv18_0);
    mul_ln1192_10_fu_1581_p0 <= sext_ln1192_14_fu_651_p1(10 - 1 downto 0);
    mul_ln1192_10_fu_1581_p1 <= sext_ln1118_26_fu_670_p1(23 - 1 downto 0);
    mul_ln1192_16_fu_1627_p0 <= sext_ln1192_18_reg_1913(10 - 1 downto 0);
    mul_ln1192_17_fu_1130_p1 <= sext_ln1192_21_reg_2042(10 - 1 downto 0);
    mul_ln1192_17_fu_1130_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv16_75) * signed(mul_ln1192_17_fu_1130_p1))), 16));
    mul_ln1192_22_fu_1672_p0 <= sext_ln1192_33_fu_829_p1(10 - 1 downto 0);
    mul_ln1192_23_fu_1679_p0 <= sext_ln1192_33_fu_829_p1(10 - 1 downto 0);
    mul_ln1192_2_fu_1544_p0 <= sext_ln1192_3_fu_535_p1(10 - 1 downto 0);
    mul_ln1192_4_fu_434_p0 <= tmp_1_reg_1707_pp0_iter1_reg;
    mul_ln1192_4_fu_434_p1 <= r_V_45_reg_1827;
    mul_ln1192_4_fu_434_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_4_fu_434_p0) * signed(mul_ln1192_4_fu_434_p1))), 34));
    mul_ln1192_5_fu_622_p0 <= tmp_4_reg_1770_pp0_iter2_reg;
    mul_ln1192_5_fu_622_p1 <= sext_ln1192_9_reg_1867(30 - 1 downto 0);
    mul_ln1192_5_fu_622_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_5_fu_622_p0) * signed(mul_ln1192_5_fu_622_p1))), 34));
    mul_ln1192_6_fu_1558_p0 <= sext_ln1192_1_reg_1799_pp0_iter2_reg(10 - 1 downto 0);
    mul_ln1192_7_fu_1564_p0 <= sext_ln1192_14_fu_651_p1(10 - 1 downto 0);
    mul_ln1192_8_fu_1570_p0 <= sext_ln1118_25_fu_667_p1(10 - 1 downto 0);
    mul_ln1192_9_fu_1576_p0 <= sext_ln1192_1_reg_1799_pp0_iter2_reg(10 - 1 downto 0);
    mul_ln1192_9_fu_1576_p1 <= sext_ln1118_26_fu_670_p1(23 - 1 downto 0);
    mul_ln728_1_fu_1660_p0 <= sext_ln1192_18_reg_1913(10 - 1 downto 0);
    mul_ln728_fu_1654_p0 <= sext_ln1192_3_fu_535_p1(10 - 1 downto 0);
    r_V_100_fu_1632_p1 <= sext_ln1116_13_reg_1932(11 - 1 downto 0);
    r_V_101_fu_326_p0 <= sext_ln1116_fu_261_p1(10 - 1 downto 0);
    r_V_101_fu_326_p1 <= sext_ln1116_8_fu_307_p1(10 - 1 downto 0);
    r_V_101_fu_326_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_101_fu_326_p0) * signed(r_V_101_fu_326_p1))), 20));
    r_V_102_fu_807_p3 <= (tmp_1_reg_1707_pp0_iter2_reg & ap_const_lv4_0);
    r_V_103_fu_818_p3 <= (tmp_5_reg_1780_pp0_iter2_reg & ap_const_lv4_0);
    r_V_104_fu_1290_p2 <= std_logic_vector(signed(sext_ln1118_46_fu_1286_p1) - signed(sext_ln1118_45_fu_1276_p1));
    r_V_105_fu_1505_p0 <= sext_ln1118_32_fu_491_p1(10 - 1 downto 0);
    r_V_106_fu_855_p2 <= std_logic_vector(signed(sext_ln1118_27_fu_680_p1) - signed(sext_ln1118_28_fu_684_p1));
    r_V_107_fu_903_p2 <= std_logic_vector(signed(sext_ln1118_43_fu_814_p1) - signed(sext_ln1118_13_fu_572_p1));
    r_V_15_fu_395_p0 <= sext_ln1118_1_reg_1793(10 - 1 downto 0);
    r_V_15_fu_395_p1 <= sext_ln1118_1_reg_1793(10 - 1 downto 0);
    r_V_15_fu_395_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_15_fu_395_p0) * signed(r_V_15_fu_395_p1))), 20));
    r_V_1_fu_219_p3 <= (trunc_ln1117_fu_191_p1 & ap_const_lv2_0);
    r_V_2_fu_477_p3 <= (p_Val2_8_reg_1752_pp0_iter1_reg & ap_const_lv1_0);
    r_V_34_fu_565_p3 <= (tmp_1_reg_1707_pp0_iter2_reg & ap_const_lv1_0);
    r_V_37_fu_1539_p0 <= sext_ln1118_3_reg_1811_pp0_iter2_reg(10 - 1 downto 0);
    r_V_3_fu_290_p3 <= (trunc_ln1117_reg_1699 & ap_const_lv1_0);
    r_V_41_fu_584_p1 <= tmp_1_reg_1707_pp0_iter2_reg;
    r_V_41_fu_584_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv16_15) * signed(r_V_41_fu_584_p1))), 16));
    r_V_44_fu_310_p0 <= sext_ln1116_8_fu_307_p1(10 - 1 downto 0);
    r_V_44_fu_310_p1 <= sext_ln1116_8_fu_307_p1(10 - 1 downto 0);
    r_V_44_fu_310_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_44_fu_310_p0) * signed(r_V_44_fu_310_p1))), 20));
    r_V_52_fu_457_p2 <= std_logic_vector(signed(sext_ln1118_6_fu_354_p1) + signed(sext_ln1118_22_fu_453_p1));
    r_V_53_fu_1474_p0 <= sext_ln1116_6_reg_1821(10 - 1 downto 0);
    r_V_55_fu_467_p2 <= std_logic_vector(signed(sext_ln1118_22_fu_453_p1) - signed(sext_ln1118_6_fu_354_p1));
    r_V_69_fu_446_p3 <= (p_Val2_8_reg_1752_pp0_iter1_reg & ap_const_lv2_0);
    r_V_73_fu_762_p1 <= tmp_5_reg_1780_pp0_iter2_reg;
    r_V_73_fu_762_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv16_17) * signed(r_V_73_fu_762_p1))), 16));
    r_V_74_fu_500_p3 <= (tmp_5_reg_1780_pp0_iter1_reg & ap_const_lv1_0);
    r_V_79_fu_1500_p0 <= sext_ln1116_6_reg_1821(10 - 1 downto 0);
    r_V_79_fu_1500_p1 <= sext_ln1116_11_fu_473_p1(13 - 1 downto 0);
    r_V_90_fu_1519_p0 <= sext_ln1118_32_fu_491_p1(10 - 1 downto 0);
    r_V_94_fu_368_p2 <= std_logic_vector(signed(sext_ln1118_8_fu_364_p1) - signed(sext_ln1118_5_fu_351_p1));
    r_V_95_fu_1533_p0 <= sext_ln1192_reg_1724_pp0_iter2_reg(10 - 1 downto 0);
    r_V_96_fu_989_p2 <= std_logic_vector(signed(sext_ln1118_17_fu_982_p1) + signed(sext_ln1118_18_fu_986_p1));
    r_V_97_fu_657_p1 <= sext_ln1118_4_fu_538_p1(10 - 1 downto 0);
    r_V_97_fu_657_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_B) * signed(r_V_97_fu_657_p1))), 15));
    r_V_98_fu_1479_p0 <= sext_ln1118_fu_332_p1(10 - 1 downto 0);
    r_V_98_fu_1479_p1 <= sext_ln1116_11_fu_473_p1(13 - 1 downto 0);
    r_V_99_fu_707_p2 <= std_logic_vector(signed(sext_ln1118_31_fu_703_p1) - signed(sext_ln1118_7_fu_541_p1));
    r_V_9_fu_403_p3 <= (tmp_1_reg_1707_pp0_iter1_reg & ap_const_lv2_0);
    r_V_fu_267_p0 <= sext_ln1116_fu_261_p1(10 - 1 downto 0);
    r_V_fu_267_p1 <= tmp_1_reg_1707;
    r_V_fu_267_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_fu_267_p0) * signed(r_V_fu_267_p1))), 20));
    ret_V_1_fu_1085_p2 <= std_logic_vector(signed(ap_const_lv34_3CD000000) + signed(sub_ln1192_8_fu_1079_p2));
    ret_V_2_fu_1149_p2 <= std_logic_vector(signed(ap_const_lv28_FB40000) + signed(add_ln1192_12_fu_1143_p2));
    ret_V_3_fu_1314_p2 <= std_logic_vector(signed(ap_const_lv28_F8C0000) + signed(sub_ln1192_17_fu_1308_p2));
    ret_V_4_fu_832_p2 <= std_logic_vector(unsigned(ap_const_lv28_0) - unsigned(rhs_V_10_fu_790_p3));
    ret_V_5_fu_849_p2 <= std_logic_vector(unsigned(ret_V_4_fu_832_p2) - unsigned(sext_ln728_fu_845_p1));
    ret_V_6_fu_1372_p2 <= std_logic_vector(signed(ap_const_lv34_3E6000000) + signed(sub_ln1192_20_fu_1366_p2));
    ret_V_fu_1400_p2 <= std_logic_vector(signed(ap_const_lv28_F540000) + signed(sub_ln1192_3_fu_1395_p2));
    rhs_V_10_fu_790_p3 <= (trunc_ln728_reg_1947 & ap_const_lv6_0);
    rhs_V_11_fu_1169_p3 <= (mul_ln728_reg_2067 & ap_const_lv6_0);
    rhs_V_12_fu_1182_p3 <= (mul_ln728_1_reg_2072 & ap_const_lv6_0);
    rhs_V_13_fu_1208_p3 <= (trunc_ln728_1_reg_2082 & ap_const_lv12_0);
    rhs_V_14_fu_1225_p3 <= (tmp_1_reg_1707_pp0_iter3_reg & ap_const_lv16_0);
    rhs_V_15_fu_1242_p3 <= (tmp_2_reg_1730_pp0_iter3_reg & ap_const_lv12_0);
    rhs_V_16_fu_1259_p3 <= (tmp_5_reg_1780_pp0_iter3_reg & ap_const_lv16_0);
    rhs_V_17_fu_1296_p3 <= (r_V_104_fu_1290_p2 & ap_const_lv12_0);
    rhs_V_18_fu_838_p3 <= (r_V_105_reg_1952 & ap_const_lv6_0);
    rhs_V_19_fu_861_p3 <= (r_V_106_fu_855_p2 & ap_const_lv12_0);
    rhs_V_1_fu_335_p3 <= (r_V_93_reg_1816 & ap_const_lv6_0);
    rhs_V_20_fu_909_p3 <= (r_V_107_fu_903_p2 & ap_const_lv18_0);
    rhs_V_21_fu_1355_p3 <= (tmp_5_reg_1780_pp0_iter3_reg & ap_const_lv18_0);
    rhs_V_2_fu_374_p3 <= (r_V_94_fu_368_p2 & ap_const_lv12_0);
    rhs_V_3_fu_553_p3 <= (r_V_95_fu_1533_p2 & ap_const_lv6_0);
    rhs_V_4_fu_945_p3 <= (tmp_1_reg_1707_pp0_iter3_reg & ap_const_lv17_0);
    rhs_V_5_fu_1388_p3 <= (r_V_96_reg_2107 & ap_const_lv12_0);
    rhs_V_6_fu_1072_p3 <= (r_V_99_reg_2032 & ap_const_lv18_0);
    rhs_V_8_fu_1113_p3 <= (r_V_100_reg_2052 & ap_const_lv6_0);
    rhs_V_9_fu_514_p3 <= (r_V_101_reg_1837 & ap_const_lv6_0);
        sext_ln1116_11_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_55_fu_467_p2),23));

        sext_ln1116_13_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_74_fu_500_p3),21));

        sext_ln1116_6_fu_304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1752),23));

        sext_ln1116_8_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1752),20));

        sext_ln1116_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1117_reg_1699),20));

        sext_ln1118_10_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1707_pp0_iter1_reg),13));

        sext_ln1118_12_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_fu_403_p3),13));

        sext_ln1118_13_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_34_fu_565_p3),15));

        sext_ln1118_16_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_4_fu_597_p3),14));

        sext_ln1118_17_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_975_p3),16));

        sext_ln1118_18_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_reg_1992),16));

        sext_ln1118_1_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1707),20));

        sext_ln1118_22_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_69_fu_446_p3),13));

        sext_ln1118_25_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1752_pp0_iter2_reg),22));

        sext_ln1118_26_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_98_reg_1902),28));

        sext_ln1118_27_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_673_p3),15));

        sext_ln1118_28_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_2_reg_1907),15));

        sext_ln1118_31_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_696_p3),16));

        sext_ln1118_32_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1780_pp0_iter1_reg),21));

        sext_ln1118_3_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_reg_1730),21));

        sext_ln1118_43_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_102_fu_807_p3),15));

        sext_ln1118_45_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1770_pp0_iter3_reg),13));

        sext_ln1118_46_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_2_fu_1279_p3),13));

        sext_ln1118_4_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1752_pp0_iter2_reg),15));

        sext_ln1118_5_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1752_pp0_iter1_reg),14));

        sext_ln1118_6_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_reg_1752_pp0_iter1_reg),13));

        sext_ln1118_7_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_reg_1842),16));

        sext_ln1118_8_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_357_p3),14));

        sext_ln1118_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1707_pp0_iter1_reg),23));

        sext_ln1192_11_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_423_p3),34));

        sext_ln1192_14_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1770_pp0_iter2_reg),28));

        sext_ln1192_17_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1770_pp0_iter2_reg),22));

        sext_ln1192_18_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1780_pp0_iter1_reg),22));

        sext_ln1192_1_fu_273_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1707),28));

        sext_ln1192_21_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1780_pp0_iter2_reg),16));

        sext_ln1192_23_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_8_fu_1113_p3),28));

        sext_ln1192_28_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_13_fu_1208_p3),28));

        sext_ln1192_29_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_14_fu_1225_p3),28));

        sext_ln1192_2_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_reg_1730_pp0_iter2_reg),28));

        sext_ln1192_30_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_15_fu_1242_p3),28));

        sext_ln1192_31_fu_1266_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_16_fu_1259_p3),28));

        sext_ln1192_32_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_17_fu_1296_p3),28));

        sext_ln1192_33_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1780_pp0_iter2_reg),28));

        sext_ln1192_34_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_19_fu_861_p3),28));

        sext_ln1192_36_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_20_fu_909_p3),34));

        sext_ln1192_39_fu_1362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_21_fu_1355_p3),34));

        sext_ln1192_3_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_reg_1730_pp0_iter2_reg),22));

        sext_ln1192_7_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_4_fu_945_p3),28));

        sext_ln1192_9_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_45_reg_1827),34));

        sext_ln1192_fu_205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_195_p4),22));

        sext_ln1193_1_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_335_p3),28));

        sext_ln1193_2_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_374_p3),28));

        sext_ln728_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_18_fu_838_p3),28));

    shl_ln1118_1_fu_723_p3 <= (tmp_1_reg_1707_pp0_iter2_reg & ap_const_lv3_0);
    shl_ln1118_2_fu_1279_p3 <= (tmp_4_reg_1770_pp0_iter3_reg & ap_const_lv2_0);
    shl_ln1118_4_fu_597_p3 <= (tmp_2_reg_1730_pp0_iter2_reg & ap_const_lv3_0);
    shl_ln1118_5_fu_975_p3 <= (tmp_2_reg_1730_pp0_iter3_reg & ap_const_lv5_0);
    shl_ln1118_6_fu_608_p3 <= (tmp_2_reg_1730_pp0_iter2_reg & ap_const_lv1_0);
    shl_ln1118_8_fu_673_p3 <= (p_Val2_8_reg_1752_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln1118_s_fu_696_p3 <= (p_Val2_8_reg_1752_pp0_iter2_reg & ap_const_lv5_0);
    shl_ln1192_10_fu_1101_p3 <= (mul_ln1192_16_reg_2047 & ap_const_lv6_0);
    shl_ln1192_11_fu_1135_p3 <= (mul_ln1192_17_fu_1130_p2 & ap_const_lv12_0);
    shl_ln1192_12_fu_778_p3 <= (grp_fu_1645_p3 & ap_const_lv6_0);
    shl_ln1192_13_fu_1195_p3 <= (mul_ln1192_21_reg_2077 & ap_const_lv6_0);
    shl_ln1192_14_fu_879_p3 <= (add_ln1192_22_fu_873_p2 & ap_const_lv6_0);
    shl_ln1192_15_fu_890_p3 <= (mul_ln1192_22_fu_1672_p2 & ap_const_lv6_0);
    shl_ln1192_16_fu_1330_p3 <= (mul_ln1192_23_reg_2092 & ap_const_lv6_0);
    shl_ln1192_17_fu_1342_p3 <= (mul_ln1192_24_reg_2097 & ap_const_lv12_0);
    shl_ln1192_1_fu_962_p3 <= (mul_ln1192_3_reg_1987 & ap_const_lv6_0);
    shl_ln1192_2_fu_635_p3 <= (mul_ln1192_6_fu_1558_p2 & ap_const_lv6_0);
    shl_ln1192_3_fu_995_p3 <= (mul_ln1192_7_reg_2002 & ap_const_lv6_0);
    shl_ln1192_4_fu_1007_p3 <= (mul_ln1192_8_reg_2007 & ap_const_lv12_0);
    shl_ln1192_5_fu_1020_p3 <= (mul_ln1192_9_reg_2012 & ap_const_lv6_0);
    shl_ln1192_6_fu_1033_p3 <= (mul_ln1192_10_reg_2017 & ap_const_lv6_0);
    shl_ln1192_7_fu_1046_p3 <= (mul_ln1192_11_reg_2022 & ap_const_lv12_0);
    shl_ln1192_8_fu_1059_p3 <= (mul_ln1192_12_reg_2027 & ap_const_lv12_0);
    shl_ln1192_9_fu_734_p3 <= (grp_fu_1611_p3 & ap_const_lv6_0);
    shl_ln1192_s_fu_746_p3 <= (grp_fu_1619_p3 & ap_const_lv6_0);
    shl_ln1_fu_933_p3 <= (mul_ln1192_2_reg_1982 & ap_const_lv6_0);
    shl_ln_fu_357_p3 <= (p_Val2_8_reg_1752_pp0_iter1_reg & ap_const_lv3_0);
    sub_ln1192_10_fu_741_p2 <= std_logic_vector(signed(grp_fu_1602_p3) - signed(shl_ln1192_9_fu_734_p3));
    sub_ln1192_11_fu_1108_p2 <= std_logic_vector(unsigned(add_ln1192_11_reg_2037) - unsigned(shl_ln1192_10_fu_1101_p3));
    sub_ln1192_12_fu_1124_p2 <= std_logic_vector(unsigned(sub_ln1192_11_fu_1108_p2) - unsigned(sext_ln1192_23_fu_1120_p1));
    sub_ln1192_13_fu_785_p2 <= std_logic_vector(signed(grp_fu_1637_p3) - signed(shl_ln1192_12_fu_778_p3));
    sub_ln1192_14_fu_1176_p2 <= std_logic_vector(unsigned(add_ln1192_16_fu_1165_p2) - unsigned(rhs_V_11_fu_1169_p3));
    sub_ln1192_15_fu_1236_p2 <= std_logic_vector(unsigned(add_ln1192_19_fu_1219_p2) - unsigned(sext_ln1192_29_fu_1232_p1));
    sub_ln1192_16_fu_1270_p2 <= std_logic_vector(unsigned(add_ln1192_20_fu_1253_p2) - unsigned(sext_ln1192_31_fu_1266_p1));
    sub_ln1192_17_fu_1308_p2 <= std_logic_vector(unsigned(sub_ln1192_16_fu_1270_p2) - unsigned(sext_ln1192_32_fu_1304_p1));
    sub_ln1192_18_fu_921_p2 <= std_logic_vector(unsigned(add_ln1192_23_fu_897_p2) - unsigned(sext_ln1192_36_fu_917_p1));
    sub_ln1192_19_fu_1349_p2 <= std_logic_vector(unsigned(add_ln1192_24_fu_1337_p2) - unsigned(shl_ln1192_17_fu_1342_p3));
    sub_ln1192_20_fu_1366_p2 <= std_logic_vector(unsigned(sub_ln1192_19_fu_1349_p2) - unsigned(sext_ln1192_39_fu_1362_p1));
    sub_ln1192_2_fu_940_p2 <= std_logic_vector(signed(grp_fu_1692_p3) - signed(shl_ln1_fu_933_p3));
    sub_ln1192_3_fu_1395_p2 <= std_logic_vector(unsigned(add_ln1192_3_reg_2102) - unsigned(rhs_V_5_fu_1388_p3));
    sub_ln1192_4_fu_627_p2 <= std_logic_vector(unsigned(add_ln1192_5_reg_1872) - unsigned(mul_ln1192_5_fu_622_p2));
    sub_ln1192_5_fu_642_p2 <= std_logic_vector(unsigned(sub_ln1192_4_fu_627_p2) - unsigned(shl_ln1192_2_fu_635_p3));
    sub_ln1192_6_fu_1027_p2 <= std_logic_vector(unsigned(add_ln1192_7_fu_1014_p2) - unsigned(shl_ln1192_5_fu_1020_p3));
    sub_ln1192_7_fu_1066_p2 <= std_logic_vector(unsigned(add_ln1192_9_fu_1053_p2) - unsigned(shl_ln1192_8_fu_1059_p3));
    sub_ln1192_8_fu_1079_p2 <= std_logic_vector(unsigned(sub_ln1192_7_fu_1066_p2) - unsigned(rhs_V_6_fu_1072_p3));
    tmp_1_fu_195_p4 <= x_V_in_sig(159 downto 150);
    trunc_ln1117_fu_191_p1 <= x_V_in_sig(10 - 1 downto 0);
    trunc_ln728_1_fu_803_p1 <= r_V_97_fu_657_p2(14 - 1 downto 0);
    trunc_ln728_fu_525_p1 <= r_V_98_fu_1479_p2(22 - 1 downto 0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_fu_1400_p2(27 downto 18);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= trunc_ln708_1_reg_2112;

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_2_reg_2117;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_3_reg_2122;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= trunc_ln708_4_reg_2127;

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
