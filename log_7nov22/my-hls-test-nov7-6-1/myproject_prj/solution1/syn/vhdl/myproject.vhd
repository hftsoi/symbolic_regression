-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (95 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (5 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (5 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (5 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (5 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (5 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.355562,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=18,HLS_SYN_FF=727,HLS_SYN_LUT=1907,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv96_0 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv26_2600000 : STD_LOGIC_VECTOR (25 downto 0) := "10011000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv11_B : STD_LOGIC_VECTOR (10 downto 0) := "00000001011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv21_188000 : STD_LOGIC_VECTOR (20 downto 0) := "110001000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv26_3300000 : STD_LOGIC_VECTOR (25 downto 0) := "11001100000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv21_150000 : STD_LOGIC_VECTOR (20 downto 0) := "101010000000000000000";
    constant ap_const_lv21_1B0000 : STD_LOGIC_VECTOR (20 downto 0) := "110110000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (95 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_1_fu_191_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1559 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1559_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1559_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_205_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_reg_1573 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_reg_1573_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_reg_1573_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_4_fu_245_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_4_reg_1586 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_fu_267_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_reg_1591 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_24_fu_273_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_24_reg_1596 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_24_reg_1596_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_4_fu_283_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_4_reg_1611 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_4_reg_1611_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_58_fu_295_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_58_reg_1616 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_16_fu_301_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_16_reg_1622 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_reg_1628 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_reg_1628_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_1639 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_reg_1639_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_fu_325_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_reg_1653 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1192_1_fu_1425_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1192_1_reg_1658 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_20_fu_363_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_20_reg_1663 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_57_fu_374_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_57_reg_1668 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_3_fu_415_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_3_fu_415_p2 : signal is "no";
    signal ret_V_3_reg_1673 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_fu_420_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_10_reg_1678 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_1_fu_1440_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln728_1_reg_1683 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln728_2_fu_1446_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln728_2_reg_1688 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_63_fu_479_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_63_reg_1693 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_3_fu_489_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln728_3_reg_1698 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln728_4_fu_1452_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_4_reg_1703 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_5_fu_1458_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_5_reg_1708 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1464_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln728_6_reg_1713 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1472_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln728_7_reg_1718 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_31_fu_524_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_31_reg_1723 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_38_fu_530_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_38_reg_1728 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_19_fu_628_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_19_reg_1733 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_26_fu_664_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_26_reg_1738 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln728_12_fu_1488_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_12_reg_1743 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_13_fu_1494_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_13_reg_1748 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_5_fu_739_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_5_reg_1753 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_2_fu_748_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_reg_1758 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_1_reg_1763 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1192_7_fu_990_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1192_7_reg_1768 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln728_10_fu_1544_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln728_10_reg_1773 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_67_fu_1012_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_67_reg_1778 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_68_fu_1039_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_68_reg_1783 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_3_reg_1788 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln708_4_reg_1793 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln1117_fu_187_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_fu_215_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_55_fu_227_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1117_1_fu_201_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_55_fu_227_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_55_fu_227_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_56_fu_249_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_1_fu_241_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_56_fu_249_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_56_fu_249_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_V_1_fu_255_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln728_2_fu_263_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_fu_233_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_58_fu_295_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_58_fu_295_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_fu_325_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1118_fu_325_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_45_fu_331_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_45_fu_331_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_45_fu_331_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_8_fu_370_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_6_fu_360_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_fu_380_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_2_fu_383_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_1_fu_391_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_3_fu_404_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1431_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_3_fu_411_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_fu_420_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1117_fu_348_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_10_fu_420_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_22_fu_441_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_19_fu_431_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_22_fu_441_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_22_fu_441_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_26_fu_451_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_27_fu_466_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_27_fu_466_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_6_fu_462_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_27_fu_466_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_3_fu_489_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln728_3_fu_489_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_64_fu_495_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_64_fu_495_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_64_fu_495_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_46_fu_510_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_38_fu_530_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_38_fu_530_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_69_fu_546_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_69_fu_546_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1480_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_69_fu_546_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_7_fu_552_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_22_fu_555_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_23_fu_569_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_16_fu_563_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_21_fu_577_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_70_fu_587_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_70_fu_587_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_70_fu_587_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_24_fu_593_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_17_fu_581_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_22_fu_601_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_71_fu_611_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_71_fu_611_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_71_fu_611_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_V_25_fu_616_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_18_fu_605_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_23_fu_624_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_24_fu_634_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_28_fu_517_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_5_fu_357_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_25_fu_640_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_74_fu_646_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln703_9_fu_652_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_31_fu_656_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_51_fu_670_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_51_fu_670_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_51_fu_670_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_53_fu_683_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_53_fu_683_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_53_fu_683_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_72_fu_714_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1500_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1508_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_4_fu_728_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln703_4_fu_725_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln728_5_fu_735_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_8_fu_759_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal rhs_V_9_fu_773_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln728_9_fu_780_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln728_8_fu_766_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_7_fu_784_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_V_10_fu_794_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_5_fu_790_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln728_10_fu_801_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal rhs_V_11_fu_811_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_8_fu_805_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln728_11_fu_818_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal rhs_V_12_fu_828_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_9_fu_822_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln728_12_fu_835_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_10_fu_839_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal rhs_V_13_fu_849_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_6_fu_845_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_14_fu_856_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_14_fu_872_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_11_fu_860_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_18_fu_879_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1118_6_fu_889_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_30_fu_896_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_7_fu_699_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_65_fu_900_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_12_fu_883_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_15_fu_906_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln1192_2_fu_914_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_13_fu_920_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1118_7_fu_949_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1526_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_17_fu_963_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1517_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_3_fu_970_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1535_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_18_fu_979_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1192_4_fu_974_p2 : STD_LOGIC_VECTOR (20 downto 0);
    attribute use_dsp48 of sub_ln1192_4_fu_974_p2 : signal is "no";
    signal sext_ln1192_4_fu_986_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_42_fu_1002_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_42_fu_1002_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_67_fu_1012_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_67_fu_1012_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_73_fu_1017_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1118_9_fu_1028_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_40_fu_1035_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_39_fu_1024_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_11_fu_1048_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln728_11_fu_1048_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_11_fu_1048_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_26_fu_1057_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_8_fu_1054_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln728_25_fu_1065_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_27_fu_1075_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_20_fu_1069_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln728_26_fu_1082_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_28_fu_1092_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_21_fu_1086_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln728_27_fu_1099_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_29_fu_1109_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_22_fu_1103_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_10_fu_1116_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_30_fu_1126_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_8_fu_1120_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_11_fu_1133_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1192_9_fu_1137_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_23_fu_1143_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_32_fu_1166_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal lhs_V_fu_1159_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln728_28_fu_1173_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1118_11_fu_721_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln700_fu_702_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_27_fu_1177_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_75_fu_1183_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_33_fu_1193_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_10_fu_1189_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_29_fu_1201_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_34_fu_1211_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_28_fu_1205_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln728_30_fu_1218_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1550_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_35_fu_1228_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_29_fu_1222_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1192_12_fu_1235_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln1192_10_fu_1239_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_30_fu_1245_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_5_fu_1264_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_fu_1271_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_61_fu_1286_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_61_fu_1286_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_61_fu_1286_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_6_fu_1292_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1192_fu_1275_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_1_fu_1300_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_5_fu_1310_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_12_fu_1280_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_15_fu_1317_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_62_fu_1321_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1192_1_fu_1304_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_7_fu_1327_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1192_fu_1335_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_6_fu_1341_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_19_fu_1358_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_5_fu_1365_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_20_fu_1374_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1192_5_fu_1369_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_6_fu_1381_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_21_fu_1391_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_6_fu_1385_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_7_fu_1398_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1192_8_fu_1402_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_14_fu_1408_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln728_4_fu_1452_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_25_fu_500_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_5_fu_1458_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1464_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1464_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1472_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_12_fu_1488_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_44_fu_680_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_13_fu_1494_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1508_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1517_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1526_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_35_fu_960_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1535_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln728_10_fu_1544_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln728_19_fu_936_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1550_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1550_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component myproject_mul_mul_6s_12s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_mac_muladd_6s_13s_19s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mul_mul_6s_14s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mul_mul_6s_13s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_mul_mul_6s_12s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_am_addmul_6s_9s_6s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_am_submul_9s_7s_6s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_mac_mulsub_6s_12s_17s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_mac_mulsub_6s_12s_20ns_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_am_addmul_9s_7s_6s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_mac_mul_sub_6s_13s_21ns_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_am_submul_8s_6s_6s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mul_mul_6s_11s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component myproject_am_submul_9s_6s_6s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    myproject_mul_mul_6s_12s_17_1_1_U1 : component myproject_mul_mul_6s_12s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 12,
        dout_WIDTH => 17)
    port map (
        din0 => tmp_2_fu_205_p4,
        din1 => r_V_45_fu_331_p2,
        dout => mul_ln1192_1_fu_1425_p2);

    myproject_mac_muladd_6s_13s_19s_20_1_1_U2 : component myproject_mac_muladd_6s_13s_19s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 13,
        din2_WIDTH => 19,
        dout_WIDTH => 20)
    port map (
        din0 => tmp_2_reg_1573,
        din1 => r_V_58_reg_1616,
        din2 => ret_V_1_fu_391_p2,
        dout => grp_fu_1431_p3);

    myproject_mul_mul_6s_14s_18_1_1_U3 : component myproject_mul_mul_6s_14s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 14,
        dout_WIDTH => 18)
    port map (
        din0 => tmp_1_reg_1559,
        din1 => r_V_22_fu_441_p2,
        dout => mul_ln728_1_fu_1440_p2);

    myproject_mul_mul_6s_13s_17_1_1_U4 : component myproject_mul_mul_6s_13s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 13,
        dout_WIDTH => 17)
    port map (
        din0 => tmp_4_reg_1628,
        din1 => r_V_27_fu_466_p2,
        dout => mul_ln728_2_fu_1446_p2);

    myproject_mul_mul_6s_12s_16_1_1_U5 : component myproject_mul_mul_6s_12s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 12,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_1_reg_1559,
        din1 => mul_ln728_4_fu_1452_p1,
        dout => mul_ln728_4_fu_1452_p2);

    myproject_mul_mul_6s_12s_16_1_1_U6 : component myproject_mul_mul_6s_12s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 12,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_4_reg_1628,
        din1 => mul_ln728_5_fu_1458_p1,
        dout => mul_ln728_5_fu_1458_p2);

    myproject_am_addmul_6s_9s_6s_15_1_1_U7 : component myproject_am_addmul_6s_9s_6s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 9,
        din2_WIDTH => 6,
        dout_WIDTH => 15)
    port map (
        din0 => grp_fu_1464_p0,
        din1 => grp_fu_1464_p1,
        din2 => tmp_1_reg_1559,
        dout => grp_fu_1464_p3);

    myproject_am_submul_9s_7s_6s_15_1_1_U8 : component myproject_am_submul_9s_7s_6s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        din2_WIDTH => 6,
        dout_WIDTH => 15)
    port map (
        din0 => grp_fu_1472_p0,
        din1 => r_V_26_fu_451_p3,
        din2 => tmp_4_reg_1628,
        dout => grp_fu_1472_p3);

    myproject_mac_mulsub_6s_12s_17s_17_1_1_U9 : component myproject_mac_mulsub_6s_12s_17s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 12,
        din2_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        din0 => p_Val2_24_reg_1596,
        din1 => mul_ln1118_reg_1653,
        din2 => mul_ln1192_1_reg_1658,
        dout => grp_fu_1480_p3);

    myproject_mul_mul_6s_12s_16_1_1_U10 : component myproject_mul_mul_6s_12s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 12,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln728_12_fu_1488_p0,
        din1 => r_V_51_fu_670_p2,
        dout => mul_ln728_12_fu_1488_p2);

    myproject_mul_mul_6s_12s_16_1_1_U11 : component myproject_mul_mul_6s_12s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 12,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln728_13_fu_1494_p0,
        din1 => r_V_53_fu_683_p2,
        dout => mul_ln728_13_fu_1494_p2);

    myproject_mac_mulsub_6s_12s_20ns_20_1_1_U12 : component myproject_mac_mulsub_6s_12s_20ns_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 12,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => tmp_2_reg_1573_pp0_iter1_reg,
        din1 => r_V_10_reg_1678,
        din2 => ret_V_3_reg_1673,
        dout => grp_fu_1500_p3);

    myproject_am_addmul_9s_7s_6s_15_1_1_U13 : component myproject_am_addmul_9s_7s_6s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        din2_WIDTH => 6,
        dout_WIDTH => 15)
    port map (
        din0 => grp_fu_1508_p0,
        din1 => r_V_4_reg_1611_pp0_iter1_reg,
        din2 => tmp_2_reg_1573_pp0_iter1_reg,
        dout => grp_fu_1508_p3);

    myproject_mac_mul_sub_6s_13s_21ns_21_1_1_U14 : component myproject_mac_mul_sub_6s_13s_21ns_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 13,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => tmp_4_reg_1628_pp0_iter1_reg,
        din1 => r_V_38_reg_1728,
        din2 => grp_fu_1517_p2,
        dout => grp_fu_1517_p3);

    myproject_am_submul_8s_6s_6s_14_1_1_U15 : component myproject_am_submul_8s_6s_6s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => shl_ln1118_7_fu_949_p3,
        din1 => tmp_1_reg_1559_pp0_iter1_reg,
        din2 => grp_fu_1526_p2,
        dout => grp_fu_1526_p3);

    myproject_am_submul_8s_6s_6s_14_1_1_U16 : component myproject_am_submul_8s_6s_6s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => r_V_2_fu_748_p3,
        din1 => tmp_2_reg_1573_pp0_iter1_reg,
        din2 => grp_fu_1535_p2,
        dout => grp_fu_1535_p3);

    myproject_mul_mul_6s_11s_15_1_1_U17 : component myproject_mul_mul_6s_11s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 11,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln728_10_fu_1544_p0,
        din1 => r_V_42_fu_1002_p2,
        dout => mul_ln728_10_fu_1544_p2);

    myproject_am_submul_9s_6s_6s_15_1_1_U18 : component myproject_am_submul_9s_6s_6s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        dout_WIDTH => 15)
    port map (
        din0 => grp_fu_1550_p0,
        din1 => tmp_5_reg_1639_pp0_iter1_reg,
        din2 => grp_fu_1550_p2,
        dout => grp_fu_1550_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv96_0;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_7_reg_1768 <= add_ln1192_7_fu_990_p2;
                mul_ln728_10_reg_1773 <= mul_ln728_10_fu_1544_p2;
                    r_V_2_reg_1758(7 downto 2) <= r_V_2_fu_748_p3(7 downto 2);
                r_V_67_reg_1778 <= r_V_67_fu_1012_p2;
                    r_V_68_reg_1783(9 downto 1) <= r_V_68_fu_1039_p2(9 downto 1);
                ret_V_5_reg_1753 <= ret_V_5_fu_739_p2;
                tmp_1_reg_1559_pp0_iter2_reg <= tmp_1_reg_1559_pp0_iter1_reg;
                tmp_2_reg_1573_pp0_iter2_reg <= tmp_2_reg_1573_pp0_iter1_reg;
                trunc_ln708_1_reg_1763 <= ret_V_13_fu_920_p2(25 downto 20);
                trunc_ln708_3_reg_1788 <= ret_V_23_fu_1143_p2(20 downto 15);
                trunc_ln708_4_reg_1793 <= ret_V_30_fu_1245_p2(25 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_reg_1653 <= mul_ln1118_fu_325_p2;
                mul_ln1192_1_reg_1658 <= mul_ln1192_1_fu_1425_p2;
                mul_ln728_12_reg_1743 <= mul_ln728_12_fu_1488_p2;
                mul_ln728_13_reg_1748 <= mul_ln728_13_fu_1494_p2;
                mul_ln728_1_reg_1683 <= mul_ln728_1_fu_1440_p2;
                mul_ln728_2_reg_1688 <= mul_ln728_2_fu_1446_p2;
                mul_ln728_3_reg_1698 <= mul_ln728_3_fu_489_p2;
                mul_ln728_4_reg_1703 <= mul_ln728_4_fu_1452_p2;
                mul_ln728_5_reg_1708 <= mul_ln728_5_fu_1458_p2;
                p_Val2_24_reg_1596 <= x_V_in_sig(89 downto 84);
                p_Val2_24_reg_1596_pp0_iter1_reg <= p_Val2_24_reg_1596;
                r_V_10_reg_1678 <= r_V_10_fu_420_p2;
                    r_V_20_reg_1663(7 downto 2) <= r_V_20_fu_363_p3(7 downto 2);
                    r_V_38_reg_1728(12 downto 1) <= r_V_38_fu_530_p2(12 downto 1);
                    r_V_4_reg_1611(6 downto 1) <= r_V_4_fu_283_p3(6 downto 1);
                    r_V_4_reg_1611_pp0_iter1_reg(6 downto 1) <= r_V_4_reg_1611(6 downto 1);
                r_V_57_reg_1668 <= r_V_57_fu_374_p2;
                    r_V_58_reg_1616(12 downto 1) <= r_V_58_fu_295_p2(12 downto 1);
                r_V_63_reg_1693 <= r_V_63_fu_479_p2;
                ret_V_19_reg_1733 <= ret_V_19_fu_628_p2;
                    ret_V_26_reg_1738(19 downto 5) <= ret_V_26_fu_664_p2(19 downto 5);
                ret_V_3_reg_1673 <= ret_V_3_fu_415_p2;
                    ret_V_reg_1591(17 downto 5) <= ret_V_fu_267_p2(17 downto 5);
                sext_ln1118_16_reg_1622 <= sext_ln1118_16_fu_301_p1;
                sext_ln1118_31_reg_1723 <= sext_ln1118_31_fu_524_p1;
                sext_ln1118_4_reg_1586 <= sext_ln1118_4_fu_245_p1;
                tmp_1_reg_1559 <= x_V_in_sig(95 downto 90);
                tmp_1_reg_1559_pp0_iter1_reg <= tmp_1_reg_1559;
                tmp_2_reg_1573 <= x_V_in_sig(17 downto 12);
                tmp_2_reg_1573_pp0_iter1_reg <= tmp_2_reg_1573;
                tmp_4_reg_1628 <= x_V_in_sig(29 downto 24);
                tmp_4_reg_1628_pp0_iter1_reg <= tmp_4_reg_1628;
                tmp_5_reg_1639 <= x_V_in_sig(23 downto 18);
                tmp_5_reg_1639_pp0_iter1_reg <= tmp_5_reg_1639;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln728_6_reg_1713 <= grp_fu_1464_p3;
                mul_ln728_7_reg_1718 <= grp_fu_1472_p3;
            end if;
        end if;
    end process;
    ret_V_reg_1591(4 downto 0) <= "00000";
    r_V_4_reg_1611(0) <= '0';
    r_V_4_reg_1611_pp0_iter1_reg(0) <= '0';
    r_V_58_reg_1616(0) <= '0';
    r_V_20_reg_1663(1 downto 0) <= "00";
    r_V_38_reg_1728(0) <= '0';
    ret_V_26_reg_1738(4 downto 0) <= "00000";
    r_V_2_reg_1758(1 downto 0) <= "00";
    r_V_68_reg_1783(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_1_fu_1304_p2 <= std_logic_vector(unsigned(add_ln1192_fu_1275_p2) + unsigned(sext_ln1192_1_fu_1300_p1));
    add_ln1192_7_fu_990_p2 <= std_logic_vector(unsigned(sub_ln1192_4_fu_974_p2) + unsigned(sext_ln1192_4_fu_986_p1));
    add_ln1192_8_fu_1402_p2 <= std_logic_vector(unsigned(sub_ln1192_6_fu_1385_p2) + unsigned(sext_ln1192_7_fu_1398_p1));
    add_ln1192_fu_1275_p2 <= std_logic_vector(unsigned(ret_V_5_reg_1753) + unsigned(sext_ln1192_fu_1271_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1464_p0 <= sext_ln1118_5_fu_357_p1(6 - 1 downto 0);
    grp_fu_1464_p1 <= sext_ln1118_28_fu_517_p1(9 - 1 downto 0);
    grp_fu_1472_p0 <= sext_ln1118_28_fu_517_p1(9 - 1 downto 0);
    grp_fu_1508_p0 <= sext_ln1118_11_fu_721_p1(9 - 1 downto 0);
    grp_fu_1517_p2 <= (p_Val2_24_reg_1596_pp0_iter1_reg & ap_const_lv15_0);
    grp_fu_1526_p2 <= sext_ln1118_35_fu_960_p1(6 - 1 downto 0);
    grp_fu_1535_p2 <= sext_ln1118_35_fu_960_p1(6 - 1 downto 0);
    grp_fu_1550_p0 <= sext_ln1118_39_fu_1024_p1(9 - 1 downto 0);
    grp_fu_1550_p2 <= sext_ln728_19_fu_936_p1(6 - 1 downto 0);
    lhs_V_fu_1159_p3 <= (ret_V_26_reg_1738 & ap_const_lv5_0);
    mul_ln1118_fu_325_p0 <= sext_ln1118_16_fu_301_p1(6 - 1 downto 0);
    mul_ln1118_fu_325_p1 <= sext_ln1116_1_fu_241_p1(6 - 1 downto 0);
    mul_ln1118_fu_325_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_fu_325_p0) * signed(mul_ln1118_fu_325_p1))), 12));
    mul_ln728_10_fu_1544_p0 <= sext_ln728_19_fu_936_p1(6 - 1 downto 0);
    mul_ln728_11_fu_1048_p0 <= tmp_4_reg_1628_pp0_iter1_reg;
    mul_ln728_11_fu_1048_p1 <= r_V_57_reg_1668;
    mul_ln728_11_fu_1048_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_11_fu_1048_p0) * signed(mul_ln728_11_fu_1048_p1))), 14));
    mul_ln728_12_fu_1488_p0 <= sext_ln1118_44_fu_680_p1(6 - 1 downto 0);
    mul_ln728_13_fu_1494_p0 <= sext_ln1118_44_fu_680_p1(6 - 1 downto 0);
    mul_ln728_3_fu_489_p0 <= sext_ln1118_19_fu_431_p1(6 - 1 downto 0);
    mul_ln728_3_fu_489_p1 <= r_V_63_fu_479_p2;
    mul_ln728_3_fu_489_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_3_fu_489_p0) * signed(mul_ln728_3_fu_489_p1))), 14));
    mul_ln728_4_fu_1452_p1 <= sext_ln1118_25_fu_500_p1(12 - 1 downto 0);
    mul_ln728_5_fu_1458_p1 <= sext_ln1118_25_fu_500_p1(12 - 1 downto 0);
    p_Val2_24_fu_273_p4 <= x_V_in_sig(89 downto 84);
    r_V_10_fu_420_p0 <= sext_ln1117_fu_348_p1(6 - 1 downto 0);
    r_V_10_fu_420_p1 <= sext_ln1118_4_reg_1586(6 - 1 downto 0);
    r_V_10_fu_420_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_10_fu_420_p0) * signed(r_V_10_fu_420_p1))), 12));
    r_V_20_fu_363_p3 <= (p_Val2_24_reg_1596 & ap_const_lv2_0);
    r_V_22_fu_441_p0 <= sext_ln1118_19_fu_431_p1(6 - 1 downto 0);
    r_V_22_fu_441_p1 <= r_V_20_fu_363_p3;
    r_V_22_fu_441_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_22_fu_441_p0) * signed(r_V_22_fu_441_p1))), 14));
    r_V_26_fu_451_p3 <= (p_Val2_24_reg_1596 & ap_const_lv1_0);
    r_V_27_fu_466_p0 <= p_Val2_24_reg_1596;
    r_V_27_fu_466_p1 <= sext_ln1116_6_fu_462_p1(7 - 1 downto 0);
    r_V_27_fu_466_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_27_fu_466_p0) * signed(r_V_27_fu_466_p1))), 13));
    r_V_2_fu_748_p3 <= (tmp_2_reg_1573_pp0_iter1_reg & ap_const_lv2_0);
    r_V_38_fu_530_p0 <= tmp_5_reg_1639;
    r_V_38_fu_530_p1 <= sext_ln1116_6_fu_462_p1(7 - 1 downto 0);
    r_V_38_fu_530_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_38_fu_530_p0) * signed(r_V_38_fu_530_p1))), 13));
    r_V_42_fu_1002_p1 <= tmp_5_reg_1639_pp0_iter1_reg;
    r_V_42_fu_1002_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv11_B) * signed(r_V_42_fu_1002_p1))), 11));
    r_V_45_fu_331_p0 <= sext_ln1118_16_fu_301_p1(6 - 1 downto 0);
    r_V_45_fu_331_p1 <= sext_ln1118_16_fu_301_p1(6 - 1 downto 0);
    r_V_45_fu_331_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_45_fu_331_p0) * signed(r_V_45_fu_331_p1))), 12));
    r_V_46_fu_510_p3 <= (p_Val2_24_reg_1596 & ap_const_lv3_0);
    r_V_4_fu_283_p3 <= (tmp_1_fu_191_p4 & ap_const_lv1_0);
    r_V_51_fu_670_p0 <= sext_ln1117_fu_348_p1(6 - 1 downto 0);
    r_V_51_fu_670_p1 <= sext_ln1118_31_fu_524_p1(6 - 1 downto 0);
    r_V_51_fu_670_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_51_fu_670_p0) * signed(r_V_51_fu_670_p1))), 12));
    r_V_53_fu_683_p0 <= sext_ln1118_31_fu_524_p1(6 - 1 downto 0);
    r_V_53_fu_683_p1 <= sext_ln1118_31_fu_524_p1(6 - 1 downto 0);
    r_V_53_fu_683_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_53_fu_683_p0) * signed(r_V_53_fu_683_p1))), 12));
    r_V_55_fu_227_p0 <= sext_ln1117_1_fu_201_p1(6 - 1 downto 0);
    r_V_55_fu_227_p1 <= r_V_fu_215_p3;
    r_V_55_fu_227_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_55_fu_227_p0) * signed(r_V_55_fu_227_p1))), 13));
    r_V_56_fu_249_p0 <= sext_ln1116_1_fu_241_p1(6 - 1 downto 0);
    r_V_56_fu_249_p1 <= tmp_2_fu_205_p4;
    r_V_56_fu_249_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_56_fu_249_p0) * signed(r_V_56_fu_249_p1))), 12));
    r_V_57_fu_374_p2 <= std_logic_vector(signed(sext_ln1118_8_fu_370_p1) - signed(sext_ln1118_6_fu_360_p1));
    r_V_58_fu_295_p0 <= sext_ln1117_1_fu_201_p1(6 - 1 downto 0);
    r_V_58_fu_295_p1 <= r_V_4_fu_283_p3;
    r_V_58_fu_295_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_58_fu_295_p0) * signed(r_V_58_fu_295_p1))), 13));
    r_V_61_fu_1286_p0 <= tmp_2_reg_1573_pp0_iter2_reg;
    r_V_61_fu_1286_p1 <= r_V_2_reg_1758;
    r_V_61_fu_1286_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_61_fu_1286_p0) * signed(r_V_61_fu_1286_p1))), 14));
    r_V_62_fu_1321_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_1280_p1) + signed(sext_ln1118_15_fu_1317_p1));
    r_V_63_fu_479_p2 <= std_logic_vector(signed(sext_ln1118_6_fu_360_p1) + signed(sext_ln1118_8_fu_370_p1));
    r_V_64_fu_495_p0 <= sext_ln1117_fu_348_p1(6 - 1 downto 0);
    r_V_64_fu_495_p1 <= sext_ln1118_16_reg_1622(6 - 1 downto 0);
    r_V_64_fu_495_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_64_fu_495_p0) * signed(r_V_64_fu_495_p1))), 12));
    r_V_65_fu_900_p2 <= std_logic_vector(signed(sext_ln1118_30_fu_896_p1) - signed(sext_ln1118_7_fu_699_p1));
    r_V_67_fu_1012_p0 <= sext_ln1118_31_reg_1723(6 - 1 downto 0);
    r_V_67_fu_1012_p1 <= tmp_4_reg_1628_pp0_iter1_reg;
    r_V_67_fu_1012_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_67_fu_1012_p0) * signed(r_V_67_fu_1012_p1))), 12));
    r_V_68_fu_1039_p2 <= std_logic_vector(signed(sext_ln1118_40_fu_1035_p1) - signed(sext_ln1118_39_fu_1024_p1));
    r_V_69_fu_546_p0 <= p_Val2_24_reg_1596;
    r_V_69_fu_546_p1 <= r_V_46_fu_510_p3;
    r_V_69_fu_546_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_69_fu_546_p0) * signed(r_V_69_fu_546_p1))), 15));
    r_V_70_fu_587_p0 <= tmp_2_reg_1573;
    r_V_70_fu_587_p1 <= sext_ln1116_6_fu_462_p1(7 - 1 downto 0);
    r_V_70_fu_587_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_70_fu_587_p0) * signed(r_V_70_fu_587_p1))), 13));
    r_V_71_fu_611_p0 <= sext_ln1118_16_reg_1622(6 - 1 downto 0);
    r_V_71_fu_611_p1 <= sext_ln1118_31_fu_524_p1(6 - 1 downto 0);
    r_V_71_fu_611_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_71_fu_611_p0) * signed(r_V_71_fu_611_p1))), 12));
    r_V_72_fu_714_p3 <= (tmp_1_reg_1559_pp0_iter1_reg & ap_const_lv3_0);
    r_V_73_fu_1017_p3 <= (tmp_5_reg_1639_pp0_iter1_reg & ap_const_lv3_0);
    r_V_74_fu_646_p2 <= std_logic_vector(signed(sext_ln1118_28_fu_517_p1) - signed(sext_ln1118_5_fu_357_p1));
    r_V_75_fu_1183_p2 <= std_logic_vector(signed(sext_ln1118_11_fu_721_p1) - signed(sext_ln700_fu_702_p1));
    r_V_fu_215_p3 <= (trunc_ln1117_fu_187_p1 & ap_const_lv1_0);
    ret_V_10_fu_839_p2 <= std_logic_vector(unsigned(ret_V_9_fu_822_p2) + unsigned(sext_ln728_12_fu_835_p1));
    ret_V_11_fu_860_p2 <= std_logic_vector(signed(sext_ln703_6_fu_845_p1) + signed(sext_ln728_14_fu_856_p1));
    ret_V_12_fu_883_p2 <= std_logic_vector(unsigned(ret_V_11_fu_860_p2) - unsigned(sext_ln728_18_fu_879_p1));
    ret_V_13_fu_920_p2 <= std_logic_vector(signed(ap_const_lv26_2600000) + signed(sub_ln1192_2_fu_914_p2));
    ret_V_14_fu_1408_p2 <= std_logic_vector(signed(ap_const_lv21_1B0000) + signed(add_ln1192_8_fu_1402_p2));
    ret_V_16_fu_563_p2 <= std_logic_vector(signed(sext_ln703_7_fu_552_p1) - signed(rhs_V_22_fu_555_p3));
    ret_V_17_fu_581_p2 <= std_logic_vector(unsigned(ret_V_16_fu_563_p2) + unsigned(sext_ln728_21_fu_577_p1));
    ret_V_18_fu_605_p2 <= std_logic_vector(unsigned(ret_V_17_fu_581_p2) - unsigned(sext_ln728_22_fu_601_p1));
    ret_V_19_fu_628_p2 <= std_logic_vector(unsigned(ret_V_18_fu_605_p2) + unsigned(sext_ln728_23_fu_624_p1));
    ret_V_1_fu_391_p2 <= std_logic_vector(signed(sext_ln703_fu_380_p1) + signed(rhs_V_2_fu_383_p3));
    ret_V_20_fu_1069_p2 <= std_logic_vector(signed(sext_ln703_8_fu_1054_p1) + signed(sext_ln728_25_fu_1065_p1));
    ret_V_21_fu_1086_p2 <= std_logic_vector(unsigned(ret_V_20_fu_1069_p2) + unsigned(sext_ln728_26_fu_1082_p1));
    ret_V_22_fu_1103_p2 <= std_logic_vector(unsigned(ret_V_21_fu_1086_p2) - unsigned(sext_ln728_27_fu_1099_p1));
    ret_V_23_fu_1143_p2 <= std_logic_vector(signed(ap_const_lv21_188000) + signed(sub_ln1192_9_fu_1137_p2));
    ret_V_24_fu_634_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(rhs_V_23_fu_569_p3));
    ret_V_25_fu_640_p2 <= std_logic_vector(unsigned(ret_V_24_fu_634_p2) - unsigned(rhs_V_25_fu_616_p3));
    ret_V_26_fu_664_p2 <= std_logic_vector(signed(sext_ln703_9_fu_652_p1) + signed(rhs_V_31_fu_656_p3));
    ret_V_27_fu_1177_p2 <= std_logic_vector(unsigned(lhs_V_fu_1159_p3) + unsigned(sext_ln728_28_fu_1173_p1));
    ret_V_28_fu_1205_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1189_p1) - signed(sext_ln728_29_fu_1201_p1));
    ret_V_29_fu_1222_p2 <= std_logic_vector(unsigned(ret_V_28_fu_1205_p2) + unsigned(sext_ln728_30_fu_1218_p1));
    ret_V_30_fu_1245_p2 <= std_logic_vector(signed(ap_const_lv26_3300000) + signed(sub_ln1192_10_fu_1239_p2));
    ret_V_3_fu_415_p2 <= std_logic_vector(signed(grp_fu_1431_p3) + signed(sext_ln728_3_fu_411_p1));
    ret_V_5_fu_739_p2 <= std_logic_vector(signed(sext_ln703_4_fu_725_p1) - signed(sext_ln728_5_fu_735_p1));
    ret_V_6_fu_1341_p2 <= std_logic_vector(signed(ap_const_lv21_150000) + signed(sub_ln1192_fu_1335_p2));
    ret_V_7_fu_784_p2 <= std_logic_vector(signed(sext_ln728_9_fu_780_p1) - signed(sext_ln728_8_fu_766_p1));
    ret_V_8_fu_805_p2 <= std_logic_vector(signed(sext_ln703_5_fu_790_p1) + signed(sext_ln728_10_fu_801_p1));
    ret_V_9_fu_822_p2 <= std_logic_vector(unsigned(ret_V_8_fu_805_p2) - unsigned(sext_ln728_11_fu_818_p1));
    ret_V_fu_267_p2 <= std_logic_vector(signed(sext_ln728_2_fu_263_p1) - signed(rhs_V_fu_233_p3));
    rhs_V_10_fu_794_p3 <= (mul_ln728_3_reg_1698 & ap_const_lv10_0);
    rhs_V_11_fu_811_p3 <= (mul_ln728_4_reg_1703 & ap_const_lv5_0);
    rhs_V_12_fu_828_p3 <= (mul_ln728_5_reg_1708 & ap_const_lv5_0);
    rhs_V_13_fu_849_p3 <= (mul_ln728_6_reg_1713 & ap_const_lv10_0);
    rhs_V_14_fu_872_p3 <= (mul_ln728_7_reg_1718 & ap_const_lv10_0);
    rhs_V_15_fu_906_p3 <= (r_V_65_fu_900_p2 & ap_const_lv15_0);
    rhs_V_17_fu_963_p3 <= (grp_fu_1526_p3 & ap_const_lv5_0);
    rhs_V_18_fu_979_p3 <= (grp_fu_1535_p3 & ap_const_lv5_0);
    rhs_V_19_fu_1358_p3 <= (mul_ln728_10_reg_1773 & ap_const_lv5_0);
    rhs_V_1_fu_255_p3 <= (r_V_56_fu_249_p2 & ap_const_lv5_0);
    rhs_V_20_fu_1374_p3 <= (r_V_67_reg_1778 & ap_const_lv5_0);
    rhs_V_21_fu_1391_p3 <= (r_V_68_reg_1783 & ap_const_lv10_0);
    rhs_V_22_fu_555_p3 <= (r_V_69_fu_546_p2 & ap_const_lv5_0);
    rhs_V_23_fu_569_p3 <= (r_V_64_fu_495_p2 & ap_const_lv5_0);
    rhs_V_24_fu_593_p3 <= (r_V_70_fu_587_p2 & ap_const_lv5_0);
    rhs_V_25_fu_616_p3 <= (r_V_71_fu_611_p2 & ap_const_lv5_0);
    rhs_V_26_fu_1057_p3 <= (mul_ln728_11_fu_1048_p2 & ap_const_lv5_0);
    rhs_V_27_fu_1075_p3 <= (r_V_63_reg_1693 & ap_const_lv10_0);
    rhs_V_28_fu_1092_p3 <= (tmp_1_reg_1559_pp0_iter1_reg & ap_const_lv13_0);
    rhs_V_29_fu_1109_p3 <= (tmp_5_reg_1639_pp0_iter1_reg & ap_const_lv13_0);
    rhs_V_2_fu_383_p3 <= (r_V_57_fu_374_p2 & ap_const_lv10_0);
    rhs_V_30_fu_1126_p3 <= (tmp_4_reg_1628_pp0_iter1_reg & ap_const_lv10_0);
    rhs_V_31_fu_656_p3 <= (r_V_74_fu_646_p2 & ap_const_lv10_0);
    rhs_V_32_fu_1166_p3 <= (mul_ln728_12_reg_1743 & ap_const_lv5_0);
    rhs_V_33_fu_1193_p3 <= (r_V_75_fu_1183_p2 & ap_const_lv15_0);
    rhs_V_34_fu_1211_p3 <= (mul_ln728_13_reg_1748 & ap_const_lv5_0);
    rhs_V_35_fu_1228_p3 <= (grp_fu_1550_p3 & ap_const_lv10_0);
    rhs_V_3_fu_404_p3 <= (r_V_58_reg_1616 & ap_const_lv5_0);
    rhs_V_4_fu_728_p3 <= (grp_fu_1508_p3 & ap_const_lv5_0);
    rhs_V_5_fu_1264_p3 <= (tmp_1_reg_1559_pp0_iter2_reg & ap_const_lv14_0);
    rhs_V_6_fu_1292_p3 <= (r_V_61_fu_1286_p2 & ap_const_lv5_0);
    rhs_V_7_fu_1327_p3 <= (r_V_62_fu_1321_p2 & ap_const_lv10_0);
    rhs_V_8_fu_759_p3 <= (mul_ln728_1_reg_1683 & ap_const_lv5_0);
    rhs_V_9_fu_773_p3 <= (mul_ln728_2_reg_1688 & ap_const_lv5_0);
    rhs_V_fu_233_p3 <= (r_V_55_fu_227_p2 & ap_const_lv5_0);
        sext_ln1116_1_fu_241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1117_fu_187_p1),12));

        sext_ln1116_6_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_26_fu_451_p3),13));

        sext_ln1117_1_fu_201_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_191_p4),13));

        sext_ln1117_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1559),12));

        sext_ln1118_11_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_72_fu_714_p3),10));

        sext_ln1118_12_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_reg_1573_pp0_iter2_reg),11));

        sext_ln1118_15_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_1310_p3),11));

        sext_ln1118_16_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_fu_273_p4),12));

        sext_ln1118_19_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_reg_1596),14));

        sext_ln1118_25_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_64_fu_495_p2),16));

        sext_ln1118_28_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_46_fu_510_p3),10));

        sext_ln1118_30_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_889_p3),11));

        sext_ln1118_31_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1639),12));

        sext_ln1118_35_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1639_pp0_iter1_reg),14));

        sext_ln1118_39_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_73_fu_1017_p3),10));

        sext_ln1118_40_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_9_fu_1028_p3),10));

        sext_ln1118_44_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1639),16));

        sext_ln1118_4_fu_245_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_205_p4),12));

        sext_ln1118_5_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_reg_1596),10));

        sext_ln1118_6_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_reg_1596),9));

        sext_ln1118_7_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_20_reg_1663),11));

        sext_ln1118_8_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_20_fu_363_p3),9));

        sext_ln1192_10_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_29_fu_1109_p3),21));

        sext_ln1192_11_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_30_fu_1126_p3),21));

        sext_ln1192_12_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_35_fu_1228_p3),26));

        sext_ln1192_1_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_6_fu_1292_p3),21));

        sext_ln1192_3_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_17_fu_963_p3),21));

        sext_ln1192_4_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_18_fu_979_p3),21));

        sext_ln1192_5_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_19_fu_1358_p3),21));

        sext_ln1192_6_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_20_fu_1374_p3),21));

        sext_ln1192_7_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_21_fu_1391_p3),21));

        sext_ln1192_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_5_fu_1264_p3),21));

        sext_ln700_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1559_pp0_iter1_reg),10));

        sext_ln703_10_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_27_fu_1177_p2),26));

        sext_ln703_4_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1500_p3),21));

        sext_ln703_5_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_7_fu_784_p2),25));

        sext_ln703_6_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_10_fu_839_p2),26));

        sext_ln703_7_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1480_p3),20));

        sext_ln703_8_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_19_reg_1733),21));

        sext_ln703_9_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_25_fu_640_p2),20));

        sext_ln703_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_1591),19));

        sext_ln728_10_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_10_fu_794_p3),25));

        sext_ln728_11_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_11_fu_811_p3),25));

        sext_ln728_12_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_12_fu_828_p3),25));

        sext_ln728_14_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_13_fu_849_p3),26));

        sext_ln728_18_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_14_fu_872_p3),26));

        sext_ln728_19_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1639_pp0_iter1_reg),15));

        sext_ln728_21_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_23_fu_569_p3),20));

        sext_ln728_22_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_24_fu_593_p3),20));

        sext_ln728_23_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_25_fu_616_p3),20));

        sext_ln728_25_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_26_fu_1057_p3),21));

        sext_ln728_26_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_27_fu_1075_p3),21));

        sext_ln728_27_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_28_fu_1092_p3),21));

        sext_ln728_28_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_32_fu_1166_p3),25));

        sext_ln728_29_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_33_fu_1193_p3),26));

        sext_ln728_2_fu_263_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_255_p3),18));

        sext_ln728_30_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_34_fu_1211_p3),26));

        sext_ln728_3_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_404_p3),20));

        sext_ln728_5_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_4_fu_728_p3),21));

        sext_ln728_8_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_8_fu_759_p3),24));

        sext_ln728_9_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_9_fu_773_p3),24));

    shl_ln1118_5_fu_1310_p3 <= (tmp_2_reg_1573_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln1118_6_fu_889_p3 <= (p_Val2_24_reg_1596_pp0_iter1_reg & ap_const_lv4_0);
    shl_ln1118_7_fu_949_p3 <= (tmp_1_reg_1559_pp0_iter1_reg & ap_const_lv2_0);
    shl_ln1118_9_fu_1028_p3 <= (tmp_5_reg_1639_pp0_iter1_reg & ap_const_lv1_0);
    sub_ln1192_10_fu_1239_p2 <= std_logic_vector(unsigned(ret_V_29_fu_1222_p2) - unsigned(sext_ln1192_12_fu_1235_p1));
    sub_ln1192_2_fu_914_p2 <= std_logic_vector(unsigned(ret_V_12_fu_883_p2) - unsigned(rhs_V_15_fu_906_p3));
    sub_ln1192_4_fu_974_p2 <= std_logic_vector(signed(grp_fu_1517_p3) - signed(sext_ln1192_3_fu_970_p1));
    sub_ln1192_5_fu_1369_p2 <= std_logic_vector(unsigned(add_ln1192_7_reg_1768) - unsigned(sext_ln1192_5_fu_1365_p1));
    sub_ln1192_6_fu_1385_p2 <= std_logic_vector(unsigned(sub_ln1192_5_fu_1369_p2) - unsigned(sext_ln1192_6_fu_1381_p1));
    sub_ln1192_8_fu_1120_p2 <= std_logic_vector(unsigned(ret_V_22_fu_1103_p2) - unsigned(sext_ln1192_10_fu_1116_p1));
    sub_ln1192_9_fu_1137_p2 <= std_logic_vector(unsigned(sub_ln1192_8_fu_1120_p2) - unsigned(sext_ln1192_11_fu_1133_p1));
    sub_ln1192_fu_1335_p2 <= std_logic_vector(unsigned(add_ln1192_1_fu_1304_p2) - unsigned(rhs_V_7_fu_1327_p3));
    tmp_1_fu_191_p4 <= x_V_in_sig(95 downto 90);
    tmp_2_fu_205_p4 <= x_V_in_sig(17 downto 12);
    trunc_ln1117_fu_187_p1 <= x_V_in_sig(6 - 1 downto 0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_6_fu_1341_p2(20 downto 15);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= trunc_ln708_1_reg_1763;

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= ret_V_14_fu_1408_p2(20 downto 15);

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_3_reg_1788;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= trunc_ln708_4_reg_1793;

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
