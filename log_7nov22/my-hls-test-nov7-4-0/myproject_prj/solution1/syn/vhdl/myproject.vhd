-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (63 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.309000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=171,HLS_SYN_LUT=1164,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_5000 : STD_LOGIC_VECTOR (15 downto 0) := "0101000000000000";
    constant ap_const_lv20_30000 : STD_LOGIC_VECTOR (19 downto 0) := "00110000000000000000";
    constant ap_const_lv16_B000 : STD_LOGIC_VECTOR (15 downto 0) := "1011000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv20_90000 : STD_LOGIC_VECTOR (19 downto 0) := "10010000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (63 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_1_fu_169_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_reg_1150 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_183_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_reg_1158 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_23_fu_225_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_23_reg_1166 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_26_fu_257_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_26_reg_1172 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1133_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_2_reg_1177 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_31_fu_293_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_31_reg_1182 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_10_fu_343_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_10_reg_1187 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_9_fu_387_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_9_reg_1192 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_9_fu_393_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_9_reg_1197 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_4_fu_401_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1116_4_reg_1202 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_409_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_reg_1207 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln1192_4_fu_459_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of sub_ln1192_4_fu_459_p2 : signal is "no";
    signal sub_ln1192_4_reg_1215 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_38_fu_464_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_38_reg_1220 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln708_5_reg_1225 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln1117_fu_165_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_25_fu_201_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1117_1_fu_179_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_25_fu_201_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_25_fu_201_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_fu_207_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_fu_215_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_V_1_fu_239_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_1_fu_247_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_fu_235_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_26_fu_257_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_26_fu_257_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_32_fu_305_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_32_fu_305_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_32_fu_305_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_1_fu_315_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln728_1_fu_315_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln728_1_fu_315_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_7_fu_321_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_10_fu_333_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1118_6_fu_271_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_10_fu_333_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_283_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_10_fu_333_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln728_2_fu_351_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln728_2_fu_351_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln728_2_fu_351_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_8_fu_357_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln728_9_fu_365_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln728_8_fu_329_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_8_fu_369_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_9_fu_379_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_5_fu_375_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_14_fu_423_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1118_15_fu_419_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_14_fu_423_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_14_fu_423_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_37_fu_441_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_37_fu_441_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_37_fu_441_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_14_fu_447_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1141_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_2_fu_455_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_38_fu_464_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln700_fu_221_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_38_fu_464_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_39_fu_470_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_39_fu_470_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_39_fu_470_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_18_fu_476_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_40_fu_490_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_40_fu_490_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_40_fu_490_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_19_fu_496_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_14_fu_484_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln728_12_fu_504_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_41_fu_514_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_41_fu_514_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_41_fu_514_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_20_fu_520_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_13_fu_528_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_15_fu_508_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_16_fu_532_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_21_fu_542_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln728_14_fu_550_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_8_fu_538_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_17_fu_554_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_22_fu_564_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_9_fu_560_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln728_15_fu_572_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_23_fu_582_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_18_fu_576_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_6_fu_590_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_6_fu_594_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_2_fu_625_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln728_2_fu_632_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_2_fu_622_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_42_fu_642_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_1_fu_649_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln700_2_fu_619_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_fu_653_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_fu_663_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_fu_663_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_3_fu_636_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln728_fu_663_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_3_fu_673_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_3_fu_669_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_4_fu_681_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_1_fu_691_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_2_fu_698_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_4_fu_685_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_28_fu_702_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_4_fu_712_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_4_fu_708_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_fu_726_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_29_fu_737_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_29_fu_737_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_29_fu_737_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_5_fu_743_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln728_5_fu_751_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_5_fu_720_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_3_fu_761_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_3_fu_768_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_30_fu_772_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_6_fu_755_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_6_fu_778_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_fu_786_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_fu_792_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_33_fu_818_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_33_fu_818_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_33_fu_818_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_10_fu_826_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_6_fu_823_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_12_fu_815_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_4_fu_809_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_34_fu_840_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_3_fu_850_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_3_fu_850_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_10_fu_834_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln728_3_fu_850_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_11_fu_859_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_7_fu_855_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln728_11_fu_867_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_6_fu_877_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_14_fu_884_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_8_fu_812_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_11_fu_871_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_35_fu_888_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1192_fu_894_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_12_fu_898_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_2_fu_906_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_12_fu_912_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_15_fu_929_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_3_fu_936_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_43_fu_948_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_18_fu_955_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_17_fu_945_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_18_fu_959_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_4_fu_972_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_4_fu_972_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1118_19_fu_965_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_4_fu_972_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_16_fu_978_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1192_fu_940_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_4_fu_986_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_21_fu_996_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln728_fu_999_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal rhs_V_17_fu_1005_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1192_5_fu_1013_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_5_fu_990_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1192_1_fu_1017_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_13_fu_1023_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_1046_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_44_fu_1054_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal rhs_V_24_fu_1064_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_10_fu_1060_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_16_fu_1072_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_24_fu_1082_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_5_fu_1092_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_5_fu_1092_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln728_5_fu_1092_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_25_fu_1098_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_19_fu_1076_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_7_fu_1106_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_7_fu_1110_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_20_fu_1116_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1133_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1141_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component myproject_mac_muladd_8s_4s_13ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component myproject_mac_mul_sub_8s_4s_16ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    myproject_mac_muladd_8s_4s_13ns_13_1_1_U1 : component myproject_mac_muladd_8s_4s_13ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 13,
        dout_WIDTH => 13)
    port map (
        din0 => r_V_26_fu_257_p2,
        din1 => tmp_2_fu_183_p4,
        din2 => grp_fu_1133_p2,
        dout => grp_fu_1133_p3);

    myproject_mac_mul_sub_8s_4s_16ns_16_1_1_U2 : component myproject_mac_mul_sub_8s_4s_16ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => r_V_14_fu_423_p2,
        din1 => tmp_4_fu_283_p4,
        din2 => grp_fu_1141_p2,
        dout => grp_fu_1141_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv64_0;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_23_reg_1166 <= x_V_in_sig(59 downto 56);
                r_V_26_reg_1172 <= r_V_26_fu_257_p2;
                    r_V_31_reg_1182(4 downto 1) <= r_V_31_fu_293_p3(4 downto 1);
                r_V_38_reg_1220 <= r_V_38_fu_464_p2;
                    r_V_9_reg_1197(5 downto 2) <= r_V_9_fu_393_p3(5 downto 2);
                    ret_V_9_reg_1192(16 downto 4) <= ret_V_9_fu_387_p2(16 downto 4);
                    sext_ln1116_4_reg_1202(9 downto 2) <= sext_ln1116_4_fu_401_p1(9 downto 2);
                sext_ln1118_10_reg_1187 <= sext_ln1118_10_fu_343_p1;
                sub_ln1192_4_reg_1215 <= sub_ln1192_4_fu_459_p2;
                tmp_1_reg_1150 <= x_V_in_sig(63 downto 60);
                tmp_2_reg_1158 <= x_V_in_sig(11 downto 8);
                tmp_5_reg_1207 <= x_V_in_sig(15 downto 12);
                trunc_ln708_5_reg_1225 <= sub_ln1192_6_fu_594_p2(15 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_V_2_reg_1177 <= grp_fu_1133_p3;
            end if;
        end if;
    end process;
    r_V_31_reg_1182(0) <= '0';
    ret_V_9_reg_1192(3 downto 0) <= "0000";
    r_V_9_reg_1197(1 downto 0) <= "00";
    sext_ln1116_4_reg_1202(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_1_fu_1017_p2 <= std_logic_vector(signed(sext_ln1192_5_fu_1013_p1) + signed(sub_ln1192_5_fu_990_p2));
    add_ln1192_fu_940_p2 <= std_logic_vector(signed(sext_ln1192_3_fu_936_p1) + signed(sub_ln1192_4_reg_1215));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1133_p2 <= std_logic_vector(signed(sext_ln728_1_fu_247_p1) + signed(sext_ln703_fu_235_p1));
    grp_fu_1141_p2 <= (p_Val2_23_fu_225_p4 & ap_const_lv12_0);
    lhs_V_fu_1046_p3 <= (r_V_34_fu_840_p2 & ap_const_lv12_0);
    mul_ln728_1_fu_315_p0 <= r_V_32_fu_305_p2;
    mul_ln728_1_fu_315_p1 <= tmp_1_fu_169_p4;
    mul_ln728_1_fu_315_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_1_fu_315_p0) * signed(mul_ln728_1_fu_315_p1))), 11));
    mul_ln728_2_fu_351_p0 <= r_V_10_fu_333_p2;
    mul_ln728_2_fu_351_p1 <= tmp_4_fu_283_p4;
    mul_ln728_2_fu_351_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_2_fu_351_p0) * signed(mul_ln728_2_fu_351_p1))), 10));
    mul_ln728_3_fu_850_p0 <= r_V_34_fu_840_p2;
    mul_ln728_3_fu_850_p1 <= sext_ln1118_10_reg_1187(4 - 1 downto 0);
    mul_ln728_3_fu_850_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_3_fu_850_p0) * signed(mul_ln728_3_fu_850_p1))), 10));
    mul_ln728_4_fu_972_p0 <= r_V_18_fu_959_p2;
    mul_ln728_4_fu_972_p1 <= sext_ln1118_19_fu_965_p1(4 - 1 downto 0);
    mul_ln728_4_fu_972_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_4_fu_972_p0) * signed(mul_ln728_4_fu_972_p1))), 10));
    mul_ln728_5_fu_1092_p0 <= r_V_24_fu_1082_p2;
    mul_ln728_5_fu_1092_p1 <= sext_ln1118_19_fu_965_p1(4 - 1 downto 0);
    mul_ln728_5_fu_1092_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_5_fu_1092_p0) * signed(mul_ln728_5_fu_1092_p1))), 10));
    mul_ln728_fu_663_p0 <= r_V_fu_653_p2;
    mul_ln728_fu_663_p1 <= tmp_2_reg_1158;
    mul_ln728_fu_663_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_fu_663_p0) * signed(mul_ln728_fu_663_p1))), 10));
    p_Val2_23_fu_225_p4 <= x_V_in_sig(59 downto 56);
    r_V_10_fu_333_p0 <= sext_ln1118_6_fu_271_p1(4 - 1 downto 0);
    r_V_10_fu_333_p1 <= sext_ln1118_6_fu_271_p1(4 - 1 downto 0);
    r_V_10_fu_333_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_10_fu_333_p0) * signed(r_V_10_fu_333_p1))), 8));
    r_V_14_fu_423_p0 <= sext_ln1118_15_fu_419_p1(4 - 1 downto 0);
    r_V_14_fu_423_p1 <= sext_ln1118_6_fu_271_p1(4 - 1 downto 0);
    r_V_14_fu_423_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_14_fu_423_p0) * signed(r_V_14_fu_423_p1))), 8));
    r_V_18_fu_959_p2 <= std_logic_vector(signed(sext_ln1118_18_fu_955_p1) + signed(sext_ln1118_17_fu_945_p1));
    r_V_24_fu_1082_p2 <= std_logic_vector(signed(sext_ln1118_18_fu_955_p1) - signed(sext_ln1118_17_fu_945_p1));
    r_V_25_fu_201_p0 <= sext_ln1117_1_fu_179_p1(4 - 1 downto 0);
    r_V_25_fu_201_p1 <= trunc_ln1117_fu_165_p1;
    r_V_25_fu_201_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_25_fu_201_p0) * signed(r_V_25_fu_201_p1))), 8));
    r_V_26_fu_257_p0 <= sext_ln1117_1_fu_179_p1(4 - 1 downto 0);
    r_V_26_fu_257_p1 <= sext_ln1117_1_fu_179_p1(4 - 1 downto 0);
    r_V_26_fu_257_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_26_fu_257_p0) * signed(r_V_26_fu_257_p1))), 8));
    r_V_28_fu_702_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(sext_ln1118_2_fu_698_p1));
    r_V_29_fu_737_p0 <= r_V_3_fu_726_p3;
    r_V_29_fu_737_p1 <= tmp_2_reg_1158;
    r_V_29_fu_737_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_29_fu_737_p0) * signed(r_V_29_fu_737_p1))), 9));
    r_V_30_fu_772_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(sext_ln1118_3_fu_768_p1));
    r_V_31_fu_293_p3 <= (p_Val2_23_fu_225_p4 & ap_const_lv1_0);
    r_V_32_fu_305_p0 <= r_V_31_fu_293_p3;
    r_V_32_fu_305_p1 <= p_Val2_23_fu_225_p4;
    r_V_32_fu_305_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_32_fu_305_p0) * signed(r_V_32_fu_305_p1))), 9));
    r_V_33_fu_818_p0 <= sext_ln1116_4_reg_1202(6 - 1 downto 0);
    r_V_33_fu_818_p1 <= tmp_1_reg_1150;
    r_V_33_fu_818_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_33_fu_818_p0) * signed(r_V_33_fu_818_p1))), 10));
    r_V_34_fu_840_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_815_p1) - signed(sext_ln1118_4_fu_809_p1));
    r_V_35_fu_888_p2 <= std_logic_vector(signed(sext_ln1118_14_fu_884_p1) - signed(sext_ln1118_8_fu_812_p1));
    r_V_37_fu_441_p0 <= sext_ln1117_1_fu_179_p1(4 - 1 downto 0);
    r_V_37_fu_441_p1 <= sext_ln1118_15_fu_419_p1(4 - 1 downto 0);
    r_V_37_fu_441_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_37_fu_441_p0) * signed(r_V_37_fu_441_p1))), 8));
    r_V_38_fu_464_p0 <= sext_ln700_fu_221_p1(4 - 1 downto 0);
    r_V_38_fu_464_p1 <= sext_ln1118_15_fu_419_p1(4 - 1 downto 0);
    r_V_38_fu_464_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_38_fu_464_p0) * signed(r_V_38_fu_464_p1))), 8));
    r_V_39_fu_470_p0 <= r_V_9_fu_393_p3;
    r_V_39_fu_470_p1 <= p_Val2_23_fu_225_p4;
    r_V_39_fu_470_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_39_fu_470_p0) * signed(r_V_39_fu_470_p1))), 10));
    r_V_3_fu_726_p3 <= (tmp_2_reg_1158 & ap_const_lv1_0);
    r_V_40_fu_490_p0 <= sext_ln700_fu_221_p1(4 - 1 downto 0);
    r_V_40_fu_490_p1 <= sext_ln1118_6_fu_271_p1(4 - 1 downto 0);
    r_V_40_fu_490_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_40_fu_490_p0) * signed(r_V_40_fu_490_p1))), 8));
    r_V_41_fu_514_p0 <= tmp_4_fu_283_p4;
    r_V_41_fu_514_p1 <= sext_ln1118_6_fu_271_p1(4 - 1 downto 0);
    r_V_41_fu_514_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_41_fu_514_p0) * signed(r_V_41_fu_514_p1))), 8));
    r_V_42_fu_642_p3 <= (tmp_1_reg_1150 & ap_const_lv2_0);
    r_V_43_fu_948_p3 <= (tmp_5_reg_1207 & ap_const_lv2_0);
    r_V_44_fu_1054_p2 <= std_logic_vector(signed(sext_ln1118_1_fu_649_p1) - signed(sext_ln700_2_fu_619_p1));
    r_V_9_fu_393_p3 <= (p_Val2_23_fu_225_p4 & ap_const_lv2_0);
    r_V_fu_653_p2 <= std_logic_vector(signed(sext_ln1118_1_fu_649_p1) + signed(sext_ln700_2_fu_619_p1));
    ret_V_10_fu_834_p2 <= std_logic_vector(unsigned(rhs_V_10_fu_826_p3) + unsigned(sext_ln703_6_fu_823_p1));
    ret_V_11_fu_871_p2 <= std_logic_vector(signed(sext_ln703_7_fu_855_p1) - signed(sext_ln728_11_fu_867_p1));
    ret_V_12_fu_912_p2 <= std_logic_vector(unsigned(ap_const_lv20_30000) + unsigned(sub_ln1192_2_fu_906_p2));
    ret_V_13_fu_1023_p2 <= std_logic_vector(signed(ap_const_lv16_B000) + signed(add_ln1192_1_fu_1017_p2));
    ret_V_14_fu_484_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(rhs_V_18_fu_476_p3));
    ret_V_15_fu_508_p2 <= std_logic_vector(unsigned(ret_V_14_fu_484_p2) - unsigned(sext_ln728_12_fu_504_p1));
    ret_V_16_fu_532_p2 <= std_logic_vector(signed(sext_ln728_13_fu_528_p1) + signed(ret_V_15_fu_508_p2));
    ret_V_17_fu_554_p2 <= std_logic_vector(signed(sext_ln728_14_fu_550_p1) + signed(sext_ln703_8_fu_538_p1));
    ret_V_18_fu_576_p2 <= std_logic_vector(signed(sext_ln703_9_fu_560_p1) - signed(sext_ln728_15_fu_572_p1));
    ret_V_19_fu_1076_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1060_p1) - signed(sext_ln728_16_fu_1072_p1));
    ret_V_20_fu_1116_p2 <= std_logic_vector(signed(ap_const_lv20_90000) + signed(sub_ln1192_7_fu_1110_p2));
    ret_V_3_fu_636_p2 <= std_logic_vector(signed(sext_ln728_2_fu_632_p1) + signed(sext_ln703_2_fu_622_p1));
    ret_V_4_fu_685_p2 <= std_logic_vector(signed(sext_ln703_3_fu_669_p1) - signed(sext_ln728_4_fu_681_p1));
    ret_V_5_fu_720_p2 <= std_logic_vector(unsigned(rhs_V_4_fu_712_p3) + unsigned(sext_ln703_4_fu_708_p1));
    ret_V_6_fu_755_p2 <= std_logic_vector(signed(sext_ln728_5_fu_751_p1) + signed(ret_V_5_fu_720_p2));
    ret_V_7_fu_792_p2 <= std_logic_vector(unsigned(ap_const_lv16_5000) + unsigned(sub_ln1192_fu_786_p2));
    ret_V_8_fu_369_p2 <= std_logic_vector(signed(sext_ln728_9_fu_365_p1) - signed(sext_ln728_8_fu_329_p1));
    ret_V_9_fu_387_p2 <= std_logic_vector(unsigned(rhs_V_9_fu_379_p3) + unsigned(sext_ln703_5_fu_375_p1));
    ret_V_fu_215_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(rhs_V_fu_207_p3));
    rhs_V_10_fu_826_p3 <= (r_V_33_fu_818_p2 & ap_const_lv8_0);
    rhs_V_11_fu_859_p3 <= (mul_ln728_3_fu_850_p2 & ap_const_lv8_0);
    rhs_V_12_fu_898_p3 <= (r_V_35_fu_888_p2 & ap_const_lv12_0);
    rhs_V_14_fu_447_p3 <= (r_V_37_fu_441_p2 & ap_const_lv4_0);
    rhs_V_15_fu_929_p3 <= (r_V_38_reg_1220 & ap_const_lv4_0);
    rhs_V_16_fu_978_p3 <= (mul_ln728_4_fu_972_p2 & ap_const_lv4_0);
    rhs_V_17_fu_1005_p3 <= (sub_ln728_fu_999_p2 & ap_const_lv8_0);
    rhs_V_18_fu_476_p3 <= (r_V_39_fu_470_p2 & ap_const_lv4_0);
    rhs_V_19_fu_496_p3 <= (r_V_40_fu_490_p2 & ap_const_lv4_0);
    rhs_V_1_fu_239_p3 <= (p_Val2_23_fu_225_p4 & ap_const_lv8_0);
    rhs_V_20_fu_520_p3 <= (r_V_41_fu_514_p2 & ap_const_lv4_0);
    rhs_V_21_fu_542_p3 <= (p_Val2_23_fu_225_p4 & ap_const_lv9_0);
    rhs_V_22_fu_564_p3 <= (tmp_1_fu_169_p4 & ap_const_lv10_0);
    rhs_V_23_fu_582_p3 <= (tmp_5_fu_409_p4 & ap_const_lv10_0);
    rhs_V_24_fu_1064_p3 <= (r_V_44_fu_1054_p2 & ap_const_lv12_0);
    rhs_V_25_fu_1098_p3 <= (mul_ln728_5_fu_1092_p2 & ap_const_lv8_0);
    rhs_V_2_fu_625_p3 <= (r_V_26_reg_1172 & ap_const_lv4_0);
    rhs_V_3_fu_673_p3 <= (mul_ln728_fu_663_p2 & ap_const_lv4_0);
    rhs_V_4_fu_712_p3 <= (r_V_28_fu_702_p2 & ap_const_lv8_0);
    rhs_V_5_fu_743_p3 <= (r_V_29_fu_737_p2 & ap_const_lv4_0);
    rhs_V_6_fu_778_p3 <= (r_V_30_fu_772_p2 & ap_const_lv8_0);
    rhs_V_7_fu_321_p3 <= (mul_ln728_1_fu_315_p2 & ap_const_lv4_0);
    rhs_V_8_fu_357_p3 <= (mul_ln728_2_fu_351_p2 & ap_const_lv4_0);
    rhs_V_9_fu_379_p3 <= (r_V_32_fu_305_p2 & ap_const_lv8_0);
    rhs_V_fu_207_p3 <= (r_V_25_fu_201_p2 & ap_const_lv4_0);
        sext_ln1116_4_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_fu_393_p3),10));

        sext_ln1117_1_fu_179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_169_p4),8));

        sext_ln1118_10_fu_343_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_283_p4),10));

        sext_ln1118_12_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_reg_1197),7));

        sext_ln1118_14_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_877_p3),8));

        sext_ln1118_15_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_409_p4),8));

        sext_ln1118_17_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1207),7));

        sext_ln1118_18_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_43_fu_948_p3),7));

        sext_ln1118_19_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1207),10));

        sext_ln1118_1_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_42_fu_642_p3),7));

        sext_ln1118_21_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1207),6));

        sext_ln1118_2_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_1_fu_691_p3),8));

        sext_ln1118_3_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_761_p3),8));

        sext_ln1118_4_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_23_reg_1166),7));

        sext_ln1118_6_fu_271_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_23_fu_225_p4),8));

        sext_ln1118_8_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_31_reg_1182),8));

        sext_ln1192_2_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_14_fu_447_p3),16));

        sext_ln1192_3_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_15_fu_929_p3),16));

        sext_ln1192_4_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_16_fu_978_p3),16));

        sext_ln1192_5_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_17_fu_1005_p3),16));

        sext_ln1192_6_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_23_fu_582_p3),16));

        sext_ln1192_7_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_25_fu_1098_p3),20));

        sext_ln1192_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_11_fu_871_p2),20));

        sext_ln700_2_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1150),7));

        sext_ln700_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_183_p4),8));

        sext_ln703_10_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_1046_p3),20));

        sext_ln703_2_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_2_reg_1177),14));

        sext_ln703_3_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_3_fu_636_p2),15));

        sext_ln703_4_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_4_fu_685_p2),16));

        sext_ln703_5_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_8_fu_369_p2),17));

        sext_ln703_6_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_9_reg_1192),18));

        sext_ln703_7_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_10_fu_834_p2),19));

        sext_ln703_8_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_16_fu_532_p2),15));

        sext_ln703_9_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_17_fu_554_p2),16));

        sext_ln703_fu_235_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_fu_215_p2),13));

        sext_ln728_11_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_11_fu_859_p3),19));

        sext_ln728_12_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_19_fu_496_p3),14));

        sext_ln728_13_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_20_fu_520_p3),14));

        sext_ln728_14_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_21_fu_542_p3),15));

        sext_ln728_15_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_22_fu_564_p3),16));

        sext_ln728_16_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_24_fu_1064_p3),20));

        sext_ln728_1_fu_247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_239_p3),13));

        sext_ln728_2_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_625_p3),14));

        sext_ln728_4_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_673_p3),15));

        sext_ln728_5_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_5_fu_743_p3),16));

        sext_ln728_8_fu_329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_7_fu_321_p3),16));

        sext_ln728_9_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_8_fu_357_p3),16));

    shl_ln1118_1_fu_691_p3 <= (tmp_1_reg_1150 & ap_const_lv3_0);
    shl_ln1118_3_fu_761_p3 <= (tmp_2_reg_1158 & ap_const_lv3_0);
    shl_ln1118_6_fu_877_p3 <= (p_Val2_23_reg_1166 & ap_const_lv3_0);
    sub_ln1192_2_fu_906_p2 <= std_logic_vector(signed(sext_ln1192_fu_894_p1) - signed(rhs_V_12_fu_898_p3));
    sub_ln1192_4_fu_459_p2 <= std_logic_vector(signed(grp_fu_1141_p3) - signed(sext_ln1192_2_fu_455_p1));
    sub_ln1192_5_fu_990_p2 <= std_logic_vector(unsigned(add_ln1192_fu_940_p2) - unsigned(sext_ln1192_4_fu_986_p1));
    sub_ln1192_6_fu_594_p2 <= std_logic_vector(unsigned(ret_V_18_fu_576_p2) - unsigned(sext_ln1192_6_fu_590_p1));
    sub_ln1192_7_fu_1110_p2 <= std_logic_vector(unsigned(ret_V_19_fu_1076_p2) - unsigned(sext_ln1192_7_fu_1106_p1));
    sub_ln1192_fu_786_p2 <= std_logic_vector(unsigned(ret_V_6_fu_755_p2) - unsigned(rhs_V_6_fu_778_p3));
    sub_ln728_fu_999_p2 <= std_logic_vector(signed(sext_ln1118_21_fu_996_p1) - signed(r_V_43_fu_948_p3));
    tmp_1_fu_169_p4 <= x_V_in_sig(63 downto 60);
    tmp_2_fu_183_p4 <= x_V_in_sig(11 downto 8);
    tmp_4_fu_283_p4 <= x_V_in_sig(19 downto 16);
    tmp_5_fu_409_p4 <= x_V_in_sig(15 downto 12);
    trunc_ln1117_fu_165_p1 <= x_V_in_sig(4 - 1 downto 0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_7_fu_792_p2(15 downto 12);

    y_0_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= ret_V_12_fu_912_p2(19 downto 16);

    y_1_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= ret_V_13_fu_1023_p2(15 downto 12);

    y_2_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= (trunc_ln708_5_reg_1225 xor ap_const_lv4_8);

    y_3_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= ret_V_20_fu_1116_p2(19 downto 16);

    y_4_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
