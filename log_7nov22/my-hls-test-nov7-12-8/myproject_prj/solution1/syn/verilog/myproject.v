// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.574500,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=21,HLS_SYN_FF=752,HLS_SYN_LUT=909,HLS_VERSION=2020_1}" *)

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V_ap_vld,
        x_V,
        y_0_V,
        y_0_V_ap_vld,
        y_1_V,
        y_1_V_ap_vld,
        y_2_V,
        y_2_V_ap_vld,
        y_3_V,
        y_3_V_ap_vld,
        y_4_V,
        y_4_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   x_V_ap_vld;
input  [191:0] x_V;
output  [11:0] y_0_V;
output   y_0_V_ap_vld;
output  [11:0] y_1_V;
output   y_1_V_ap_vld;
output  [11:0] y_2_V;
output   y_2_V_ap_vld;
output  [11:0] y_3_V;
output   y_3_V_ap_vld;
output  [11:0] y_4_V;
output   y_4_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg y_0_V_ap_vld;
reg y_1_V_ap_vld;
reg y_2_V_ap_vld;
reg y_3_V_ap_vld;
reg y_4_V_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    x_V_ap_vld_in_sig;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [191:0] x_V_preg;
reg   [191:0] x_V_in_sig;
reg    x_V_ap_vld_preg;
reg    x_V_blk_n;
wire    ap_block_pp0_stage0;
wire  signed [11:0] tmp_1_fu_177_p4;
reg  signed [11:0] tmp_1_reg_961;
reg  signed [11:0] tmp_1_reg_961_pp0_iter1_reg;
wire  signed [19:0] sext_ln1192_fu_187_p1;
reg  signed [19:0] sext_ln1192_reg_969;
wire  signed [23:0] sext_ln1117_fu_191_p1;
reg  signed [23:0] sext_ln1117_reg_975;
reg  signed [11:0] tmp_2_reg_980;
reg  signed [11:0] tmp_2_reg_980_pp0_iter1_reg;
wire  signed [19:0] mul_ln1192_fu_822_p2;
reg  signed [19:0] mul_ln1192_reg_988;
wire  signed [11:0] p_Val2_5_fu_209_p4;
reg  signed [11:0] p_Val2_5_reg_993;
reg  signed [11:0] p_Val2_5_reg_993_pp0_iter1_reg;
wire  signed [23:0] r_V_13_fu_828_p2;
reg  signed [23:0] r_V_13_reg_1004;
reg  signed [11:0] tmp_4_reg_1010;
wire  signed [12:0] r_V_14_fu_237_p3;
reg  signed [12:0] r_V_14_reg_1016;
reg  signed [12:0] r_V_14_reg_1016_pp0_iter1_reg;
wire  signed [23:0] trunc_ln1192_fu_249_p1;
reg  signed [23:0] trunc_ln1192_reg_1021;
wire  signed [23:0] r_V_4_fu_842_p2;
reg  signed [23:0] r_V_4_reg_1026;
wire   [19:0] trunc_ln1192_1_fu_252_p1;
reg   [19:0] trunc_ln1192_1_reg_1031;
wire  signed [11:0] tmp_5_fu_255_p4;
reg  signed [11:0] tmp_5_reg_1036;
reg  signed [11:0] tmp_5_reg_1036_pp0_iter1_reg;
wire  signed [23:0] r_V_8_fu_848_p2;
reg  signed [23:0] r_V_8_reg_1045;
wire   [23:0] sub_ln1192_1_fu_330_p2;
reg   [23:0] sub_ln1192_1_reg_1050;
wire  signed [19:0] mul_ln1192_3_fu_871_p2;
reg  signed [19:0] mul_ln1192_3_reg_1055;
wire   [27:0] add_ln1192_5_fu_380_p2;
reg   [27:0] add_ln1192_5_reg_1060;
wire  signed [19:0] mul_ln1192_6_fu_888_p2;
reg  signed [19:0] mul_ln1192_6_reg_1065;
wire  signed [19:0] mul_ln1192_7_fu_893_p2;
reg  signed [19:0] mul_ln1192_7_reg_1070;
(* use_dsp48 = "no" *) wire   [23:0] sub_ln1192_7_fu_431_p2;
reg   [23:0] sub_ln1192_7_reg_1075;
wire  signed [19:0] mul_ln1192_10_fu_913_p2;
reg  signed [19:0] mul_ln1192_10_reg_1080;
wire  signed [19:0] grp_fu_919_p3;
reg  signed [19:0] mul_ln1192_11_reg_1085;
wire  signed [19:0] mul_ln1192_13_fu_927_p2;
reg  signed [19:0] mul_ln1192_13_reg_1090;
wire  signed [19:0] mul_ln1192_14_fu_933_p2;
reg  signed [19:0] mul_ln1192_14_reg_1095;
wire  signed [19:0] mul_ln1192_15_fu_939_p2;
reg  signed [19:0] mul_ln1192_15_reg_1100;
reg   [11:0] trunc_ln708_4_reg_1105;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire  signed [11:0] trunc_ln1117_fu_173_p1;
wire  signed [24:0] r_V_15_fu_834_p2;
wire   [19:0] rhs_V_fu_279_p3;
wire  signed [23:0] sext_ln1192_2_fu_286_p1;
wire   [23:0] shl_ln_fu_269_p3;
wire  signed [23:0] grp_fu_854_p3;
wire   [23:0] shl_ln1192_fu_302_p2;
wire   [13:0] r_V_18_fu_312_p3;
wire  signed [19:0] grp_fu_862_p3;
(* use_dsp48 = "no" *) wire   [23:0] add_ln1192_1_fu_307_p2;
wire   [23:0] shl_ln1192_2_fu_323_p3;
wire  signed [12:0] r_V_2_fu_336_p3;
wire  signed [23:0] mul_ln1192_4_fu_877_p2;
wire  signed [23:0] mul_ln1192_5_fu_882_p2;
wire   [27:0] shl_ln1192_5_fu_360_p3;
wire   [27:0] shl_ln1192_4_fu_350_p3;
wire   [27:0] sub_ln1192_3_fu_367_p2;
wire   [27:0] shl_ln1192_6_fu_373_p3;
wire  signed [13:0] r_V_5_fu_386_p3;
wire  signed [14:0] sext_ln1118_6_fu_393_p1;
wire  signed [14:0] sext_ln1118_2_fu_347_p1;
wire  signed [14:0] r_V_16_fu_401_p2;
wire  signed [19:0] mul_ln1192_9_fu_907_p2;
wire  signed [23:0] grp_fu_899_p3;
wire   [23:0] shl_ln1192_9_fu_424_p3;
wire   [13:0] r_V_19_fu_439_p3;
wire  signed [14:0] sext_ln1118_1_fu_319_p1;
wire  signed [14:0] sext_ln700_fu_296_p1;
wire   [26:0] lhs_V_fu_453_p3;
wire   [14:0] r_V_20_fu_461_p2;
wire   [26:0] rhs_V_8_fu_471_p3;
wire  signed [27:0] sext_ln703_fu_467_p1;
wire  signed [27:0] sext_ln728_fu_479_p1;
wire  signed [19:0] grp_fu_945_p3;
wire   [27:0] ret_V_4_fu_483_p2;
wire   [27:0] shl_ln1192_14_fu_489_p3;
wire   [27:0] sub_ln1192_13_fu_496_p2;
wire   [27:0] ret_V_5_fu_502_p2;
wire   [22:0] rhs_V_1_fu_518_p3;
wire  signed [23:0] sext_ln1192_5_fu_525_p1;
wire   [23:0] add_ln1192_2_fu_529_p2;
wire   [23:0] shl_ln1192_3_fu_534_p3;
wire   [22:0] rhs_V_2_fu_547_p3;
wire   [23:0] add_ln1192_3_fu_541_p2;
wire  signed [23:0] sext_ln1192_7_fu_554_p1;
wire   [23:0] sub_ln1192_2_fu_558_p2;
wire   [23:0] ret_V_fu_564_p2;
wire   [27:0] shl_ln1192_7_fu_584_p3;
wire   [27:0] add_ln1192_6_fu_591_p2;
wire   [27:0] shl_ln1192_8_fu_596_p3;
wire   [14:0] shl_ln1118_6_fu_609_p3;
wire  signed [15:0] sext_ln1118_7_fu_616_p1;
wire  signed [15:0] sext_ln1118_5_fu_581_p1;
wire   [15:0] r_V_17_fu_620_p2;
wire   [27:0] sub_ln1192_4_fu_603_p2;
wire   [27:0] rhs_V_3_fu_626_p3;
wire   [27:0] sub_ln1192_5_fu_634_p2;
wire   [27:0] ret_V_1_fu_640_p2;
wire   [23:0] shl_ln1192_s_fu_657_p3;
wire   [23:0] add_ln1192_8_fu_664_p2;
wire   [23:0] shl_ln1192_1_fu_672_p3;
wire  signed [15:0] mul_ln1192_12_fu_954_p2;
wire   [23:0] sub_ln1192_8_fu_679_p2;
wire   [23:0] shl_ln1192_10_fu_685_p3;
wire   [23:0] add_ln1192_9_fu_692_p2;
wire   [23:0] ret_V_2_fu_698_p2;
wire   [23:0] shl_ln1192_11_fu_715_p3;
wire   [23:0] sub_ln1192_9_fu_722_p2;
wire   [23:0] shl_ln1192_12_fu_728_p3;
wire   [23:0] sub_ln1192_10_fu_735_p2;
wire   [23:0] shl_ln1192_13_fu_741_p3;
wire   [20:0] rhs_V_5_fu_754_p3;
wire   [23:0] add_ln1192_11_fu_748_p2;
wire  signed [23:0] sext_ln1192_16_fu_761_p1;
wire   [21:0] rhs_V_6_fu_771_p3;
wire   [23:0] add_ln1192_12_fu_765_p2;
wire  signed [23:0] sext_ln1192_17_fu_778_p1;
wire   [21:0] rhs_V_7_fu_788_p3;
wire   [23:0] sub_ln1192_11_fu_782_p2;
wire  signed [23:0] sext_ln1192_18_fu_795_p1;
wire   [23:0] sub_ln1192_12_fu_799_p2;
wire   [23:0] ret_V_3_fu_805_p2;
wire  signed [11:0] r_V_13_fu_828_p0;
wire  signed [11:0] r_V_13_fu_828_p1;
wire  signed [11:0] r_V_4_fu_842_p0;
wire  signed [23:0] sext_ln1118_3_fu_219_p1;
wire  signed [11:0] r_V_4_fu_842_p1;
wire  signed [11:0] r_V_8_fu_848_p1;
wire   [23:0] grp_fu_854_p2;
wire  signed [11:0] grp_fu_862_p0;
wire  signed [13:0] grp_fu_862_p1;
wire  signed [11:0] grp_fu_862_p2;
wire  signed [19:0] sext_ln1192_1_fu_276_p1;
wire  signed [11:0] mul_ln1192_3_fu_871_p0;
wire  signed [11:0] mul_ln1192_4_fu_877_p0;
wire  signed [11:0] mul_ln1192_5_fu_882_p0;
wire  signed [23:0] sext_ln1192_8_fu_357_p1;
wire  signed [11:0] mul_ln1192_6_fu_888_p0;
wire  signed [13:0] mul_ln1192_6_fu_888_p1;
wire  signed [19:0] sext_ln1192_9_fu_397_p1;
wire  signed [11:0] mul_ln1192_7_fu_893_p0;
wire  signed [19:0] sext_ln1192_11_fu_411_p1;
wire  signed [11:0] grp_fu_899_p0;
wire   [23:0] grp_fu_899_p2;
wire  signed [11:0] mul_ln1192_9_fu_907_p0;
wire  signed [11:0] mul_ln1192_9_fu_907_p1;
wire  signed [19:0] sext_ln1192_12_fu_414_p1;
wire  signed [11:0] mul_ln1192_10_fu_913_p0;
wire  signed [11:0] mul_ln1192_10_fu_913_p1;
wire  signed [11:0] grp_fu_919_p0;
wire  signed [14:0] sext_ln1118_9_fu_436_p1;
wire  signed [13:0] grp_fu_919_p1;
wire  signed [14:0] sext_ln1118_10_fu_446_p1;
wire  signed [11:0] grp_fu_919_p2;
wire  signed [11:0] mul_ln1192_13_fu_927_p0;
wire  signed [19:0] sext_ln1192_15_fu_450_p1;
wire  signed [13:0] mul_ln1192_13_fu_927_p1;
wire  signed [11:0] mul_ln1192_14_fu_933_p0;
wire  signed [11:0] mul_ln1192_14_fu_933_p1;
wire  signed [11:0] mul_ln1192_15_fu_939_p0;
wire  signed [11:0] mul_ln1192_15_fu_939_p1;
wire  signed [13:0] grp_fu_945_p0;
wire  signed [11:0] grp_fu_945_p1;
wire  signed [11:0] grp_fu_945_p2;
wire   [5:0] mul_ln1192_12_fu_954_p0;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 x_V_preg = 192'd0;
#0 x_V_ap_vld_preg = 1'b0;
end

myproject_mul_mul_12s_12s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_12s_20_1_1_U1(
    .din0(tmp_1_fu_177_p4),
    .din1(trunc_ln1117_fu_173_p1),
    .dout(mul_ln1192_fu_822_p2)
);

myproject_mul_mul_12s_12s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
myproject_mul_mul_12s_12s_24_1_1_U2(
    .din0(r_V_13_fu_828_p0),
    .din1(r_V_13_fu_828_p1),
    .dout(r_V_13_fu_828_p2)
);

myproject_mul_mul_12s_13s_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 25 ))
myproject_mul_mul_12s_13s_25_1_1_U3(
    .din0(p_Val2_5_fu_209_p4),
    .din1(r_V_14_fu_237_p3),
    .dout(r_V_15_fu_834_p2)
);

myproject_mul_mul_12s_12s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
myproject_mul_mul_12s_12s_24_1_1_U4(
    .din0(r_V_4_fu_842_p0),
    .din1(r_V_4_fu_842_p1),
    .dout(r_V_4_fu_842_p2)
);

myproject_mul_mul_12s_12s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
myproject_mul_mul_12s_12s_24_1_1_U5(
    .din0(tmp_5_fu_255_p4),
    .din1(r_V_8_fu_848_p1),
    .dout(r_V_8_fu_848_p2)
);

myproject_mac_muladd_12s_24s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_muladd_12s_24s_24ns_24_1_1_U6(
    .din0(tmp_2_reg_980),
    .din1(r_V_13_reg_1004),
    .din2(grp_fu_854_p2),
    .dout(grp_fu_854_p3)
);

myproject_am_addmul_12s_14s_12s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
myproject_am_addmul_12s_14s_12s_20_1_1_U7(
    .din0(grp_fu_862_p0),
    .din1(grp_fu_862_p1),
    .din2(grp_fu_862_p2),
    .dout(grp_fu_862_p3)
);

myproject_mul_mul_12s_13s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_13s_20_1_1_U8(
    .din0(mul_ln1192_3_fu_871_p0),
    .din1(r_V_2_fu_336_p3),
    .dout(mul_ln1192_3_fu_871_p2)
);

myproject_mul_mul_12s_24s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mul_mul_12s_24s_24_1_1_U9(
    .din0(mul_ln1192_4_fu_877_p0),
    .din1(trunc_ln1192_reg_1021),
    .dout(mul_ln1192_4_fu_877_p2)
);

myproject_mul_mul_12s_24s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mul_mul_12s_24s_24_1_1_U10(
    .din0(mul_ln1192_5_fu_882_p0),
    .din1(r_V_4_reg_1026),
    .dout(mul_ln1192_5_fu_882_p2)
);

myproject_mul_mul_12s_14s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_14s_20_1_1_U11(
    .din0(mul_ln1192_6_fu_888_p0),
    .din1(mul_ln1192_6_fu_888_p1),
    .dout(mul_ln1192_6_fu_888_p2)
);

myproject_mul_mul_12s_15s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_15s_20_1_1_U12(
    .din0(mul_ln1192_7_fu_893_p0),
    .din1(r_V_16_fu_401_p2),
    .dout(mul_ln1192_7_fu_893_p2)
);

myproject_mac_mul_sub_12s_24s_24ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
myproject_mac_mul_sub_12s_24s_24ns_24_1_1_U13(
    .din0(grp_fu_899_p0),
    .din1(r_V_8_reg_1045),
    .din2(grp_fu_899_p2),
    .dout(grp_fu_899_p3)
);

myproject_mul_mul_12s_12s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_12s_20_1_1_U14(
    .din0(mul_ln1192_9_fu_907_p0),
    .din1(mul_ln1192_9_fu_907_p1),
    .dout(mul_ln1192_9_fu_907_p2)
);

myproject_mul_mul_12s_12s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_12s_20_1_1_U15(
    .din0(mul_ln1192_10_fu_913_p0),
    .din1(mul_ln1192_10_fu_913_p1),
    .dout(mul_ln1192_10_fu_913_p2)
);

myproject_am_addmul_12s_14s_12s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
myproject_am_addmul_12s_14s_12s_20_1_1_U16(
    .din0(grp_fu_919_p0),
    .din1(grp_fu_919_p1),
    .din2(grp_fu_919_p2),
    .dout(grp_fu_919_p3)
);

myproject_mul_mul_12s_14s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_14s_20_1_1_U17(
    .din0(mul_ln1192_13_fu_927_p0),
    .din1(mul_ln1192_13_fu_927_p1),
    .dout(mul_ln1192_13_fu_927_p2)
);

myproject_mul_mul_12s_12s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_12s_20_1_1_U18(
    .din0(mul_ln1192_14_fu_933_p0),
    .din1(mul_ln1192_14_fu_933_p1),
    .dout(mul_ln1192_14_fu_933_p2)
);

myproject_mul_mul_12s_12s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_12s_12s_20_1_1_U19(
    .din0(mul_ln1192_15_fu_939_p0),
    .din1(mul_ln1192_15_fu_939_p1),
    .dout(mul_ln1192_15_fu_939_p2)
);

myproject_am_submul_14s_12s_12s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
myproject_am_submul_14s_12s_12s_20_1_1_U20(
    .din0(grp_fu_945_p0),
    .din1(grp_fu_945_p1),
    .din2(grp_fu_945_p2),
    .dout(grp_fu_945_p3)
);

myproject_mul_mul_6ns_12s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 16 ))
myproject_mul_mul_6ns_12s_16_1_1_U21(
    .din0(mul_ln1192_12_fu_954_p0),
    .din1(tmp_5_reg_1036_pp0_iter1_reg),
    .dout(mul_ln1192_12_fu_954_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_ap_vld_preg <= x_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_preg <= 192'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_preg <= x_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1192_5_reg_1060[27 : 4] <= add_ln1192_5_fu_380_p2[27 : 4];
        mul_ln1192_10_reg_1080 <= mul_ln1192_10_fu_913_p2;
        mul_ln1192_13_reg_1090 <= mul_ln1192_13_fu_927_p2;
        mul_ln1192_14_reg_1095 <= mul_ln1192_14_fu_933_p2;
        mul_ln1192_15_reg_1100 <= mul_ln1192_15_fu_939_p2;
        mul_ln1192_3_reg_1055 <= mul_ln1192_3_fu_871_p2;
        mul_ln1192_6_reg_1065 <= mul_ln1192_6_fu_888_p2;
        mul_ln1192_7_reg_1070 <= mul_ln1192_7_fu_893_p2;
        mul_ln1192_reg_988 <= mul_ln1192_fu_822_p2;
        p_Val2_5_reg_993 <= {{x_V_in_sig[179:168]}};
        p_Val2_5_reg_993_pp0_iter1_reg <= p_Val2_5_reg_993;
        r_V_13_reg_1004 <= r_V_13_fu_828_p2;
        r_V_14_reg_1016[12 : 1] <= r_V_14_fu_237_p3[12 : 1];
        r_V_14_reg_1016_pp0_iter1_reg[12 : 1] <= r_V_14_reg_1016[12 : 1];
        r_V_4_reg_1026 <= r_V_4_fu_842_p2;
        r_V_8_reg_1045 <= r_V_8_fu_848_p2;
        sext_ln1117_reg_975 <= sext_ln1117_fu_191_p1;
        sext_ln1192_reg_969 <= sext_ln1192_fu_187_p1;
        sub_ln1192_1_reg_1050 <= sub_ln1192_1_fu_330_p2;
        sub_ln1192_7_reg_1075 <= sub_ln1192_7_fu_431_p2;
        tmp_1_reg_961 <= {{x_V_in_sig[191:180]}};
        tmp_1_reg_961_pp0_iter1_reg <= tmp_1_reg_961;
        tmp_2_reg_980 <= {{x_V_in_sig[35:24]}};
        tmp_2_reg_980_pp0_iter1_reg <= tmp_2_reg_980;
        tmp_4_reg_1010 <= {{x_V_in_sig[59:48]}};
        tmp_5_reg_1036 <= {{x_V_in_sig[47:36]}};
        tmp_5_reg_1036_pp0_iter1_reg <= tmp_5_reg_1036;
        trunc_ln1192_1_reg_1031 <= trunc_ln1192_1_fu_252_p1;
        trunc_ln1192_reg_1021 <= trunc_ln1192_fu_249_p1;
        trunc_ln708_4_reg_1105 <= {{ret_V_5_fu_502_p2[27:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1192_11_reg_1085 <= grp_fu_919_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_ap_vld_in_sig = x_V_ap_vld;
    end else begin
        x_V_ap_vld_in_sig = x_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_blk_n = x_V_ap_vld;
    end else begin
        x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_in_sig = x_V;
    end else begin
        x_V_in_sig = x_V_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_0_V_ap_vld = 1'b1;
    end else begin
        y_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_1_V_ap_vld = 1'b1;
    end else begin
        y_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_2_V_ap_vld = 1'b1;
    end else begin
        y_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_3_V_ap_vld = 1'b1;
    end else begin
        y_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_4_V_ap_vld = 1'b1;
    end else begin
        y_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_11_fu_748_p2 = (sub_ln1192_10_fu_735_p2 + shl_ln1192_13_fu_741_p3);

assign add_ln1192_12_fu_765_p2 = ($signed(add_ln1192_11_fu_748_p2) + $signed(sext_ln1192_16_fu_761_p1));

assign add_ln1192_1_fu_307_p2 = ($signed(grp_fu_854_p3) + $signed(shl_ln1192_fu_302_p2));

assign add_ln1192_2_fu_529_p2 = ($signed(sub_ln1192_1_reg_1050) + $signed(sext_ln1192_5_fu_525_p1));

assign add_ln1192_3_fu_541_p2 = (add_ln1192_2_fu_529_p2 + shl_ln1192_3_fu_534_p3);

assign add_ln1192_5_fu_380_p2 = (sub_ln1192_3_fu_367_p2 + shl_ln1192_6_fu_373_p3);

assign add_ln1192_6_fu_591_p2 = (add_ln1192_5_reg_1060 + shl_ln1192_7_fu_584_p3);

assign add_ln1192_8_fu_664_p2 = (sub_ln1192_7_reg_1075 + shl_ln1192_s_fu_657_p3);

assign add_ln1192_9_fu_692_p2 = (sub_ln1192_8_fu_679_p2 + shl_ln1192_10_fu_685_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_854_p2 = ($signed(sext_ln1192_2_fu_286_p1) - $signed(shl_ln_fu_269_p3));

assign grp_fu_862_p0 = sext_ln700_fu_296_p1;

assign grp_fu_862_p1 = sext_ln1118_1_fu_319_p1;

assign grp_fu_862_p2 = sext_ln1192_1_fu_276_p1;

assign grp_fu_899_p0 = sext_ln1192_8_fu_357_p1;

assign grp_fu_899_p2 = {{p_Val2_5_reg_993}, {12'd0}};

assign grp_fu_919_p0 = sext_ln1118_9_fu_436_p1;

assign grp_fu_919_p1 = sext_ln1118_10_fu_446_p1;

assign grp_fu_919_p2 = sext_ln1192_12_fu_414_p1;

assign grp_fu_945_p0 = sext_ln1118_10_fu_446_p1;

assign grp_fu_945_p1 = sext_ln1118_9_fu_436_p1;

assign grp_fu_945_p2 = sext_ln1192_12_fu_414_p1;

assign lhs_V_fu_453_p3 = {{r_V_16_fu_401_p2}, {12'd0}};

assign mul_ln1192_10_fu_913_p0 = sext_ln1192_1_fu_276_p1;

assign mul_ln1192_10_fu_913_p1 = sext_ln1192_12_fu_414_p1;

assign mul_ln1192_12_fu_954_p0 = 16'd29;

assign mul_ln1192_13_fu_927_p0 = sext_ln1192_15_fu_450_p1;

assign mul_ln1192_13_fu_927_p1 = sext_ln1192_9_fu_397_p1;

assign mul_ln1192_14_fu_933_p0 = sext_ln1192_1_fu_276_p1;

assign mul_ln1192_14_fu_933_p1 = sext_ln1192_15_fu_450_p1;

assign mul_ln1192_15_fu_939_p0 = sext_ln1192_11_fu_411_p1;

assign mul_ln1192_15_fu_939_p1 = sext_ln1192_15_fu_450_p1;

assign mul_ln1192_3_fu_871_p0 = sext_ln1192_1_fu_276_p1;

assign mul_ln1192_4_fu_877_p0 = sext_ln1117_reg_975;

assign mul_ln1192_5_fu_882_p0 = sext_ln1192_8_fu_357_p1;

assign mul_ln1192_6_fu_888_p0 = sext_ln1192_reg_969;

assign mul_ln1192_6_fu_888_p1 = sext_ln1192_9_fu_397_p1;

assign mul_ln1192_7_fu_893_p0 = sext_ln1192_11_fu_411_p1;

assign mul_ln1192_9_fu_907_p0 = sext_ln1192_reg_969;

assign mul_ln1192_9_fu_907_p1 = sext_ln1192_12_fu_414_p1;

assign p_Val2_5_fu_209_p4 = {{x_V_in_sig[179:168]}};

assign r_V_13_fu_828_p0 = sext_ln1117_fu_191_p1;

assign r_V_13_fu_828_p1 = sext_ln1117_fu_191_p1;

assign r_V_14_fu_237_p3 = {{p_Val2_5_fu_209_p4}, {1'd0}};

assign r_V_16_fu_401_p2 = ($signed(sext_ln1118_6_fu_393_p1) - $signed(sext_ln1118_2_fu_347_p1));

assign r_V_17_fu_620_p2 = ($signed(sext_ln1118_7_fu_616_p1) - $signed(sext_ln1118_5_fu_581_p1));

assign r_V_18_fu_312_p3 = {{tmp_1_reg_961}, {2'd0}};

assign r_V_19_fu_439_p3 = {{tmp_5_reg_1036}, {2'd0}};

assign r_V_20_fu_461_p2 = ($signed(sext_ln1118_1_fu_319_p1) - $signed(sext_ln700_fu_296_p1));

assign r_V_2_fu_336_p3 = {{tmp_2_reg_980}, {1'd0}};

assign r_V_4_fu_842_p0 = sext_ln1118_3_fu_219_p1;

assign r_V_4_fu_842_p1 = sext_ln1118_3_fu_219_p1;

assign r_V_5_fu_386_p3 = {{p_Val2_5_reg_993}, {2'd0}};

assign r_V_8_fu_848_p1 = sext_ln1118_3_fu_219_p1;

assign ret_V_1_fu_640_p2 = ($signed(28'd267583488) + $signed(sub_ln1192_5_fu_634_p2));

assign ret_V_2_fu_698_p2 = ($signed(24'd16756736) + $signed(add_ln1192_9_fu_692_p2));

assign ret_V_3_fu_805_p2 = ($signed(24'd16744448) + $signed(sub_ln1192_12_fu_799_p2));

assign ret_V_4_fu_483_p2 = ($signed(sext_ln703_fu_467_p1) - $signed(sext_ln728_fu_479_p1));

assign ret_V_5_fu_502_p2 = ($signed(28'd267976704) + $signed(sub_ln1192_13_fu_496_p2));

assign ret_V_fu_564_p2 = ($signed(24'd16732160) + $signed(sub_ln1192_2_fu_558_p2));

assign rhs_V_1_fu_518_p3 = {{tmp_1_reg_961_pp0_iter1_reg}, {11'd0}};

assign rhs_V_2_fu_547_p3 = {{tmp_2_reg_980_pp0_iter1_reg}, {11'd0}};

assign rhs_V_3_fu_626_p3 = {{r_V_17_fu_620_p2}, {12'd0}};

assign rhs_V_5_fu_754_p3 = {{p_Val2_5_reg_993_pp0_iter1_reg}, {9'd0}};

assign rhs_V_6_fu_771_p3 = {{tmp_1_reg_961_pp0_iter1_reg}, {10'd0}};

assign rhs_V_7_fu_788_p3 = {{tmp_5_reg_1036_pp0_iter1_reg}, {10'd0}};

assign rhs_V_8_fu_471_p3 = {{r_V_20_fu_461_p2}, {12'd0}};

assign rhs_V_fu_279_p3 = {{p_Val2_5_reg_993}, {8'd0}};

assign sext_ln1117_fu_191_p1 = tmp_1_fu_177_p4;

assign sext_ln1118_10_fu_446_p1 = $signed(r_V_19_fu_439_p3);

assign sext_ln1118_1_fu_319_p1 = $signed(r_V_18_fu_312_p3);

assign sext_ln1118_2_fu_347_p1 = p_Val2_5_reg_993;

assign sext_ln1118_3_fu_219_p1 = p_Val2_5_fu_209_p4;

assign sext_ln1118_5_fu_581_p1 = r_V_14_reg_1016_pp0_iter1_reg;

assign sext_ln1118_6_fu_393_p1 = r_V_5_fu_386_p3;

assign sext_ln1118_7_fu_616_p1 = $signed(shl_ln1118_6_fu_609_p3);

assign sext_ln1118_9_fu_436_p1 = tmp_5_reg_1036;

assign sext_ln1192_11_fu_411_p1 = tmp_4_reg_1010;

assign sext_ln1192_12_fu_414_p1 = tmp_5_reg_1036;

assign sext_ln1192_15_fu_450_p1 = p_Val2_5_reg_993;

assign sext_ln1192_16_fu_761_p1 = $signed(rhs_V_5_fu_754_p3);

assign sext_ln1192_17_fu_778_p1 = $signed(rhs_V_6_fu_771_p3);

assign sext_ln1192_18_fu_795_p1 = $signed(rhs_V_7_fu_788_p3);

assign sext_ln1192_1_fu_276_p1 = tmp_2_reg_980;

assign sext_ln1192_2_fu_286_p1 = $signed(rhs_V_fu_279_p3);

assign sext_ln1192_5_fu_525_p1 = $signed(rhs_V_1_fu_518_p3);

assign sext_ln1192_7_fu_554_p1 = $signed(rhs_V_2_fu_547_p3);

assign sext_ln1192_8_fu_357_p1 = tmp_4_reg_1010;

assign sext_ln1192_9_fu_397_p1 = r_V_5_fu_386_p3;

assign sext_ln1192_fu_187_p1 = tmp_1_fu_177_p4;

assign sext_ln700_fu_296_p1 = tmp_1_reg_961;

assign sext_ln703_fu_467_p1 = $signed(lhs_V_fu_453_p3);

assign sext_ln728_fu_479_p1 = $signed(rhs_V_8_fu_471_p3);

assign shl_ln1118_6_fu_609_p3 = {{p_Val2_5_reg_993_pp0_iter1_reg}, {3'd0}};

assign shl_ln1192_10_fu_685_p3 = {{mul_ln1192_12_fu_954_p2}, {8'd0}};

assign shl_ln1192_11_fu_715_p3 = {{mul_ln1192_13_reg_1090}, {4'd0}};

assign shl_ln1192_12_fu_728_p3 = {{mul_ln1192_14_reg_1095}, {4'd0}};

assign shl_ln1192_13_fu_741_p3 = {{mul_ln1192_15_reg_1100}, {4'd0}};

assign shl_ln1192_14_fu_489_p3 = {{grp_fu_945_p3}, {8'd0}};

assign shl_ln1192_1_fu_672_p3 = {{mul_ln1192_11_reg_1085}, {4'd0}};

assign shl_ln1192_2_fu_323_p3 = {{grp_fu_862_p3}, {4'd0}};

assign shl_ln1192_3_fu_534_p3 = {{mul_ln1192_3_reg_1055}, {4'd0}};

assign shl_ln1192_4_fu_350_p3 = {{mul_ln1192_4_fu_877_p2}, {4'd0}};

assign shl_ln1192_5_fu_360_p3 = {{mul_ln1192_5_fu_882_p2}, {4'd0}};

assign shl_ln1192_6_fu_373_p3 = {{trunc_ln1192_1_reg_1031}, {8'd0}};

assign shl_ln1192_7_fu_584_p3 = {{mul_ln1192_6_reg_1065}, {8'd0}};

assign shl_ln1192_8_fu_596_p3 = {{mul_ln1192_7_reg_1070}, {8'd0}};

assign shl_ln1192_9_fu_424_p3 = {{mul_ln1192_9_fu_907_p2}, {4'd0}};

assign shl_ln1192_fu_302_p2 = r_V_13_reg_1004 << 24'd4;

assign shl_ln1192_s_fu_657_p3 = {{mul_ln1192_10_reg_1080}, {4'd0}};

assign shl_ln_fu_269_p3 = {{mul_ln1192_reg_988}, {4'd0}};

assign sub_ln1192_10_fu_735_p2 = (sub_ln1192_9_fu_722_p2 - shl_ln1192_12_fu_728_p3);

assign sub_ln1192_11_fu_782_p2 = ($signed(add_ln1192_12_fu_765_p2) - $signed(sext_ln1192_17_fu_778_p1));

assign sub_ln1192_12_fu_799_p2 = ($signed(sub_ln1192_11_fu_782_p2) - $signed(sext_ln1192_18_fu_795_p1));

assign sub_ln1192_13_fu_496_p2 = (ret_V_4_fu_483_p2 - shl_ln1192_14_fu_489_p3);

assign sub_ln1192_1_fu_330_p2 = (add_ln1192_1_fu_307_p2 - shl_ln1192_2_fu_323_p3);

assign sub_ln1192_2_fu_558_p2 = ($signed(add_ln1192_3_fu_541_p2) - $signed(sext_ln1192_7_fu_554_p1));

assign sub_ln1192_3_fu_367_p2 = (shl_ln1192_5_fu_360_p3 - shl_ln1192_4_fu_350_p3);

assign sub_ln1192_4_fu_603_p2 = (add_ln1192_6_fu_591_p2 - shl_ln1192_8_fu_596_p3);

assign sub_ln1192_5_fu_634_p2 = (sub_ln1192_4_fu_603_p2 - rhs_V_3_fu_626_p3);

assign sub_ln1192_7_fu_431_p2 = ($signed(grp_fu_899_p3) - $signed(shl_ln1192_9_fu_424_p3));

assign sub_ln1192_8_fu_679_p2 = (add_ln1192_8_fu_664_p2 - shl_ln1192_1_fu_672_p3);

assign sub_ln1192_9_fu_722_p2 = (24'd0 - shl_ln1192_11_fu_715_p3);

assign tmp_1_fu_177_p4 = {{x_V_in_sig[191:180]}};

assign tmp_5_fu_255_p4 = {{x_V_in_sig[47:36]}};

assign trunc_ln1117_fu_173_p1 = x_V_in_sig[11:0];

assign trunc_ln1192_1_fu_252_p1 = r_V_15_fu_834_p2[19:0];

assign trunc_ln1192_fu_249_p1 = r_V_15_fu_834_p2[23:0];

assign y_0_V = {{ret_V_fu_564_p2[23:12]}};

assign y_1_V = {{ret_V_1_fu_640_p2[27:16]}};

assign y_2_V = {{ret_V_2_fu_698_p2[23:12]}};

assign y_3_V = {{ret_V_3_fu_805_p2[23:12]}};

assign y_4_V = trunc_ln708_4_reg_1105;

always @ (posedge ap_clk) begin
    r_V_14_reg_1016[0] <= 1'b0;
    r_V_14_reg_1016_pp0_iter1_reg[0] <= 1'b0;
    add_ln1192_5_reg_1060[3:0] <= 4'b0000;
end

endmodule //myproject
