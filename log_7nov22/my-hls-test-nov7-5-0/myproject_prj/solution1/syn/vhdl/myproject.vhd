-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (79 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (4 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (4 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (4 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (4 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (4 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.338500,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=12,HLS_SYN_FF=589,HLS_SYN_LUT=2105,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv80_0 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv20_B0000 : STD_LOGIC_VECTOR (19 downto 0) := "10110000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv20_88000 : STD_LOGIC_VECTOR (19 downto 0) := "10001000000000000000";
    constant ap_const_lv25_1300000 : STD_LOGIC_VECTOR (24 downto 0) := "1001100000000000000000000";
    constant ap_const_lv20_50000 : STD_LOGIC_VECTOR (19 downto 0) := "01010000000000000000";
    constant ap_const_lv25_600000 : STD_LOGIC_VECTOR (24 downto 0) := "0011000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (79 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_1_fu_177_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1554 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1554_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1554_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_191_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_reg_1567 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_reg_1567_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_reg_1567_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_4_fu_231_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_4_reg_1580 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_fu_253_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_reg_1585 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_26_fu_259_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_26_reg_1590 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_26_reg_1590_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_4_fu_269_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_4_reg_1605 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_4_reg_1605_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_60_fu_281_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_60_reg_1610 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_16_fu_287_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_16_reg_1616 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_reg_1622 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_reg_1622_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_reg_1632 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_reg_1632_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1118_fu_311_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1118_reg_1644 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_1_fu_331_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_1_reg_1649 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_20_fu_349_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_20_reg_1654 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_59_fu_360_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_59_reg_1659 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_3_fu_400_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_3_fu_400_p2 : signal is "no";
    signal ret_V_3_reg_1664 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_10_fu_405_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_10_reg_1669 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_2_fu_413_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_2_reg_1674 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_2_reg_1674_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_19_fu_430_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_19_reg_1679 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_27_fu_468_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_27_reg_1684 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_9_fu_513_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_9_reg_1689 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_65_fu_519_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_65_reg_1694 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_66_fu_525_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_66_reg_1700 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_48_fu_530_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_48_reg_1705 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_44_fu_537_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_44_reg_1710 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1477_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_3_reg_1718 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1485_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_8_reg_1723 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1493_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_9_reg_1728 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_21_fu_666_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_21_reg_1733 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_28_fu_678_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_28_reg_1738 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_53_fu_684_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_53_reg_1743 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_5_fu_739_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 of ret_V_5_fu_739_p2 : signal is "no";
    signal ret_V_5_reg_1748 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_14_fu_871_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_14_reg_1753 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_67_fu_888_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_67_reg_1758 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln708_2_reg_1763 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln708_3_reg_1768 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln708_4_reg_1773 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln1117_fu_173_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_fu_201_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_57_fu_213_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_57_fu_213_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1117_1_fu_187_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_57_fu_213_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_58_fu_235_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1116_1_fu_227_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_58_fu_235_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_58_fu_235_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_1_fu_241_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_2_fu_249_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_fu_219_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_60_fu_281_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_60_fu_281_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1118_fu_311_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1118_fu_311_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_47_fu_317_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_47_fu_317_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_47_fu_317_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_1_fu_331_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1192_1_fu_331_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_8_fu_356_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1118_6_fu_346_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_2_fu_369_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_fu_366_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_3_fu_389_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln728_3_fu_396_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1468_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_10_fu_405_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1117_fu_337_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_10_fu_405_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_22_fu_440_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_22_fu_440_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_22_fu_440_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_1_fu_450_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_1_fu_450_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln728_1_fu_450_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_8_fu_456_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_28_fu_479_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1116_6_fu_475_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_28_fu_479_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_28_fu_479_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_2_fu_495_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln728_2_fu_495_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln728_2_fu_495_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_9_fu_501_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln728_10_fu_509_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln728_9_fu_464_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_66_fu_525_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_66_fu_525_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_39_fu_543_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_39_fu_543_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_39_fu_543_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_6_fu_560_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_71_fu_584_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_71_fu_584_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1501_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_71_fu_584_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_8_fu_590_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_22_fu_593_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_23_fu_607_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_20_fu_615_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_18_fu_601_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_72_fu_625_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_72_fu_625_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_72_fu_625_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_24_fu_631_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_19_fu_619_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_21_fu_639_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_73_fu_649_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_73_fu_649_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_73_fu_649_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_25_fu_654_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln728_22_fu_662_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_20_fu_643_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_27_fu_672_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_53_fu_684_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_53_fu_684_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_74_fu_717_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1518_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_4_fu_728_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1509_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln728_5_fu_735_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_3_fu_753_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln728_3_fu_753_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln728_3_fu_753_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_V_10_fu_758_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln703_5_fu_750_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_10_fu_766_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_4_fu_779_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_25_fu_772_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_4_fu_779_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln728_fu_690_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_4_fu_779_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_11_fu_785_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_6_fu_775_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln728_11_fu_793_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln728_5_fu_806_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_5_fu_806_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_26_fu_803_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_5_fu_806_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_12_fu_812_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_12_fu_820_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal ret_V_11_fu_797_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal ret_V_12_fu_824_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1527_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_13_fu_837_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln728_14_fu_844_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_7_fu_833_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1536_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_14_fu_860_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal ret_V_13_fu_848_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln728_17_fu_867_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_5_fu_877_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_29_fu_884_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_7_fu_702_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_17_fu_897_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_3_fu_904_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_18_fu_913_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1192_4_fu_920_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_4_fu_908_p2 : STD_LOGIC_VECTOR (19 downto 0);
    attribute use_dsp48 of sub_ln1192_4_fu_908_p2 : signal is "no";
    signal r_V_43_fu_933_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_43_fu_933_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_10_fu_942_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_10_fu_942_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln728_18_fu_894_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln728_10_fu_942_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_19_fu_948_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1192_fu_924_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_5_fu_956_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_69_fu_966_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_69_fu_966_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_69_fu_966_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_20_fu_971_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln1192_5_fu_960_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_6_fu_979_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_75_fu_989_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_8_fu_1000_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1118_38_fu_1007_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_37_fu_996_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_70_fu_1011_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_21_fu_1017_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1192_7_fu_1025_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_6_fu_983_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1192_1_fu_1029_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_16_fu_1035_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln728_11_fu_1054_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln728_11_fu_1054_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln728_11_fu_1054_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_V_26_fu_1063_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln728_24_fu_1071_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_9_fu_1060_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_27_fu_1081_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_25_fu_1088_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_22_fu_1075_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_23_fu_1092_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_28_fu_1102_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_10_fu_1098_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_26_fu_1109_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_29_fu_1119_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_24_fu_1113_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_27_fu_1126_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_30_fu_1136_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_25_fu_1130_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_10_fu_1143_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_8_fu_1147_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_26_fu_1153_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_27_fu_830_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_5_fu_699_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_76_fu_1169_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_31_fu_1178_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln703_11_fu_1175_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_29_fu_1186_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_12_fu_1203_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_12_fu_1203_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln728_12_fu_1203_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_32_fu_1209_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_28_fu_1217_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal lhs_V_fu_1192_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_11_fu_724_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln700_fu_705_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_30_fu_1221_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_77_fu_1227_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_33_fu_1237_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_12_fu_1233_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln728_29_fu_1245_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_55_fu_1255_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_55_fu_1255_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_55_fu_1255_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_13_fu_1263_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_13_fu_1263_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln728_13_fu_1263_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_34_fu_1269_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln728_30_fu_1277_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_31_fu_1249_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1545_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal rhs_V_35_fu_1287_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal ret_V_32_fu_1281_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_11_fu_1294_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln1192_9_fu_1298_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_33_fu_1304_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1118_3_fu_1323_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_12_fu_1330_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_63_fu_1334_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_5_fu_1343_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln703_4_fu_1340_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_64_fu_1360_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_64_fu_1360_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_64_fu_1360_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal rhs_V_6_fu_1366_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln728_6_fu_1374_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_6_fu_1351_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_15_fu_1391_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1118_7_fu_1384_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln728_fu_1394_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_7_fu_1400_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_7_fu_1378_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_fu_1408_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_fu_1412_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_8_fu_1418_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1192_1_fu_1435_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal rhs_V_15_fu_1438_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln1192_2_fu_1445_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_V_15_fu_1451_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1468_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1477_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1485_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1118_33_fu_571_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1493_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1518_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1527_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1527_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1527_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1536_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1536_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1545_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1545_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component myproject_mac_muladd_11s_5s_18ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component myproject_mac_mul_sub_11s_5s_20ns_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_am_submul_7s_5s_5s_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component myproject_mac_mulsub_10s_5s_14ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_mac_mulsub_10s_5s_18s_19_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component myproject_am_addmul_8s_6s_5s_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component myproject_am_addmul_8s_5s_5s_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component myproject_am_submul_8s_6s_5s_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component myproject_am_submul_8s_5s_5s_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;



begin
    myproject_mac_muladd_11s_5s_18ns_18_1_1_U1 : component myproject_mac_muladd_11s_5s_18ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 5,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => r_V_60_reg_1610,
        din1 => tmp_2_reg_1567,
        din2 => grp_fu_1468_p2,
        dout => grp_fu_1468_p3);

    myproject_mac_mul_sub_11s_5s_20ns_20_1_1_U2 : component myproject_mac_mul_sub_11s_5s_20ns_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 5,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => r_V_39_fu_543_p2,
        din1 => tmp_4_reg_1622,
        din2 => grp_fu_1477_p2,
        dout => grp_fu_1477_p3);

    myproject_am_submul_7s_5s_5s_12_1_1_U3 : component myproject_am_submul_7s_5s_5s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 12)
    port map (
        din0 => shl_ln1118_6_fu_560_p3,
        din1 => tmp_1_reg_1554,
        din2 => grp_fu_1485_p2,
        dout => grp_fu_1485_p3);

    myproject_am_submul_7s_5s_5s_12_1_1_U4 : component myproject_am_submul_7s_5s_5s_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 12)
    port map (
        din0 => r_V_2_fu_413_p3,
        din1 => tmp_2_reg_1567,
        din2 => grp_fu_1493_p2,
        dout => grp_fu_1493_p3);

    myproject_mac_mulsub_10s_5s_14ns_14_1_1_U5 : component myproject_mac_mulsub_10s_5s_14ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 5,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        din0 => mul_ln1118_reg_1644,
        din1 => p_Val2_26_reg_1590,
        din2 => mul_ln1192_1_reg_1649,
        dout => grp_fu_1501_p3);

    myproject_mac_mulsub_10s_5s_18s_19_1_1_U6 : component myproject_mac_mulsub_10s_5s_18s_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 5,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => r_V_10_reg_1669,
        din1 => tmp_2_reg_1567_pp0_iter1_reg,
        din2 => ret_V_3_reg_1664,
        dout => grp_fu_1509_p3);

    myproject_am_addmul_8s_6s_5s_13_1_1_U7 : component myproject_am_addmul_8s_6s_5s_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1518_p0,
        din1 => r_V_4_reg_1605_pp0_iter1_reg,
        din2 => tmp_2_reg_1567_pp0_iter1_reg,
        dout => grp_fu_1518_p3);

    myproject_am_addmul_8s_5s_5s_13_1_1_U8 : component myproject_am_addmul_8s_5s_5s_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1527_p0,
        din1 => grp_fu_1527_p1,
        din2 => grp_fu_1527_p2,
        dout => grp_fu_1527_p3);

    myproject_am_submul_8s_6s_5s_13_1_1_U9 : component myproject_am_submul_8s_6s_5s_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 6,
        din2_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1536_p0,
        din1 => r_V_27_reg_1684,
        din2 => grp_fu_1536_p2,
        dout => grp_fu_1536_p3);

    myproject_am_submul_8s_5s_5s_13_1_1_U10 : component myproject_am_submul_8s_5s_5s_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1545_p0,
        din1 => tmp_5_reg_1632_pp0_iter1_reg,
        din2 => grp_fu_1545_p2,
        dout => grp_fu_1545_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv80_0;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_reg_1644 <= mul_ln1118_fu_311_p2;
                mul_ln1192_1_reg_1649 <= mul_ln1192_1_fu_331_p2;
                p_Val2_26_reg_1590 <= x_V_in_sig(74 downto 70);
                p_Val2_26_reg_1590_pp0_iter1_reg <= p_Val2_26_reg_1590;
                r_V_10_reg_1669 <= r_V_10_fu_405_p2;
                    r_V_20_reg_1654(6 downto 2) <= r_V_20_fu_349_p3(6 downto 2);
                    r_V_27_reg_1684(5 downto 1) <= r_V_27_fu_468_p3(5 downto 1);
                    r_V_2_reg_1674(6 downto 2) <= r_V_2_fu_413_p3(6 downto 2);
                r_V_44_reg_1710 <= r_V_44_fu_537_p1;
                    r_V_48_reg_1705(7 downto 3) <= r_V_48_fu_530_p3(7 downto 3);
                    r_V_4_reg_1605(5 downto 1) <= r_V_4_fu_269_p3(5 downto 1);
                    r_V_4_reg_1605_pp0_iter1_reg(5 downto 1) <= r_V_4_reg_1605(5 downto 1);
                r_V_53_reg_1743 <= r_V_53_fu_684_p2;
                r_V_59_reg_1659 <= r_V_59_fu_360_p2;
                r_V_60_reg_1610 <= r_V_60_fu_281_p2;
                r_V_65_reg_1694 <= r_V_65_fu_519_p2;
                r_V_66_reg_1700 <= r_V_66_fu_525_p2;
                ret_V_21_reg_1733 <= ret_V_21_fu_666_p2;
                    ret_V_28_reg_1738(14 downto 5) <= ret_V_28_fu_678_p2(14 downto 5);
                ret_V_3_reg_1664 <= ret_V_3_fu_400_p2;
                    ret_V_9_reg_1689(20 downto 5) <= ret_V_9_fu_513_p2(20 downto 5);
                    ret_V_reg_1585(15 downto 5) <= ret_V_fu_253_p2(15 downto 5);
                sext_ln1118_16_reg_1616 <= sext_ln1118_16_fu_287_p1;
                sext_ln1118_19_reg_1679 <= sext_ln1118_19_fu_430_p1;
                sext_ln1118_4_reg_1580 <= sext_ln1118_4_fu_231_p1;
                tmp_1_reg_1554 <= x_V_in_sig(79 downto 75);
                tmp_1_reg_1554_pp0_iter1_reg <= tmp_1_reg_1554;
                tmp_2_reg_1567 <= x_V_in_sig(14 downto 10);
                tmp_2_reg_1567_pp0_iter1_reg <= tmp_2_reg_1567;
                tmp_4_reg_1622 <= x_V_in_sig(24 downto 20);
                tmp_4_reg_1622_pp0_iter1_reg <= tmp_4_reg_1622;
                tmp_5_reg_1632 <= x_V_in_sig(19 downto 15);
                tmp_5_reg_1632_pp0_iter1_reg <= tmp_5_reg_1632;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln728_8_reg_1723 <= grp_fu_1485_p3;
                mul_ln728_9_reg_1728 <= grp_fu_1493_p3;
                sub_ln1192_3_reg_1718 <= grp_fu_1477_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    r_V_2_reg_1674_pp0_iter2_reg(6 downto 2) <= r_V_2_reg_1674(6 downto 2);
                    r_V_67_reg_1758(9 downto 2) <= r_V_67_fu_888_p2(9 downto 2);
                    ret_V_14_reg_1753(23 downto 5) <= ret_V_14_fu_871_p2(23 downto 5);
                ret_V_5_reg_1748 <= ret_V_5_fu_739_p2;
                tmp_1_reg_1554_pp0_iter2_reg <= tmp_1_reg_1554_pp0_iter1_reg;
                tmp_2_reg_1567_pp0_iter2_reg <= tmp_2_reg_1567_pp0_iter1_reg;
                trunc_ln708_2_reg_1763 <= ret_V_16_fu_1035_p2(19 downto 15);
                trunc_ln708_3_reg_1768 <= ret_V_26_fu_1153_p2(19 downto 15);
                trunc_ln708_4_reg_1773 <= ret_V_33_fu_1304_p2(24 downto 20);
            end if;
        end if;
    end process;
    ret_V_reg_1585(4 downto 0) <= "00000";
    r_V_4_reg_1605(0) <= '0';
    r_V_4_reg_1605_pp0_iter1_reg(0) <= '0';
    r_V_20_reg_1654(1 downto 0) <= "00";
    r_V_2_reg_1674(1 downto 0) <= "00";
    r_V_2_reg_1674_pp0_iter2_reg(1 downto 0) <= "00";
    r_V_27_reg_1684(0) <= '0';
    ret_V_9_reg_1689(4 downto 0) <= "00000";
    r_V_48_reg_1705(2 downto 0) <= "000";
    ret_V_28_reg_1738(4 downto 0) <= "00000";
    ret_V_14_reg_1753(4 downto 0) <= "00000";
    r_V_67_reg_1758(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_1_fu_1029_p2 <= std_logic_vector(signed(sext_ln1192_7_fu_1025_p1) + signed(sub_ln1192_6_fu_983_p2));
    add_ln1192_fu_924_p2 <= std_logic_vector(signed(sext_ln1192_4_fu_920_p1) + signed(sub_ln1192_4_fu_908_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1468_p2 <= std_logic_vector(unsigned(rhs_V_2_fu_369_p3) + unsigned(sext_ln703_fu_366_p1));
    grp_fu_1477_p2 <= (p_Val2_26_reg_1590 & ap_const_lv15_0);
    grp_fu_1485_p2 <= sext_ln1118_33_fu_571_p1(5 - 1 downto 0);
    grp_fu_1493_p2 <= sext_ln1118_33_fu_571_p1(5 - 1 downto 0);
    grp_fu_1518_p0 <= sext_ln1118_11_fu_724_p1(8 - 1 downto 0);
    grp_fu_1527_p0 <= sext_ln1118_27_fu_830_p1(8 - 1 downto 0);
    grp_fu_1527_p1 <= sext_ln1118_5_fu_699_p1(5 - 1 downto 0);
    grp_fu_1527_p2 <= sext_ln728_fu_690_p1(5 - 1 downto 0);
    grp_fu_1536_p0 <= sext_ln1118_27_fu_830_p1(8 - 1 downto 0);
    grp_fu_1536_p2 <= sext_ln1118_26_fu_803_p1(5 - 1 downto 0);
    grp_fu_1545_p0 <= sext_ln1118_37_fu_996_p1(8 - 1 downto 0);
    grp_fu_1545_p2 <= sext_ln728_18_fu_894_p1(5 - 1 downto 0);
    lhs_V_fu_1192_p3 <= (ret_V_29_fu_1186_p2 & ap_const_lv5_0);
    mul_ln1118_fu_311_p0 <= sext_ln1118_16_fu_287_p1(5 - 1 downto 0);
    mul_ln1118_fu_311_p1 <= sext_ln1116_1_fu_227_p1(5 - 1 downto 0);
    mul_ln1118_fu_311_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_fu_311_p0) * signed(mul_ln1118_fu_311_p1))), 10));
    mul_ln1192_1_fu_331_p0 <= r_V_47_fu_317_p2;
    mul_ln1192_1_fu_331_p1 <= tmp_2_fu_191_p4;
    mul_ln1192_1_fu_331_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1192_1_fu_331_p0) * signed(mul_ln1192_1_fu_331_p1))), 14));
    mul_ln728_10_fu_942_p0 <= r_V_43_fu_933_p2;
    mul_ln728_10_fu_942_p1 <= sext_ln728_18_fu_894_p1(5 - 1 downto 0);
    mul_ln728_10_fu_942_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_10_fu_942_p0) * signed(mul_ln728_10_fu_942_p1))), 13));
    mul_ln728_11_fu_1054_p0 <= r_V_59_reg_1659;
    mul_ln728_11_fu_1054_p1 <= tmp_4_reg_1622_pp0_iter1_reg;
    mul_ln728_11_fu_1054_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_11_fu_1054_p0) * signed(mul_ln728_11_fu_1054_p1))), 12));
    mul_ln728_12_fu_1203_p0 <= r_V_53_reg_1743;
    mul_ln728_12_fu_1203_p1 <= sext_ln728_18_fu_894_p1(5 - 1 downto 0);
    mul_ln728_12_fu_1203_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_12_fu_1203_p0) * signed(mul_ln728_12_fu_1203_p1))), 13));
    mul_ln728_13_fu_1263_p0 <= r_V_55_fu_1255_p2;
    mul_ln728_13_fu_1263_p1 <= sext_ln728_18_fu_894_p1(5 - 1 downto 0);
    mul_ln728_13_fu_1263_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_13_fu_1263_p0) * signed(mul_ln728_13_fu_1263_p1))), 13));
    mul_ln728_1_fu_450_p0 <= r_V_22_fu_440_p2;
    mul_ln728_1_fu_450_p1 <= tmp_1_reg_1554;
    mul_ln728_1_fu_450_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_1_fu_450_p0) * signed(mul_ln728_1_fu_450_p1))), 15));
    mul_ln728_2_fu_495_p0 <= r_V_28_fu_479_p2;
    mul_ln728_2_fu_495_p1 <= tmp_4_reg_1622;
    mul_ln728_2_fu_495_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_2_fu_495_p0) * signed(mul_ln728_2_fu_495_p1))), 14));
    mul_ln728_3_fu_753_p0 <= r_V_65_reg_1694;
    mul_ln728_3_fu_753_p1 <= sext_ln1118_19_reg_1679(5 - 1 downto 0);
    mul_ln728_3_fu_753_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_3_fu_753_p0) * signed(mul_ln728_3_fu_753_p1))), 12));
    mul_ln728_4_fu_779_p0 <= sext_ln1118_25_fu_772_p1(10 - 1 downto 0);
    mul_ln728_4_fu_779_p1 <= sext_ln728_fu_690_p1(5 - 1 downto 0);
    mul_ln728_4_fu_779_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_4_fu_779_p0) * signed(mul_ln728_4_fu_779_p1))), 13));
    mul_ln728_5_fu_806_p0 <= sext_ln1118_25_fu_772_p1(10 - 1 downto 0);
    mul_ln728_5_fu_806_p1 <= sext_ln1118_26_fu_803_p1(5 - 1 downto 0);
    mul_ln728_5_fu_806_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_5_fu_806_p0) * signed(mul_ln728_5_fu_806_p1))), 13));
    p_Val2_26_fu_259_p4 <= x_V_in_sig(74 downto 70);
    r_V_10_fu_405_p0 <= sext_ln1117_fu_337_p1(5 - 1 downto 0);
    r_V_10_fu_405_p1 <= sext_ln1118_4_reg_1580(5 - 1 downto 0);
    r_V_10_fu_405_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_10_fu_405_p0) * signed(r_V_10_fu_405_p1))), 10));
    r_V_20_fu_349_p3 <= (p_Val2_26_reg_1590 & ap_const_lv2_0);
    r_V_22_fu_440_p0 <= r_V_20_fu_349_p3;
    r_V_22_fu_440_p1 <= p_Val2_26_reg_1590;
    r_V_22_fu_440_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_22_fu_440_p0) * signed(r_V_22_fu_440_p1))), 12));
    r_V_27_fu_468_p3 <= (p_Val2_26_reg_1590 & ap_const_lv1_0);
    r_V_28_fu_479_p0 <= sext_ln1116_6_fu_475_p1(6 - 1 downto 0);
    r_V_28_fu_479_p1 <= p_Val2_26_reg_1590;
    r_V_28_fu_479_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_28_fu_479_p0) * signed(r_V_28_fu_479_p1))), 11));
    r_V_2_fu_413_p3 <= (tmp_2_reg_1567 & ap_const_lv2_0);
    r_V_39_fu_543_p0 <= sext_ln1116_6_fu_475_p1(6 - 1 downto 0);
    r_V_39_fu_543_p1 <= tmp_5_reg_1632;
    r_V_39_fu_543_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_39_fu_543_p0) * signed(r_V_39_fu_543_p1))), 11));
    r_V_43_fu_933_p1 <= r_V_44_reg_1710(5 - 1 downto 0);
    r_V_43_fu_933_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv10_B) * signed(r_V_43_fu_933_p1))), 10));
        r_V_44_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1632),10));

    r_V_47_fu_317_p0 <= sext_ln1118_16_fu_287_p1(5 - 1 downto 0);
    r_V_47_fu_317_p1 <= sext_ln1118_16_fu_287_p1(5 - 1 downto 0);
    r_V_47_fu_317_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_47_fu_317_p0) * signed(r_V_47_fu_317_p1))), 10));
    r_V_48_fu_530_p3 <= (p_Val2_26_reg_1590 & ap_const_lv3_0);
    r_V_4_fu_269_p3 <= (tmp_1_fu_177_p4 & ap_const_lv1_0);
    r_V_53_fu_684_p0 <= sext_ln1117_fu_337_p1(5 - 1 downto 0);
    r_V_53_fu_684_p1 <= r_V_44_fu_537_p1(5 - 1 downto 0);
    r_V_53_fu_684_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_53_fu_684_p0) * signed(r_V_53_fu_684_p1))), 10));
    r_V_55_fu_1255_p0 <= r_V_44_reg_1710(5 - 1 downto 0);
    r_V_55_fu_1255_p1 <= r_V_44_reg_1710(5 - 1 downto 0);
    r_V_55_fu_1255_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_55_fu_1255_p0) * signed(r_V_55_fu_1255_p1))), 10));
    r_V_57_fu_213_p0 <= r_V_fu_201_p3;
    r_V_57_fu_213_p1 <= sext_ln1117_1_fu_187_p1(5 - 1 downto 0);
    r_V_57_fu_213_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_57_fu_213_p0) * signed(r_V_57_fu_213_p1))), 11));
    r_V_58_fu_235_p0 <= sext_ln1116_1_fu_227_p1(5 - 1 downto 0);
    r_V_58_fu_235_p1 <= tmp_2_fu_191_p4;
    r_V_58_fu_235_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_58_fu_235_p0) * signed(r_V_58_fu_235_p1))), 10));
    r_V_59_fu_360_p2 <= std_logic_vector(signed(sext_ln1118_8_fu_356_p1) - signed(sext_ln1118_6_fu_346_p1));
    r_V_60_fu_281_p0 <= r_V_4_fu_269_p3;
    r_V_60_fu_281_p1 <= sext_ln1117_1_fu_187_p1(5 - 1 downto 0);
    r_V_60_fu_281_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_60_fu_281_p0) * signed(r_V_60_fu_281_p1))), 11));
    r_V_63_fu_1334_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(sext_ln1118_12_fu_1330_p1));
    r_V_64_fu_1360_p0 <= r_V_2_reg_1674_pp0_iter2_reg;
    r_V_64_fu_1360_p1 <= tmp_2_reg_1567_pp0_iter2_reg;
    r_V_64_fu_1360_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_64_fu_1360_p0) * signed(r_V_64_fu_1360_p1))), 12));
    r_V_65_fu_519_p2 <= std_logic_vector(signed(sext_ln1118_8_fu_356_p1) + signed(sext_ln1118_6_fu_346_p1));
    r_V_66_fu_525_p0 <= sext_ln1117_fu_337_p1(5 - 1 downto 0);
    r_V_66_fu_525_p1 <= sext_ln1118_16_reg_1616(5 - 1 downto 0);
    r_V_66_fu_525_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_66_fu_525_p0) * signed(r_V_66_fu_525_p1))), 10));
    r_V_67_fu_888_p2 <= std_logic_vector(signed(sext_ln1118_29_fu_884_p1) - signed(sext_ln1118_7_fu_702_p1));
    r_V_69_fu_966_p0 <= r_V_44_reg_1710(5 - 1 downto 0);
    r_V_69_fu_966_p1 <= tmp_4_reg_1622_pp0_iter1_reg;
    r_V_69_fu_966_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_69_fu_966_p0) * signed(r_V_69_fu_966_p1))), 10));
    r_V_70_fu_1011_p2 <= std_logic_vector(signed(sext_ln1118_38_fu_1007_p1) - signed(sext_ln1118_37_fu_996_p1));
    r_V_71_fu_584_p0 <= r_V_48_fu_530_p3;
    r_V_71_fu_584_p1 <= p_Val2_26_reg_1590;
    r_V_71_fu_584_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_71_fu_584_p0) * signed(r_V_71_fu_584_p1))), 13));
    r_V_72_fu_625_p0 <= sext_ln1116_6_fu_475_p1(6 - 1 downto 0);
    r_V_72_fu_625_p1 <= tmp_2_reg_1567;
    r_V_72_fu_625_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_72_fu_625_p0) * signed(r_V_72_fu_625_p1))), 11));
    r_V_73_fu_649_p0 <= sext_ln1118_16_reg_1616(5 - 1 downto 0);
    r_V_73_fu_649_p1 <= r_V_44_fu_537_p1(5 - 1 downto 0);
    r_V_73_fu_649_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_73_fu_649_p0) * signed(r_V_73_fu_649_p1))), 10));
    r_V_74_fu_717_p3 <= (tmp_1_reg_1554_pp0_iter1_reg & ap_const_lv3_0);
    r_V_75_fu_989_p3 <= (tmp_5_reg_1632_pp0_iter1_reg & ap_const_lv3_0);
    r_V_76_fu_1169_p2 <= std_logic_vector(signed(sext_ln1118_27_fu_830_p1) - signed(sext_ln1118_5_fu_699_p1));
    r_V_77_fu_1227_p2 <= std_logic_vector(signed(sext_ln1118_11_fu_724_p1) - signed(sext_ln700_fu_705_p1));
    r_V_fu_201_p3 <= (trunc_ln1117_fu_173_p1 & ap_const_lv1_0);
    ret_V_10_fu_766_p2 <= std_logic_vector(unsigned(rhs_V_10_fu_758_p3) + unsigned(sext_ln703_5_fu_750_p1));
    ret_V_11_fu_797_p2 <= std_logic_vector(signed(sext_ln703_6_fu_775_p1) - signed(sext_ln728_11_fu_793_p1));
    ret_V_12_fu_824_p2 <= std_logic_vector(signed(sext_ln728_12_fu_820_p1) + signed(ret_V_11_fu_797_p2));
    ret_V_13_fu_848_p2 <= std_logic_vector(signed(sext_ln728_14_fu_844_p1) + signed(sext_ln703_7_fu_833_p1));
    ret_V_14_fu_871_p2 <= std_logic_vector(unsigned(ret_V_13_fu_848_p2) - unsigned(sext_ln728_17_fu_867_p1));
    ret_V_15_fu_1451_p2 <= std_logic_vector(unsigned(ap_const_lv25_600000) + unsigned(sub_ln1192_2_fu_1445_p2));
    ret_V_16_fu_1035_p2 <= std_logic_vector(signed(ap_const_lv20_B0000) + signed(add_ln1192_1_fu_1029_p2));
    ret_V_18_fu_601_p2 <= std_logic_vector(signed(sext_ln703_8_fu_590_p1) - signed(rhs_V_22_fu_593_p3));
    ret_V_19_fu_619_p2 <= std_logic_vector(signed(sext_ln728_20_fu_615_p1) + signed(ret_V_18_fu_601_p2));
    ret_V_20_fu_643_p2 <= std_logic_vector(unsigned(ret_V_19_fu_619_p2) - unsigned(sext_ln728_21_fu_639_p1));
    ret_V_21_fu_666_p2 <= std_logic_vector(signed(sext_ln728_22_fu_662_p1) + signed(ret_V_20_fu_643_p2));
    ret_V_22_fu_1075_p2 <= std_logic_vector(signed(sext_ln728_24_fu_1071_p1) + signed(sext_ln703_9_fu_1060_p1));
    ret_V_23_fu_1092_p2 <= std_logic_vector(signed(sext_ln728_25_fu_1088_p1) + signed(ret_V_22_fu_1075_p2));
    ret_V_24_fu_1113_p2 <= std_logic_vector(signed(sext_ln703_10_fu_1098_p1) - signed(sext_ln728_26_fu_1109_p1));
    ret_V_25_fu_1130_p2 <= std_logic_vector(unsigned(ret_V_24_fu_1113_p2) - unsigned(sext_ln728_27_fu_1126_p1));
    ret_V_26_fu_1153_p2 <= std_logic_vector(signed(ap_const_lv20_88000) + signed(sub_ln1192_8_fu_1147_p2));
    ret_V_27_fu_672_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(rhs_V_23_fu_607_p3));
    ret_V_28_fu_678_p2 <= std_logic_vector(unsigned(ret_V_27_fu_672_p2) - unsigned(rhs_V_25_fu_654_p3));
    ret_V_29_fu_1186_p2 <= std_logic_vector(unsigned(rhs_V_31_fu_1178_p3) + unsigned(sext_ln703_11_fu_1175_p1));
    ret_V_30_fu_1221_p2 <= std_logic_vector(signed(sext_ln728_28_fu_1217_p1) + signed(lhs_V_fu_1192_p3));
    ret_V_31_fu_1249_p2 <= std_logic_vector(signed(sext_ln703_12_fu_1233_p1) - signed(sext_ln728_29_fu_1245_p1));
    ret_V_32_fu_1281_p2 <= std_logic_vector(signed(sext_ln728_30_fu_1277_p1) + signed(ret_V_31_fu_1249_p2));
    ret_V_33_fu_1304_p2 <= std_logic_vector(signed(ap_const_lv25_1300000) + signed(sub_ln1192_9_fu_1298_p2));
    ret_V_3_fu_400_p2 <= std_logic_vector(signed(sext_ln728_3_fu_396_p1) + signed(grp_fu_1468_p3));
    ret_V_5_fu_739_p2 <= std_logic_vector(signed(grp_fu_1509_p3) - signed(sext_ln728_5_fu_735_p1));
    ret_V_6_fu_1351_p2 <= std_logic_vector(unsigned(rhs_V_5_fu_1343_p3) + unsigned(sext_ln703_4_fu_1340_p1));
    ret_V_7_fu_1378_p2 <= std_logic_vector(signed(sext_ln728_6_fu_1374_p1) + signed(ret_V_6_fu_1351_p2));
    ret_V_8_fu_1418_p2 <= std_logic_vector(unsigned(ap_const_lv20_50000) + unsigned(sub_ln1192_fu_1412_p2));
    ret_V_9_fu_513_p2 <= std_logic_vector(signed(sext_ln728_10_fu_509_p1) - signed(sext_ln728_9_fu_464_p1));
    ret_V_fu_253_p2 <= std_logic_vector(signed(sext_ln728_2_fu_249_p1) - signed(rhs_V_fu_219_p3));
    rhs_V_10_fu_758_p3 <= (mul_ln728_3_fu_753_p2 & ap_const_lv10_0);
    rhs_V_11_fu_785_p3 <= (mul_ln728_4_fu_779_p2 & ap_const_lv5_0);
    rhs_V_12_fu_812_p3 <= (mul_ln728_5_fu_806_p2 & ap_const_lv5_0);
    rhs_V_13_fu_837_p3 <= (grp_fu_1527_p3 & ap_const_lv10_0);
    rhs_V_14_fu_860_p3 <= (grp_fu_1536_p3 & ap_const_lv10_0);
    rhs_V_15_fu_1438_p3 <= (r_V_67_reg_1758 & ap_const_lv15_0);
    rhs_V_17_fu_897_p3 <= (mul_ln728_8_reg_1723 & ap_const_lv5_0);
    rhs_V_18_fu_913_p3 <= (mul_ln728_9_reg_1728 & ap_const_lv5_0);
    rhs_V_19_fu_948_p3 <= (mul_ln728_10_fu_942_p2 & ap_const_lv5_0);
    rhs_V_1_fu_241_p3 <= (r_V_58_fu_235_p2 & ap_const_lv5_0);
    rhs_V_20_fu_971_p3 <= (r_V_69_fu_966_p2 & ap_const_lv5_0);
    rhs_V_21_fu_1017_p3 <= (r_V_70_fu_1011_p2 & ap_const_lv10_0);
    rhs_V_22_fu_593_p3 <= (r_V_71_fu_584_p2 & ap_const_lv5_0);
    rhs_V_23_fu_607_p3 <= (r_V_66_fu_525_p2 & ap_const_lv5_0);
    rhs_V_24_fu_631_p3 <= (r_V_72_fu_625_p2 & ap_const_lv5_0);
    rhs_V_25_fu_654_p3 <= (r_V_73_fu_649_p2 & ap_const_lv5_0);
    rhs_V_26_fu_1063_p3 <= (mul_ln728_11_fu_1054_p2 & ap_const_lv5_0);
    rhs_V_27_fu_1081_p3 <= (r_V_65_reg_1694 & ap_const_lv10_0);
    rhs_V_28_fu_1102_p3 <= (tmp_1_reg_1554_pp0_iter1_reg & ap_const_lv13_0);
    rhs_V_29_fu_1119_p3 <= (tmp_5_reg_1632_pp0_iter1_reg & ap_const_lv13_0);
    rhs_V_2_fu_369_p3 <= (r_V_59_fu_360_p2 & ap_const_lv10_0);
    rhs_V_30_fu_1136_p3 <= (tmp_4_reg_1622_pp0_iter1_reg & ap_const_lv10_0);
    rhs_V_31_fu_1178_p3 <= (r_V_76_fu_1169_p2 & ap_const_lv10_0);
    rhs_V_32_fu_1209_p3 <= (mul_ln728_12_fu_1203_p2 & ap_const_lv5_0);
    rhs_V_33_fu_1237_p3 <= (r_V_77_fu_1227_p2 & ap_const_lv15_0);
    rhs_V_34_fu_1269_p3 <= (mul_ln728_13_fu_1263_p2 & ap_const_lv5_0);
    rhs_V_35_fu_1287_p3 <= (grp_fu_1545_p3 & ap_const_lv10_0);
    rhs_V_3_fu_389_p3 <= (r_V_60_reg_1610 & ap_const_lv5_0);
    rhs_V_4_fu_728_p3 <= (grp_fu_1518_p3 & ap_const_lv5_0);
    rhs_V_5_fu_1343_p3 <= (r_V_63_fu_1334_p2 & ap_const_lv10_0);
    rhs_V_6_fu_1366_p3 <= (r_V_64_fu_1360_p2 & ap_const_lv5_0);
    rhs_V_7_fu_1400_p3 <= (sub_ln728_fu_1394_p2 & ap_const_lv10_0);
    rhs_V_8_fu_456_p3 <= (mul_ln728_1_fu_450_p2 & ap_const_lv5_0);
    rhs_V_9_fu_501_p3 <= (mul_ln728_2_fu_495_p2 & ap_const_lv5_0);
    rhs_V_fu_219_p3 <= (r_V_57_fu_213_p2 & ap_const_lv5_0);
        sext_ln1116_1_fu_227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1117_fu_173_p1),10));

        sext_ln1116_6_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_27_fu_468_p3),11));

        sext_ln1117_1_fu_187_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_177_p4),11));

        sext_ln1117_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1554),10));

        sext_ln1118_11_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_74_fu_717_p3),9));

        sext_ln1118_12_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_3_fu_1323_p3),10));

        sext_ln1118_15_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_reg_1567_pp0_iter2_reg),9));

        sext_ln1118_16_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_fu_259_p4),10));

        sext_ln1118_19_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_reg_1590),12));

        sext_ln1118_25_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_66_reg_1700),13));

        sext_ln1118_26_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1622_pp0_iter1_reg),13));

        sext_ln1118_27_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_48_reg_1705),9));

        sext_ln1118_29_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_877_p3),10));

        sext_ln1118_33_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1632),12));

        sext_ln1118_37_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_75_fu_989_p3),9));

        sext_ln1118_38_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_8_fu_1000_p3),9));

        sext_ln1118_4_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_191_p4),10));

        sext_ln1118_5_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_reg_1590_pp0_iter1_reg),9));

        sext_ln1118_6_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_reg_1590),8));

        sext_ln1118_7_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_20_reg_1654),10));

        sext_ln1118_8_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_20_fu_349_p3),8));

        sext_ln1192_10_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_30_fu_1136_p3),20));

        sext_ln1192_11_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_35_fu_1287_p3),25));

        sext_ln1192_1_fu_1435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_14_reg_1753),25));

        sext_ln1192_3_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_17_fu_897_p3),20));

        sext_ln1192_4_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_18_fu_913_p3),20));

        sext_ln1192_5_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_19_fu_948_p3),20));

        sext_ln1192_6_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_20_fu_971_p3),20));

        sext_ln1192_7_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_21_fu_1017_p3),20));

        sext_ln1192_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_7_fu_1400_p3),20));

        sext_ln700_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1554_pp0_iter1_reg),9));

        sext_ln703_10_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_23_fu_1092_p2),20));

        sext_ln703_11_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_28_reg_1738),19));

        sext_ln703_12_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_30_fu_1221_p2),25));

        sext_ln703_4_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_5_reg_1748),20));

        sext_ln703_5_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_9_reg_1689),22));

        sext_ln703_6_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_10_fu_766_p2),23));

        sext_ln703_7_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_12_fu_824_p2),24));

        sext_ln703_8_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1501_p3),18));

        sext_ln703_9_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_21_reg_1733),19));

        sext_ln703_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_1585),18));

        sext_ln728_10_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_9_fu_501_p3),21));

        sext_ln728_11_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_11_fu_785_p3),23));

        sext_ln728_12_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_12_fu_812_p3),23));

        sext_ln728_14_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_13_fu_837_p3),24));

        sext_ln728_17_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_14_fu_860_p3),24));

        sext_ln728_18_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1632_pp0_iter1_reg),13));

        sext_ln728_20_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_23_fu_607_p3),18));

        sext_ln728_21_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_24_fu_631_p3),18));

        sext_ln728_22_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_25_fu_654_p3),18));

        sext_ln728_24_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_26_fu_1063_p3),19));

        sext_ln728_25_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_27_fu_1081_p3),19));

        sext_ln728_26_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_28_fu_1102_p3),20));

        sext_ln728_27_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_29_fu_1119_p3),20));

        sext_ln728_28_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_32_fu_1209_p3),24));

        sext_ln728_29_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_33_fu_1237_p3),25));

        sext_ln728_2_fu_249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_241_p3),16));

        sext_ln728_30_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_34_fu_1269_p3),25));

        sext_ln728_3_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_389_p3),18));

        sext_ln728_5_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_4_fu_728_p3),19));

        sext_ln728_6_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_6_fu_1366_p3),20));

        sext_ln728_9_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_8_fu_456_p3),21));

        sext_ln728_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1554_pp0_iter1_reg),13));

    shl_ln1118_3_fu_1323_p3 <= (tmp_1_reg_1554_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln1118_5_fu_877_p3 <= (p_Val2_26_reg_1590_pp0_iter1_reg & ap_const_lv4_0);
    shl_ln1118_6_fu_560_p3 <= (tmp_1_reg_1554 & ap_const_lv2_0);
    shl_ln1118_7_fu_1384_p3 <= (tmp_2_reg_1567_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln1118_8_fu_1000_p3 <= (tmp_5_reg_1632_pp0_iter1_reg & ap_const_lv1_0);
    sub_ln1192_2_fu_1445_p2 <= std_logic_vector(signed(sext_ln1192_1_fu_1435_p1) - signed(rhs_V_15_fu_1438_p3));
    sub_ln1192_4_fu_908_p2 <= std_logic_vector(signed(sub_ln1192_3_reg_1718) - signed(sext_ln1192_3_fu_904_p1));
    sub_ln1192_5_fu_960_p2 <= std_logic_vector(unsigned(add_ln1192_fu_924_p2) - unsigned(sext_ln1192_5_fu_956_p1));
    sub_ln1192_6_fu_983_p2 <= std_logic_vector(unsigned(sub_ln1192_5_fu_960_p2) - unsigned(sext_ln1192_6_fu_979_p1));
    sub_ln1192_8_fu_1147_p2 <= std_logic_vector(unsigned(ret_V_25_fu_1130_p2) - unsigned(sext_ln1192_10_fu_1143_p1));
    sub_ln1192_9_fu_1298_p2 <= std_logic_vector(unsigned(ret_V_32_fu_1281_p2) - unsigned(sext_ln1192_11_fu_1294_p1));
    sub_ln1192_fu_1412_p2 <= std_logic_vector(unsigned(ret_V_7_fu_1378_p2) - unsigned(sext_ln1192_fu_1408_p1));
    sub_ln728_fu_1394_p2 <= std_logic_vector(signed(sext_ln1118_15_fu_1391_p1) - signed(shl_ln1118_7_fu_1384_p3));
    tmp_1_fu_177_p4 <= x_V_in_sig(79 downto 75);
    tmp_2_fu_191_p4 <= x_V_in_sig(14 downto 10);
    trunc_ln1117_fu_173_p1 <= x_V_in_sig(5 - 1 downto 0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_8_fu_1418_p2(19 downto 15);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= ret_V_15_fu_1451_p2(24 downto 20);

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= trunc_ln708_2_reg_1763;

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_3_reg_1768;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= trunc_ln708_4_reg_1773;

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
