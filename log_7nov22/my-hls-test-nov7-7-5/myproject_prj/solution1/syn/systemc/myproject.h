// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<112> > x_V;
    sc_in< sc_logic > x_V_ap_vld;
    sc_out< sc_lv<7> > y_0_V;
    sc_out< sc_logic > y_0_V_ap_vld;
    sc_out< sc_lv<7> > y_1_V;
    sc_out< sc_logic > y_1_V_ap_vld;
    sc_out< sc_lv<7> > y_2_V;
    sc_out< sc_logic > y_2_V_ap_vld;
    sc_out< sc_lv<7> > y_3_V;
    sc_out< sc_logic > y_3_V_ap_vld;
    sc_out< sc_lv<7> > y_4_V;
    sc_out< sc_logic > y_4_V_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<112> > x_V_preg;
    sc_signal< sc_lv<112> > x_V_in_sig;
    sc_signal< sc_logic > x_V_ap_vld_preg;
    sc_signal< sc_logic > x_V_ap_vld_in_sig;
    sc_signal< sc_logic > x_V_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<7> > tmp_fu_144_p4;
    sc_signal< sc_lv<7> > tmp_1_fu_154_p4;
    sc_signal< sc_lv<7> > mul_ln1192_fu_182_p0;
    sc_signal< sc_lv<11> > sext_ln1192_fu_174_p1;
    sc_signal< sc_lv<7> > mul_ln1192_fu_182_p1;
    sc_signal< sc_lv<11> > mul_ln1192_fu_182_p2;
    sc_signal< sc_lv<12> > rhs_V_fu_196_p3;
    sc_signal< sc_lv<13> > sext_ln1192_2_fu_204_p1;
    sc_signal< sc_lv<13> > shl_ln_fu_188_p3;
    sc_signal< sc_lv<12> > rhs_V_1_fu_214_p3;
    sc_signal< sc_lv<13> > sub_ln1192_fu_208_p2;
    sc_signal< sc_lv<13> > sext_ln1192_3_fu_222_p1;
    sc_signal< sc_lv<13> > sub_ln1192_1_fu_226_p2;
    sc_signal< sc_lv<13> > ret_V_fu_232_p2;
    sc_signal< sc_lv<7> > p_Val2_2_fu_164_p4;
    sc_signal< sc_lv<7> > mul_ln1192_1_fu_253_p0;
    sc_signal< sc_lv<7> > mul_ln1192_1_fu_253_p1;
    sc_signal< sc_lv<11> > sext_ln1192_4_fu_249_p1;
    sc_signal< sc_lv<11> > mul_ln1192_1_fu_253_p2;
    sc_signal< sc_lv<13> > rhs_V_2_fu_267_p3;
    sc_signal< sc_lv<15> > shl_ln1192_1_fu_259_p3;
    sc_signal< sc_lv<15> > sext_ln1192_5_fu_275_p1;
    sc_signal< sc_lv<15> > sub_ln1192_2_fu_279_p2;
    sc_signal< sc_lv<15> > ret_V_1_fu_285_p2;
    sc_signal< sc_lv<7> > tmp_3_fu_302_p4;
    sc_signal< sc_lv<7> > mul_ln1192_2_fu_326_p0;
    sc_signal< sc_lv<11> > sext_ln1192_7_fu_322_p1;
    sc_signal< sc_lv<7> > mul_ln1192_2_fu_326_p1;
    sc_signal< sc_lv<11> > mul_ln1192_2_fu_326_p2;
    sc_signal< sc_lv<13> > sub_ln1192_3_fu_312_p2;
    sc_signal< sc_lv<13> > shl_ln1192_2_fu_332_p3;
    sc_signal< sc_lv<6> > tmp_6_fu_346_p4;
    sc_signal< sc_lv<9> > shl_ln1192_3_fu_356_p3;
    sc_signal< sc_lv<9> > sext_ln1192_6_fu_318_p1;
    sc_signal< sc_lv<9> > sub_ln1192_5_fu_364_p2;
    sc_signal< sc_lv<13> > shl_ln1192_4_fu_370_p3;
    sc_signal< sc_lv<13> > sub_ln1192_4_fu_340_p2;
    sc_signal< sc_lv<13> > add_ln1192_fu_378_p2;
    sc_signal< sc_lv<13> > ret_V_2_fu_384_p2;
    sc_signal< sc_lv<7> > mul_ln1192_3_fu_401_p0;
    sc_signal< sc_lv<7> > mul_ln1192_3_fu_401_p1;
    sc_signal< sc_lv<11> > mul_ln1192_3_fu_401_p2;
    sc_signal< sc_lv<13> > shl_ln1192_5_fu_407_p3;
    sc_signal< sc_lv<11> > rhs_V_3_fu_421_p3;
    sc_signal< sc_lv<13> > sub_ln1192_6_fu_415_p2;
    sc_signal< sc_lv<13> > sext_ln1192_8_fu_429_p1;
    sc_signal< sc_lv<11> > rhs_V_4_fu_439_p3;
    sc_signal< sc_lv<13> > sub_ln1192_7_fu_433_p2;
    sc_signal< sc_lv<13> > sext_ln1192_9_fu_447_p1;
    sc_signal< sc_lv<13> > sub_ln1192_8_fu_451_p2;
    sc_signal< sc_lv<13> > ret_V_3_fu_457_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<112> ap_const_lv112_0;
    static const sc_lv<7> ap_const_lv7_7E;
    static const sc_lv<32> ap_const_lv32_69;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_62;
    static const sc_lv<32> ap_const_lv32_68;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<13> ap_const_lv13_1F40;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<15> ap_const_lv15_7C00;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<13> ap_const_lv13_1F80;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_fu_378_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_mul_ln1192_1_fu_253_p0();
    void thread_mul_ln1192_1_fu_253_p1();
    void thread_mul_ln1192_1_fu_253_p2();
    void thread_mul_ln1192_2_fu_326_p0();
    void thread_mul_ln1192_2_fu_326_p1();
    void thread_mul_ln1192_2_fu_326_p2();
    void thread_mul_ln1192_3_fu_401_p0();
    void thread_mul_ln1192_3_fu_401_p1();
    void thread_mul_ln1192_3_fu_401_p2();
    void thread_mul_ln1192_fu_182_p0();
    void thread_mul_ln1192_fu_182_p1();
    void thread_mul_ln1192_fu_182_p2();
    void thread_p_Val2_2_fu_164_p4();
    void thread_ret_V_1_fu_285_p2();
    void thread_ret_V_2_fu_384_p2();
    void thread_ret_V_3_fu_457_p2();
    void thread_ret_V_fu_232_p2();
    void thread_rhs_V_1_fu_214_p3();
    void thread_rhs_V_2_fu_267_p3();
    void thread_rhs_V_3_fu_421_p3();
    void thread_rhs_V_4_fu_439_p3();
    void thread_rhs_V_fu_196_p3();
    void thread_sext_ln1192_2_fu_204_p1();
    void thread_sext_ln1192_3_fu_222_p1();
    void thread_sext_ln1192_4_fu_249_p1();
    void thread_sext_ln1192_5_fu_275_p1();
    void thread_sext_ln1192_6_fu_318_p1();
    void thread_sext_ln1192_7_fu_322_p1();
    void thread_sext_ln1192_8_fu_429_p1();
    void thread_sext_ln1192_9_fu_447_p1();
    void thread_sext_ln1192_fu_174_p1();
    void thread_shl_ln1192_1_fu_259_p3();
    void thread_shl_ln1192_2_fu_332_p3();
    void thread_shl_ln1192_3_fu_356_p3();
    void thread_shl_ln1192_4_fu_370_p3();
    void thread_shl_ln1192_5_fu_407_p3();
    void thread_shl_ln_fu_188_p3();
    void thread_sub_ln1192_1_fu_226_p2();
    void thread_sub_ln1192_2_fu_279_p2();
    void thread_sub_ln1192_3_fu_312_p2();
    void thread_sub_ln1192_4_fu_340_p2();
    void thread_sub_ln1192_5_fu_364_p2();
    void thread_sub_ln1192_6_fu_415_p2();
    void thread_sub_ln1192_7_fu_433_p2();
    void thread_sub_ln1192_8_fu_451_p2();
    void thread_sub_ln1192_fu_208_p2();
    void thread_tmp_1_fu_154_p4();
    void thread_tmp_3_fu_302_p4();
    void thread_tmp_6_fu_346_p4();
    void thread_tmp_fu_144_p4();
    void thread_x_V_ap_vld_in_sig();
    void thread_x_V_blk_n();
    void thread_x_V_in_sig();
    void thread_y_0_V();
    void thread_y_0_V_ap_vld();
    void thread_y_1_V();
    void thread_y_1_V_ap_vld();
    void thread_y_2_V();
    void thread_y_2_V_ap_vld();
    void thread_y_3_V();
    void thread_y_3_V_ap_vld();
    void thread_y_4_V();
    void thread_y_4_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
