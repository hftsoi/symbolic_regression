-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V_ap_vld : IN STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (111 downto 0);
    y_0_V : OUT STD_LOGIC_VECTOR (6 downto 0);
    y_0_V_ap_vld : OUT STD_LOGIC;
    y_1_V : OUT STD_LOGIC_VECTOR (6 downto 0);
    y_1_V_ap_vld : OUT STD_LOGIC;
    y_2_V : OUT STD_LOGIC_VECTOR (6 downto 0);
    y_2_V_ap_vld : OUT STD_LOGIC;
    y_3_V : OUT STD_LOGIC_VECTOR (6 downto 0);
    y_3_V_ap_vld : OUT STD_LOGIC;
    y_4_V : OUT STD_LOGIC_VECTOR (6 downto 0);
    y_4_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.083000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=18,HLS_SYN_FF=825,HLS_SYN_LUT=2154,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv112_0 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv27_6600000 : STD_LOGIC_VECTOR (26 downto 0) := "110011000000000000000000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv12_B : STD_LOGIC_VECTOR (11 downto 0) := "000000001011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv22_388000 : STD_LOGIC_VECTOR (21 downto 0) := "1110001000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv27_7300000 : STD_LOGIC_VECTOR (26 downto 0) := "111001100000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv22_350000 : STD_LOGIC_VECTOR (21 downto 0) := "1101010000000000000000";
    constant ap_const_lv12_3A : STD_LOGIC_VECTOR (11 downto 0) := "000000111010";
    constant ap_const_lv22_3B0000 : STD_LOGIC_VECTOR (21 downto 0) := "1110110000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal x_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x_V_preg : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal x_V_in_sig : STD_LOGIC_VECTOR (111 downto 0);
    signal x_V_ap_vld_preg : STD_LOGIC := '0';
    signal x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_1_fu_189_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_reg_1509 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_reg_1509_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_reg_1509_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1117_1_fu_199_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1117_1_reg_1524 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_fu_203_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_reg_1529 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_reg_1529_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_reg_1529_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_4_fu_243_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_4_reg_1542 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_fu_265_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_reg_1547 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_18_fu_271_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_18_reg_1552 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_18_reg_1552_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_16_fu_281_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_16_reg_1567 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_4_reg_1573 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_reg_1573_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_reg_1584 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_reg_1584_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_fu_305_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1118_reg_1597 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1192_2_fu_1375_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1192_2_reg_1602 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_20_fu_343_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_20_reg_1607 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_57_fu_354_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_57_reg_1612 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_4_fu_381_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_reg_1617 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_58_fu_392_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_58_reg_1622 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1381_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_2_reg_1627 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_10_fu_405_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_10_reg_1632 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln728_1_fu_1389_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln728_1_reg_1637 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln728_2_fu_1395_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln728_2_reg_1642 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_63_fu_464_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_63_reg_1647 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_3_fu_474_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_3_reg_1652 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln728_4_fu_1401_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_4_reg_1657 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_5_fu_1407_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_5_reg_1662 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1413_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln728_6_reg_1667 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1421_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln728_7_reg_1672 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_31_fu_509_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_31_reg_1677 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_38_fu_515_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_38_reg_1682 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_13_fu_613_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_13_reg_1687 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_17_fu_649_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ret_V_17_reg_1692 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln728_12_fu_1437_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_12_reg_1697 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_13_fu_1443_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_13_reg_1702 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1192_fu_733_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of sub_ln1192_fu_733_p2 : signal is "no";
    signal sub_ln1192_reg_1707 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_2_fu_741_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_2_reg_1712 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln708_1_reg_1717 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1192_7_fu_967_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_7_reg_1722 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_7_fu_973_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1192_7_reg_1727 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln728_10_fu_1494_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln728_10_reg_1732 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_67_fu_989_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_67_reg_1737 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_3_reg_1742 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln708_4_reg_1747 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln1117_fu_185_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_fu_213_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_55_fu_225_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_55_fu_225_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_55_fu_225_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_56_fu_247_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1116_1_fu_239_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_56_fu_247_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_56_fu_247_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_1_fu_253_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln728_2_fu_261_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal rhs_V_fu_231_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1118_fu_305_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_fu_305_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_44_fu_311_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_44_fu_311_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_44_fu_311_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_8_fu_350_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_6_fu_340_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_2_fu_363_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln703_fu_360_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln728_3_fu_371_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_58_fu_392_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_58_fu_392_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_1_fu_375_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_10_fu_405_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1117_fu_328_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_10_fu_405_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_22_fu_426_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_19_fu_416_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_22_fu_426_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_22_fu_426_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_26_fu_436_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_29_fu_451_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_29_fu_451_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1116_6_fu_447_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_29_fu_451_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln728_3_fu_474_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_3_fu_474_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_64_fu_480_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_64_fu_480_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_64_fu_480_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_45_fu_495_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_38_fu_515_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_38_fu_515_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_68_fu_531_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_68_fu_531_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1429_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_68_fu_531_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln703_3_fu_537_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_21_fu_540_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_22_fu_554_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_10_fu_548_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln728_16_fu_562_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_69_fu_572_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_69_fu_572_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_69_fu_572_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_23_fu_578_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal ret_V_11_fu_566_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln728_17_fu_586_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_70_fu_596_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_70_fu_596_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_70_fu_596_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_24_fu_601_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_12_fu_590_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln728_18_fu_609_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_15_fu_619_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_28_fu_502_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_5_fu_337_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_16_fu_625_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_73_fu_631_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_4_fu_637_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal rhs_V_30_fu_641_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_51_fu_655_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_51_fu_655_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_51_fu_655_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_53_fu_668_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_53_fu_668_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_53_fu_668_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_3_fu_696_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_4_fu_703_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_71_fu_715_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1458_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1449_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_4_fu_726_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_8_fu_752_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_9_fu_766_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln728_9_fu_773_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln728_8_fu_759_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_10_fu_783_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_6_fu_777_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1192_2_fu_790_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_11_fu_800_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_3_fu_794_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1192_3_fu_807_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_12_fu_817_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1192_3_fu_811_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1192_4_fu_824_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln1192_4_fu_828_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_13_fu_834_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln1192_5_fu_841_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_14_fu_853_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal shl_ln1118_6_fu_866_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_30_fu_873_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_7_fu_684_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_65_fu_877_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1192_4_fu_860_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_15_fu_883_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln1192_5_fu_891_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_7_fu_897_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal shl_ln1118_7_fu_926_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1476_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_17_fu_940_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1467_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_5_fu_947_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1485_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_18_fu_956_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1192_7_fu_951_p2 : STD_LOGIC_VECTOR (21 downto 0);
    attribute use_dsp48 of sub_ln1192_7_fu_951_p2 : signal is "no";
    signal sext_ln1192_6_fu_963_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_42_fu_979_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_42_fu_979_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_67_fu_989_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_67_fu_989_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_11_fu_997_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_11_fu_997_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_11_fu_997_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_25_fu_1003_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_11_fu_1011_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_26_fu_1020_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1192_12_fu_1015_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_12_fu_1027_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_27_fu_1037_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1192_13_fu_1031_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_13_fu_1044_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_72_fu_1054_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_28_fu_1065_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1192_11_fu_1048_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_14_fu_1072_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_29_fu_1082_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1192_12_fu_1076_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_15_fu_1089_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1192_13_fu_1093_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_14_fu_1099_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal lhs_V_fu_1115_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal rhs_V_31_fu_1126_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_5_fu_1122_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln728_20_fu_1133_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln1118_11_fu_722_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln700_fu_687_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_74_fu_1143_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_32_fu_1149_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_18_fu_1137_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln728_21_fu_1157_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_33_fu_1167_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_19_fu_1161_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln728_22_fu_1174_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1500_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_20_fu_1178_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_34_fu_1184_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln1192_14_fu_1191_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_21_fu_1197_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal rhs_V_5_fu_1216_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1192_fu_1223_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_61_fu_1238_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_61_fu_1238_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_61_fu_1238_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_6_fu_1244_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1192_fu_1227_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_1_fu_1252_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_5_fu_1262_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_12_fu_1232_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_15_fu_1269_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_62_fu_1273_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1192_1_fu_1256_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_7_fu_1279_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1192_1_fu_1287_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_5_fu_1293_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_19_fu_1310_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal rhs_V_20_fu_1322_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1192_8_fu_1317_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1192_8_fu_1329_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1192_fu_1339_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1192_fu_1339_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1192_9_fu_1333_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln_fu_1344_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1192_8_fu_1352_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_8_fu_1358_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln728_4_fu_1401_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_25_fu_485_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_5_fu_1407_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1413_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1413_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1421_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln728_12_fu_1437_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_42_fu_665_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln728_13_fu_1443_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1449_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1458_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1467_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1476_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1118_35_fu_937_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1485_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln728_10_fu_1494_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln728_14_fu_913_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1500_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component myproject_mul_mul_7s_14s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_muladd_7s_15s_21s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_mul_mul_7s_16s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component myproject_mul_mul_7s_15s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mul_mul_7s_14s_19_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component myproject_am_addmul_7s_10s_7s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_am_submul_10s_8s_7s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_mac_mulsub_7s_14s_20s_20_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component myproject_mac_mulsub_7s_14s_22ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_am_addmul_10s_8s_7s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_mac_mul_sub_7s_15s_22ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_am_submul_9s_7s_7s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_mul_mul_7s_12s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_am_submul_10s_7s_7s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    myproject_mul_mul_7s_14s_20_1_1_U1 : component myproject_mul_mul_7s_14s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 14,
        dout_WIDTH => 20)
    port map (
        din0 => tmp_2_fu_203_p4,
        din1 => r_V_44_fu_311_p2,
        dout => mul_ln1192_2_fu_1375_p2);

    myproject_mac_muladd_7s_15s_21s_22_1_1_U2 : component myproject_mac_muladd_7s_15s_21s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 15,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        din0 => tmp_2_reg_1529,
        din1 => r_V_58_fu_392_p2,
        din2 => ret_V_1_fu_375_p2,
        dout => grp_fu_1381_p3);

    myproject_mul_mul_7s_16s_21_1_1_U3 : component myproject_mul_mul_7s_16s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 16,
        dout_WIDTH => 21)
    port map (
        din0 => tmp_1_reg_1509,
        din1 => r_V_22_fu_426_p2,
        dout => mul_ln728_1_fu_1389_p2);

    myproject_mul_mul_7s_15s_20_1_1_U4 : component myproject_mul_mul_7s_15s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 15,
        dout_WIDTH => 20)
    port map (
        din0 => tmp_4_reg_1573,
        din1 => r_V_29_fu_451_p2,
        dout => mul_ln728_2_fu_1395_p2);

    myproject_mul_mul_7s_14s_19_1_1_U5 : component myproject_mul_mul_7s_14s_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 14,
        dout_WIDTH => 19)
    port map (
        din0 => tmp_1_reg_1509,
        din1 => mul_ln728_4_fu_1401_p1,
        dout => mul_ln728_4_fu_1401_p2);

    myproject_mul_mul_7s_14s_19_1_1_U6 : component myproject_mul_mul_7s_14s_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 14,
        dout_WIDTH => 19)
    port map (
        din0 => tmp_4_reg_1573,
        din1 => mul_ln728_5_fu_1407_p1,
        dout => mul_ln728_5_fu_1407_p2);

    myproject_am_addmul_7s_10s_7s_17_1_1_U7 : component myproject_am_addmul_7s_10s_7s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 10,
        din2_WIDTH => 7,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_1413_p0,
        din1 => grp_fu_1413_p1,
        din2 => tmp_1_reg_1509,
        dout => grp_fu_1413_p3);

    myproject_am_submul_10s_8s_7s_17_1_1_U8 : component myproject_am_submul_10s_8s_7s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 7,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_1421_p0,
        din1 => r_V_26_fu_436_p3,
        din2 => tmp_4_reg_1573,
        dout => grp_fu_1421_p3);

    myproject_mac_mulsub_7s_14s_20s_20_1_1_U9 : component myproject_mac_mulsub_7s_14s_20s_20_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 14,
        din2_WIDTH => 20,
        dout_WIDTH => 20)
    port map (
        din0 => p_Val2_18_reg_1552,
        din1 => mul_ln1118_reg_1597,
        din2 => mul_ln1192_2_reg_1602,
        dout => grp_fu_1429_p3);

    myproject_mul_mul_7s_14s_19_1_1_U10 : component myproject_mul_mul_7s_14s_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 14,
        dout_WIDTH => 19)
    port map (
        din0 => mul_ln728_12_fu_1437_p0,
        din1 => r_V_51_fu_655_p2,
        dout => mul_ln728_12_fu_1437_p2);

    myproject_mul_mul_7s_14s_19_1_1_U11 : component myproject_mul_mul_7s_14s_19_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 14,
        dout_WIDTH => 19)
    port map (
        din0 => mul_ln728_13_fu_1443_p0,
        din1 => r_V_53_fu_668_p2,
        dout => mul_ln728_13_fu_1443_p2);

    myproject_mac_mulsub_7s_14s_22ns_22_1_1_U12 : component myproject_mac_mulsub_7s_14s_22ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 14,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => tmp_2_reg_1529_pp0_iter1_reg,
        din1 => r_V_10_reg_1632,
        din2 => grp_fu_1449_p2,
        dout => grp_fu_1449_p3);

    myproject_am_addmul_10s_8s_7s_17_1_1_U13 : component myproject_am_addmul_10s_8s_7s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 7,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_1458_p0,
        din1 => r_V_4_reg_1617,
        din2 => tmp_2_reg_1529_pp0_iter1_reg,
        dout => grp_fu_1458_p3);

    myproject_mac_mul_sub_7s_15s_22ns_22_1_1_U14 : component myproject_mac_mul_sub_7s_15s_22ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 15,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => tmp_4_reg_1573_pp0_iter1_reg,
        din1 => r_V_38_reg_1682,
        din2 => grp_fu_1467_p2,
        dout => grp_fu_1467_p3);

    myproject_am_submul_9s_7s_7s_16_1_1_U15 : component myproject_am_submul_9s_7s_7s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => shl_ln1118_7_fu_926_p3,
        din1 => tmp_1_reg_1509_pp0_iter1_reg,
        din2 => grp_fu_1476_p2,
        dout => grp_fu_1476_p3);

    myproject_am_submul_9s_7s_7s_16_1_1_U16 : component myproject_am_submul_9s_7s_7s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => r_V_2_fu_741_p3,
        din1 => tmp_2_reg_1529_pp0_iter1_reg,
        din2 => grp_fu_1485_p2,
        dout => grp_fu_1485_p3);

    myproject_mul_mul_7s_12s_17_1_1_U17 : component myproject_mul_mul_7s_12s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 12,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln728_10_fu_1494_p0,
        din1 => r_V_42_fu_979_p2,
        dout => mul_ln728_10_fu_1494_p2);

    myproject_am_submul_10s_7s_7s_17_1_1_U18 : component myproject_am_submul_10s_7s_7s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        dout_WIDTH => 17)
    port map (
        din0 => r_V_72_fu_1054_p3,
        din1 => tmp_5_reg_1584_pp0_iter1_reg,
        din2 => grp_fu_1500_p2,
        dout => grp_fu_1500_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    x_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    x_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_ap_vld_preg <= x_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    x_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                x_V_preg <= ap_const_lv112_0;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (x_V_ap_vld = ap_const_logic_1))) then 
                    x_V_preg <= x_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln1192_7_reg_1722 <= add_ln1192_7_fu_967_p2;
                mul_ln728_10_reg_1732 <= mul_ln728_10_fu_1494_p2;
                    r_V_2_reg_1712(8 downto 2) <= r_V_2_fu_741_p3(8 downto 2);
                r_V_67_reg_1737 <= r_V_67_fu_989_p2;
                sext_ln1192_7_reg_1727 <= sext_ln1192_7_fu_973_p1;
                sub_ln1192_reg_1707 <= sub_ln1192_fu_733_p2;
                tmp_1_reg_1509_pp0_iter2_reg <= tmp_1_reg_1509_pp0_iter1_reg;
                tmp_2_reg_1529_pp0_iter2_reg <= tmp_2_reg_1529_pp0_iter1_reg;
                trunc_ln708_1_reg_1717 <= ret_V_7_fu_897_p2(26 downto 20);
                trunc_ln708_3_reg_1742 <= ret_V_14_fu_1099_p2(21 downto 15);
                trunc_ln708_4_reg_1747 <= ret_V_21_fu_1197_p2(26 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln1118_reg_1597 <= mul_ln1118_fu_305_p2;
                mul_ln1192_2_reg_1602 <= mul_ln1192_2_fu_1375_p2;
                mul_ln728_12_reg_1697 <= mul_ln728_12_fu_1437_p2;
                mul_ln728_13_reg_1702 <= mul_ln728_13_fu_1443_p2;
                mul_ln728_1_reg_1637 <= mul_ln728_1_fu_1389_p2;
                mul_ln728_2_reg_1642 <= mul_ln728_2_fu_1395_p2;
                mul_ln728_3_reg_1652 <= mul_ln728_3_fu_474_p2;
                mul_ln728_4_reg_1657 <= mul_ln728_4_fu_1401_p2;
                mul_ln728_5_reg_1662 <= mul_ln728_5_fu_1407_p2;
                p_Val2_18_reg_1552 <= x_V_in_sig(104 downto 98);
                p_Val2_18_reg_1552_pp0_iter1_reg <= p_Val2_18_reg_1552;
                r_V_10_reg_1632 <= r_V_10_fu_405_p2;
                    r_V_20_reg_1607(8 downto 2) <= r_V_20_fu_343_p3(8 downto 2);
                    r_V_38_reg_1682(14 downto 1) <= r_V_38_fu_515_p2(14 downto 1);
                    r_V_4_reg_1617(7 downto 1) <= r_V_4_fu_381_p3(7 downto 1);
                r_V_57_reg_1612 <= r_V_57_fu_354_p2;
                    r_V_58_reg_1622(14 downto 1) <= r_V_58_fu_392_p2(14 downto 1);
                r_V_63_reg_1647 <= r_V_63_fu_464_p2;
                ret_V_13_reg_1687 <= ret_V_13_fu_613_p2;
                    ret_V_17_reg_1692(20 downto 5) <= ret_V_17_fu_649_p2(20 downto 5);
                    ret_V_reg_1547(19 downto 5) <= ret_V_fu_265_p2(19 downto 5);
                sext_ln1117_1_reg_1524 <= sext_ln1117_1_fu_199_p1;
                sext_ln1118_16_reg_1567 <= sext_ln1118_16_fu_281_p1;
                sext_ln1118_31_reg_1677 <= sext_ln1118_31_fu_509_p1;
                sext_ln1118_4_reg_1542 <= sext_ln1118_4_fu_243_p1;
                tmp_1_reg_1509 <= x_V_in_sig(111 downto 105);
                tmp_1_reg_1509_pp0_iter1_reg <= tmp_1_reg_1509;
                tmp_2_reg_1529 <= x_V_in_sig(20 downto 14);
                tmp_2_reg_1529_pp0_iter1_reg <= tmp_2_reg_1529;
                tmp_4_reg_1573 <= x_V_in_sig(34 downto 28);
                tmp_4_reg_1573_pp0_iter1_reg <= tmp_4_reg_1573;
                tmp_5_reg_1584 <= x_V_in_sig(27 downto 21);
                tmp_5_reg_1584_pp0_iter1_reg <= tmp_5_reg_1584;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_ln728_6_reg_1667 <= grp_fu_1413_p3;
                mul_ln728_7_reg_1672 <= grp_fu_1421_p3;
                ret_V_2_reg_1627 <= grp_fu_1381_p3;
            end if;
        end if;
    end process;
    ret_V_reg_1547(4 downto 0) <= "00000";
    r_V_20_reg_1607(1 downto 0) <= "00";
    r_V_4_reg_1617(0) <= '0';
    r_V_58_reg_1622(0) <= '0';
    r_V_38_reg_1682(0) <= '0';
    ret_V_17_reg_1692(4 downto 0) <= "00000";
    r_V_2_reg_1712(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1192_12_fu_1015_p2 <= std_logic_vector(unsigned(ret_V_13_reg_1687) + unsigned(sext_ln1192_11_fu_1011_p1));
    add_ln1192_13_fu_1031_p2 <= std_logic_vector(unsigned(add_ln1192_12_fu_1015_p2) + unsigned(sext_ln1192_12_fu_1027_p1));
    add_ln1192_1_fu_1256_p2 <= std_logic_vector(unsigned(add_ln1192_fu_1227_p2) + unsigned(sext_ln1192_1_fu_1252_p1));
    add_ln1192_3_fu_794_p2 <= std_logic_vector(unsigned(ret_V_6_fu_777_p2) + unsigned(sext_ln1192_2_fu_790_p1));
    add_ln1192_4_fu_828_p2 <= std_logic_vector(unsigned(sub_ln1192_3_fu_811_p2) + unsigned(sext_ln1192_4_fu_824_p1));
    add_ln1192_5_fu_841_p2 <= std_logic_vector(unsigned(add_ln1192_4_fu_828_p2) + unsigned(rhs_V_13_fu_834_p3));
    add_ln1192_7_fu_967_p2 <= std_logic_vector(unsigned(sub_ln1192_7_fu_951_p2) + unsigned(sext_ln1192_6_fu_963_p1));
    add_ln1192_8_fu_1352_p2 <= std_logic_vector(unsigned(sub_ln1192_9_fu_1333_p2) + unsigned(shl_ln_fu_1344_p3));
    add_ln1192_fu_1227_p2 <= std_logic_vector(unsigned(sub_ln1192_reg_1707) + unsigned(sext_ln1192_fu_1223_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, x_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (x_V_ap_vld_in_sig = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1413_p0 <= sext_ln1118_5_fu_337_p1(7 - 1 downto 0);
    grp_fu_1413_p1 <= sext_ln1118_28_fu_502_p1(10 - 1 downto 0);
    grp_fu_1421_p0 <= sext_ln1118_28_fu_502_p1(10 - 1 downto 0);
    grp_fu_1449_p2 <= std_logic_vector(signed(ret_V_2_reg_1627) + signed(sext_ln728_4_fu_703_p1));
    grp_fu_1458_p0 <= sext_ln1118_11_fu_722_p1(10 - 1 downto 0);
    grp_fu_1467_p2 <= (p_Val2_18_reg_1552_pp0_iter1_reg & ap_const_lv15_0);
    grp_fu_1476_p2 <= sext_ln1118_35_fu_937_p1(7 - 1 downto 0);
    grp_fu_1485_p2 <= sext_ln1118_35_fu_937_p1(7 - 1 downto 0);
    grp_fu_1500_p2 <= sext_ln728_14_fu_913_p1(7 - 1 downto 0);
    lhs_V_fu_1115_p3 <= (ret_V_17_reg_1692 & ap_const_lv5_0);
    mul_ln1118_fu_305_p0 <= sext_ln1118_16_fu_281_p1(7 - 1 downto 0);
    mul_ln1118_fu_305_p1 <= sext_ln1116_1_fu_239_p1(7 - 1 downto 0);
    mul_ln1118_fu_305_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_fu_305_p0) * signed(mul_ln1118_fu_305_p1))), 14));
    mul_ln1192_fu_1339_p1 <= sext_ln1192_7_reg_1727(7 - 1 downto 0);
    mul_ln1192_fu_1339_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv12_3A) * signed(mul_ln1192_fu_1339_p1))), 12));
    mul_ln728_10_fu_1494_p0 <= sext_ln728_14_fu_913_p1(7 - 1 downto 0);
    mul_ln728_11_fu_997_p0 <= tmp_4_reg_1573_pp0_iter1_reg;
    mul_ln728_11_fu_997_p1 <= r_V_57_reg_1612;
    mul_ln728_11_fu_997_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_11_fu_997_p0) * signed(mul_ln728_11_fu_997_p1))), 16));
    mul_ln728_12_fu_1437_p0 <= sext_ln1118_42_fu_665_p1(7 - 1 downto 0);
    mul_ln728_13_fu_1443_p0 <= sext_ln1118_42_fu_665_p1(7 - 1 downto 0);
    mul_ln728_3_fu_474_p0 <= sext_ln1118_19_fu_416_p1(7 - 1 downto 0);
    mul_ln728_3_fu_474_p1 <= r_V_63_fu_464_p2;
    mul_ln728_3_fu_474_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_3_fu_474_p0) * signed(mul_ln728_3_fu_474_p1))), 16));
    mul_ln728_4_fu_1401_p1 <= sext_ln1118_25_fu_485_p1(14 - 1 downto 0);
    mul_ln728_5_fu_1407_p1 <= sext_ln1118_25_fu_485_p1(14 - 1 downto 0);
    p_Val2_18_fu_271_p4 <= x_V_in_sig(104 downto 98);
    r_V_10_fu_405_p0 <= sext_ln1117_fu_328_p1(7 - 1 downto 0);
    r_V_10_fu_405_p1 <= sext_ln1118_4_reg_1542(7 - 1 downto 0);
    r_V_10_fu_405_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_10_fu_405_p0) * signed(r_V_10_fu_405_p1))), 14));
    r_V_20_fu_343_p3 <= (p_Val2_18_reg_1552 & ap_const_lv2_0);
    r_V_22_fu_426_p0 <= sext_ln1118_19_fu_416_p1(7 - 1 downto 0);
    r_V_22_fu_426_p1 <= r_V_20_fu_343_p3;
    r_V_22_fu_426_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_22_fu_426_p0) * signed(r_V_22_fu_426_p1))), 16));
    r_V_26_fu_436_p3 <= (p_Val2_18_reg_1552 & ap_const_lv1_0);
    r_V_29_fu_451_p0 <= p_Val2_18_reg_1552;
    r_V_29_fu_451_p1 <= sext_ln1116_6_fu_447_p1(8 - 1 downto 0);
    r_V_29_fu_451_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_29_fu_451_p0) * signed(r_V_29_fu_451_p1))), 15));
    r_V_2_fu_741_p3 <= (tmp_2_reg_1529_pp0_iter1_reg & ap_const_lv2_0);
    r_V_38_fu_515_p0 <= tmp_5_reg_1584;
    r_V_38_fu_515_p1 <= sext_ln1116_6_fu_447_p1(8 - 1 downto 0);
    r_V_38_fu_515_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_38_fu_515_p0) * signed(r_V_38_fu_515_p1))), 15));
    r_V_42_fu_979_p1 <= tmp_5_reg_1584_pp0_iter1_reg;
    r_V_42_fu_979_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv12_B) * signed(r_V_42_fu_979_p1))), 12));
    r_V_44_fu_311_p0 <= sext_ln1118_16_fu_281_p1(7 - 1 downto 0);
    r_V_44_fu_311_p1 <= sext_ln1118_16_fu_281_p1(7 - 1 downto 0);
    r_V_44_fu_311_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_44_fu_311_p0) * signed(r_V_44_fu_311_p1))), 14));
    r_V_45_fu_495_p3 <= (p_Val2_18_reg_1552 & ap_const_lv3_0);
    r_V_4_fu_381_p3 <= (tmp_1_reg_1509 & ap_const_lv1_0);
    r_V_51_fu_655_p0 <= sext_ln1117_fu_328_p1(7 - 1 downto 0);
    r_V_51_fu_655_p1 <= sext_ln1118_31_fu_509_p1(7 - 1 downto 0);
    r_V_51_fu_655_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_51_fu_655_p0) * signed(r_V_51_fu_655_p1))), 14));
    r_V_53_fu_668_p0 <= sext_ln1118_31_fu_509_p1(7 - 1 downto 0);
    r_V_53_fu_668_p1 <= sext_ln1118_31_fu_509_p1(7 - 1 downto 0);
    r_V_53_fu_668_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_53_fu_668_p0) * signed(r_V_53_fu_668_p1))), 14));
    r_V_55_fu_225_p0 <= tmp_1_fu_189_p4;
    r_V_55_fu_225_p1 <= r_V_fu_213_p3;
    r_V_55_fu_225_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_55_fu_225_p0) * signed(r_V_55_fu_225_p1))), 15));
    r_V_56_fu_247_p0 <= sext_ln1116_1_fu_239_p1(7 - 1 downto 0);
    r_V_56_fu_247_p1 <= tmp_2_fu_203_p4;
    r_V_56_fu_247_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_56_fu_247_p0) * signed(r_V_56_fu_247_p1))), 14));
    r_V_57_fu_354_p2 <= std_logic_vector(signed(sext_ln1118_8_fu_350_p1) - signed(sext_ln1118_6_fu_340_p1));
    r_V_58_fu_392_p0 <= sext_ln1117_1_reg_1524(7 - 1 downto 0);
    r_V_58_fu_392_p1 <= r_V_4_fu_381_p3;
    r_V_58_fu_392_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_58_fu_392_p0) * signed(r_V_58_fu_392_p1))), 15));
    r_V_61_fu_1238_p0 <= tmp_2_reg_1529_pp0_iter2_reg;
    r_V_61_fu_1238_p1 <= r_V_2_reg_1712;
    r_V_61_fu_1238_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_61_fu_1238_p0) * signed(r_V_61_fu_1238_p1))), 16));
    r_V_62_fu_1273_p2 <= std_logic_vector(signed(sext_ln1118_12_fu_1232_p1) + signed(sext_ln1118_15_fu_1269_p1));
    r_V_63_fu_464_p2 <= std_logic_vector(signed(sext_ln1118_6_fu_340_p1) + signed(sext_ln1118_8_fu_350_p1));
    r_V_64_fu_480_p0 <= sext_ln1117_fu_328_p1(7 - 1 downto 0);
    r_V_64_fu_480_p1 <= sext_ln1118_16_reg_1567(7 - 1 downto 0);
    r_V_64_fu_480_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_64_fu_480_p0) * signed(r_V_64_fu_480_p1))), 14));
    r_V_65_fu_877_p2 <= std_logic_vector(signed(sext_ln1118_30_fu_873_p1) - signed(sext_ln1118_7_fu_684_p1));
    r_V_67_fu_989_p0 <= sext_ln1118_31_reg_1677(7 - 1 downto 0);
    r_V_67_fu_989_p1 <= tmp_4_reg_1573_pp0_iter1_reg;
    r_V_67_fu_989_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_67_fu_989_p0) * signed(r_V_67_fu_989_p1))), 14));
    r_V_68_fu_531_p0 <= p_Val2_18_reg_1552;
    r_V_68_fu_531_p1 <= r_V_45_fu_495_p3;
    r_V_68_fu_531_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_68_fu_531_p0) * signed(r_V_68_fu_531_p1))), 17));
    r_V_69_fu_572_p0 <= tmp_2_reg_1529;
    r_V_69_fu_572_p1 <= sext_ln1116_6_fu_447_p1(8 - 1 downto 0);
    r_V_69_fu_572_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_69_fu_572_p0) * signed(r_V_69_fu_572_p1))), 15));
    r_V_70_fu_596_p0 <= sext_ln1118_16_reg_1567(7 - 1 downto 0);
    r_V_70_fu_596_p1 <= sext_ln1118_31_fu_509_p1(7 - 1 downto 0);
    r_V_70_fu_596_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_70_fu_596_p0) * signed(r_V_70_fu_596_p1))), 14));
    r_V_71_fu_715_p3 <= (tmp_1_reg_1509_pp0_iter1_reg & ap_const_lv3_0);
    r_V_72_fu_1054_p3 <= (tmp_5_reg_1584_pp0_iter1_reg & ap_const_lv3_0);
    r_V_73_fu_631_p2 <= std_logic_vector(signed(sext_ln1118_28_fu_502_p1) - signed(sext_ln1118_5_fu_337_p1));
    r_V_74_fu_1143_p2 <= std_logic_vector(signed(sext_ln1118_11_fu_722_p1) - signed(sext_ln700_fu_687_p1));
    r_V_fu_213_p3 <= (trunc_ln1117_fu_185_p1 & ap_const_lv1_0);
    ret_V_10_fu_548_p2 <= std_logic_vector(signed(sext_ln703_3_fu_537_p1) - signed(rhs_V_21_fu_540_p3));
    ret_V_11_fu_566_p2 <= std_logic_vector(unsigned(ret_V_10_fu_548_p2) + unsigned(sext_ln728_16_fu_562_p1));
    ret_V_12_fu_590_p2 <= std_logic_vector(unsigned(ret_V_11_fu_566_p2) - unsigned(sext_ln728_17_fu_586_p1));
    ret_V_13_fu_613_p2 <= std_logic_vector(unsigned(ret_V_12_fu_590_p2) + unsigned(sext_ln728_18_fu_609_p1));
    ret_V_14_fu_1099_p2 <= std_logic_vector(signed(ap_const_lv22_388000) + signed(sub_ln1192_13_fu_1093_p2));
    ret_V_15_fu_619_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(rhs_V_22_fu_554_p3));
    ret_V_16_fu_625_p2 <= std_logic_vector(unsigned(ret_V_15_fu_619_p2) - unsigned(rhs_V_24_fu_601_p3));
    ret_V_17_fu_649_p2 <= std_logic_vector(signed(sext_ln703_4_fu_637_p1) + signed(rhs_V_30_fu_641_p3));
    ret_V_18_fu_1137_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1122_p1) + signed(sext_ln728_20_fu_1133_p1));
    ret_V_19_fu_1161_p2 <= std_logic_vector(unsigned(ret_V_18_fu_1137_p2) - unsigned(sext_ln728_21_fu_1157_p1));
    ret_V_1_fu_375_p2 <= std_logic_vector(signed(sext_ln703_fu_360_p1) + signed(sext_ln728_3_fu_371_p1));
    ret_V_20_fu_1178_p2 <= std_logic_vector(unsigned(ret_V_19_fu_1161_p2) + unsigned(sext_ln728_22_fu_1174_p1));
    ret_V_21_fu_1197_p2 <= std_logic_vector(signed(ap_const_lv27_7300000) + signed(sub_ln1192_14_fu_1191_p2));
    ret_V_5_fu_1293_p2 <= std_logic_vector(signed(ap_const_lv22_350000) + signed(sub_ln1192_1_fu_1287_p2));
    ret_V_6_fu_777_p2 <= std_logic_vector(signed(sext_ln728_9_fu_773_p1) - signed(sext_ln728_8_fu_759_p1));
    ret_V_7_fu_897_p2 <= std_logic_vector(signed(ap_const_lv27_6600000) + signed(sub_ln1192_5_fu_891_p2));
    ret_V_8_fu_1358_p2 <= std_logic_vector(signed(ap_const_lv22_3B0000) + signed(add_ln1192_8_fu_1352_p2));
    ret_V_fu_265_p2 <= std_logic_vector(signed(sext_ln728_2_fu_261_p1) - signed(rhs_V_fu_231_p3));
    rhs_V_10_fu_783_p3 <= (mul_ln728_3_reg_1652 & ap_const_lv10_0);
    rhs_V_11_fu_800_p3 <= (mul_ln728_4_reg_1657 & ap_const_lv5_0);
    rhs_V_12_fu_817_p3 <= (mul_ln728_5_reg_1662 & ap_const_lv5_0);
    rhs_V_13_fu_834_p3 <= (mul_ln728_6_reg_1667 & ap_const_lv10_0);
    rhs_V_14_fu_853_p3 <= (mul_ln728_7_reg_1672 & ap_const_lv10_0);
    rhs_V_15_fu_883_p3 <= (r_V_65_fu_877_p2 & ap_const_lv15_0);
    rhs_V_17_fu_940_p3 <= (grp_fu_1476_p3 & ap_const_lv5_0);
    rhs_V_18_fu_956_p3 <= (grp_fu_1485_p3 & ap_const_lv5_0);
    rhs_V_19_fu_1310_p3 <= (mul_ln728_10_reg_1732 & ap_const_lv5_0);
    rhs_V_1_fu_253_p3 <= (r_V_56_fu_247_p2 & ap_const_lv5_0);
    rhs_V_20_fu_1322_p3 <= (r_V_67_reg_1737 & ap_const_lv5_0);
    rhs_V_21_fu_540_p3 <= (r_V_68_fu_531_p2 & ap_const_lv5_0);
    rhs_V_22_fu_554_p3 <= (r_V_64_fu_480_p2 & ap_const_lv5_0);
    rhs_V_23_fu_578_p3 <= (r_V_69_fu_572_p2 & ap_const_lv5_0);
    rhs_V_24_fu_601_p3 <= (r_V_70_fu_596_p2 & ap_const_lv5_0);
    rhs_V_25_fu_1003_p3 <= (mul_ln728_11_fu_997_p2 & ap_const_lv5_0);
    rhs_V_26_fu_1020_p3 <= (r_V_63_reg_1647 & ap_const_lv10_0);
    rhs_V_27_fu_1037_p3 <= (tmp_1_reg_1509_pp0_iter1_reg & ap_const_lv13_0);
    rhs_V_28_fu_1065_p3 <= (tmp_5_reg_1584_pp0_iter1_reg & ap_const_lv13_0);
    rhs_V_29_fu_1082_p3 <= (tmp_4_reg_1573_pp0_iter1_reg & ap_const_lv10_0);
    rhs_V_2_fu_363_p3 <= (r_V_57_fu_354_p2 & ap_const_lv10_0);
    rhs_V_30_fu_641_p3 <= (r_V_73_fu_631_p2 & ap_const_lv10_0);
    rhs_V_31_fu_1126_p3 <= (mul_ln728_12_reg_1697 & ap_const_lv5_0);
    rhs_V_32_fu_1149_p3 <= (r_V_74_fu_1143_p2 & ap_const_lv15_0);
    rhs_V_33_fu_1167_p3 <= (mul_ln728_13_reg_1702 & ap_const_lv5_0);
    rhs_V_34_fu_1184_p3 <= (grp_fu_1500_p3 & ap_const_lv10_0);
    rhs_V_3_fu_696_p3 <= (r_V_58_reg_1622 & ap_const_lv5_0);
    rhs_V_4_fu_726_p3 <= (grp_fu_1458_p3 & ap_const_lv5_0);
    rhs_V_5_fu_1216_p3 <= (tmp_1_reg_1509_pp0_iter2_reg & ap_const_lv14_0);
    rhs_V_6_fu_1244_p3 <= (r_V_61_fu_1238_p2 & ap_const_lv5_0);
    rhs_V_7_fu_1279_p3 <= (r_V_62_fu_1273_p2 & ap_const_lv10_0);
    rhs_V_8_fu_752_p3 <= (mul_ln728_1_reg_1637 & ap_const_lv5_0);
    rhs_V_9_fu_766_p3 <= (mul_ln728_2_reg_1642 & ap_const_lv5_0);
    rhs_V_fu_231_p3 <= (r_V_55_fu_225_p2 & ap_const_lv5_0);
        sext_ln1116_1_fu_239_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1117_fu_185_p1),14));

        sext_ln1116_6_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_26_fu_436_p3),15));

        sext_ln1117_1_fu_199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_189_p4),15));

        sext_ln1117_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1509),14));

        sext_ln1118_11_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_71_fu_715_p3),11));

        sext_ln1118_12_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_reg_1529_pp0_iter2_reg),12));

        sext_ln1118_15_fu_1269_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_5_fu_1262_p3),12));

        sext_ln1118_16_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_fu_271_p4),14));

        sext_ln1118_19_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_reg_1552),16));

        sext_ln1118_25_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_64_fu_480_p2),19));

        sext_ln1118_28_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_45_fu_495_p3),11));

        sext_ln1118_30_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_6_fu_866_p3),12));

        sext_ln1118_31_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1584),14));

        sext_ln1118_35_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1584_pp0_iter1_reg),16));

        sext_ln1118_42_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1584),19));

        sext_ln1118_4_fu_243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_203_p4),14));

        sext_ln1118_5_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_reg_1552),11));

        sext_ln1118_6_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_reg_1552),10));

        sext_ln1118_7_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_20_reg_1607),12));

        sext_ln1118_8_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_20_fu_343_p3),10));

        sext_ln1192_11_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_25_fu_1003_p3),22));

        sext_ln1192_12_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_26_fu_1020_p3),22));

        sext_ln1192_13_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_27_fu_1037_p3),22));

        sext_ln1192_14_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_28_fu_1065_p3),22));

        sext_ln1192_15_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_29_fu_1082_p3),22));

        sext_ln1192_1_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_6_fu_1244_p3),22));

        sext_ln1192_2_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_10_fu_783_p3),27));

        sext_ln1192_3_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_11_fu_800_p3),27));

        sext_ln1192_4_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_12_fu_817_p3),27));

        sext_ln1192_5_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_17_fu_940_p3),22));

        sext_ln1192_6_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_18_fu_956_p3),22));

        sext_ln1192_7_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1584_pp0_iter1_reg),12));

        sext_ln1192_8_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_20_fu_1322_p3),22));

        sext_ln1192_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_5_fu_1216_p3),22));

        sext_ln700_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_1509_pp0_iter1_reg),11));

        sext_ln703_3_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1429_p3),22));

        sext_ln703_4_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_16_fu_625_p2),21));

        sext_ln703_5_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_1115_p3),27));

        sext_ln703_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_1547),21));

        sext_ln728_14_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_reg_1584_pp0_iter1_reg),17));

        sext_ln728_16_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_22_fu_554_p3),22));

        sext_ln728_17_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_23_fu_578_p3),22));

        sext_ln728_18_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_24_fu_601_p3),22));

        sext_ln728_20_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_31_fu_1126_p3),27));

        sext_ln728_21_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_32_fu_1149_p3),27));

        sext_ln728_22_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_33_fu_1167_p3),27));

        sext_ln728_2_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_253_p3),20));

        sext_ln728_3_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_363_p3),21));

        sext_ln728_4_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_696_p3),22));

        sext_ln728_8_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_8_fu_752_p3),27));

        sext_ln728_9_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_9_fu_766_p3),27));

    shl_ln1118_5_fu_1262_p3 <= (tmp_2_reg_1529_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln1118_6_fu_866_p3 <= (p_Val2_18_reg_1552_pp0_iter1_reg & ap_const_lv4_0);
    shl_ln1118_7_fu_926_p3 <= (tmp_1_reg_1509_pp0_iter1_reg & ap_const_lv2_0);
    shl_ln_fu_1344_p3 <= (mul_ln1192_fu_1339_p2 & ap_const_lv10_0);
    sub_ln1192_11_fu_1048_p2 <= std_logic_vector(unsigned(add_ln1192_13_fu_1031_p2) - unsigned(sext_ln1192_13_fu_1044_p1));
    sub_ln1192_12_fu_1076_p2 <= std_logic_vector(unsigned(sub_ln1192_11_fu_1048_p2) - unsigned(sext_ln1192_14_fu_1072_p1));
    sub_ln1192_13_fu_1093_p2 <= std_logic_vector(unsigned(sub_ln1192_12_fu_1076_p2) - unsigned(sext_ln1192_15_fu_1089_p1));
    sub_ln1192_14_fu_1191_p2 <= std_logic_vector(unsigned(ret_V_20_fu_1178_p2) - unsigned(rhs_V_34_fu_1184_p3));
    sub_ln1192_1_fu_1287_p2 <= std_logic_vector(unsigned(add_ln1192_1_fu_1256_p2) - unsigned(rhs_V_7_fu_1279_p3));
    sub_ln1192_3_fu_811_p2 <= std_logic_vector(unsigned(add_ln1192_3_fu_794_p2) - unsigned(sext_ln1192_3_fu_807_p1));
    sub_ln1192_4_fu_860_p2 <= std_logic_vector(unsigned(add_ln1192_5_fu_841_p2) - unsigned(rhs_V_14_fu_853_p3));
    sub_ln1192_5_fu_891_p2 <= std_logic_vector(unsigned(sub_ln1192_4_fu_860_p2) - unsigned(rhs_V_15_fu_883_p3));
    sub_ln1192_7_fu_951_p2 <= std_logic_vector(signed(grp_fu_1467_p3) - signed(sext_ln1192_5_fu_947_p1));
    sub_ln1192_8_fu_1317_p2 <= std_logic_vector(unsigned(add_ln1192_7_reg_1722) - unsigned(rhs_V_19_fu_1310_p3));
    sub_ln1192_9_fu_1333_p2 <= std_logic_vector(unsigned(sub_ln1192_8_fu_1317_p2) - unsigned(sext_ln1192_8_fu_1329_p1));
    sub_ln1192_fu_733_p2 <= std_logic_vector(signed(grp_fu_1449_p3) - signed(rhs_V_4_fu_726_p3));
    tmp_1_fu_189_p4 <= x_V_in_sig(111 downto 105);
    tmp_2_fu_203_p4 <= x_V_in_sig(20 downto 14);
    trunc_ln1117_fu_185_p1 <= x_V_in_sig(7 - 1 downto 0);

    x_V_ap_vld_in_sig_assign_proc : process(x_V_ap_vld, x_V_ap_vld_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_ap_vld_in_sig <= x_V_ap_vld;
        else 
            x_V_ap_vld_in_sig <= x_V_ap_vld_preg;
        end if; 
    end process;


    x_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, x_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            x_V_blk_n <= x_V_ap_vld;
        else 
            x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    x_V_in_sig_assign_proc : process(x_V_ap_vld, x_V, x_V_preg)
    begin
        if ((x_V_ap_vld = ap_const_logic_1)) then 
            x_V_in_sig <= x_V;
        else 
            x_V_in_sig <= x_V_preg;
        end if; 
    end process;

    y_0_V <= ret_V_5_fu_1293_p2(21 downto 15);

    y_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_0_V_ap_vld <= ap_const_logic_1;
        else 
            y_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_1_V <= trunc_ln708_1_reg_1717;

    y_1_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_1_V_ap_vld <= ap_const_logic_1;
        else 
            y_1_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_2_V <= ret_V_8_fu_1358_p2(21 downto 15);

    y_2_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_2_V_ap_vld <= ap_const_logic_1;
        else 
            y_2_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_3_V <= trunc_ln708_3_reg_1742;

    y_3_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_3_V_ap_vld <= ap_const_logic_1;
        else 
            y_3_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_4_V <= trunc_ln708_4_reg_1747;

    y_4_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            y_4_V_ap_vld <= ap_const_logic_1;
        else 
            y_4_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
