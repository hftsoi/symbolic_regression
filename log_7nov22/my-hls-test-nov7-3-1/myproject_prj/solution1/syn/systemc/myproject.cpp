// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myproject.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myproject::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myproject::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> myproject::ap_ST_fsm_state1 = "1";
const sc_lv<32> myproject::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<48> myproject::ap_const_lv48_0 = "000000000000000000000000000000000000000000000000";
const sc_lv<3> myproject::ap_const_lv3_6 = "110";
const sc_lv<32> myproject::ap_const_lv32_2D = "101101";
const sc_lv<32> myproject::ap_const_lv32_2F = "101111";
const sc_lv<32> myproject::ap_const_lv32_6 = "110";
const sc_lv<32> myproject::ap_const_lv32_8 = "1000";
const sc_lv<32> myproject::ap_const_lv32_2A = "101010";
const sc_lv<32> myproject::ap_const_lv32_2C = "101100";
const sc_lv<2> myproject::ap_const_lv2_0 = "00";
const sc_lv<8> myproject::ap_const_lv8_0 = "00000000";
const sc_lv<5> myproject::ap_const_lv5_0 = "00000";
const sc_lv<9> myproject::ap_const_lv9_140 = "101000000";
const sc_lv<4> myproject::ap_const_lv4_0 = "0000";
const sc_lv<6> myproject::ap_const_lv6_0 = "000000";
const sc_lv<32> myproject::ap_const_lv32_A = "1010";
const sc_lv<3> myproject::ap_const_lv3_4 = "100";
const sc_lv<32> myproject::ap_const_lv32_9 = "1001";
const sc_lv<32> myproject::ap_const_lv32_B = "1011";
const sc_lv<9> myproject::ap_const_lv9_0 = "000000000";
const sc_lv<9> myproject::ap_const_lv9_180 = "110000000";
const bool myproject::ap_const_boolean_1 = true;

myproject::myproject(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1192_fu_372_p2);
    sensitive << ( sub_ln1192_3_fu_348_p2 );
    sensitive << ( sext_ln1192_4_fu_368_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_p_Val2_6_fu_158_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_r_V_1_fu_253_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sext_ln1116_fu_168_p1 );

    SC_METHOD(thread_r_V_1_fu_253_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sext_ln1116_1_fu_249_p1 );

    SC_METHOD(thread_r_V_1_fu_253_p2);
    sensitive << ( r_V_1_fu_253_p0 );
    sensitive << ( r_V_1_fu_253_p1 );

    SC_METHOD(thread_r_V_2_fu_330_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sext_ln700_fu_316_p1 );

    SC_METHOD(thread_r_V_2_fu_330_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sext_ln700_fu_316_p1 );

    SC_METHOD(thread_r_V_2_fu_330_p2);
    sensitive << ( r_V_2_fu_330_p0 );
    sensitive << ( r_V_2_fu_330_p1 );

    SC_METHOD(thread_r_V_3_fu_354_p2);
    sensitive << ( sext_ln1118_fu_326_p1 );

    SC_METHOD(thread_r_V_4_fu_395_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sext_ln1116_1_fu_249_p1 );

    SC_METHOD(thread_r_V_4_fu_395_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sext_ln1116_1_fu_249_p1 );

    SC_METHOD(thread_r_V_4_fu_395_p2);
    sensitive << ( r_V_4_fu_395_p0 );
    sensitive << ( r_V_4_fu_395_p1 );

    SC_METHOD(thread_r_V_fu_172_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sext_ln1116_fu_168_p1 );

    SC_METHOD(thread_r_V_fu_172_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_fu_144_p4 );

    SC_METHOD(thread_r_V_fu_172_p2);
    sensitive << ( r_V_fu_172_p0 );
    sensitive << ( r_V_fu_172_p1 );

    SC_METHOD(thread_ret_V_1_fu_208_p2);
    sensitive << ( sext_ln703_fu_192_p1 );
    sensitive << ( sext_ln728_fu_204_p1 );

    SC_METHOD(thread_ret_V_2_fu_232_p2);
    sensitive << ( sub_ln1192_fu_226_p2 );

    SC_METHOD(thread_ret_V_3_fu_378_p2);
    sensitive << ( add_ln1192_fu_372_p2 );

    SC_METHOD(thread_ret_V_4_fu_409_p2);
    sensitive << ( rhs_V_7_fu_401_p3 );

    SC_METHOD(thread_ret_V_5_fu_427_p2);
    sensitive << ( ret_V_4_fu_409_p2 );
    sensitive << ( sext_ln728_1_fu_423_p1 );

    SC_METHOD(thread_ret_V_6_fu_455_p2);
    sensitive << ( sub_ln1192_4_fu_449_p2 );

    SC_METHOD(thread_ret_V_fu_186_p2);
    sensitive << ( rhs_V_fu_178_p3 );

    SC_METHOD(thread_rhs_V_10_fu_259_p3);
    sensitive << ( r_V_1_fu_253_p2 );

    SC_METHOD(thread_rhs_V_1_fu_196_p3);
    sensitive << ( tmp_fu_134_p4 );

    SC_METHOD(thread_rhs_V_2_fu_214_p3);
    sensitive << ( tmp_1_fu_144_p4 );

    SC_METHOD(thread_rhs_V_4_fu_271_p3);
    sensitive << ( p_Val2_6_fu_158_p4 );

    SC_METHOD(thread_rhs_V_5_fu_336_p3);
    sensitive << ( r_V_2_fu_330_p2 );

    SC_METHOD(thread_rhs_V_6_fu_360_p3);
    sensitive << ( r_V_3_fu_354_p2 );

    SC_METHOD(thread_rhs_V_7_fu_401_p3);
    sensitive << ( r_V_4_fu_395_p2 );

    SC_METHOD(thread_rhs_V_8_fu_415_p3);
    sensitive << ( tmp_fu_134_p4 );

    SC_METHOD(thread_rhs_V_9_fu_437_p3);
    sensitive << ( tmp_3_fu_306_p4 );

    SC_METHOD(thread_rhs_V_fu_178_p3);
    sensitive << ( r_V_fu_172_p2 );

    SC_METHOD(thread_sext_ln1116_1_fu_249_p1);
    sensitive << ( p_Val2_6_fu_158_p4 );

    SC_METHOD(thread_sext_ln1116_fu_168_p1);
    sensitive << ( tmp_fu_134_p4 );

    SC_METHOD(thread_sext_ln1118_fu_326_p1);
    sensitive << ( tmp_3_fu_306_p4 );

    SC_METHOD(thread_sext_ln1192_1_fu_267_p1);
    sensitive << ( rhs_V_10_fu_259_p3 );

    SC_METHOD(thread_sext_ln1192_2_fu_279_p1);
    sensitive << ( rhs_V_4_fu_271_p3 );

    SC_METHOD(thread_sext_ln1192_3_fu_344_p1);
    sensitive << ( rhs_V_5_fu_336_p3 );

    SC_METHOD(thread_sext_ln1192_4_fu_368_p1);
    sensitive << ( rhs_V_6_fu_360_p3 );

    SC_METHOD(thread_sext_ln1192_5_fu_433_p1);
    sensitive << ( ret_V_5_fu_427_p2 );

    SC_METHOD(thread_sext_ln1192_6_fu_445_p1);
    sensitive << ( rhs_V_9_fu_437_p3 );

    SC_METHOD(thread_sext_ln1192_fu_222_p1);
    sensitive << ( rhs_V_2_fu_214_p3 );

    SC_METHOD(thread_sext_ln700_fu_316_p1);
    sensitive << ( tmp_3_fu_306_p4 );

    SC_METHOD(thread_sext_ln703_fu_192_p1);
    sensitive << ( ret_V_fu_186_p2 );

    SC_METHOD(thread_sext_ln728_1_fu_423_p1);
    sensitive << ( rhs_V_8_fu_415_p3 );

    SC_METHOD(thread_sext_ln728_fu_204_p1);
    sensitive << ( rhs_V_1_fu_196_p3 );

    SC_METHOD(thread_sub_ln1192_1_fu_283_p2);
    sensitive << ( sext_ln1192_1_fu_267_p1 );
    sensitive << ( sext_ln1192_2_fu_279_p1 );

    SC_METHOD(thread_sub_ln1192_2_fu_320_p2);
    sensitive << ( rhs_V_4_fu_271_p3 );

    SC_METHOD(thread_sub_ln1192_3_fu_348_p2);
    sensitive << ( sub_ln1192_2_fu_320_p2 );
    sensitive << ( sext_ln1192_3_fu_344_p1 );

    SC_METHOD(thread_sub_ln1192_4_fu_449_p2);
    sensitive << ( sext_ln1192_5_fu_433_p1 );
    sensitive << ( sext_ln1192_6_fu_445_p1 );

    SC_METHOD(thread_sub_ln1192_fu_226_p2);
    sensitive << ( ret_V_1_fu_208_p2 );
    sensitive << ( sext_ln1192_fu_222_p1 );

    SC_METHOD(thread_tmp_1_fu_144_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_tmp_3_fu_306_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_tmp_fu_134_p4);
    sensitive << ( x_V_in_sig );

    SC_METHOD(thread_trunc_ln708_4_fu_289_p4);
    sensitive << ( sub_ln1192_1_fu_283_p2 );

    SC_METHOD(thread_x_V_ap_vld_in_sig);
    sensitive << ( x_V_ap_vld );
    sensitive << ( x_V_ap_vld_preg );

    SC_METHOD(thread_x_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld );

    SC_METHOD(thread_x_V_in_sig);
    sensitive << ( x_V );
    sensitive << ( x_V_preg );
    sensitive << ( x_V_ap_vld );

    SC_METHOD(thread_y_0_V);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );
    sensitive << ( ret_V_2_fu_232_p2 );

    SC_METHOD(thread_y_0_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_y_1_V);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );
    sensitive << ( trunc_ln708_4_fu_289_p4 );

    SC_METHOD(thread_y_1_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_y_2_V);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );
    sensitive << ( ret_V_3_fu_378_p2 );

    SC_METHOD(thread_y_2_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_y_3_V);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );
    sensitive << ( ret_V_6_fu_455_p2 );

    SC_METHOD(thread_y_3_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_y_4_V);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_y_4_V_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x_V_ap_vld_in_sig );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "1";
    x_V_preg = "000000000000000000000000000000000000000000000000";
    x_V_ap_vld_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myproject_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_V, "(port)x_V");
    sc_trace(mVcdFile, x_V_ap_vld, "(port)x_V_ap_vld");
    sc_trace(mVcdFile, y_0_V, "(port)y_0_V");
    sc_trace(mVcdFile, y_0_V_ap_vld, "(port)y_0_V_ap_vld");
    sc_trace(mVcdFile, y_1_V, "(port)y_1_V");
    sc_trace(mVcdFile, y_1_V_ap_vld, "(port)y_1_V_ap_vld");
    sc_trace(mVcdFile, y_2_V, "(port)y_2_V");
    sc_trace(mVcdFile, y_2_V_ap_vld, "(port)y_2_V_ap_vld");
    sc_trace(mVcdFile, y_3_V, "(port)y_3_V");
    sc_trace(mVcdFile, y_3_V_ap_vld, "(port)y_3_V_ap_vld");
    sc_trace(mVcdFile, y_4_V, "(port)y_4_V");
    sc_trace(mVcdFile, y_4_V_ap_vld, "(port)y_4_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, x_V_preg, "x_V_preg");
    sc_trace(mVcdFile, x_V_in_sig, "x_V_in_sig");
    sc_trace(mVcdFile, x_V_ap_vld_preg, "x_V_ap_vld_preg");
    sc_trace(mVcdFile, x_V_ap_vld_in_sig, "x_V_ap_vld_in_sig");
    sc_trace(mVcdFile, x_V_blk_n, "x_V_blk_n");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_1_fu_144_p4, "tmp_1_fu_144_p4");
    sc_trace(mVcdFile, tmp_fu_134_p4, "tmp_fu_134_p4");
    sc_trace(mVcdFile, r_V_fu_172_p0, "r_V_fu_172_p0");
    sc_trace(mVcdFile, sext_ln1116_fu_168_p1, "sext_ln1116_fu_168_p1");
    sc_trace(mVcdFile, r_V_fu_172_p1, "r_V_fu_172_p1");
    sc_trace(mVcdFile, r_V_fu_172_p2, "r_V_fu_172_p2");
    sc_trace(mVcdFile, rhs_V_fu_178_p3, "rhs_V_fu_178_p3");
    sc_trace(mVcdFile, ret_V_fu_186_p2, "ret_V_fu_186_p2");
    sc_trace(mVcdFile, rhs_V_1_fu_196_p3, "rhs_V_1_fu_196_p3");
    sc_trace(mVcdFile, sext_ln703_fu_192_p1, "sext_ln703_fu_192_p1");
    sc_trace(mVcdFile, sext_ln728_fu_204_p1, "sext_ln728_fu_204_p1");
    sc_trace(mVcdFile, rhs_V_2_fu_214_p3, "rhs_V_2_fu_214_p3");
    sc_trace(mVcdFile, ret_V_1_fu_208_p2, "ret_V_1_fu_208_p2");
    sc_trace(mVcdFile, sext_ln1192_fu_222_p1, "sext_ln1192_fu_222_p1");
    sc_trace(mVcdFile, sub_ln1192_fu_226_p2, "sub_ln1192_fu_226_p2");
    sc_trace(mVcdFile, ret_V_2_fu_232_p2, "ret_V_2_fu_232_p2");
    sc_trace(mVcdFile, p_Val2_6_fu_158_p4, "p_Val2_6_fu_158_p4");
    sc_trace(mVcdFile, r_V_1_fu_253_p0, "r_V_1_fu_253_p0");
    sc_trace(mVcdFile, r_V_1_fu_253_p1, "r_V_1_fu_253_p1");
    sc_trace(mVcdFile, sext_ln1116_1_fu_249_p1, "sext_ln1116_1_fu_249_p1");
    sc_trace(mVcdFile, r_V_1_fu_253_p2, "r_V_1_fu_253_p2");
    sc_trace(mVcdFile, rhs_V_10_fu_259_p3, "rhs_V_10_fu_259_p3");
    sc_trace(mVcdFile, rhs_V_4_fu_271_p3, "rhs_V_4_fu_271_p3");
    sc_trace(mVcdFile, sext_ln1192_1_fu_267_p1, "sext_ln1192_1_fu_267_p1");
    sc_trace(mVcdFile, sext_ln1192_2_fu_279_p1, "sext_ln1192_2_fu_279_p1");
    sc_trace(mVcdFile, sub_ln1192_1_fu_283_p2, "sub_ln1192_1_fu_283_p2");
    sc_trace(mVcdFile, trunc_ln708_4_fu_289_p4, "trunc_ln708_4_fu_289_p4");
    sc_trace(mVcdFile, tmp_3_fu_306_p4, "tmp_3_fu_306_p4");
    sc_trace(mVcdFile, r_V_2_fu_330_p0, "r_V_2_fu_330_p0");
    sc_trace(mVcdFile, sext_ln700_fu_316_p1, "sext_ln700_fu_316_p1");
    sc_trace(mVcdFile, r_V_2_fu_330_p1, "r_V_2_fu_330_p1");
    sc_trace(mVcdFile, r_V_2_fu_330_p2, "r_V_2_fu_330_p2");
    sc_trace(mVcdFile, rhs_V_5_fu_336_p3, "rhs_V_5_fu_336_p3");
    sc_trace(mVcdFile, sub_ln1192_2_fu_320_p2, "sub_ln1192_2_fu_320_p2");
    sc_trace(mVcdFile, sext_ln1192_3_fu_344_p1, "sext_ln1192_3_fu_344_p1");
    sc_trace(mVcdFile, sext_ln1118_fu_326_p1, "sext_ln1118_fu_326_p1");
    sc_trace(mVcdFile, r_V_3_fu_354_p2, "r_V_3_fu_354_p2");
    sc_trace(mVcdFile, rhs_V_6_fu_360_p3, "rhs_V_6_fu_360_p3");
    sc_trace(mVcdFile, sub_ln1192_3_fu_348_p2, "sub_ln1192_3_fu_348_p2");
    sc_trace(mVcdFile, sext_ln1192_4_fu_368_p1, "sext_ln1192_4_fu_368_p1");
    sc_trace(mVcdFile, add_ln1192_fu_372_p2, "add_ln1192_fu_372_p2");
    sc_trace(mVcdFile, ret_V_3_fu_378_p2, "ret_V_3_fu_378_p2");
    sc_trace(mVcdFile, r_V_4_fu_395_p0, "r_V_4_fu_395_p0");
    sc_trace(mVcdFile, r_V_4_fu_395_p1, "r_V_4_fu_395_p1");
    sc_trace(mVcdFile, r_V_4_fu_395_p2, "r_V_4_fu_395_p2");
    sc_trace(mVcdFile, rhs_V_7_fu_401_p3, "rhs_V_7_fu_401_p3");
    sc_trace(mVcdFile, rhs_V_8_fu_415_p3, "rhs_V_8_fu_415_p3");
    sc_trace(mVcdFile, ret_V_4_fu_409_p2, "ret_V_4_fu_409_p2");
    sc_trace(mVcdFile, sext_ln728_1_fu_423_p1, "sext_ln728_1_fu_423_p1");
    sc_trace(mVcdFile, ret_V_5_fu_427_p2, "ret_V_5_fu_427_p2");
    sc_trace(mVcdFile, rhs_V_9_fu_437_p3, "rhs_V_9_fu_437_p3");
    sc_trace(mVcdFile, sext_ln1192_5_fu_433_p1, "sext_ln1192_5_fu_433_p1");
    sc_trace(mVcdFile, sext_ln1192_6_fu_445_p1, "sext_ln1192_6_fu_445_p1");
    sc_trace(mVcdFile, sub_ln1192_4_fu_449_p2, "sub_ln1192_4_fu_449_p2");
    sc_trace(mVcdFile, ret_V_6_fu_455_p2, "ret_V_6_fu_455_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("myproject.hdltvin.dat");
    mHdltvoutHandle.open("myproject.hdltvout.dat");
}

myproject::~myproject() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void myproject::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_V_ap_vld_preg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())))) {
            x_V_ap_vld_preg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())))) {
            x_V_ap_vld_preg = x_V_ap_vld.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        x_V_preg = ap_const_lv48_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())))) {
            x_V_preg = x_V.read();
        }
    }
}

void myproject::thread_add_ln1192_fu_372_p2() {
    add_ln1192_fu_372_p2 = (!sub_ln1192_3_fu_348_p2.read().is_01() || !sext_ln1192_4_fu_368_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(sub_ln1192_3_fu_348_p2.read()) + sc_bigint<9>(sext_ln1192_4_fu_368_p1.read()));
}

void myproject::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void myproject::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read()));
}

void myproject::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void myproject::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void myproject::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void myproject::thread_p_Val2_6_fu_158_p4() {
    p_Val2_6_fu_158_p4 = x_V_in_sig.read().range(44, 42);
}

void myproject::thread_r_V_1_fu_253_p0() {
    r_V_1_fu_253_p0 =  (sc_lv<3>) (sext_ln1116_fu_168_p1.read());
}

void myproject::thread_r_V_1_fu_253_p1() {
    r_V_1_fu_253_p1 =  (sc_lv<3>) (sext_ln1116_1_fu_249_p1.read());
}

void myproject::thread_r_V_1_fu_253_p2() {
    r_V_1_fu_253_p2 = (!r_V_1_fu_253_p0.read().is_01() || !r_V_1_fu_253_p1.read().is_01())? sc_lv<6>(): sc_bigint<3>(r_V_1_fu_253_p0.read()) * sc_bigint<3>(r_V_1_fu_253_p1.read());
}

void myproject::thread_r_V_2_fu_330_p0() {
    r_V_2_fu_330_p0 =  (sc_lv<3>) (sext_ln700_fu_316_p1.read());
}

void myproject::thread_r_V_2_fu_330_p1() {
    r_V_2_fu_330_p1 =  (sc_lv<3>) (sext_ln700_fu_316_p1.read());
}

void myproject::thread_r_V_2_fu_330_p2() {
    r_V_2_fu_330_p2 = (!r_V_2_fu_330_p0.read().is_01() || !r_V_2_fu_330_p1.read().is_01())? sc_lv<6>(): sc_bigint<3>(r_V_2_fu_330_p0.read()) * sc_bigint<3>(r_V_2_fu_330_p1.read());
}

void myproject::thread_r_V_3_fu_354_p2() {
    r_V_3_fu_354_p2 = (!ap_const_lv4_0.is_01() || !sext_ln1118_fu_326_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_0) - sc_bigint<4>(sext_ln1118_fu_326_p1.read()));
}

void myproject::thread_r_V_4_fu_395_p0() {
    r_V_4_fu_395_p0 =  (sc_lv<3>) (sext_ln1116_1_fu_249_p1.read());
}

void myproject::thread_r_V_4_fu_395_p1() {
    r_V_4_fu_395_p1 =  (sc_lv<3>) (sext_ln1116_1_fu_249_p1.read());
}

void myproject::thread_r_V_4_fu_395_p2() {
    r_V_4_fu_395_p2 = (!r_V_4_fu_395_p0.read().is_01() || !r_V_4_fu_395_p1.read().is_01())? sc_lv<6>(): sc_bigint<3>(r_V_4_fu_395_p0.read()) * sc_bigint<3>(r_V_4_fu_395_p1.read());
}

void myproject::thread_r_V_fu_172_p0() {
    r_V_fu_172_p0 =  (sc_lv<3>) (sext_ln1116_fu_168_p1.read());
}

void myproject::thread_r_V_fu_172_p1() {
    r_V_fu_172_p1 = tmp_1_fu_144_p4.read();
}

void myproject::thread_r_V_fu_172_p2() {
    r_V_fu_172_p2 = (!r_V_fu_172_p0.read().is_01() || !r_V_fu_172_p1.read().is_01())? sc_lv<6>(): sc_bigint<3>(r_V_fu_172_p0.read()) * sc_bigint<3>(r_V_fu_172_p1.read());
}

void myproject::thread_ret_V_1_fu_208_p2() {
    ret_V_1_fu_208_p2 = (!sext_ln703_fu_192_p1.read().is_01() || !sext_ln728_fu_204_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(sext_ln703_fu_192_p1.read()) + sc_bigint<9>(sext_ln728_fu_204_p1.read()));
}

void myproject::thread_ret_V_2_fu_232_p2() {
    ret_V_2_fu_232_p2 = (!sub_ln1192_fu_226_p2.read().is_01() || !ap_const_lv9_140.is_01())? sc_lv<9>(): (sc_biguint<9>(sub_ln1192_fu_226_p2.read()) + sc_bigint<9>(ap_const_lv9_140));
}

void myproject::thread_ret_V_3_fu_378_p2() {
    ret_V_3_fu_378_p2 = (!add_ln1192_fu_372_p2.read().is_01() || !ap_const_lv9_180.is_01())? sc_lv<9>(): (sc_biguint<9>(add_ln1192_fu_372_p2.read()) + sc_bigint<9>(ap_const_lv9_180));
}

void myproject::thread_ret_V_4_fu_409_p2() {
    ret_V_4_fu_409_p2 = (!ap_const_lv8_0.is_01() || !rhs_V_7_fu_401_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(rhs_V_7_fu_401_p3.read()));
}

void myproject::thread_ret_V_5_fu_427_p2() {
    ret_V_5_fu_427_p2 = (!ret_V_4_fu_409_p2.read().is_01() || !sext_ln728_1_fu_423_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ret_V_4_fu_409_p2.read()) - sc_bigint<8>(sext_ln728_1_fu_423_p1.read()));
}

void myproject::thread_ret_V_6_fu_455_p2() {
    ret_V_6_fu_455_p2 = (!sub_ln1192_4_fu_449_p2.read().is_01() || !ap_const_lv9_180.is_01())? sc_lv<9>(): (sc_biguint<9>(sub_ln1192_4_fu_449_p2.read()) + sc_bigint<9>(ap_const_lv9_180));
}

void myproject::thread_ret_V_fu_186_p2() {
    ret_V_fu_186_p2 = (!ap_const_lv8_0.is_01() || !rhs_V_fu_178_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(rhs_V_fu_178_p3.read()));
}

void myproject::thread_rhs_V_10_fu_259_p3() {
    rhs_V_10_fu_259_p3 = esl_concat<6,4>(r_V_1_fu_253_p2.read(), ap_const_lv4_0);
}

void myproject::thread_rhs_V_1_fu_196_p3() {
    rhs_V_1_fu_196_p3 = esl_concat<3,5>(tmp_fu_134_p4.read(), ap_const_lv5_0);
}

void myproject::thread_rhs_V_2_fu_214_p3() {
    rhs_V_2_fu_214_p3 = esl_concat<3,5>(tmp_1_fu_144_p4.read(), ap_const_lv5_0);
}

void myproject::thread_rhs_V_4_fu_271_p3() {
    rhs_V_4_fu_271_p3 = esl_concat<3,6>(p_Val2_6_fu_158_p4.read(), ap_const_lv6_0);
}

void myproject::thread_rhs_V_5_fu_336_p3() {
    rhs_V_5_fu_336_p3 = esl_concat<6,2>(r_V_2_fu_330_p2.read(), ap_const_lv2_0);
}

void myproject::thread_rhs_V_6_fu_360_p3() {
    rhs_V_6_fu_360_p3 = esl_concat<4,4>(r_V_3_fu_354_p2.read(), ap_const_lv4_0);
}

void myproject::thread_rhs_V_7_fu_401_p3() {
    rhs_V_7_fu_401_p3 = esl_concat<6,2>(r_V_4_fu_395_p2.read(), ap_const_lv2_0);
}

void myproject::thread_rhs_V_8_fu_415_p3() {
    rhs_V_8_fu_415_p3 = esl_concat<3,4>(tmp_fu_134_p4.read(), ap_const_lv4_0);
}

void myproject::thread_rhs_V_9_fu_437_p3() {
    rhs_V_9_fu_437_p3 = esl_concat<3,4>(tmp_3_fu_306_p4.read(), ap_const_lv4_0);
}

void myproject::thread_rhs_V_fu_178_p3() {
    rhs_V_fu_178_p3 = esl_concat<6,2>(r_V_fu_172_p2.read(), ap_const_lv2_0);
}

void myproject::thread_sext_ln1116_1_fu_249_p1() {
    sext_ln1116_1_fu_249_p1 = esl_sext<6,3>(p_Val2_6_fu_158_p4.read());
}

void myproject::thread_sext_ln1116_fu_168_p1() {
    sext_ln1116_fu_168_p1 = esl_sext<6,3>(tmp_fu_134_p4.read());
}

void myproject::thread_sext_ln1118_fu_326_p1() {
    sext_ln1118_fu_326_p1 = esl_sext<4,3>(tmp_3_fu_306_p4.read());
}

void myproject::thread_sext_ln1192_1_fu_267_p1() {
    sext_ln1192_1_fu_267_p1 = esl_sext<11,10>(rhs_V_10_fu_259_p3.read());
}

void myproject::thread_sext_ln1192_2_fu_279_p1() {
    sext_ln1192_2_fu_279_p1 = esl_sext<11,9>(rhs_V_4_fu_271_p3.read());
}

void myproject::thread_sext_ln1192_3_fu_344_p1() {
    sext_ln1192_3_fu_344_p1 = esl_sext<9,8>(rhs_V_5_fu_336_p3.read());
}

void myproject::thread_sext_ln1192_4_fu_368_p1() {
    sext_ln1192_4_fu_368_p1 = esl_sext<9,8>(rhs_V_6_fu_360_p3.read());
}

void myproject::thread_sext_ln1192_5_fu_433_p1() {
    sext_ln1192_5_fu_433_p1 = esl_sext<9,8>(ret_V_5_fu_427_p2.read());
}

void myproject::thread_sext_ln1192_6_fu_445_p1() {
    sext_ln1192_6_fu_445_p1 = esl_sext<9,7>(rhs_V_9_fu_437_p3.read());
}

void myproject::thread_sext_ln1192_fu_222_p1() {
    sext_ln1192_fu_222_p1 = esl_sext<9,8>(rhs_V_2_fu_214_p3.read());
}

void myproject::thread_sext_ln700_fu_316_p1() {
    sext_ln700_fu_316_p1 = esl_sext<6,3>(tmp_3_fu_306_p4.read());
}

void myproject::thread_sext_ln703_fu_192_p1() {
    sext_ln703_fu_192_p1 = esl_sext<9,8>(ret_V_fu_186_p2.read());
}

void myproject::thread_sext_ln728_1_fu_423_p1() {
    sext_ln728_1_fu_423_p1 = esl_sext<8,7>(rhs_V_8_fu_415_p3.read());
}

void myproject::thread_sext_ln728_fu_204_p1() {
    sext_ln728_fu_204_p1 = esl_sext<9,8>(rhs_V_1_fu_196_p3.read());
}

void myproject::thread_sub_ln1192_1_fu_283_p2() {
    sub_ln1192_1_fu_283_p2 = (!sext_ln1192_1_fu_267_p1.read().is_01() || !sext_ln1192_2_fu_279_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(sext_ln1192_1_fu_267_p1.read()) - sc_bigint<11>(sext_ln1192_2_fu_279_p1.read()));
}

void myproject::thread_sub_ln1192_2_fu_320_p2() {
    sub_ln1192_2_fu_320_p2 = (!ap_const_lv9_0.is_01() || !rhs_V_4_fu_271_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_bigint<9>(rhs_V_4_fu_271_p3.read()));
}

void myproject::thread_sub_ln1192_3_fu_348_p2() {
    sub_ln1192_3_fu_348_p2 = (!sub_ln1192_2_fu_320_p2.read().is_01() || !sext_ln1192_3_fu_344_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(sub_ln1192_2_fu_320_p2.read()) - sc_bigint<9>(sext_ln1192_3_fu_344_p1.read()));
}

void myproject::thread_sub_ln1192_4_fu_449_p2() {
    sub_ln1192_4_fu_449_p2 = (!sext_ln1192_5_fu_433_p1.read().is_01() || !sext_ln1192_6_fu_445_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(sext_ln1192_5_fu_433_p1.read()) - sc_bigint<9>(sext_ln1192_6_fu_445_p1.read()));
}

void myproject::thread_sub_ln1192_fu_226_p2() {
    sub_ln1192_fu_226_p2 = (!ret_V_1_fu_208_p2.read().is_01() || !sext_ln1192_fu_222_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ret_V_1_fu_208_p2.read()) - sc_bigint<9>(sext_ln1192_fu_222_p1.read()));
}

void myproject::thread_tmp_1_fu_144_p4() {
    tmp_1_fu_144_p4 = x_V_in_sig.read().range(8, 6);
}

void myproject::thread_tmp_3_fu_306_p4() {
    tmp_3_fu_306_p4 = x_V_in_sig.read().range(11, 9);
}

void myproject::thread_tmp_fu_134_p4() {
    tmp_fu_134_p4 = x_V_in_sig.read().range(47, 45);
}

void myproject::thread_trunc_ln708_4_fu_289_p4() {
    trunc_ln708_4_fu_289_p4 = sub_ln1192_1_fu_283_p2.read().range(10, 8);
}

void myproject::thread_x_V_ap_vld_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read())) {
        x_V_ap_vld_in_sig = x_V_ap_vld.read();
    } else {
        x_V_ap_vld_in_sig = x_V_ap_vld_preg.read();
    }
}

void myproject::thread_x_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_V_blk_n = x_V_ap_vld.read();
    } else {
        x_V_blk_n = ap_const_logic_1;
    }
}

void myproject::thread_x_V_in_sig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, x_V_ap_vld.read())) {
        x_V_in_sig = x_V.read();
    } else {
        x_V_in_sig = x_V_preg.read();
    }
}

void myproject::thread_y_0_V() {
    y_0_V = ret_V_2_fu_232_p2.read().range(8, 6);
}

void myproject::thread_y_0_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())))) {
        y_0_V_ap_vld = ap_const_logic_1;
    } else {
        y_0_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_1_V() {
    y_1_V = (trunc_ln708_4_fu_289_p4.read() ^ ap_const_lv3_4);
}

void myproject::thread_y_1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())))) {
        y_1_V_ap_vld = ap_const_logic_1;
    } else {
        y_1_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_2_V() {
    y_2_V = ret_V_3_fu_378_p2.read().range(8, 6);
}

void myproject::thread_y_2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())))) {
        y_2_V_ap_vld = ap_const_logic_1;
    } else {
        y_2_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_3_V() {
    y_3_V = ret_V_6_fu_455_p2.read().range(8, 6);
}

void myproject::thread_y_3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())))) {
        y_3_V_ap_vld = ap_const_logic_1;
    } else {
        y_3_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_y_4_V() {
    y_4_V = ap_const_lv3_6;
}

void myproject::thread_y_4_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_V_ap_vld_in_sig.read())))) {
        y_4_V_ap_vld = ap_const_logic_1;
    } else {
        y_4_V_ap_vld = ap_const_logic_0;
    }
}

void myproject::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void myproject::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V\" :  \"" << x_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x_V_ap_vld\" :  \"" << x_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_0_V\" :  \"" << y_0_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_0_V_ap_vld\" :  \"" << y_0_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_1_V\" :  \"" << y_1_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_1_V_ap_vld\" :  \"" << y_1_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_2_V\" :  \"" << y_2_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_2_V_ap_vld\" :  \"" << y_2_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_3_V\" :  \"" << y_3_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_3_V_ap_vld\" :  \"" << y_3_V_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_4_V\" :  \"" << y_4_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"y_4_V_ap_vld\" :  \"" << y_4_V_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

