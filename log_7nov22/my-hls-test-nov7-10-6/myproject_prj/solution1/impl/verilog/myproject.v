// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.233000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=12,HLS_SYN_FF=609,HLS_SYN_LUT=1405,HLS_VERSION=2020_1}" *)

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V_ap_vld,
        x_V,
        y_0_V,
        y_0_V_ap_vld,
        y_1_V,
        y_1_V_ap_vld,
        y_2_V,
        y_2_V_ap_vld,
        y_3_V,
        y_3_V_ap_vld,
        y_4_V,
        y_4_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   x_V_ap_vld;
input  [159:0] x_V;
output  [9:0] y_0_V;
output   y_0_V_ap_vld;
output  [9:0] y_1_V;
output   y_1_V_ap_vld;
output  [9:0] y_2_V;
output   y_2_V_ap_vld;
output  [9:0] y_3_V;
output   y_3_V_ap_vld;
output  [9:0] y_4_V;
output   y_4_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg y_0_V_ap_vld;
reg y_1_V_ap_vld;
reg y_2_V_ap_vld;
reg y_3_V_ap_vld;
reg y_4_V_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    x_V_ap_vld_in_sig;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [159:0] x_V_preg;
reg   [159:0] x_V_in_sig;
reg    x_V_ap_vld_preg;
reg    x_V_blk_n;
wire    ap_block_pp0_stage0;
wire  signed [9:0] tmp_1_fu_175_p4;
reg  signed [9:0] tmp_1_reg_982;
reg  signed [9:0] tmp_1_reg_982_pp0_iter1_reg;
reg  signed [9:0] tmp_2_reg_992;
reg  signed [9:0] tmp_2_reg_992_pp0_iter1_reg;
wire  signed [17:0] sext_ln1118_1_fu_199_p1;
reg  signed [17:0] sext_ln1118_1_reg_1000;
wire   [17:0] mul_ln1192_fu_203_p2;
reg   [17:0] mul_ln1192_reg_1006;
wire  signed [9:0] p_Val2_5_fu_209_p4;
reg  signed [9:0] p_Val2_5_reg_1011;
reg  signed [9:0] p_Val2_5_reg_1011_pp0_iter1_reg;
reg  signed [9:0] tmp_4_reg_1022;
wire  signed [10:0] r_V_14_fu_237_p3;
reg  signed [10:0] r_V_14_reg_1028;
reg  signed [10:0] r_V_14_reg_1028_pp0_iter1_reg;
wire  signed [20:0] r_V_15_fu_895_p2;
reg  signed [20:0] r_V_15_reg_1033;
wire   [19:0] r_V_4_fu_249_p2;
reg  signed [19:0] r_V_4_reg_1038;
wire   [17:0] trunc_ln1192_1_fu_255_p1;
reg   [17:0] trunc_ln1192_1_reg_1043;
wire  signed [9:0] tmp_5_fu_258_p4;
reg  signed [9:0] tmp_5_reg_1048;
reg  signed [9:0] tmp_5_reg_1048_pp0_iter1_reg;
wire   [19:0] r_V_8_fu_272_p2;
reg  signed [19:0] r_V_8_reg_1057;
wire  signed [21:0] grp_fu_902_p3;
reg  signed [21:0] add_ln1192_reg_1062;
wire   [17:0] trunc_ln1192_fu_324_p1;
reg   [17:0] trunc_ln1192_reg_1067;
wire  signed [17:0] grp_fu_910_p3;
reg  signed [17:0] mul_ln1192_2_reg_1072;
wire  signed [17:0] mul_ln1192_3_fu_918_p2;
reg  signed [17:0] mul_ln1192_3_reg_1077;
wire   [25:0] add_ln1192_5_fu_392_p2;
reg   [25:0] add_ln1192_5_reg_1082;
wire  signed [17:0] mul_ln1192_6_fu_938_p2;
reg  signed [17:0] mul_ln1192_6_reg_1087;
wire  signed [17:0] mul_ln1192_7_fu_943_p2;
reg  signed [17:0] mul_ln1192_7_reg_1092;
wire   [21:0] sub_ln1192_8_fu_498_p2;
reg   [21:0] sub_ln1192_8_reg_1097;
wire  signed [17:0] mul_ln1192_13_fu_967_p2;
reg  signed [17:0] mul_ln1192_13_reg_1102;
wire   [17:0] mul_ln1192_14_fu_507_p2;
reg   [17:0] mul_ln1192_14_reg_1107;
wire   [17:0] mul_ln1192_15_fu_513_p2;
reg   [17:0] mul_ln1192_15_reg_1112;
reg   [9:0] trunc_ln708_4_reg_1117;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] trunc_ln1117_fu_171_p1;
wire  signed [9:0] mul_ln1192_fu_203_p0;
wire  signed [9:0] mul_ln1192_fu_203_p1;
wire  signed [9:0] r_V_4_fu_249_p0;
wire  signed [19:0] sext_ln1118_4_fu_219_p1;
wire  signed [9:0] r_V_4_fu_249_p1;
wire  signed [9:0] r_V_8_fu_272_p0;
wire  signed [9:0] r_V_8_fu_272_p1;
wire   [17:0] rhs_V_fu_291_p3;
wire  signed [21:0] sext_ln1192_1_fu_298_p1;
wire   [21:0] shl_ln_fu_281_p3;
wire  signed [9:0] r_V_13_fu_311_p0;
wire  signed [19:0] sext_ln1117_fu_278_p1;
wire  signed [9:0] r_V_13_fu_311_p1;
wire  signed [19:0] r_V_13_fu_311_p2;
wire   [11:0] r_V_18_fu_328_p3;
wire  signed [10:0] r_V_2_fu_339_p3;
wire  signed [21:0] mul_ln1192_4_fu_924_p2;
wire  signed [21:0] mul_ln1192_5_fu_931_p2;
wire   [25:0] shl_ln1192_5_fu_372_p3;
wire   [25:0] shl_ln1192_4_fu_359_p3;
wire   [25:0] sub_ln1192_3_fu_379_p2;
wire   [25:0] shl_ln1192_6_fu_385_p3;
wire  signed [11:0] r_V_5_fu_398_p3;
wire  signed [12:0] sext_ln1118_7_fu_405_p1;
wire  signed [12:0] sext_ln1118_3_fu_350_p1;
wire  signed [12:0] r_V_16_fu_413_p2;
wire  signed [9:0] mul_ln1192_9_fu_439_p0;
wire  signed [9:0] mul_ln1192_9_fu_439_p1;
wire  signed [17:0] sext_ln1192_14_fu_426_p1;
wire   [17:0] mul_ln1192_9_fu_439_p2;
wire  signed [21:0] grp_fu_949_p3;
wire   [21:0] shl_ln1192_9_fu_444_p3;
wire  signed [9:0] mul_ln1192_10_fu_457_p0;
wire  signed [17:0] sext_ln1192_fu_288_p1;
wire  signed [9:0] mul_ln1192_10_fu_457_p1;
wire   [17:0] mul_ln1192_10_fu_457_p2;
(* use_dsp48 = "no" *) wire   [21:0] sub_ln1192_7_fu_452_p2;
wire   [21:0] shl_ln1192_s_fu_463_p3;
wire   [11:0] r_V_19_fu_480_p3;
wire  signed [17:0] grp_fu_958_p3;
wire   [21:0] add_ln1192_8_fu_471_p2;
wire   [21:0] shl_ln1192_10_fu_491_p3;
wire  signed [9:0] mul_ln1192_14_fu_507_p0;
wire  signed [9:0] mul_ln1192_14_fu_507_p1;
wire  signed [17:0] sext_ln1118_13_fu_504_p1;
wire  signed [9:0] mul_ln1192_15_fu_513_p0;
wire  signed [17:0] sext_ln1192_13_fu_423_p1;
wire  signed [9:0] mul_ln1192_15_fu_513_p1;
wire  signed [12:0] sext_ln1118_2_fu_335_p1;
wire  signed [12:0] sext_ln700_fu_308_p1;
wire   [24:0] lhs_V_fu_519_p3;
wire   [12:0] r_V_20_fu_527_p2;
wire   [24:0] rhs_V_8_fu_537_p3;
wire  signed [25:0] sext_ln703_fu_533_p1;
wire  signed [25:0] sext_ln728_fu_545_p1;
wire  signed [17:0] grp_fu_973_p3;
wire   [25:0] ret_V_4_fu_549_p2;
wire   [25:0] shl_ln1192_15_fu_555_p3;
wire   [25:0] sub_ln1192_13_fu_562_p2;
wire   [25:0] ret_V_5_fu_568_p2;
wire   [21:0] shl_ln1192_1_fu_584_p3;
(* use_dsp48 = "no" *) wire   [21:0] add_ln1192_1_fu_591_p2;
wire   [21:0] shl_ln1192_2_fu_596_p3;
wire   [20:0] rhs_V_1_fu_609_p3;
wire   [21:0] sub_ln1192_1_fu_603_p2;
wire  signed [21:0] sext_ln1192_5_fu_616_p1;
wire   [21:0] add_ln1192_2_fu_620_p2;
wire   [21:0] shl_ln1192_3_fu_626_p3;
wire   [20:0] rhs_V_2_fu_639_p3;
wire   [21:0] add_ln1192_3_fu_633_p2;
wire  signed [21:0] sext_ln1192_7_fu_646_p1;
wire   [21:0] sub_ln1192_2_fu_650_p2;
wire   [21:0] ret_V_fu_656_p2;
wire   [25:0] shl_ln1192_7_fu_676_p3;
wire   [25:0] add_ln1192_6_fu_683_p2;
wire   [25:0] shl_ln1192_8_fu_688_p3;
wire   [12:0] shl_ln1118_6_fu_701_p3;
wire  signed [13:0] sext_ln1118_9_fu_708_p1;
wire  signed [13:0] sext_ln1118_6_fu_673_p1;
wire   [13:0] r_V_17_fu_712_p2;
wire   [25:0] sub_ln1192_4_fu_695_p2;
wire   [25:0] rhs_V_3_fu_718_p3;
wire   [25:0] sub_ln1192_5_fu_726_p2;
wire   [25:0] ret_V_1_fu_732_p2;
wire  signed [9:0] mul_ln1192_12_fu_752_p1;
wire   [13:0] mul_ln1192_12_fu_752_p2;
wire   [21:0] shl_ln1192_11_fu_758_p3;
wire   [21:0] add_ln1192_9_fu_766_p2;
wire   [21:0] ret_V_2_fu_771_p2;
wire   [21:0] shl_ln1192_12_fu_788_p3;
wire   [21:0] sub_ln1192_9_fu_795_p2;
wire   [21:0] shl_ln1192_13_fu_801_p3;
wire   [21:0] sub_ln1192_10_fu_808_p2;
wire   [21:0] shl_ln1192_14_fu_814_p3;
wire   [18:0] rhs_V_5_fu_827_p3;
wire   [21:0] add_ln1192_11_fu_821_p2;
wire  signed [21:0] sext_ln1192_18_fu_834_p1;
wire   [19:0] rhs_V_6_fu_844_p3;
wire   [21:0] add_ln1192_12_fu_838_p2;
wire  signed [21:0] sext_ln1192_19_fu_851_p1;
wire   [19:0] rhs_V_7_fu_861_p3;
wire   [21:0] sub_ln1192_11_fu_855_p2;
wire  signed [21:0] sext_ln1192_20_fu_868_p1;
wire   [21:0] sub_ln1192_12_fu_872_p2;
wire   [21:0] ret_V_3_fu_878_p2;
wire   [21:0] grp_fu_902_p2;
wire  signed [9:0] grp_fu_910_p0;
wire  signed [11:0] grp_fu_910_p1;
wire  signed [9:0] grp_fu_910_p2;
wire  signed [9:0] mul_ln1192_3_fu_918_p0;
wire  signed [9:0] mul_ln1192_5_fu_931_p0;
wire  signed [21:0] sext_ln1192_11_fu_369_p1;
wire  signed [9:0] mul_ln1192_6_fu_938_p0;
wire  signed [11:0] mul_ln1192_6_fu_938_p1;
wire  signed [17:0] sext_ln1118_8_fu_409_p1;
wire  signed [9:0] mul_ln1192_7_fu_943_p0;
wire  signed [9:0] grp_fu_949_p0;
wire   [21:0] grp_fu_949_p2;
wire  signed [9:0] grp_fu_958_p0;
wire  signed [12:0] sext_ln1118_11_fu_477_p1;
wire  signed [11:0] grp_fu_958_p1;
wire  signed [12:0] sext_ln1118_12_fu_487_p1;
wire  signed [9:0] grp_fu_958_p2;
wire  signed [9:0] mul_ln1192_13_fu_967_p0;
wire  signed [11:0] mul_ln1192_13_fu_967_p1;
wire  signed [11:0] grp_fu_973_p0;
wire  signed [9:0] grp_fu_973_p1;
wire  signed [9:0] grp_fu_973_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 x_V_preg = 160'd0;
#0 x_V_ap_vld_preg = 1'b0;
end

myproject_mul_mul_10s_11s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_10s_11s_21_1_1_U1(
    .din0(p_Val2_5_fu_209_p4),
    .din1(r_V_14_fu_237_p3),
    .dout(r_V_15_fu_895_p2)
);

myproject_mac_muladd_10s_20s_22ns_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
myproject_mac_muladd_10s_20s_22ns_22_1_1_U2(
    .din0(tmp_2_reg_992),
    .din1(r_V_13_fu_311_p2),
    .din2(grp_fu_902_p2),
    .dout(grp_fu_902_p3)
);

myproject_am_addmul_10s_12s_10s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
myproject_am_addmul_10s_12s_10s_18_1_1_U3(
    .din0(grp_fu_910_p0),
    .din1(grp_fu_910_p1),
    .din2(grp_fu_910_p2),
    .dout(grp_fu_910_p3)
);

myproject_mul_mul_10s_11s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
myproject_mul_mul_10s_11s_18_1_1_U4(
    .din0(mul_ln1192_3_fu_918_p0),
    .din1(r_V_2_fu_339_p3),
    .dout(mul_ln1192_3_fu_918_p2)
);

myproject_mul_mul_10s_21s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
myproject_mul_mul_10s_21s_22_1_1_U5(
    .din0(tmp_1_reg_982),
    .din1(r_V_15_reg_1033),
    .dout(mul_ln1192_4_fu_924_p2)
);

myproject_mul_mul_10s_20s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 22 ))
myproject_mul_mul_10s_20s_22_1_1_U6(
    .din0(mul_ln1192_5_fu_931_p0),
    .din1(r_V_4_reg_1038),
    .dout(mul_ln1192_5_fu_931_p2)
);

myproject_mul_mul_10s_12s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 18 ))
myproject_mul_mul_10s_12s_18_1_1_U7(
    .din0(mul_ln1192_6_fu_938_p0),
    .din1(mul_ln1192_6_fu_938_p1),
    .dout(mul_ln1192_6_fu_938_p2)
);

myproject_mul_mul_10s_13s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 18 ))
myproject_mul_mul_10s_13s_18_1_1_U8(
    .din0(mul_ln1192_7_fu_943_p0),
    .din1(r_V_16_fu_413_p2),
    .dout(mul_ln1192_7_fu_943_p2)
);

myproject_mac_mul_sub_10s_20s_22ns_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
myproject_mac_mul_sub_10s_20s_22ns_22_1_1_U9(
    .din0(grp_fu_949_p0),
    .din1(r_V_8_reg_1057),
    .din2(grp_fu_949_p2),
    .dout(grp_fu_949_p3)
);

myproject_am_addmul_10s_12s_10s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
myproject_am_addmul_10s_12s_10s_18_1_1_U10(
    .din0(grp_fu_958_p0),
    .din1(grp_fu_958_p1),
    .din2(grp_fu_958_p2),
    .dout(grp_fu_958_p3)
);

myproject_mul_mul_10s_12s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 18 ))
myproject_mul_mul_10s_12s_18_1_1_U11(
    .din0(mul_ln1192_13_fu_967_p0),
    .din1(mul_ln1192_13_fu_967_p1),
    .dout(mul_ln1192_13_fu_967_p2)
);

myproject_am_submul_12s_10s_10s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
myproject_am_submul_12s_10s_10s_18_1_1_U12(
    .din0(grp_fu_973_p0),
    .din1(grp_fu_973_p1),
    .din2(grp_fu_973_p2),
    .dout(grp_fu_973_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_ap_vld_preg <= x_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_preg <= 160'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_preg <= x_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1192_5_reg_1082[25 : 4] <= add_ln1192_5_fu_392_p2[25 : 4];
        mul_ln1192_13_reg_1102 <= mul_ln1192_13_fu_967_p2;
        mul_ln1192_14_reg_1107 <= mul_ln1192_14_fu_507_p2;
        mul_ln1192_15_reg_1112 <= mul_ln1192_15_fu_513_p2;
        mul_ln1192_3_reg_1077 <= mul_ln1192_3_fu_918_p2;
        mul_ln1192_6_reg_1087 <= mul_ln1192_6_fu_938_p2;
        mul_ln1192_7_reg_1092 <= mul_ln1192_7_fu_943_p2;
        mul_ln1192_reg_1006 <= mul_ln1192_fu_203_p2;
        p_Val2_5_reg_1011 <= {{x_V_in_sig[149:140]}};
        p_Val2_5_reg_1011_pp0_iter1_reg <= p_Val2_5_reg_1011;
        r_V_14_reg_1028[10 : 1] <= r_V_14_fu_237_p3[10 : 1];
        r_V_14_reg_1028_pp0_iter1_reg[10 : 1] <= r_V_14_reg_1028[10 : 1];
        r_V_15_reg_1033 <= r_V_15_fu_895_p2;
        r_V_4_reg_1038 <= r_V_4_fu_249_p2;
        r_V_8_reg_1057 <= r_V_8_fu_272_p2;
        sext_ln1118_1_reg_1000 <= sext_ln1118_1_fu_199_p1;
        sub_ln1192_8_reg_1097 <= sub_ln1192_8_fu_498_p2;
        tmp_1_reg_982 <= {{x_V_in_sig[159:150]}};
        tmp_1_reg_982_pp0_iter1_reg <= tmp_1_reg_982;
        tmp_2_reg_992 <= {{x_V_in_sig[29:20]}};
        tmp_2_reg_992_pp0_iter1_reg <= tmp_2_reg_992;
        tmp_4_reg_1022 <= {{x_V_in_sig[49:40]}};
        tmp_5_reg_1048 <= {{x_V_in_sig[39:30]}};
        tmp_5_reg_1048_pp0_iter1_reg <= tmp_5_reg_1048;
        trunc_ln1192_1_reg_1043 <= trunc_ln1192_1_fu_255_p1;
        trunc_ln1192_reg_1067 <= trunc_ln1192_fu_324_p1;
        trunc_ln708_4_reg_1117 <= {{ret_V_5_fu_568_p2[25:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1192_reg_1062 <= grp_fu_902_p3;
        mul_ln1192_2_reg_1072 <= grp_fu_910_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_ap_vld_in_sig = x_V_ap_vld;
    end else begin
        x_V_ap_vld_in_sig = x_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_blk_n = x_V_ap_vld;
    end else begin
        x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_in_sig = x_V;
    end else begin
        x_V_in_sig = x_V_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_0_V_ap_vld = 1'b1;
    end else begin
        y_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_1_V_ap_vld = 1'b1;
    end else begin
        y_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_2_V_ap_vld = 1'b1;
    end else begin
        y_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_3_V_ap_vld = 1'b1;
    end else begin
        y_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_4_V_ap_vld = 1'b1;
    end else begin
        y_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_11_fu_821_p2 = (sub_ln1192_10_fu_808_p2 + shl_ln1192_14_fu_814_p3);

assign add_ln1192_12_fu_838_p2 = ($signed(add_ln1192_11_fu_821_p2) + $signed(sext_ln1192_18_fu_834_p1));

assign add_ln1192_1_fu_591_p2 = ($signed(add_ln1192_reg_1062) + $signed(shl_ln1192_1_fu_584_p3));

assign add_ln1192_2_fu_620_p2 = ($signed(sub_ln1192_1_fu_603_p2) + $signed(sext_ln1192_5_fu_616_p1));

assign add_ln1192_3_fu_633_p2 = (add_ln1192_2_fu_620_p2 + shl_ln1192_3_fu_626_p3);

assign add_ln1192_5_fu_392_p2 = (sub_ln1192_3_fu_379_p2 + shl_ln1192_6_fu_385_p3);

assign add_ln1192_6_fu_683_p2 = (add_ln1192_5_reg_1082 + shl_ln1192_7_fu_676_p3);

assign add_ln1192_8_fu_471_p2 = (sub_ln1192_7_fu_452_p2 + shl_ln1192_s_fu_463_p3);

assign add_ln1192_9_fu_766_p2 = (sub_ln1192_8_reg_1097 + shl_ln1192_11_fu_758_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_902_p2 = ($signed(sext_ln1192_1_fu_298_p1) - $signed(shl_ln_fu_281_p3));

assign grp_fu_910_p0 = sext_ln700_fu_308_p1;

assign grp_fu_910_p1 = sext_ln1118_2_fu_335_p1;

assign grp_fu_910_p2 = sext_ln1192_fu_288_p1;

assign grp_fu_949_p0 = sext_ln1192_11_fu_369_p1;

assign grp_fu_949_p2 = {{p_Val2_5_reg_1011}, {12'd0}};

assign grp_fu_958_p0 = sext_ln1118_11_fu_477_p1;

assign grp_fu_958_p1 = sext_ln1118_12_fu_487_p1;

assign grp_fu_958_p2 = sext_ln1192_14_fu_426_p1;

assign grp_fu_973_p0 = sext_ln1118_12_fu_487_p1;

assign grp_fu_973_p1 = sext_ln1118_11_fu_477_p1;

assign grp_fu_973_p2 = sext_ln1192_14_fu_426_p1;

assign lhs_V_fu_519_p3 = {{r_V_16_fu_413_p2}, {12'd0}};

assign mul_ln1192_10_fu_457_p0 = sext_ln1192_fu_288_p1;

assign mul_ln1192_10_fu_457_p1 = sext_ln1192_14_fu_426_p1;

assign mul_ln1192_10_fu_457_p2 = ($signed(mul_ln1192_10_fu_457_p0) * $signed(mul_ln1192_10_fu_457_p1));

assign mul_ln1192_12_fu_752_p1 = tmp_5_reg_1048_pp0_iter1_reg;

assign mul_ln1192_12_fu_752_p2 = ($signed({{1'b0}, {14'd29}}) * $signed(mul_ln1192_12_fu_752_p1));

assign mul_ln1192_13_fu_967_p0 = sext_ln1118_13_fu_504_p1;

assign mul_ln1192_13_fu_967_p1 = sext_ln1118_8_fu_409_p1;

assign mul_ln1192_14_fu_507_p0 = sext_ln1192_fu_288_p1;

assign mul_ln1192_14_fu_507_p1 = sext_ln1118_13_fu_504_p1;

assign mul_ln1192_14_fu_507_p2 = ($signed(mul_ln1192_14_fu_507_p0) * $signed(mul_ln1192_14_fu_507_p1));

assign mul_ln1192_15_fu_513_p0 = sext_ln1192_13_fu_423_p1;

assign mul_ln1192_15_fu_513_p1 = sext_ln1118_13_fu_504_p1;

assign mul_ln1192_15_fu_513_p2 = ($signed(mul_ln1192_15_fu_513_p0) * $signed(mul_ln1192_15_fu_513_p1));

assign mul_ln1192_3_fu_918_p0 = sext_ln1192_fu_288_p1;

assign mul_ln1192_5_fu_931_p0 = sext_ln1192_11_fu_369_p1;

assign mul_ln1192_6_fu_938_p0 = sext_ln1118_1_reg_1000;

assign mul_ln1192_6_fu_938_p1 = sext_ln1118_8_fu_409_p1;

assign mul_ln1192_7_fu_943_p0 = sext_ln1192_13_fu_423_p1;

assign mul_ln1192_9_fu_439_p0 = sext_ln1118_1_reg_1000;

assign mul_ln1192_9_fu_439_p1 = sext_ln1192_14_fu_426_p1;

assign mul_ln1192_9_fu_439_p2 = ($signed(mul_ln1192_9_fu_439_p0) * $signed(mul_ln1192_9_fu_439_p1));

assign mul_ln1192_fu_203_p0 = tmp_1_fu_175_p4;

assign mul_ln1192_fu_203_p1 = trunc_ln1117_fu_171_p1;

assign mul_ln1192_fu_203_p2 = ($signed(mul_ln1192_fu_203_p0) * $signed(mul_ln1192_fu_203_p1));

assign p_Val2_5_fu_209_p4 = {{x_V_in_sig[149:140]}};

assign r_V_13_fu_311_p0 = sext_ln1117_fu_278_p1;

assign r_V_13_fu_311_p1 = sext_ln1117_fu_278_p1;

assign r_V_13_fu_311_p2 = ($signed(r_V_13_fu_311_p0) * $signed(r_V_13_fu_311_p1));

assign r_V_14_fu_237_p3 = {{p_Val2_5_fu_209_p4}, {1'd0}};

assign r_V_16_fu_413_p2 = ($signed(sext_ln1118_7_fu_405_p1) - $signed(sext_ln1118_3_fu_350_p1));

assign r_V_17_fu_712_p2 = ($signed(sext_ln1118_9_fu_708_p1) - $signed(sext_ln1118_6_fu_673_p1));

assign r_V_18_fu_328_p3 = {{tmp_1_reg_982}, {2'd0}};

assign r_V_19_fu_480_p3 = {{tmp_5_reg_1048}, {2'd0}};

assign r_V_20_fu_527_p2 = ($signed(sext_ln1118_2_fu_335_p1) - $signed(sext_ln700_fu_308_p1));

assign r_V_2_fu_339_p3 = {{tmp_2_reg_992}, {1'd0}};

assign r_V_4_fu_249_p0 = sext_ln1118_4_fu_219_p1;

assign r_V_4_fu_249_p1 = sext_ln1118_4_fu_219_p1;

assign r_V_4_fu_249_p2 = ($signed(r_V_4_fu_249_p0) * $signed(r_V_4_fu_249_p1));

assign r_V_5_fu_398_p3 = {{p_Val2_5_reg_1011}, {2'd0}};

assign r_V_8_fu_272_p0 = tmp_5_fu_258_p4;

assign r_V_8_fu_272_p1 = sext_ln1118_4_fu_219_p1;

assign r_V_8_fu_272_p2 = ($signed(r_V_8_fu_272_p0) * $signed(r_V_8_fu_272_p1));

assign ret_V_1_fu_732_p2 = ($signed(26'd66256896) + $signed(sub_ln1192_5_fu_726_p2));

assign ret_V_2_fu_771_p2 = ($signed(22'd4173824) + $signed(add_ln1192_9_fu_766_p2));

assign ret_V_3_fu_878_p2 = ($signed(22'd4161536) + $signed(sub_ln1192_12_fu_872_p2));

assign ret_V_4_fu_549_p2 = ($signed(sext_ln703_fu_533_p1) - $signed(sext_ln728_fu_545_p1));

assign ret_V_5_fu_568_p2 = ($signed(26'd66650112) + $signed(sub_ln1192_13_fu_562_p2));

assign ret_V_fu_656_p2 = ($signed(22'd4149248) + $signed(sub_ln1192_2_fu_650_p2));

assign rhs_V_1_fu_609_p3 = {{tmp_1_reg_982_pp0_iter1_reg}, {11'd0}};

assign rhs_V_2_fu_639_p3 = {{tmp_2_reg_992_pp0_iter1_reg}, {11'd0}};

assign rhs_V_3_fu_718_p3 = {{r_V_17_fu_712_p2}, {12'd0}};

assign rhs_V_5_fu_827_p3 = {{p_Val2_5_reg_1011_pp0_iter1_reg}, {9'd0}};

assign rhs_V_6_fu_844_p3 = {{tmp_1_reg_982_pp0_iter1_reg}, {10'd0}};

assign rhs_V_7_fu_861_p3 = {{tmp_5_reg_1048_pp0_iter1_reg}, {10'd0}};

assign rhs_V_8_fu_537_p3 = {{r_V_20_fu_527_p2}, {12'd0}};

assign rhs_V_fu_291_p3 = {{p_Val2_5_reg_1011}, {8'd0}};

assign sext_ln1117_fu_278_p1 = tmp_1_reg_982;

assign sext_ln1118_11_fu_477_p1 = tmp_5_reg_1048;

assign sext_ln1118_12_fu_487_p1 = $signed(r_V_19_fu_480_p3);

assign sext_ln1118_13_fu_504_p1 = p_Val2_5_reg_1011;

assign sext_ln1118_1_fu_199_p1 = tmp_1_fu_175_p4;

assign sext_ln1118_2_fu_335_p1 = $signed(r_V_18_fu_328_p3);

assign sext_ln1118_3_fu_350_p1 = p_Val2_5_reg_1011;

assign sext_ln1118_4_fu_219_p1 = p_Val2_5_fu_209_p4;

assign sext_ln1118_6_fu_673_p1 = r_V_14_reg_1028_pp0_iter1_reg;

assign sext_ln1118_7_fu_405_p1 = r_V_5_fu_398_p3;

assign sext_ln1118_8_fu_409_p1 = r_V_5_fu_398_p3;

assign sext_ln1118_9_fu_708_p1 = $signed(shl_ln1118_6_fu_701_p3);

assign sext_ln1192_11_fu_369_p1 = tmp_4_reg_1022;

assign sext_ln1192_13_fu_423_p1 = tmp_4_reg_1022;

assign sext_ln1192_14_fu_426_p1 = tmp_5_reg_1048;

assign sext_ln1192_18_fu_834_p1 = $signed(rhs_V_5_fu_827_p3);

assign sext_ln1192_19_fu_851_p1 = $signed(rhs_V_6_fu_844_p3);

assign sext_ln1192_1_fu_298_p1 = $signed(rhs_V_fu_291_p3);

assign sext_ln1192_20_fu_868_p1 = $signed(rhs_V_7_fu_861_p3);

assign sext_ln1192_5_fu_616_p1 = $signed(rhs_V_1_fu_609_p3);

assign sext_ln1192_7_fu_646_p1 = $signed(rhs_V_2_fu_639_p3);

assign sext_ln1192_fu_288_p1 = tmp_2_reg_992;

assign sext_ln700_fu_308_p1 = tmp_1_reg_982;

assign sext_ln703_fu_533_p1 = $signed(lhs_V_fu_519_p3);

assign sext_ln728_fu_545_p1 = $signed(rhs_V_8_fu_537_p3);

assign shl_ln1118_6_fu_701_p3 = {{p_Val2_5_reg_1011_pp0_iter1_reg}, {3'd0}};

assign shl_ln1192_10_fu_491_p3 = {{grp_fu_958_p3}, {4'd0}};

assign shl_ln1192_11_fu_758_p3 = {{mul_ln1192_12_fu_752_p2}, {8'd0}};

assign shl_ln1192_12_fu_788_p3 = {{mul_ln1192_13_reg_1102}, {4'd0}};

assign shl_ln1192_13_fu_801_p3 = {{mul_ln1192_14_reg_1107}, {4'd0}};

assign shl_ln1192_14_fu_814_p3 = {{mul_ln1192_15_reg_1112}, {4'd0}};

assign shl_ln1192_15_fu_555_p3 = {{grp_fu_973_p3}, {8'd0}};

assign shl_ln1192_1_fu_584_p3 = {{trunc_ln1192_reg_1067}, {4'd0}};

assign shl_ln1192_2_fu_596_p3 = {{mul_ln1192_2_reg_1072}, {4'd0}};

assign shl_ln1192_3_fu_626_p3 = {{mul_ln1192_3_reg_1077}, {4'd0}};

assign shl_ln1192_4_fu_359_p3 = {{mul_ln1192_4_fu_924_p2}, {4'd0}};

assign shl_ln1192_5_fu_372_p3 = {{mul_ln1192_5_fu_931_p2}, {4'd0}};

assign shl_ln1192_6_fu_385_p3 = {{trunc_ln1192_1_reg_1043}, {8'd0}};

assign shl_ln1192_7_fu_676_p3 = {{mul_ln1192_6_reg_1087}, {8'd0}};

assign shl_ln1192_8_fu_688_p3 = {{mul_ln1192_7_reg_1092}, {8'd0}};

assign shl_ln1192_9_fu_444_p3 = {{mul_ln1192_9_fu_439_p2}, {4'd0}};

assign shl_ln1192_s_fu_463_p3 = {{mul_ln1192_10_fu_457_p2}, {4'd0}};

assign shl_ln_fu_281_p3 = {{mul_ln1192_reg_1006}, {4'd0}};

assign sub_ln1192_10_fu_808_p2 = (sub_ln1192_9_fu_795_p2 - shl_ln1192_13_fu_801_p3);

assign sub_ln1192_11_fu_855_p2 = ($signed(add_ln1192_12_fu_838_p2) - $signed(sext_ln1192_19_fu_851_p1));

assign sub_ln1192_12_fu_872_p2 = ($signed(sub_ln1192_11_fu_855_p2) - $signed(sext_ln1192_20_fu_868_p1));

assign sub_ln1192_13_fu_562_p2 = (ret_V_4_fu_549_p2 - shl_ln1192_15_fu_555_p3);

assign sub_ln1192_1_fu_603_p2 = (add_ln1192_1_fu_591_p2 - shl_ln1192_2_fu_596_p3);

assign sub_ln1192_2_fu_650_p2 = ($signed(add_ln1192_3_fu_633_p2) - $signed(sext_ln1192_7_fu_646_p1));

assign sub_ln1192_3_fu_379_p2 = (shl_ln1192_5_fu_372_p3 - shl_ln1192_4_fu_359_p3);

assign sub_ln1192_4_fu_695_p2 = (add_ln1192_6_fu_683_p2 - shl_ln1192_8_fu_688_p3);

assign sub_ln1192_5_fu_726_p2 = (sub_ln1192_4_fu_695_p2 - rhs_V_3_fu_718_p3);

assign sub_ln1192_7_fu_452_p2 = ($signed(grp_fu_949_p3) - $signed(shl_ln1192_9_fu_444_p3));

assign sub_ln1192_8_fu_498_p2 = (add_ln1192_8_fu_471_p2 - shl_ln1192_10_fu_491_p3);

assign sub_ln1192_9_fu_795_p2 = (22'd0 - shl_ln1192_12_fu_788_p3);

assign tmp_1_fu_175_p4 = {{x_V_in_sig[159:150]}};

assign tmp_5_fu_258_p4 = {{x_V_in_sig[39:30]}};

assign trunc_ln1117_fu_171_p1 = x_V_in_sig[9:0];

assign trunc_ln1192_1_fu_255_p1 = r_V_15_fu_895_p2[17:0];

assign trunc_ln1192_fu_324_p1 = r_V_13_fu_311_p2[17:0];

assign y_0_V = {{ret_V_fu_656_p2[21:12]}};

assign y_1_V = {{ret_V_1_fu_732_p2[25:16]}};

assign y_2_V = {{ret_V_2_fu_771_p2[21:12]}};

assign y_3_V = {{ret_V_3_fu_878_p2[21:12]}};

assign y_4_V = trunc_ln708_4_reg_1117;

always @ (posedge ap_clk) begin
    r_V_14_reg_1028[0] <= 1'b0;
    r_V_14_reg_1028_pp0_iter1_reg[0] <= 1'b0;
    add_ln1192_5_reg_1082[3:0] <= 4'b0000;
end

endmodule //myproject
