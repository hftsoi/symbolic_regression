// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > x_V;
    sc_in< sc_logic > x_V_ap_vld;
    sc_out< sc_lv<2> > y_0_V;
    sc_out< sc_logic > y_0_V_ap_vld;
    sc_out< sc_lv<2> > y_1_V;
    sc_out< sc_logic > y_1_V_ap_vld;
    sc_out< sc_lv<2> > y_2_V;
    sc_out< sc_logic > y_2_V_ap_vld;
    sc_out< sc_lv<2> > y_3_V;
    sc_out< sc_logic > y_3_V_ap_vld;
    sc_out< sc_lv<2> > y_4_V;
    sc_out< sc_logic > y_4_V_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > x_V_preg;
    sc_signal< sc_lv<32> > x_V_in_sig;
    sc_signal< sc_logic > x_V_ap_vld_preg;
    sc_signal< sc_logic > x_V_ap_vld_in_sig;
    sc_signal< sc_logic > x_V_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<2> > tmp_1_fu_142_p4;
    sc_signal< sc_lv<2> > tmp_fu_132_p4;
    sc_signal< sc_lv<2> > r_V_fu_170_p0;
    sc_signal< sc_lv<4> > sext_ln1116_fu_166_p1;
    sc_signal< sc_lv<2> > r_V_fu_170_p1;
    sc_signal< sc_lv<4> > r_V_fu_170_p2;
    sc_signal< sc_lv<6> > rhs_V_fu_176_p3;
    sc_signal< sc_lv<3> > shl_ln_fu_190_p3;
    sc_signal< sc_lv<4> > sext_ln1118_fu_198_p1;
    sc_signal< sc_lv<6> > ret_V_fu_184_p2;
    sc_signal< sc_lv<4> > r_V_1_fu_202_p2;
    sc_signal< sc_lv<8> > rhs_V_1_fu_212_p3;
    sc_signal< sc_lv<8> > sext_ln703_fu_208_p1;
    sc_signal< sc_lv<3> > shl_ln1118_1_fu_226_p3;
    sc_signal< sc_lv<4> > sext_ln1118_1_fu_234_p1;
    sc_signal< sc_lv<4> > r_V_2_fu_238_p2;
    sc_signal< sc_lv<8> > ret_V_1_fu_220_p2;
    sc_signal< sc_lv<8> > rhs_V_2_fu_244_p3;
    sc_signal< sc_lv<8> > sub_ln1192_fu_252_p2;
    sc_signal< sc_lv<8> > ret_V_2_fu_258_p2;
    sc_signal< sc_lv<2> > p_Val2_9_fu_156_p4;
    sc_signal< sc_lv<2> > r_V_3_fu_279_p0;
    sc_signal< sc_lv<2> > r_V_3_fu_279_p1;
    sc_signal< sc_lv<4> > sext_ln1116_1_fu_275_p1;
    sc_signal< sc_lv<4> > r_V_3_fu_279_p2;
    sc_signal< sc_lv<8> > rhs_V_10_fu_285_p3;
    sc_signal< sc_lv<8> > rhs_V_4_fu_297_p3;
    sc_signal< sc_lv<9> > sext_ln728_fu_293_p1;
    sc_signal< sc_lv<9> > sext_ln728_2_fu_305_p1;
    sc_signal< sc_lv<9> > ret_V_3_fu_309_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_315_p3;
    sc_signal< sc_lv<2> > tmp_3_fu_332_p4;
    sc_signal< sc_lv<2> > r_V_4_fu_356_p0;
    sc_signal< sc_lv<4> > sext_ln700_fu_342_p1;
    sc_signal< sc_lv<2> > r_V_4_fu_356_p1;
    sc_signal< sc_lv<4> > r_V_4_fu_356_p2;
    sc_signal< sc_lv<6> > rhs_V_5_fu_362_p3;
    sc_signal< sc_lv<8> > sub_ln1192_1_fu_346_p2;
    sc_signal< sc_lv<8> > sext_ln1192_fu_370_p1;
    sc_signal< sc_lv<3> > sext_ln1118_2_fu_352_p1;
    sc_signal< sc_lv<3> > r_V_5_fu_380_p2;
    sc_signal< sc_lv<7> > rhs_V_6_fu_386_p3;
    sc_signal< sc_lv<8> > sext_ln1192_1_fu_394_p1;
    sc_signal< sc_lv<8> > sub_ln1192_2_fu_374_p2;
    sc_signal< sc_lv<8> > add_ln1192_fu_398_p2;
    sc_signal< sc_lv<2> > trunc_ln708_4_fu_404_p4;
    sc_signal< sc_lv<2> > r_V_6_fu_421_p0;
    sc_signal< sc_lv<2> > r_V_6_fu_421_p1;
    sc_signal< sc_lv<4> > r_V_6_fu_421_p2;
    sc_signal< sc_lv<6> > rhs_V_7_fu_427_p3;
    sc_signal< sc_lv<6> > ret_V_4_fu_435_p2;
    sc_signal< sc_lv<6> > rhs_V_8_fu_445_p3;
    sc_signal< sc_lv<7> > sext_ln703_1_fu_441_p1;
    sc_signal< sc_lv<7> > sext_ln728_1_fu_453_p1;
    sc_signal< sc_lv<7> > ret_V_5_fu_457_p2;
    sc_signal< sc_lv<6> > rhs_V_9_fu_467_p3;
    sc_signal< sc_lv<8> > sext_ln1192_2_fu_463_p1;
    sc_signal< sc_lv<8> > sext_ln1192_3_fu_475_p1;
    sc_signal< sc_lv<8> > sub_ln1192_3_fu_479_p2;
    sc_signal< sc_lv<2> > trunc_ln708_5_fu_485_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_40;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_fu_398_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_p_Val2_9_fu_156_p4();
    void thread_r_V_1_fu_202_p2();
    void thread_r_V_2_fu_238_p2();
    void thread_r_V_3_fu_279_p0();
    void thread_r_V_3_fu_279_p1();
    void thread_r_V_3_fu_279_p2();
    void thread_r_V_4_fu_356_p0();
    void thread_r_V_4_fu_356_p1();
    void thread_r_V_4_fu_356_p2();
    void thread_r_V_5_fu_380_p2();
    void thread_r_V_6_fu_421_p0();
    void thread_r_V_6_fu_421_p1();
    void thread_r_V_6_fu_421_p2();
    void thread_r_V_fu_170_p0();
    void thread_r_V_fu_170_p1();
    void thread_r_V_fu_170_p2();
    void thread_ret_V_1_fu_220_p2();
    void thread_ret_V_2_fu_258_p2();
    void thread_ret_V_3_fu_309_p2();
    void thread_ret_V_4_fu_435_p2();
    void thread_ret_V_5_fu_457_p2();
    void thread_ret_V_fu_184_p2();
    void thread_rhs_V_10_fu_285_p3();
    void thread_rhs_V_1_fu_212_p3();
    void thread_rhs_V_2_fu_244_p3();
    void thread_rhs_V_4_fu_297_p3();
    void thread_rhs_V_5_fu_362_p3();
    void thread_rhs_V_6_fu_386_p3();
    void thread_rhs_V_7_fu_427_p3();
    void thread_rhs_V_8_fu_445_p3();
    void thread_rhs_V_9_fu_467_p3();
    void thread_rhs_V_fu_176_p3();
    void thread_sext_ln1116_1_fu_275_p1();
    void thread_sext_ln1116_fu_166_p1();
    void thread_sext_ln1118_1_fu_234_p1();
    void thread_sext_ln1118_2_fu_352_p1();
    void thread_sext_ln1118_fu_198_p1();
    void thread_sext_ln1192_1_fu_394_p1();
    void thread_sext_ln1192_2_fu_463_p1();
    void thread_sext_ln1192_3_fu_475_p1();
    void thread_sext_ln1192_fu_370_p1();
    void thread_sext_ln700_fu_342_p1();
    void thread_sext_ln703_1_fu_441_p1();
    void thread_sext_ln703_fu_208_p1();
    void thread_sext_ln728_1_fu_453_p1();
    void thread_sext_ln728_2_fu_305_p1();
    void thread_sext_ln728_fu_293_p1();
    void thread_shl_ln1118_1_fu_226_p3();
    void thread_shl_ln_fu_190_p3();
    void thread_sub_ln1192_1_fu_346_p2();
    void thread_sub_ln1192_2_fu_374_p2();
    void thread_sub_ln1192_3_fu_479_p2();
    void thread_sub_ln1192_fu_252_p2();
    void thread_tmp_1_fu_142_p4();
    void thread_tmp_2_fu_315_p3();
    void thread_tmp_3_fu_332_p4();
    void thread_tmp_fu_132_p4();
    void thread_trunc_ln708_4_fu_404_p4();
    void thread_trunc_ln708_5_fu_485_p4();
    void thread_x_V_ap_vld_in_sig();
    void thread_x_V_blk_n();
    void thread_x_V_in_sig();
    void thread_y_0_V();
    void thread_y_0_V_ap_vld();
    void thread_y_1_V();
    void thread_y_1_V_ap_vld();
    void thread_y_2_V();
    void thread_y_2_V_ap_vld();
    void thread_y_3_V();
    void thread_y_3_V_ap_vld();
    void thread_y_4_V();
    void thread_y_4_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
