// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.083000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=468,HLS_SYN_LUT=1367,HLS_VERSION=2020_1}" *)

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V_ap_vld,
        x_V,
        y_0_V,
        y_0_V_ap_vld,
        y_1_V,
        y_1_V_ap_vld,
        y_2_V,
        y_2_V_ap_vld,
        y_3_V,
        y_3_V_ap_vld,
        y_4_V,
        y_4_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   x_V_ap_vld;
input  [127:0] x_V;
output  [7:0] y_0_V;
output   y_0_V_ap_vld;
output  [7:0] y_1_V;
output   y_1_V_ap_vld;
output  [7:0] y_2_V;
output   y_2_V_ap_vld;
output  [7:0] y_3_V;
output   y_3_V_ap_vld;
output  [7:0] y_4_V;
output   y_4_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg y_0_V_ap_vld;
reg y_1_V_ap_vld;
reg y_2_V_ap_vld;
reg y_3_V_ap_vld;
reg y_4_V_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    x_V_ap_vld_in_sig;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [127:0] x_V_preg;
reg   [127:0] x_V_in_sig;
reg    x_V_ap_vld_preg;
reg    x_V_blk_n;
wire    ap_block_pp0_stage0;
wire  signed [7:0] tmp_1_fu_171_p4;
reg  signed [7:0] tmp_1_reg_961;
reg  signed [7:0] tmp_1_reg_961_pp0_iter1_reg;
wire  signed [15:0] sext_ln1117_fu_181_p1;
reg  signed [15:0] sext_ln1117_reg_970;
reg  signed [15:0] sext_ln1117_reg_970_pp0_iter1_reg;
reg  signed [7:0] tmp_2_reg_976;
reg  signed [7:0] tmp_2_reg_976_pp0_iter1_reg;
wire   [15:0] r_V_18_fu_199_p2;
reg   [15:0] r_V_18_reg_984;
reg  signed [7:0] p_Val2_7_reg_989;
wire  signed [15:0] r_V_19_fu_215_p2;
reg  signed [15:0] r_V_19_reg_1002;
reg  signed [7:0] tmp_4_reg_1008;
reg  signed [7:0] tmp_5_reg_1014;
reg  signed [7:0] tmp_5_reg_1014_pp0_iter1_reg;
wire  signed [15:0] sext_ln700_fu_248_p1;
reg  signed [15:0] sext_ln700_reg_1023;
wire   [19:0] sub_ln1192_fu_307_p2;
reg   [19:0] sub_ln1192_reg_1029;
wire  signed [19:0] mul_ln1192_3_fu_918_p2;
reg  signed [19:0] mul_ln1192_3_reg_1034;
wire  signed [19:0] mul_ln1192_4_fu_924_p2;
reg  signed [19:0] mul_ln1192_4_reg_1039;
wire   [15:0] trunc_ln1192_fu_363_p1;
reg   [15:0] trunc_ln1192_reg_1044;
wire  signed [15:0] sext_ln1118_6_fu_378_p1;
reg  signed [15:0] sext_ln1118_6_reg_1049;
wire  signed [15:0] mul_ln1192_6_fu_930_p2;
reg  signed [15:0] mul_ln1192_6_reg_1054;
wire   [11:0] r_V_23_fu_406_p2;
reg   [11:0] r_V_23_reg_1059;
wire  signed [15:0] sext_ln1118_9_fu_412_p1;
reg  signed [15:0] sext_ln1118_9_reg_1064;
wire  signed [19:0] grp_fu_936_p3;
reg  signed [19:0] sub_ln1192_5_reg_1070;
wire  signed [15:0] grp_fu_944_p3;
reg  signed [15:0] mul_ln1192_8_reg_1075;
wire   [19:0] sub_ln1192_10_fu_534_p2;
reg   [19:0] sub_ln1192_10_reg_1080;
reg   [7:0] trunc_ln708_4_reg_1085;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] trunc_ln1117_fu_167_p1;
wire  signed [7:0] r_V_18_fu_199_p0;
wire  signed [7:0] r_V_18_fu_199_p1;
wire  signed [7:0] r_V_19_fu_215_p0;
wire  signed [7:0] r_V_19_fu_215_p1;
wire   [15:0] rhs_V_1_fu_251_p3;
wire  signed [19:0] sext_ln728_fu_258_p1;
wire   [19:0] rhs_V_fu_241_p3;
wire  signed [19:0] grp_fu_900_p3;
wire   [19:0] rhs_V_2_fu_277_p3;
wire   [9:0] r_V_28_fu_289_p3;
wire  signed [15:0] grp_fu_909_p3;
(* use_dsp48 = "no" *) wire   [19:0] add_ln1192_1_fu_284_p2;
wire   [19:0] shl_ln_fu_300_p3;
wire  signed [8:0] r_V_20_fu_325_p3;
wire  signed [7:0] r_V_21_fu_340_p0;
wire  signed [8:0] r_V_21_fu_340_p1;
wire  signed [16:0] r_V_21_fu_340_p2;
wire  signed [7:0] r_V_5_fu_350_p0;
wire  signed [15:0] sext_ln1118_2_fu_316_p1;
wire  signed [7:0] r_V_5_fu_350_p1;
wire  signed [15:0] r_V_5_fu_350_p2;
wire  signed [9:0] r_V_6_fu_367_p3;
wire  signed [10:0] sext_ln1118_5_fu_374_p1;
wire  signed [10:0] sext_ln1118_1_fu_313_p1;
wire  signed [10:0] r_V_22_fu_382_p2;
wire   [10:0] shl_ln1118_6_fu_395_p3;
wire  signed [11:0] sext_ln1118_8_fu_402_p1;
wire  signed [11:0] sext_ln1118_4_fu_332_p1;
wire  signed [7:0] r_V_9_fu_415_p0;
wire  signed [7:0] r_V_9_fu_415_p1;
wire  signed [15:0] r_V_9_fu_415_p2;
wire   [9:0] r_V_29_fu_435_p3;
wire  signed [7:0] mul_ln1192_10_fu_446_p0;
wire  signed [9:0] mul_ln1192_10_fu_446_p1;
wire   [15:0] mul_ln1192_10_fu_446_p2;
wire   [19:0] shl_ln1192_9_fu_452_p3;
wire  signed [7:0] r_V_26_fu_466_p0;
wire  signed [7:0] r_V_26_fu_466_p1;
wire   [15:0] r_V_26_fu_466_p2;
wire   [19:0] sub_ln1192_8_fu_460_p2;
wire   [19:0] rhs_V_9_fu_472_p3;
wire  signed [7:0] r_V_27_fu_486_p0;
wire  signed [15:0] sext_ln1118_7_fu_392_p1;
wire  signed [7:0] r_V_27_fu_486_p1;
wire   [15:0] r_V_27_fu_486_p2;
wire   [19:0] sub_ln1192_9_fu_480_p2;
wire   [19:0] rhs_V_10_fu_492_p3;
wire   [16:0] rhs_V_11_fu_506_p3;
wire   [19:0] add_ln1192_11_fu_500_p2;
wire  signed [19:0] sext_ln1192_13_fu_513_p1;
wire   [17:0] rhs_V_12_fu_523_p3;
wire   [19:0] add_ln1192_12_fu_517_p2;
wire  signed [19:0] sext_ln1192_14_fu_530_p1;
wire  signed [10:0] sext_ln1118_fu_296_p1;
wire  signed [10:0] sext_ln700_1_fu_268_p1;
wire   [22:0] lhs_V_fu_540_p3;
wire   [10:0] r_V_30_fu_548_p2;
wire   [22:0] rhs_V_14_fu_558_p3;
wire  signed [23:0] sext_ln703_fu_554_p1;
wire  signed [23:0] sext_ln728_1_fu_566_p1;
wire  signed [15:0] grp_fu_952_p3;
wire   [23:0] ret_V_5_fu_570_p2;
wire   [23:0] shl_ln1192_s_fu_576_p3;
wire   [23:0] sub_ln1192_12_fu_583_p2;
wire   [23:0] ret_V_6_fu_589_p2;
wire   [18:0] rhs_V_3_fu_605_p3;
wire  signed [19:0] sext_ln1192_3_fu_612_p1;
wire   [8:0] r_V_2_fu_621_p3;
wire  signed [7:0] mul_ln1192_2_fu_632_p0;
wire  signed [8:0] mul_ln1192_2_fu_632_p1;
wire   [15:0] mul_ln1192_2_fu_632_p2;
wire   [19:0] add_ln1192_2_fu_616_p2;
wire   [19:0] shl_ln1192_1_fu_637_p3;
wire   [18:0] rhs_V_4_fu_651_p3;
wire   [19:0] add_ln1192_3_fu_645_p2;
wire  signed [19:0] sext_ln1192_5_fu_658_p1;
wire   [19:0] sub_ln1192_1_fu_662_p2;
wire   [19:0] ret_V_1_fu_668_p2;
wire   [23:0] shl_ln1192_3_fu_692_p3;
wire   [23:0] shl_ln1192_2_fu_685_p3;
wire   [23:0] sub_ln1192_2_fu_699_p2;
wire   [23:0] shl_ln1192_4_fu_705_p3;
wire  signed [7:0] mul_ln1192_5_fu_718_p0;
wire  signed [9:0] mul_ln1192_5_fu_718_p1;
wire   [15:0] mul_ln1192_5_fu_718_p2;
wire   [23:0] add_ln1192_5_fu_712_p2;
wire   [23:0] shl_ln1192_5_fu_722_p3;
wire   [23:0] add_ln1192_6_fu_730_p2;
wire   [23:0] shl_ln1192_6_fu_736_p3;
wire   [23:0] sub_ln1192_3_fu_743_p2;
wire   [23:0] rhs_V_5_fu_749_p3;
wire   [23:0] sub_ln1192_4_fu_756_p2;
wire   [23:0] ret_V_2_fu_762_p2;
wire  signed [7:0] r_V_24_fu_779_p0;
wire  signed [7:0] r_V_24_fu_779_p1;
wire   [15:0] r_V_24_fu_779_p2;
wire   [19:0] rhs_V_7_fu_783_p3;
wire  signed [7:0] r_V_25_fu_796_p0;
wire  signed [7:0] r_V_25_fu_796_p1;
wire   [15:0] r_V_25_fu_796_p2;
(* use_dsp48 = "no" *) wire   [19:0] sub_ln1192_6_fu_791_p2;
wire   [19:0] rhs_V_8_fu_800_p3;
wire   [19:0] add_ln1192_8_fu_808_p2;
wire   [19:0] shl_ln1192_7_fu_817_p3;
wire  signed [7:0] mul_ln1192_9_fu_830_p1;
wire   [11:0] mul_ln1192_9_fu_830_p2;
wire   [19:0] sub_ln1192_7_fu_824_p2;
wire   [19:0] shl_ln1192_8_fu_836_p3;
wire   [19:0] add_ln1192_9_fu_844_p2;
wire   [19:0] ret_V_3_fu_850_p2;
wire   [17:0] rhs_V_13_fu_867_p3;
wire  signed [19:0] sext_ln1192_15_fu_874_p1;
wire   [19:0] sub_ln1192_11_fu_878_p2;
wire   [19:0] ret_V_4_fu_883_p2;
wire   [19:0] grp_fu_900_p2;
wire  signed [7:0] grp_fu_909_p0;
wire  signed [9:0] grp_fu_909_p1;
wire  signed [7:0] grp_fu_909_p2;
wire  signed [7:0] mul_ln1192_4_fu_924_p0;
wire  signed [19:0] sext_ln1192_9_fu_360_p1;
wire  signed [7:0] mul_ln1192_6_fu_930_p0;
wire  signed [7:0] grp_fu_936_p0;
wire   [19:0] grp_fu_936_p2;
wire  signed [7:0] grp_fu_944_p0;
wire  signed [10:0] sext_ln1118_10_fu_432_p1;
wire  signed [9:0] grp_fu_944_p1;
wire  signed [10:0] sext_ln1118_11_fu_442_p1;
wire  signed [7:0] grp_fu_944_p2;
wire  signed [9:0] grp_fu_952_p0;
wire  signed [7:0] grp_fu_952_p1;
wire  signed [7:0] grp_fu_952_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 x_V_preg = 128'd0;
#0 x_V_ap_vld_preg = 1'b0;
end

myproject_mac_muladd_8s_16s_20ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
myproject_mac_muladd_8s_16s_20ns_20_1_1_U1(
    .din0(tmp_2_reg_976),
    .din1(r_V_19_reg_1002),
    .din2(grp_fu_900_p2),
    .dout(grp_fu_900_p3)
);

myproject_am_addmul_8s_10s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
myproject_am_addmul_8s_10s_8s_16_1_1_U2(
    .din0(grp_fu_909_p0),
    .din1(grp_fu_909_p1),
    .din2(grp_fu_909_p2),
    .dout(grp_fu_909_p3)
);

myproject_mul_mul_8s_17s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_8s_17s_20_1_1_U3(
    .din0(tmp_1_reg_961),
    .din1(r_V_21_fu_340_p2),
    .dout(mul_ln1192_3_fu_918_p2)
);

myproject_mul_mul_8s_16s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 20 ))
myproject_mul_mul_8s_16s_20_1_1_U4(
    .din0(mul_ln1192_4_fu_924_p0),
    .din1(r_V_5_fu_350_p2),
    .dout(mul_ln1192_4_fu_924_p2)
);

myproject_mul_mul_8s_11s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 16 ))
myproject_mul_mul_8s_11s_16_1_1_U5(
    .din0(mul_ln1192_6_fu_930_p0),
    .din1(r_V_22_fu_382_p2),
    .dout(mul_ln1192_6_fu_930_p2)
);

myproject_mac_mul_sub_8s_16s_20ns_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
myproject_mac_mul_sub_8s_16s_20ns_20_1_1_U6(
    .din0(grp_fu_936_p0),
    .din1(r_V_9_fu_415_p2),
    .din2(grp_fu_936_p2),
    .dout(grp_fu_936_p3)
);

myproject_am_addmul_8s_10s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
myproject_am_addmul_8s_10s_8s_16_1_1_U7(
    .din0(grp_fu_944_p0),
    .din1(grp_fu_944_p1),
    .din2(grp_fu_944_p2),
    .dout(grp_fu_944_p3)
);

myproject_am_submul_10s_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
myproject_am_submul_10s_8s_8s_16_1_1_U8(
    .din0(grp_fu_952_p0),
    .din1(grp_fu_952_p1),
    .din2(grp_fu_952_p2),
    .dout(grp_fu_952_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_ap_vld_preg <= x_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_preg <= 128'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_preg <= x_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1192_3_reg_1034 <= mul_ln1192_3_fu_918_p2;
        mul_ln1192_4_reg_1039 <= mul_ln1192_4_fu_924_p2;
        mul_ln1192_6_reg_1054 <= mul_ln1192_6_fu_930_p2;
        p_Val2_7_reg_989 <= {{x_V_in_sig[119:112]}};
        r_V_18_reg_984 <= r_V_18_fu_199_p2;
        r_V_19_reg_1002 <= r_V_19_fu_215_p2;
        r_V_23_reg_1059[11 : 1] <= r_V_23_fu_406_p2[11 : 1];
        sext_ln1117_reg_970 <= sext_ln1117_fu_181_p1;
        sext_ln1117_reg_970_pp0_iter1_reg <= sext_ln1117_reg_970;
        sext_ln1118_6_reg_1049[15 : 2] <= sext_ln1118_6_fu_378_p1[15 : 2];
        sext_ln1118_9_reg_1064 <= sext_ln1118_9_fu_412_p1;
        sext_ln700_reg_1023 <= sext_ln700_fu_248_p1;
        sub_ln1192_10_reg_1080[19 : 4] <= sub_ln1192_10_fu_534_p2[19 : 4];
        sub_ln1192_reg_1029 <= sub_ln1192_fu_307_p2;
        tmp_1_reg_961 <= {{x_V_in_sig[127:120]}};
        tmp_1_reg_961_pp0_iter1_reg <= tmp_1_reg_961;
        tmp_2_reg_976 <= {{x_V_in_sig[23:16]}};
        tmp_2_reg_976_pp0_iter1_reg <= tmp_2_reg_976;
        tmp_4_reg_1008 <= {{x_V_in_sig[39:32]}};
        tmp_5_reg_1014 <= {{x_V_in_sig[31:24]}};
        tmp_5_reg_1014_pp0_iter1_reg <= tmp_5_reg_1014;
        trunc_ln1192_reg_1044[15 : 1] <= trunc_ln1192_fu_363_p1[15 : 1];
        trunc_ln708_4_reg_1085 <= {{ret_V_6_fu_589_p2[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1192_8_reg_1075 <= grp_fu_944_p3;
        sub_ln1192_5_reg_1070 <= grp_fu_936_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_ap_vld_in_sig = x_V_ap_vld;
    end else begin
        x_V_ap_vld_in_sig = x_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_blk_n = x_V_ap_vld;
    end else begin
        x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_in_sig = x_V;
    end else begin
        x_V_in_sig = x_V_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_0_V_ap_vld = 1'b1;
    end else begin
        y_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_1_V_ap_vld = 1'b1;
    end else begin
        y_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_2_V_ap_vld = 1'b1;
    end else begin
        y_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_3_V_ap_vld = 1'b1;
    end else begin
        y_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_4_V_ap_vld = 1'b1;
    end else begin
        y_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_11_fu_500_p2 = (sub_ln1192_9_fu_480_p2 + rhs_V_10_fu_492_p3);

assign add_ln1192_12_fu_517_p2 = ($signed(add_ln1192_11_fu_500_p2) + $signed(sext_ln1192_13_fu_513_p1));

assign add_ln1192_1_fu_284_p2 = ($signed(grp_fu_900_p3) + $signed(rhs_V_2_fu_277_p3));

assign add_ln1192_2_fu_616_p2 = ($signed(sub_ln1192_reg_1029) + $signed(sext_ln1192_3_fu_612_p1));

assign add_ln1192_3_fu_645_p2 = (add_ln1192_2_fu_616_p2 + shl_ln1192_1_fu_637_p3);

assign add_ln1192_5_fu_712_p2 = (sub_ln1192_2_fu_699_p2 + shl_ln1192_4_fu_705_p3);

assign add_ln1192_6_fu_730_p2 = (add_ln1192_5_fu_712_p2 + shl_ln1192_5_fu_722_p3);

assign add_ln1192_8_fu_808_p2 = (sub_ln1192_6_fu_791_p2 + rhs_V_8_fu_800_p3);

assign add_ln1192_9_fu_844_p2 = (sub_ln1192_7_fu_824_p2 + shl_ln1192_8_fu_836_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_900_p2 = ($signed(sext_ln728_fu_258_p1) - $signed(rhs_V_fu_241_p3));

assign grp_fu_909_p0 = sext_ln700_1_fu_268_p1;

assign grp_fu_909_p1 = sext_ln1118_fu_296_p1;

assign grp_fu_909_p2 = sext_ln700_fu_248_p1;

assign grp_fu_936_p0 = sext_ln1192_9_fu_360_p1;

assign grp_fu_936_p2 = {{p_Val2_7_reg_989}, {12'd0}};

assign grp_fu_944_p0 = sext_ln1118_10_fu_432_p1;

assign grp_fu_944_p1 = sext_ln1118_11_fu_442_p1;

assign grp_fu_944_p2 = sext_ln1118_9_fu_412_p1;

assign grp_fu_952_p0 = sext_ln1118_11_fu_442_p1;

assign grp_fu_952_p1 = sext_ln1118_10_fu_432_p1;

assign grp_fu_952_p2 = sext_ln1118_9_fu_412_p1;

assign lhs_V_fu_540_p3 = {{r_V_22_fu_382_p2}, {12'd0}};

assign mul_ln1192_10_fu_446_p0 = sext_ln1118_2_fu_316_p1;

assign mul_ln1192_10_fu_446_p1 = r_V_6_fu_367_p3;

assign mul_ln1192_10_fu_446_p2 = ($signed(mul_ln1192_10_fu_446_p0) * $signed(mul_ln1192_10_fu_446_p1));

assign mul_ln1192_2_fu_632_p0 = sext_ln700_reg_1023;

assign mul_ln1192_2_fu_632_p1 = r_V_2_fu_621_p3;

assign mul_ln1192_2_fu_632_p2 = ($signed(mul_ln1192_2_fu_632_p0) * $signed(mul_ln1192_2_fu_632_p1));

assign mul_ln1192_4_fu_924_p0 = sext_ln1192_9_fu_360_p1;

assign mul_ln1192_5_fu_718_p0 = sext_ln1117_reg_970_pp0_iter1_reg;

assign mul_ln1192_5_fu_718_p1 = sext_ln1118_6_reg_1049;

assign mul_ln1192_5_fu_718_p2 = ($signed(mul_ln1192_5_fu_718_p0) * $signed(mul_ln1192_5_fu_718_p1));

assign mul_ln1192_6_fu_930_p0 = sext_ln1118_7_fu_392_p1;

assign mul_ln1192_9_fu_830_p1 = tmp_5_reg_1014_pp0_iter1_reg;

assign mul_ln1192_9_fu_830_p2 = ($signed({{1'b0}, {12'd29}}) * $signed(mul_ln1192_9_fu_830_p1));

assign r_V_18_fu_199_p0 = sext_ln1117_fu_181_p1;

assign r_V_18_fu_199_p1 = trunc_ln1117_fu_167_p1;

assign r_V_18_fu_199_p2 = ($signed(r_V_18_fu_199_p0) * $signed(r_V_18_fu_199_p1));

assign r_V_19_fu_215_p0 = sext_ln1117_fu_181_p1;

assign r_V_19_fu_215_p1 = sext_ln1117_fu_181_p1;

assign r_V_19_fu_215_p2 = ($signed(r_V_19_fu_215_p0) * $signed(r_V_19_fu_215_p1));

assign r_V_20_fu_325_p3 = {{p_Val2_7_reg_989}, {1'd0}};

assign r_V_21_fu_340_p0 = p_Val2_7_reg_989;

assign r_V_21_fu_340_p1 = r_V_20_fu_325_p3;

assign r_V_21_fu_340_p2 = ($signed(r_V_21_fu_340_p0) * $signed(r_V_21_fu_340_p1));

assign r_V_22_fu_382_p2 = ($signed(sext_ln1118_5_fu_374_p1) - $signed(sext_ln1118_1_fu_313_p1));

assign r_V_23_fu_406_p2 = ($signed(sext_ln1118_8_fu_402_p1) - $signed(sext_ln1118_4_fu_332_p1));

assign r_V_24_fu_779_p0 = sext_ln1117_reg_970_pp0_iter1_reg;

assign r_V_24_fu_779_p1 = sext_ln1118_9_reg_1064;

assign r_V_24_fu_779_p2 = ($signed(r_V_24_fu_779_p0) * $signed(r_V_24_fu_779_p1));

assign r_V_25_fu_796_p0 = sext_ln700_reg_1023;

assign r_V_25_fu_796_p1 = sext_ln1118_9_reg_1064;

assign r_V_25_fu_796_p2 = ($signed(r_V_25_fu_796_p0) * $signed(r_V_25_fu_796_p1));

assign r_V_26_fu_466_p0 = sext_ln700_fu_248_p1;

assign r_V_26_fu_466_p1 = sext_ln1118_2_fu_316_p1;

assign r_V_26_fu_466_p2 = ($signed(r_V_26_fu_466_p0) * $signed(r_V_26_fu_466_p1));

assign r_V_27_fu_486_p0 = sext_ln1118_7_fu_392_p1;

assign r_V_27_fu_486_p1 = sext_ln1118_2_fu_316_p1;

assign r_V_27_fu_486_p2 = ($signed(r_V_27_fu_486_p0) * $signed(r_V_27_fu_486_p1));

assign r_V_28_fu_289_p3 = {{tmp_1_reg_961}, {2'd0}};

assign r_V_29_fu_435_p3 = {{tmp_5_reg_1014}, {2'd0}};

assign r_V_2_fu_621_p3 = {{tmp_2_reg_976_pp0_iter1_reg}, {1'd0}};

assign r_V_30_fu_548_p2 = ($signed(sext_ln1118_fu_296_p1) - $signed(sext_ln700_1_fu_268_p1));

assign r_V_5_fu_350_p0 = sext_ln1118_2_fu_316_p1;

assign r_V_5_fu_350_p1 = sext_ln1118_2_fu_316_p1;

assign r_V_5_fu_350_p2 = ($signed(r_V_5_fu_350_p0) * $signed(r_V_5_fu_350_p1));

assign r_V_6_fu_367_p3 = {{p_Val2_7_reg_989}, {2'd0}};

assign r_V_9_fu_415_p0 = sext_ln1118_9_fu_412_p1;

assign r_V_9_fu_415_p1 = sext_ln1118_2_fu_316_p1;

assign r_V_9_fu_415_p2 = ($signed(r_V_9_fu_415_p0) * $signed(r_V_9_fu_415_p1));

assign ret_V_1_fu_668_p2 = ($signed(20'd1003520) + $signed(sub_ln1192_1_fu_662_p2));

assign ret_V_2_fu_762_p2 = ($signed(24'd15925248) + $signed(sub_ln1192_4_fu_756_p2));

assign ret_V_3_fu_850_p2 = ($signed(20'd1028096) + $signed(add_ln1192_9_fu_844_p2));

assign ret_V_4_fu_883_p2 = ($signed(20'd1015808) + $signed(sub_ln1192_11_fu_878_p2));

assign ret_V_5_fu_570_p2 = ($signed(sext_ln703_fu_554_p1) - $signed(sext_ln728_1_fu_566_p1));

assign ret_V_6_fu_589_p2 = ($signed(24'd16318464) + $signed(sub_ln1192_12_fu_583_p2));

assign rhs_V_10_fu_492_p3 = {{r_V_27_fu_486_p2}, {4'd0}};

assign rhs_V_11_fu_506_p3 = {{p_Val2_7_reg_989}, {9'd0}};

assign rhs_V_12_fu_523_p3 = {{tmp_1_reg_961}, {10'd0}};

assign rhs_V_13_fu_867_p3 = {{tmp_5_reg_1014_pp0_iter1_reg}, {10'd0}};

assign rhs_V_14_fu_558_p3 = {{r_V_30_fu_548_p2}, {12'd0}};

assign rhs_V_1_fu_251_p3 = {{p_Val2_7_reg_989}, {8'd0}};

assign rhs_V_2_fu_277_p3 = {{r_V_19_reg_1002}, {4'd0}};

assign rhs_V_3_fu_605_p3 = {{tmp_1_reg_961_pp0_iter1_reg}, {11'd0}};

assign rhs_V_4_fu_651_p3 = {{tmp_2_reg_976_pp0_iter1_reg}, {11'd0}};

assign rhs_V_5_fu_749_p3 = {{r_V_23_reg_1059}, {12'd0}};

assign rhs_V_7_fu_783_p3 = {{r_V_24_fu_779_p2}, {4'd0}};

assign rhs_V_8_fu_800_p3 = {{r_V_25_fu_796_p2}, {4'd0}};

assign rhs_V_9_fu_472_p3 = {{r_V_26_fu_466_p2}, {4'd0}};

assign rhs_V_fu_241_p3 = {{r_V_18_reg_984}, {4'd0}};

assign sext_ln1117_fu_181_p1 = tmp_1_fu_171_p4;

assign sext_ln1118_10_fu_432_p1 = tmp_5_reg_1014;

assign sext_ln1118_11_fu_442_p1 = $signed(r_V_29_fu_435_p3);

assign sext_ln1118_1_fu_313_p1 = p_Val2_7_reg_989;

assign sext_ln1118_2_fu_316_p1 = p_Val2_7_reg_989;

assign sext_ln1118_4_fu_332_p1 = r_V_20_fu_325_p3;

assign sext_ln1118_5_fu_374_p1 = r_V_6_fu_367_p3;

assign sext_ln1118_6_fu_378_p1 = r_V_6_fu_367_p3;

assign sext_ln1118_7_fu_392_p1 = tmp_4_reg_1008;

assign sext_ln1118_8_fu_402_p1 = $signed(shl_ln1118_6_fu_395_p3);

assign sext_ln1118_9_fu_412_p1 = tmp_5_reg_1014;

assign sext_ln1118_fu_296_p1 = $signed(r_V_28_fu_289_p3);

assign sext_ln1192_13_fu_513_p1 = $signed(rhs_V_11_fu_506_p3);

assign sext_ln1192_14_fu_530_p1 = $signed(rhs_V_12_fu_523_p3);

assign sext_ln1192_15_fu_874_p1 = $signed(rhs_V_13_fu_867_p3);

assign sext_ln1192_3_fu_612_p1 = $signed(rhs_V_3_fu_605_p3);

assign sext_ln1192_5_fu_658_p1 = $signed(rhs_V_4_fu_651_p3);

assign sext_ln1192_9_fu_360_p1 = tmp_4_reg_1008;

assign sext_ln700_1_fu_268_p1 = tmp_1_reg_961;

assign sext_ln700_fu_248_p1 = tmp_2_reg_976;

assign sext_ln703_fu_554_p1 = $signed(lhs_V_fu_540_p3);

assign sext_ln728_1_fu_566_p1 = $signed(rhs_V_14_fu_558_p3);

assign sext_ln728_fu_258_p1 = $signed(rhs_V_1_fu_251_p3);

assign shl_ln1118_6_fu_395_p3 = {{p_Val2_7_reg_989}, {3'd0}};

assign shl_ln1192_1_fu_637_p3 = {{mul_ln1192_2_fu_632_p2}, {4'd0}};

assign shl_ln1192_2_fu_685_p3 = {{mul_ln1192_3_reg_1034}, {4'd0}};

assign shl_ln1192_3_fu_692_p3 = {{mul_ln1192_4_reg_1039}, {4'd0}};

assign shl_ln1192_4_fu_705_p3 = {{trunc_ln1192_reg_1044}, {8'd0}};

assign shl_ln1192_5_fu_722_p3 = {{mul_ln1192_5_fu_718_p2}, {8'd0}};

assign shl_ln1192_6_fu_736_p3 = {{mul_ln1192_6_reg_1054}, {8'd0}};

assign shl_ln1192_7_fu_817_p3 = {{mul_ln1192_8_reg_1075}, {4'd0}};

assign shl_ln1192_8_fu_836_p3 = {{mul_ln1192_9_fu_830_p2}, {8'd0}};

assign shl_ln1192_9_fu_452_p3 = {{mul_ln1192_10_fu_446_p2}, {4'd0}};

assign shl_ln1192_s_fu_576_p3 = {{grp_fu_952_p3}, {8'd0}};

assign shl_ln_fu_300_p3 = {{grp_fu_909_p3}, {4'd0}};

assign sub_ln1192_10_fu_534_p2 = ($signed(add_ln1192_12_fu_517_p2) - $signed(sext_ln1192_14_fu_530_p1));

assign sub_ln1192_11_fu_878_p2 = ($signed(sub_ln1192_10_reg_1080) - $signed(sext_ln1192_15_fu_874_p1));

assign sub_ln1192_12_fu_583_p2 = (ret_V_5_fu_570_p2 - shl_ln1192_s_fu_576_p3);

assign sub_ln1192_1_fu_662_p2 = ($signed(add_ln1192_3_fu_645_p2) - $signed(sext_ln1192_5_fu_658_p1));

assign sub_ln1192_2_fu_699_p2 = (shl_ln1192_3_fu_692_p3 - shl_ln1192_2_fu_685_p3);

assign sub_ln1192_3_fu_743_p2 = (add_ln1192_6_fu_730_p2 - shl_ln1192_6_fu_736_p3);

assign sub_ln1192_4_fu_756_p2 = (sub_ln1192_3_fu_743_p2 - rhs_V_5_fu_749_p3);

assign sub_ln1192_6_fu_791_p2 = ($signed(sub_ln1192_5_reg_1070) - $signed(rhs_V_7_fu_783_p3));

assign sub_ln1192_7_fu_824_p2 = (add_ln1192_8_fu_808_p2 - shl_ln1192_7_fu_817_p3);

assign sub_ln1192_8_fu_460_p2 = (20'd0 - shl_ln1192_9_fu_452_p3);

assign sub_ln1192_9_fu_480_p2 = (sub_ln1192_8_fu_460_p2 - rhs_V_9_fu_472_p3);

assign sub_ln1192_fu_307_p2 = (add_ln1192_1_fu_284_p2 - shl_ln_fu_300_p3);

assign tmp_1_fu_171_p4 = {{x_V_in_sig[127:120]}};

assign trunc_ln1117_fu_167_p1 = x_V_in_sig[7:0];

assign trunc_ln1192_fu_363_p1 = r_V_21_fu_340_p2[15:0];

assign y_0_V = {{ret_V_1_fu_668_p2[19:12]}};

assign y_1_V = {{ret_V_2_fu_762_p2[23:16]}};

assign y_2_V = {{ret_V_3_fu_850_p2[19:12]}};

assign y_3_V = {{ret_V_4_fu_883_p2[19:12]}};

assign y_4_V = trunc_ln708_4_reg_1085;

always @ (posedge ap_clk) begin
    trunc_ln1192_reg_1044[0] <= 1'b0;
    sext_ln1118_6_reg_1049[1:0] <= 2'b00;
    r_V_23_reg_1059[0] <= 1'b0;
    sub_ln1192_10_reg_1080[3:0] <= 4'b0000;
end

endmodule //myproject
