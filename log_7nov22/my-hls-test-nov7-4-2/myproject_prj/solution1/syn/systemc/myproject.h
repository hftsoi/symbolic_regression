// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > x_V;
    sc_in< sc_logic > x_V_ap_vld;
    sc_out< sc_lv<4> > y_0_V;
    sc_out< sc_logic > y_0_V_ap_vld;
    sc_out< sc_lv<4> > y_1_V;
    sc_out< sc_logic > y_1_V_ap_vld;
    sc_out< sc_lv<4> > y_2_V;
    sc_out< sc_logic > y_2_V_ap_vld;
    sc_out< sc_lv<4> > y_3_V;
    sc_out< sc_logic > y_3_V_ap_vld;
    sc_out< sc_lv<4> > y_4_V;
    sc_out< sc_logic > y_4_V_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > x_V_preg;
    sc_signal< sc_lv<64> > x_V_in_sig;
    sc_signal< sc_logic > x_V_ap_vld_preg;
    sc_signal< sc_logic > x_V_ap_vld_in_sig;
    sc_signal< sc_logic > x_V_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<4> > tmp_1_fu_152_p4;
    sc_signal< sc_lv<4> > tmp_fu_142_p4;
    sc_signal< sc_lv<4> > r_V_fu_180_p0;
    sc_signal< sc_lv<8> > sext_ln1116_fu_176_p1;
    sc_signal< sc_lv<4> > r_V_fu_180_p1;
    sc_signal< sc_lv<8> > r_V_fu_180_p2;
    sc_signal< sc_lv<9> > rhs_V_1_fu_194_p3;
    sc_signal< sc_lv<10> > sext_ln728_fu_202_p1;
    sc_signal< sc_lv<10> > rhs_V_fu_186_p3;
    sc_signal< sc_lv<9> > rhs_V_2_fu_212_p3;
    sc_signal< sc_lv<10> > ret_V_fu_206_p2;
    sc_signal< sc_lv<10> > sext_ln1192_fu_220_p1;
    sc_signal< sc_lv<10> > sub_ln1192_fu_224_p2;
    sc_signal< sc_lv<10> > ret_V_1_fu_230_p2;
    sc_signal< sc_lv<4> > p_Val2_6_fu_166_p4;
    sc_signal< sc_lv<4> > r_V_1_fu_251_p0;
    sc_signal< sc_lv<4> > r_V_1_fu_251_p1;
    sc_signal< sc_lv<8> > sext_ln1116_1_fu_247_p1;
    sc_signal< sc_lv<8> > r_V_1_fu_251_p2;
    sc_signal< sc_lv<10> > rhs_V_4_fu_265_p3;
    sc_signal< sc_lv<12> > rhs_V_9_fu_257_p3;
    sc_signal< sc_lv<12> > sext_ln1192_1_fu_273_p1;
    sc_signal< sc_lv<12> > sub_ln1192_1_fu_277_p2;
    sc_signal< sc_lv<12> > ret_V_2_fu_283_p2;
    sc_signal< sc_lv<4> > tmp_3_fu_300_p4;
    sc_signal< sc_lv<4> > r_V_2_fu_324_p0;
    sc_signal< sc_lv<8> > sext_ln700_fu_310_p1;
    sc_signal< sc_lv<4> > r_V_2_fu_324_p1;
    sc_signal< sc_lv<8> > r_V_2_fu_324_p2;
    sc_signal< sc_lv<10> > sub_ln1192_2_fu_314_p2;
    sc_signal< sc_lv<10> > rhs_V_5_fu_330_p3;
    sc_signal< sc_lv<3> > tmp_6_fu_344_p4;
    sc_signal< sc_lv<6> > shl_ln_fu_354_p3;
    sc_signal< sc_lv<6> > sext_ln1192_2_fu_320_p1;
    sc_signal< sc_lv<6> > sub_ln1192_4_fu_362_p2;
    sc_signal< sc_lv<10> > shl_ln1192_1_fu_368_p3;
    sc_signal< sc_lv<10> > sub_ln1192_3_fu_338_p2;
    sc_signal< sc_lv<10> > add_ln1192_fu_376_p2;
    sc_signal< sc_lv<10> > ret_V_3_fu_382_p2;
    sc_signal< sc_lv<4> > r_V_3_fu_399_p0;
    sc_signal< sc_lv<4> > r_V_3_fu_399_p1;
    sc_signal< sc_lv<8> > r_V_3_fu_399_p2;
    sc_signal< sc_lv<10> > rhs_V_6_fu_405_p3;
    sc_signal< sc_lv<8> > rhs_V_7_fu_419_p3;
    sc_signal< sc_lv<10> > ret_V_4_fu_413_p2;
    sc_signal< sc_lv<10> > sext_ln728_1_fu_427_p1;
    sc_signal< sc_lv<8> > rhs_V_8_fu_437_p3;
    sc_signal< sc_lv<10> > ret_V_5_fu_431_p2;
    sc_signal< sc_lv<10> > sext_ln1192_3_fu_445_p1;
    sc_signal< sc_lv<10> > sub_ln1192_5_fu_449_p2;
    sc_signal< sc_lv<10> > ret_V_6_fu_455_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<10> ap_const_lv10_340;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<12> ap_const_lv12_C00;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<10> ap_const_lv10_380;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_fu_376_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_p_Val2_6_fu_166_p4();
    void thread_r_V_1_fu_251_p0();
    void thread_r_V_1_fu_251_p1();
    void thread_r_V_1_fu_251_p2();
    void thread_r_V_2_fu_324_p0();
    void thread_r_V_2_fu_324_p1();
    void thread_r_V_2_fu_324_p2();
    void thread_r_V_3_fu_399_p0();
    void thread_r_V_3_fu_399_p1();
    void thread_r_V_3_fu_399_p2();
    void thread_r_V_fu_180_p0();
    void thread_r_V_fu_180_p1();
    void thread_r_V_fu_180_p2();
    void thread_ret_V_1_fu_230_p2();
    void thread_ret_V_2_fu_283_p2();
    void thread_ret_V_3_fu_382_p2();
    void thread_ret_V_4_fu_413_p2();
    void thread_ret_V_5_fu_431_p2();
    void thread_ret_V_6_fu_455_p2();
    void thread_ret_V_fu_206_p2();
    void thread_rhs_V_1_fu_194_p3();
    void thread_rhs_V_2_fu_212_p3();
    void thread_rhs_V_4_fu_265_p3();
    void thread_rhs_V_5_fu_330_p3();
    void thread_rhs_V_6_fu_405_p3();
    void thread_rhs_V_7_fu_419_p3();
    void thread_rhs_V_8_fu_437_p3();
    void thread_rhs_V_9_fu_257_p3();
    void thread_rhs_V_fu_186_p3();
    void thread_sext_ln1116_1_fu_247_p1();
    void thread_sext_ln1116_fu_176_p1();
    void thread_sext_ln1192_1_fu_273_p1();
    void thread_sext_ln1192_2_fu_320_p1();
    void thread_sext_ln1192_3_fu_445_p1();
    void thread_sext_ln1192_fu_220_p1();
    void thread_sext_ln700_fu_310_p1();
    void thread_sext_ln728_1_fu_427_p1();
    void thread_sext_ln728_fu_202_p1();
    void thread_shl_ln1192_1_fu_368_p3();
    void thread_shl_ln_fu_354_p3();
    void thread_sub_ln1192_1_fu_277_p2();
    void thread_sub_ln1192_2_fu_314_p2();
    void thread_sub_ln1192_3_fu_338_p2();
    void thread_sub_ln1192_4_fu_362_p2();
    void thread_sub_ln1192_5_fu_449_p2();
    void thread_sub_ln1192_fu_224_p2();
    void thread_tmp_1_fu_152_p4();
    void thread_tmp_3_fu_300_p4();
    void thread_tmp_6_fu_344_p4();
    void thread_tmp_fu_142_p4();
    void thread_x_V_ap_vld_in_sig();
    void thread_x_V_blk_n();
    void thread_x_V_in_sig();
    void thread_y_0_V();
    void thread_y_0_V_ap_vld();
    void thread_y_1_V();
    void thread_y_1_V_ap_vld();
    void thread_y_2_V();
    void thread_y_2_V_ap_vld();
    void thread_y_3_V();
    void thread_y_3_V_ap_vld();
    void thread_y_4_V();
    void thread_y_4_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
