// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flga2577-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.313687,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=488,HLS_SYN_LUT=1381,HLS_VERSION=2020_1}" *)

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V_ap_vld,
        x_V,
        y_0_V,
        y_0_V_ap_vld,
        y_1_V,
        y_1_V_ap_vld,
        y_2_V,
        y_2_V_ap_vld,
        y_3_V,
        y_3_V_ap_vld,
        y_4_V,
        y_4_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   x_V_ap_vld;
input  [143:0] x_V;
output  [8:0] y_0_V;
output   y_0_V_ap_vld;
output  [8:0] y_1_V;
output   y_1_V_ap_vld;
output  [8:0] y_2_V;
output   y_2_V_ap_vld;
output  [8:0] y_3_V;
output   y_3_V_ap_vld;
output  [8:0] y_4_V;
output   y_4_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg y_0_V_ap_vld;
reg y_1_V_ap_vld;
reg y_2_V_ap_vld;
reg y_3_V_ap_vld;
reg y_4_V_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    x_V_ap_vld_in_sig;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [143:0] x_V_preg;
reg   [143:0] x_V_in_sig;
reg    x_V_ap_vld_preg;
reg    x_V_blk_n;
wire    ap_block_pp0_stage0;
wire  signed [8:0] tmp_1_fu_175_p4;
reg  signed [8:0] tmp_1_reg_996;
wire  signed [8:0] tmp_2_fu_189_p4;
reg  signed [8:0] tmp_2_reg_1002;
wire  signed [16:0] sext_ln1118_1_fu_203_p1;
reg  signed [16:0] sext_ln1118_1_reg_1008;
wire  signed [16:0] sext_ln1192_fu_221_p1;
reg  signed [16:0] sext_ln1192_reg_1013;
wire  signed [8:0] p_Val2_5_fu_225_p4;
reg  signed [8:0] p_Val2_5_reg_1020;
wire  signed [20:0] grp_fu_925_p3;
reg  signed [20:0] add_ln1192_reg_1026;
wire   [16:0] trunc_ln1192_fu_271_p1;
reg   [16:0] trunc_ln1192_reg_1031;
wire  signed [16:0] grp_fu_933_p3;
reg  signed [16:0] mul_ln1192_2_reg_1036;
wire  signed [9:0] r_V_14_fu_313_p3;
reg  signed [9:0] r_V_14_reg_1041;
wire  signed [20:0] mul_ln1192_4_fu_941_p2;
reg  signed [20:0] mul_ln1192_4_reg_1046;
wire  signed [20:0] mul_ln1192_5_fu_947_p2;
reg  signed [20:0] mul_ln1192_5_reg_1051;
wire   [16:0] trunc_ln1192_1_fu_349_p1;
reg   [16:0] trunc_ln1192_1_reg_1056;
wire  signed [16:0] mul_ln1192_6_fu_953_p2;
reg  signed [16:0] mul_ln1192_6_reg_1061;
wire  signed [16:0] sext_ln1192_13_fu_379_p1;
reg  signed [16:0] sext_ln1192_13_reg_1066;
wire  signed [16:0] mul_ln1192_7_fu_959_p2;
reg  signed [16:0] mul_ln1192_7_reg_1071;
wire  signed [8:0] tmp_5_fu_383_p4;
reg  signed [8:0] tmp_5_reg_1076;
wire  signed [20:0] grp_fu_965_p3;
reg  signed [20:0] sub_ln1192_6_reg_1082;
wire  signed [16:0] sext_ln1118_11_fu_415_p1;
reg  signed [16:0] sext_ln1118_11_reg_1087;
wire  signed [16:0] grp_fu_973_p3;
reg  signed [16:0] mul_ln1192_11_reg_1093;
wire  signed [16:0] sext_ln1118_15_fu_435_p1;
reg  signed [16:0] sext_ln1118_15_reg_1098;
wire  signed [16:0] mul_ln1192_13_fu_981_p2;
reg  signed [16:0] mul_ln1192_13_reg_1104;
reg   [8:0] trunc_ln708_4_reg_1109;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] trunc_ln1117_fu_171_p1;
wire  signed [8:0] mul_ln1192_fu_207_p0;
wire  signed [8:0] mul_ln1192_fu_207_p1;
wire   [16:0] mul_ln1192_fu_207_p2;
wire   [16:0] rhs_V_fu_235_p3;
wire  signed [20:0] sext_ln1192_1_fu_243_p1;
wire   [20:0] shl_ln_fu_213_p3;
wire  signed [8:0] r_V_13_fu_257_p0;
wire  signed [17:0] sext_ln1117_fu_185_p1;
wire  signed [8:0] r_V_13_fu_257_p1;
wire  signed [17:0] r_V_13_fu_257_p2;
wire   [10:0] r_V_18_fu_275_p3;
wire  signed [8:0] r_V_15_fu_325_p0;
wire  signed [9:0] r_V_15_fu_325_p1;
wire  signed [18:0] r_V_15_fu_325_p2;
wire  signed [8:0] r_V_4_fu_335_p0;
wire  signed [17:0] sext_ln1118_4_fu_291_p1;
wire  signed [8:0] r_V_4_fu_335_p1;
wire  signed [17:0] r_V_4_fu_335_p2;
wire  signed [8:0] tmp_4_fu_303_p4;
wire  signed [10:0] r_V_5_fu_353_p3;
wire  signed [11:0] sext_ln1118_7_fu_361_p1;
wire  signed [11:0] sext_ln1118_3_fu_287_p1;
wire  signed [11:0] r_V_16_fu_369_p2;
wire  signed [8:0] r_V_8_fu_397_p0;
wire  signed [8:0] r_V_8_fu_397_p1;
wire  signed [17:0] r_V_8_fu_397_p2;
wire   [10:0] r_V_19_fu_423_p3;
wire  signed [11:0] sext_ln1118_2_fu_283_p1;
wire  signed [11:0] sext_ln700_fu_253_p1;
wire   [23:0] lhs_V_fu_439_p3;
wire   [11:0] r_V_20_fu_447_p2;
wire   [23:0] rhs_V_8_fu_457_p3;
wire  signed [24:0] sext_ln703_fu_453_p1;
wire  signed [24:0] sext_ln728_fu_465_p1;
wire  signed [16:0] grp_fu_987_p3;
wire   [24:0] ret_V_4_fu_469_p2;
wire   [24:0] shl_ln1192_15_fu_475_p3;
wire   [24:0] sub_ln1192_13_fu_482_p2;
wire   [24:0] ret_V_5_fu_488_p2;
wire   [20:0] shl_ln1192_1_fu_504_p3;
(* use_dsp48 = "no" *) wire   [20:0] add_ln1192_1_fu_511_p2;
wire   [20:0] shl_ln1192_2_fu_516_p3;
wire   [19:0] rhs_V_1_fu_529_p3;
wire   [20:0] sub_ln1192_1_fu_523_p2;
wire  signed [20:0] sext_ln1192_5_fu_536_p1;
wire   [9:0] r_V_2_fu_546_p3;
wire  signed [8:0] mul_ln1192_3_fu_557_p0;
wire  signed [9:0] mul_ln1192_3_fu_557_p1;
wire   [16:0] mul_ln1192_3_fu_557_p2;
wire   [20:0] add_ln1192_2_fu_540_p2;
wire   [20:0] shl_ln1192_3_fu_562_p3;
wire   [19:0] rhs_V_2_fu_576_p3;
wire   [20:0] add_ln1192_3_fu_570_p2;
wire  signed [20:0] sext_ln1192_7_fu_583_p1;
wire   [20:0] sub_ln1192_2_fu_587_p2;
wire   [20:0] ret_V_fu_593_p2;
wire   [24:0] shl_ln1192_5_fu_620_p3;
wire   [24:0] shl_ln1192_4_fu_613_p3;
wire   [24:0] sub_ln1192_3_fu_627_p2;
wire   [24:0] shl_ln1192_6_fu_633_p3;
wire   [24:0] add_ln1192_5_fu_640_p2;
wire   [24:0] shl_ln1192_7_fu_646_p3;
wire   [24:0] add_ln1192_6_fu_653_p2;
wire   [24:0] shl_ln1192_8_fu_659_p3;
wire   [11:0] shl_ln1118_6_fu_672_p3;
wire  signed [12:0] sext_ln1118_9_fu_679_p1;
wire  signed [12:0] sext_ln1118_6_fu_610_p1;
wire   [12:0] r_V_17_fu_683_p2;
wire   [24:0] sub_ln1192_4_fu_666_p2;
wire   [24:0] rhs_V_3_fu_689_p3;
wire   [24:0] sub_ln1192_5_fu_697_p2;
wire   [24:0] ret_V_1_fu_703_p2;
wire  signed [8:0] mul_ln1192_9_fu_720_p0;
wire  signed [8:0] mul_ln1192_9_fu_720_p1;
wire   [16:0] mul_ln1192_9_fu_720_p2;
wire   [20:0] shl_ln1192_9_fu_724_p3;
wire  signed [8:0] mul_ln1192_10_fu_737_p0;
wire  signed [8:0] mul_ln1192_10_fu_737_p1;
wire   [16:0] mul_ln1192_10_fu_737_p2;
(* use_dsp48 = "no" *) wire   [20:0] sub_ln1192_7_fu_732_p2;
wire   [20:0] shl_ln1192_s_fu_741_p3;
wire   [20:0] add_ln1192_8_fu_749_p2;
wire   [20:0] shl_ln1192_10_fu_758_p3;
wire  signed [8:0] mul_ln1192_12_fu_771_p1;
wire   [12:0] mul_ln1192_12_fu_771_p2;
wire   [20:0] sub_ln1192_8_fu_765_p2;
wire   [20:0] shl_ln1192_11_fu_777_p3;
wire   [20:0] add_ln1192_9_fu_785_p2;
wire   [20:0] ret_V_2_fu_791_p2;
wire   [20:0] shl_ln1192_12_fu_808_p3;
wire  signed [8:0] mul_ln1192_14_fu_821_p0;
wire  signed [8:0] mul_ln1192_14_fu_821_p1;
wire   [16:0] mul_ln1192_14_fu_821_p2;
wire   [20:0] sub_ln1192_9_fu_815_p2;
wire   [20:0] shl_ln1192_13_fu_825_p3;
wire  signed [8:0] mul_ln1192_15_fu_839_p0;
wire  signed [8:0] mul_ln1192_15_fu_839_p1;
wire   [16:0] mul_ln1192_15_fu_839_p2;
wire   [20:0] sub_ln1192_10_fu_833_p2;
wire   [20:0] shl_ln1192_14_fu_843_p3;
wire   [17:0] rhs_V_5_fu_857_p3;
wire   [20:0] add_ln1192_11_fu_851_p2;
wire  signed [20:0] sext_ln1192_16_fu_864_p1;
wire   [18:0] rhs_V_6_fu_874_p3;
wire   [20:0] add_ln1192_12_fu_868_p2;
wire  signed [20:0] sext_ln1192_17_fu_881_p1;
wire   [18:0] rhs_V_7_fu_891_p3;
wire   [20:0] sub_ln1192_11_fu_885_p2;
wire  signed [20:0] sext_ln1192_18_fu_898_p1;
wire   [20:0] sub_ln1192_12_fu_902_p2;
wire   [20:0] ret_V_3_fu_908_p2;
wire   [20:0] grp_fu_925_p2;
wire  signed [8:0] grp_fu_933_p0;
wire  signed [10:0] grp_fu_933_p1;
wire  signed [8:0] mul_ln1192_5_fu_947_p0;
wire  signed [20:0] sext_ln1192_11_fu_345_p1;
wire  signed [8:0] mul_ln1192_6_fu_953_p0;
wire  signed [10:0] mul_ln1192_6_fu_953_p1;
wire  signed [16:0] sext_ln1118_8_fu_365_p1;
wire  signed [8:0] grp_fu_965_p0;
wire   [20:0] grp_fu_965_p2;
wire  signed [8:0] grp_fu_973_p0;
wire  signed [11:0] sext_ln1118_12_fu_419_p1;
wire  signed [10:0] grp_fu_973_p1;
wire  signed [11:0] sext_ln1118_13_fu_431_p1;
wire  signed [8:0] grp_fu_973_p2;
wire  signed [10:0] mul_ln1192_13_fu_981_p1;
wire  signed [10:0] grp_fu_987_p0;
wire  signed [8:0] grp_fu_987_p1;
wire  signed [8:0] grp_fu_987_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 x_V_preg = 144'd0;
#0 x_V_ap_vld_preg = 1'b0;
end

myproject_mac_muladd_9s_18s_21ns_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
myproject_mac_muladd_9s_18s_21ns_21_1_1_U1(
    .din0(tmp_2_fu_189_p4),
    .din1(r_V_13_fu_257_p2),
    .din2(grp_fu_925_p2),
    .dout(grp_fu_925_p3)
);

myproject_am_addmul_9s_11s_9s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
myproject_am_addmul_9s_11s_9s_17_1_1_U2(
    .din0(grp_fu_933_p0),
    .din1(grp_fu_933_p1),
    .din2(tmp_2_fu_189_p4),
    .dout(grp_fu_933_p3)
);

myproject_mul_mul_9s_19s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_9s_19s_21_1_1_U3(
    .din0(tmp_1_fu_175_p4),
    .din1(r_V_15_fu_325_p2),
    .dout(mul_ln1192_4_fu_941_p2)
);

myproject_mul_mul_9s_18s_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 21 ))
myproject_mul_mul_9s_18s_21_1_1_U4(
    .din0(mul_ln1192_5_fu_947_p0),
    .din1(r_V_4_fu_335_p2),
    .dout(mul_ln1192_5_fu_947_p2)
);

myproject_mul_mul_9s_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
myproject_mul_mul_9s_11s_17_1_1_U5(
    .din0(mul_ln1192_6_fu_953_p0),
    .din1(mul_ln1192_6_fu_953_p1),
    .dout(mul_ln1192_6_fu_953_p2)
);

myproject_mul_mul_9s_12s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 17 ))
myproject_mul_mul_9s_12s_17_1_1_U6(
    .din0(tmp_4_fu_303_p4),
    .din1(r_V_16_fu_369_p2),
    .dout(mul_ln1192_7_fu_959_p2)
);

myproject_mac_mul_sub_9s_18s_21ns_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
myproject_mac_mul_sub_9s_18s_21ns_21_1_1_U7(
    .din0(grp_fu_965_p0),
    .din1(r_V_8_fu_397_p2),
    .din2(grp_fu_965_p2),
    .dout(grp_fu_965_p3)
);

myproject_am_addmul_9s_11s_9s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
myproject_am_addmul_9s_11s_9s_17_1_1_U8(
    .din0(grp_fu_973_p0),
    .din1(grp_fu_973_p1),
    .din2(grp_fu_973_p2),
    .dout(grp_fu_973_p3)
);

myproject_mul_mul_9s_11s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
myproject_mul_mul_9s_11s_17_1_1_U9(
    .din0(p_Val2_5_fu_225_p4),
    .din1(mul_ln1192_13_fu_981_p1),
    .dout(mul_ln1192_13_fu_981_p2)
);

myproject_am_submul_11s_9s_9s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
myproject_am_submul_11s_9s_9s_17_1_1_U10(
    .din0(grp_fu_987_p0),
    .din1(grp_fu_987_p1),
    .din2(grp_fu_987_p2),
    .dout(grp_fu_987_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_ap_vld_preg <= x_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_V_preg <= 144'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (x_V_ap_vld == 1'b1))) begin
            x_V_preg <= x_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1192_reg_1026 <= grp_fu_925_p3;
        mul_ln1192_11_reg_1093 <= grp_fu_973_p3;
        mul_ln1192_2_reg_1036 <= grp_fu_933_p3;
        sub_ln1192_6_reg_1082 <= grp_fu_965_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1192_13_reg_1104 <= mul_ln1192_13_fu_981_p2;
        mul_ln1192_4_reg_1046 <= mul_ln1192_4_fu_941_p2;
        mul_ln1192_5_reg_1051 <= mul_ln1192_5_fu_947_p2;
        mul_ln1192_6_reg_1061 <= mul_ln1192_6_fu_953_p2;
        mul_ln1192_7_reg_1071 <= mul_ln1192_7_fu_959_p2;
        p_Val2_5_reg_1020 <= {{x_V_in_sig[134:126]}};
        r_V_14_reg_1041[9 : 1] <= r_V_14_fu_313_p3[9 : 1];
        sext_ln1118_11_reg_1087 <= sext_ln1118_11_fu_415_p1;
        sext_ln1118_15_reg_1098 <= sext_ln1118_15_fu_435_p1;
        sext_ln1118_1_reg_1008 <= sext_ln1118_1_fu_203_p1;
        sext_ln1192_13_reg_1066 <= sext_ln1192_13_fu_379_p1;
        sext_ln1192_reg_1013 <= sext_ln1192_fu_221_p1;
        tmp_1_reg_996 <= {{x_V_in_sig[143:135]}};
        tmp_2_reg_1002 <= {{x_V_in_sig[26:18]}};
        tmp_5_reg_1076 <= {{x_V_in_sig[35:27]}};
        trunc_ln1192_1_reg_1056[16 : 1] <= trunc_ln1192_1_fu_349_p1[16 : 1];
        trunc_ln1192_reg_1031 <= trunc_ln1192_fu_271_p1;
        trunc_ln708_4_reg_1109 <= {{ret_V_5_fu_488_p2[24:16]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_ap_vld_in_sig = x_V_ap_vld;
    end else begin
        x_V_ap_vld_in_sig = x_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_V_blk_n = x_V_ap_vld;
    end else begin
        x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((x_V_ap_vld == 1'b1)) begin
        x_V_in_sig = x_V;
    end else begin
        x_V_in_sig = x_V_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_0_V_ap_vld = 1'b1;
    end else begin
        y_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_1_V_ap_vld = 1'b1;
    end else begin
        y_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_2_V_ap_vld = 1'b1;
    end else begin
        y_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_3_V_ap_vld = 1'b1;
    end else begin
        y_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_4_V_ap_vld = 1'b1;
    end else begin
        y_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_11_fu_851_p2 = (sub_ln1192_10_fu_833_p2 + shl_ln1192_14_fu_843_p3);

assign add_ln1192_12_fu_868_p2 = ($signed(add_ln1192_11_fu_851_p2) + $signed(sext_ln1192_16_fu_864_p1));

assign add_ln1192_1_fu_511_p2 = ($signed(add_ln1192_reg_1026) + $signed(shl_ln1192_1_fu_504_p3));

assign add_ln1192_2_fu_540_p2 = ($signed(sub_ln1192_1_fu_523_p2) + $signed(sext_ln1192_5_fu_536_p1));

assign add_ln1192_3_fu_570_p2 = (add_ln1192_2_fu_540_p2 + shl_ln1192_3_fu_562_p3);

assign add_ln1192_5_fu_640_p2 = (sub_ln1192_3_fu_627_p2 + shl_ln1192_6_fu_633_p3);

assign add_ln1192_6_fu_653_p2 = (add_ln1192_5_fu_640_p2 + shl_ln1192_7_fu_646_p3);

assign add_ln1192_8_fu_749_p2 = (sub_ln1192_7_fu_732_p2 + shl_ln1192_s_fu_741_p3);

assign add_ln1192_9_fu_785_p2 = (sub_ln1192_8_fu_765_p2 + shl_ln1192_11_fu_777_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (x_V_ap_vld_in_sig == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_925_p2 = ($signed(sext_ln1192_1_fu_243_p1) - $signed(shl_ln_fu_213_p3));

assign grp_fu_933_p0 = sext_ln700_fu_253_p1;

assign grp_fu_933_p1 = sext_ln1118_2_fu_283_p1;

assign grp_fu_965_p0 = sext_ln1192_11_fu_345_p1;

assign grp_fu_965_p2 = {{p_Val2_5_fu_225_p4}, {12'd0}};

assign grp_fu_973_p0 = sext_ln1118_12_fu_419_p1;

assign grp_fu_973_p1 = sext_ln1118_13_fu_431_p1;

assign grp_fu_973_p2 = sext_ln1118_11_fu_415_p1;

assign grp_fu_987_p0 = sext_ln1118_13_fu_431_p1;

assign grp_fu_987_p1 = sext_ln1118_12_fu_419_p1;

assign grp_fu_987_p2 = sext_ln1118_11_fu_415_p1;

assign lhs_V_fu_439_p3 = {{r_V_16_fu_369_p2}, {12'd0}};

assign mul_ln1192_10_fu_737_p0 = sext_ln1192_reg_1013;

assign mul_ln1192_10_fu_737_p1 = sext_ln1118_11_reg_1087;

assign mul_ln1192_10_fu_737_p2 = ($signed(mul_ln1192_10_fu_737_p0) * $signed(mul_ln1192_10_fu_737_p1));

assign mul_ln1192_12_fu_771_p1 = tmp_5_reg_1076;

assign mul_ln1192_12_fu_771_p2 = ($signed({{1'b0}, {13'd29}}) * $signed(mul_ln1192_12_fu_771_p1));

assign mul_ln1192_13_fu_981_p1 = sext_ln1118_8_fu_365_p1;

assign mul_ln1192_14_fu_821_p0 = sext_ln1192_reg_1013;

assign mul_ln1192_14_fu_821_p1 = sext_ln1118_15_reg_1098;

assign mul_ln1192_14_fu_821_p2 = ($signed(mul_ln1192_14_fu_821_p0) * $signed(mul_ln1192_14_fu_821_p1));

assign mul_ln1192_15_fu_839_p0 = sext_ln1192_13_reg_1066;

assign mul_ln1192_15_fu_839_p1 = sext_ln1118_15_reg_1098;

assign mul_ln1192_15_fu_839_p2 = ($signed(mul_ln1192_15_fu_839_p0) * $signed(mul_ln1192_15_fu_839_p1));

assign mul_ln1192_3_fu_557_p0 = sext_ln1192_reg_1013;

assign mul_ln1192_3_fu_557_p1 = r_V_2_fu_546_p3;

assign mul_ln1192_3_fu_557_p2 = ($signed(mul_ln1192_3_fu_557_p0) * $signed(mul_ln1192_3_fu_557_p1));

assign mul_ln1192_5_fu_947_p0 = sext_ln1192_11_fu_345_p1;

assign mul_ln1192_6_fu_953_p0 = sext_ln1118_1_fu_203_p1;

assign mul_ln1192_6_fu_953_p1 = sext_ln1118_8_fu_365_p1;

assign mul_ln1192_9_fu_720_p0 = sext_ln1118_1_reg_1008;

assign mul_ln1192_9_fu_720_p1 = sext_ln1118_11_reg_1087;

assign mul_ln1192_9_fu_720_p2 = ($signed(mul_ln1192_9_fu_720_p0) * $signed(mul_ln1192_9_fu_720_p1));

assign mul_ln1192_fu_207_p0 = sext_ln1118_1_fu_203_p1;

assign mul_ln1192_fu_207_p1 = trunc_ln1117_fu_171_p1;

assign mul_ln1192_fu_207_p2 = ($signed(mul_ln1192_fu_207_p0) * $signed(mul_ln1192_fu_207_p1));

assign p_Val2_5_fu_225_p4 = {{x_V_in_sig[134:126]}};

assign r_V_13_fu_257_p0 = sext_ln1117_fu_185_p1;

assign r_V_13_fu_257_p1 = sext_ln1117_fu_185_p1;

assign r_V_13_fu_257_p2 = ($signed(r_V_13_fu_257_p0) * $signed(r_V_13_fu_257_p1));

assign r_V_14_fu_313_p3 = {{p_Val2_5_fu_225_p4}, {1'd0}};

assign r_V_15_fu_325_p0 = p_Val2_5_fu_225_p4;

assign r_V_15_fu_325_p1 = r_V_14_fu_313_p3;

assign r_V_15_fu_325_p2 = ($signed(r_V_15_fu_325_p0) * $signed(r_V_15_fu_325_p1));

assign r_V_16_fu_369_p2 = ($signed(sext_ln1118_7_fu_361_p1) - $signed(sext_ln1118_3_fu_287_p1));

assign r_V_17_fu_683_p2 = ($signed(sext_ln1118_9_fu_679_p1) - $signed(sext_ln1118_6_fu_610_p1));

assign r_V_18_fu_275_p3 = {{tmp_1_fu_175_p4}, {2'd0}};

assign r_V_19_fu_423_p3 = {{tmp_5_fu_383_p4}, {2'd0}};

assign r_V_20_fu_447_p2 = ($signed(sext_ln1118_2_fu_283_p1) - $signed(sext_ln700_fu_253_p1));

assign r_V_2_fu_546_p3 = {{tmp_2_reg_1002}, {1'd0}};

assign r_V_4_fu_335_p0 = sext_ln1118_4_fu_291_p1;

assign r_V_4_fu_335_p1 = sext_ln1118_4_fu_291_p1;

assign r_V_4_fu_335_p2 = ($signed(r_V_4_fu_335_p0) * $signed(r_V_4_fu_335_p1));

assign r_V_5_fu_353_p3 = {{p_Val2_5_fu_225_p4}, {2'd0}};

assign r_V_8_fu_397_p0 = tmp_5_fu_383_p4;

assign r_V_8_fu_397_p1 = sext_ln1118_4_fu_291_p1;

assign r_V_8_fu_397_p2 = ($signed(r_V_8_fu_397_p0) * $signed(r_V_8_fu_397_p1));

assign ret_V_1_fu_703_p2 = ($signed(25'd32702464) + $signed(sub_ln1192_5_fu_697_p2));

assign ret_V_2_fu_791_p2 = ($signed(21'd2076672) + $signed(add_ln1192_9_fu_785_p2));

assign ret_V_3_fu_908_p2 = ($signed(21'd2064384) + $signed(sub_ln1192_12_fu_902_p2));

assign ret_V_4_fu_469_p2 = ($signed(sext_ln703_fu_453_p1) - $signed(sext_ln728_fu_465_p1));

assign ret_V_5_fu_488_p2 = ($signed(25'd33095680) + $signed(sub_ln1192_13_fu_482_p2));

assign ret_V_fu_593_p2 = ($signed(21'd2052096) + $signed(sub_ln1192_2_fu_587_p2));

assign rhs_V_1_fu_529_p3 = {{tmp_1_reg_996}, {11'd0}};

assign rhs_V_2_fu_576_p3 = {{tmp_2_reg_1002}, {11'd0}};

assign rhs_V_3_fu_689_p3 = {{r_V_17_fu_683_p2}, {12'd0}};

assign rhs_V_5_fu_857_p3 = {{p_Val2_5_reg_1020}, {9'd0}};

assign rhs_V_6_fu_874_p3 = {{tmp_1_reg_996}, {10'd0}};

assign rhs_V_7_fu_891_p3 = {{tmp_5_reg_1076}, {10'd0}};

assign rhs_V_8_fu_457_p3 = {{r_V_20_fu_447_p2}, {12'd0}};

assign rhs_V_fu_235_p3 = {{p_Val2_5_fu_225_p4}, {8'd0}};

assign sext_ln1117_fu_185_p1 = tmp_1_fu_175_p4;

assign sext_ln1118_11_fu_415_p1 = tmp_5_fu_383_p4;

assign sext_ln1118_12_fu_419_p1 = tmp_5_fu_383_p4;

assign sext_ln1118_13_fu_431_p1 = $signed(r_V_19_fu_423_p3);

assign sext_ln1118_15_fu_435_p1 = p_Val2_5_fu_225_p4;

assign sext_ln1118_1_fu_203_p1 = tmp_1_fu_175_p4;

assign sext_ln1118_2_fu_283_p1 = $signed(r_V_18_fu_275_p3);

assign sext_ln1118_3_fu_287_p1 = p_Val2_5_fu_225_p4;

assign sext_ln1118_4_fu_291_p1 = p_Val2_5_fu_225_p4;

assign sext_ln1118_6_fu_610_p1 = r_V_14_reg_1041;

assign sext_ln1118_7_fu_361_p1 = r_V_5_fu_353_p3;

assign sext_ln1118_8_fu_365_p1 = r_V_5_fu_353_p3;

assign sext_ln1118_9_fu_679_p1 = $signed(shl_ln1118_6_fu_672_p3);

assign sext_ln1192_11_fu_345_p1 = tmp_4_fu_303_p4;

assign sext_ln1192_13_fu_379_p1 = tmp_4_fu_303_p4;

assign sext_ln1192_16_fu_864_p1 = $signed(rhs_V_5_fu_857_p3);

assign sext_ln1192_17_fu_881_p1 = $signed(rhs_V_6_fu_874_p3);

assign sext_ln1192_18_fu_898_p1 = $signed(rhs_V_7_fu_891_p3);

assign sext_ln1192_1_fu_243_p1 = $signed(rhs_V_fu_235_p3);

assign sext_ln1192_5_fu_536_p1 = $signed(rhs_V_1_fu_529_p3);

assign sext_ln1192_7_fu_583_p1 = $signed(rhs_V_2_fu_576_p3);

assign sext_ln1192_fu_221_p1 = tmp_2_fu_189_p4;

assign sext_ln700_fu_253_p1 = tmp_1_fu_175_p4;

assign sext_ln703_fu_453_p1 = $signed(lhs_V_fu_439_p3);

assign sext_ln728_fu_465_p1 = $signed(rhs_V_8_fu_457_p3);

assign shl_ln1118_6_fu_672_p3 = {{p_Val2_5_reg_1020}, {3'd0}};

assign shl_ln1192_10_fu_758_p3 = {{mul_ln1192_11_reg_1093}, {4'd0}};

assign shl_ln1192_11_fu_777_p3 = {{mul_ln1192_12_fu_771_p2}, {8'd0}};

assign shl_ln1192_12_fu_808_p3 = {{mul_ln1192_13_reg_1104}, {4'd0}};

assign shl_ln1192_13_fu_825_p3 = {{mul_ln1192_14_fu_821_p2}, {4'd0}};

assign shl_ln1192_14_fu_843_p3 = {{mul_ln1192_15_fu_839_p2}, {4'd0}};

assign shl_ln1192_15_fu_475_p3 = {{grp_fu_987_p3}, {8'd0}};

assign shl_ln1192_1_fu_504_p3 = {{trunc_ln1192_reg_1031}, {4'd0}};

assign shl_ln1192_2_fu_516_p3 = {{mul_ln1192_2_reg_1036}, {4'd0}};

assign shl_ln1192_3_fu_562_p3 = {{mul_ln1192_3_fu_557_p2}, {4'd0}};

assign shl_ln1192_4_fu_613_p3 = {{mul_ln1192_4_reg_1046}, {4'd0}};

assign shl_ln1192_5_fu_620_p3 = {{mul_ln1192_5_reg_1051}, {4'd0}};

assign shl_ln1192_6_fu_633_p3 = {{trunc_ln1192_1_reg_1056}, {8'd0}};

assign shl_ln1192_7_fu_646_p3 = {{mul_ln1192_6_reg_1061}, {8'd0}};

assign shl_ln1192_8_fu_659_p3 = {{mul_ln1192_7_reg_1071}, {8'd0}};

assign shl_ln1192_9_fu_724_p3 = {{mul_ln1192_9_fu_720_p2}, {4'd0}};

assign shl_ln1192_s_fu_741_p3 = {{mul_ln1192_10_fu_737_p2}, {4'd0}};

assign shl_ln_fu_213_p3 = {{mul_ln1192_fu_207_p2}, {4'd0}};

assign sub_ln1192_10_fu_833_p2 = (sub_ln1192_9_fu_815_p2 - shl_ln1192_13_fu_825_p3);

assign sub_ln1192_11_fu_885_p2 = ($signed(add_ln1192_12_fu_868_p2) - $signed(sext_ln1192_17_fu_881_p1));

assign sub_ln1192_12_fu_902_p2 = ($signed(sub_ln1192_11_fu_885_p2) - $signed(sext_ln1192_18_fu_898_p1));

assign sub_ln1192_13_fu_482_p2 = (ret_V_4_fu_469_p2 - shl_ln1192_15_fu_475_p3);

assign sub_ln1192_1_fu_523_p2 = (add_ln1192_1_fu_511_p2 - shl_ln1192_2_fu_516_p3);

assign sub_ln1192_2_fu_587_p2 = ($signed(add_ln1192_3_fu_570_p2) - $signed(sext_ln1192_7_fu_583_p1));

assign sub_ln1192_3_fu_627_p2 = (shl_ln1192_5_fu_620_p3 - shl_ln1192_4_fu_613_p3);

assign sub_ln1192_4_fu_666_p2 = (add_ln1192_6_fu_653_p2 - shl_ln1192_8_fu_659_p3);

assign sub_ln1192_5_fu_697_p2 = (sub_ln1192_4_fu_666_p2 - rhs_V_3_fu_689_p3);

assign sub_ln1192_7_fu_732_p2 = ($signed(sub_ln1192_6_reg_1082) - $signed(shl_ln1192_9_fu_724_p3));

assign sub_ln1192_8_fu_765_p2 = (add_ln1192_8_fu_749_p2 - shl_ln1192_10_fu_758_p3);

assign sub_ln1192_9_fu_815_p2 = (21'd0 - shl_ln1192_12_fu_808_p3);

assign tmp_1_fu_175_p4 = {{x_V_in_sig[143:135]}};

assign tmp_2_fu_189_p4 = {{x_V_in_sig[26:18]}};

assign tmp_4_fu_303_p4 = {{x_V_in_sig[44:36]}};

assign tmp_5_fu_383_p4 = {{x_V_in_sig[35:27]}};

assign trunc_ln1117_fu_171_p1 = x_V_in_sig[8:0];

assign trunc_ln1192_1_fu_349_p1 = r_V_15_fu_325_p2[16:0];

assign trunc_ln1192_fu_271_p1 = r_V_13_fu_257_p2[16:0];

assign y_0_V = {{ret_V_fu_593_p2[20:12]}};

assign y_1_V = {{ret_V_1_fu_703_p2[24:16]}};

assign y_2_V = {{ret_V_2_fu_791_p2[20:12]}};

assign y_3_V = {{ret_V_3_fu_908_p2[20:12]}};

assign y_4_V = trunc_ln708_4_reg_1109;

always @ (posedge ap_clk) begin
    r_V_14_reg_1041[0] <= 1'b0;
    trunc_ln1192_1_reg_1056[0] <= 1'b0;
end

endmodule //myproject
